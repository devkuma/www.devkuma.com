<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devkuma – Helm</title>
    <link>https://www.devkuma.com/tags/helm/</link>
    <image>
      <url>https://www.devkuma.com/tags/helm/logo/180x180.jpg</url>
      <title>Helm</title>
      <link>https://www.devkuma.com/tags/helm/</link>
    </image>
    <description>Recent content in Helm on devkuma</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <managingEditor>redfreek2c@gmail.com (kimkc)</managingEditor>
    <webMaster>redfreek2c@gmail.com (kimkc)</webMaster>
    <copyright>The devkuma</copyright>
    
	  <atom:link href="https://www.devkuma.com/tags/helm/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Helm 개요</title>
      <link>https://www.devkuma.com/docs/helm/overview/</link>
      <pubDate>Wed, 14 Sep 2022 09:24:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/helm/overview/</guid>
      <description>
        
        
        &lt;h2 id=&#34;helm-개요&#34;&gt;Helm 개요&lt;/h2&gt;
&lt;p&gt;Helm(헬름)은 Kubernetes 클러스터용 패키지 매니저로, Kubernetes 클러스터에서 실행되는 응용 프로그램에서 배포에 이 &amp;ldquo;Helm(헬름)&amp;rdquo; 이라는 도구를 활용된다.&lt;br&gt;
Helm은 설정 파일을 바탕으로 어플리케이션의 배포를 자동 실행하는 도구로 Kubernetes 어플리케이션 패키지 매니저(package manger)로서 현재 가장 인기 있는 제품이다.&lt;/p&gt;
&lt;p&gt;Helm은 Deis(2017년에 Microsoft가 인수)한 프로젝트 중 하나로, 2015년에 개최된 최초의 KubeCon(The Kubernetes Community Conference)에서 Helm Classic으로 발표되었다. Helm 프로젝트는 2016년 1월 Kubernetes 프로젝트와 통합되어 Kubernetes의 하위 프로젝트가 되었다. 그리고 2016년 후반에 Helm 2.0, 2018년 6월에 Helm 3.0이 출시되어 본격적인 CNCF(Cloud Native Computing Foundation) 프로젝트로 승격되었다.&lt;/p&gt;
&lt;h2 id=&#34;helm이란&#34;&gt;Helm이란?&lt;/h2&gt;
&lt;h3 id=&#34;helm-패키지와-차트&#34;&gt;Helm 패키지와 차트&lt;/h3&gt;
&lt;p&gt;Helm은 charts라는 packaging format을 사용한다. 패키지는 Helm chart를 패키지를 하는 것이고, 차트는 쿠버네티스의 리소스 yaml 파일을 &lt;strong&gt;템플릿&lt;/strong&gt;으로 만들고, &lt;strong&gt;메타 정보 파일&lt;/strong&gt; 등을 압축하는 파일을 말한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;여기서 chart는 k8s resources를 describe하는 file들의 집합이다.&lt;/li&gt;
&lt;li&gt;chart는 무언가를 배포하기 위해 사용된다.
&lt;ul&gt;
&lt;li&gt;ex) memcached pod, web app w/ HTTP servers, databases, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;chart는 특정 directory tree로 구성된 file들로 생성되어 있다.
&lt;ul&gt;
&lt;li&gt;이 file들은 배포될 version의 archive로 packaging 될 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;kubernetes에-응용-프로그램을-배포하기-위한-사실상-표준-도구인-helm&#34;&gt;Kubernetes에 응용 프로그램을 배포하기 위한 사실상 표준 도구인 &amp;ldquo;Helm&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;최근에는 컨테이너 클러스터 기술인 Kubernetes를 활용한 서비스의 운용이 늘어나고 있으며, Kubernetes에서 동작하는 것을 전제로 하는 소프트웨어도 등장하고 있다. 한편, Kubernetes에서의 어플리케이션의 배치에 대해서는 과제도 많다.&lt;/p&gt;
&lt;p&gt;Kubernetes는 서비스를 여러 소규모 컴포넌트로 분할하여 구현하는 마이크로서비스 아키텍처와 궁합이 좋다. 이러한 구성의 서비스에서는 각 컨포넌트를 개별적으로 클러스터에 배포해야 한다. 또, 서비스를 외부에 공개해야 하거나, 각종 설정을 하기 위해서 Kubernetes 클러스터에 &amp;ldquo;리소스&amp;quot;를 작성하여 설정을 실행해야 한다. 이러한 작업은 때로는 복잡해지기 때문에 Kubernetes 클러스터에서 배포를 지원하거나 배포된 컨테이너를 관리하기 위한 다양한 도구가 등장하고 있다.&lt;/p&gt;
&lt;p&gt;이번에 소개하려는 Helm은 그러한 Kubernetes 클러스터에의 어플리케이션의 배포를 지원하는 툴 중에 하나이다 (그림 1).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/helm/helm-site.png&#34; alt=&#34;Helm 공식 웹사이트&#34;&gt;
&lt;strong&gt;그림1.&lt;/strong&gt; &lt;em&gt;Helm 공식 웹사이트&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;최근의 OS나 프로그래밍 언어의 대부분에서는 제3자(Third-party)로 인해 만들어진 소프트웨어(패키지) 모와서 공개하는 서비스(리포지토리)가 제공되고 있고, 거기에 공개되고 있는 소프트웨어의 검색이나 다운로드, 인스톨 등을 간단한 조작으로 할 수 있는 &amp;ldquo;패키지 매니저&amp;quot;라고 하는 소프트웨어가 제공되어 있다. Helm은 Kubernetes용 패키지 매니저라고도 불리며, OS나 프로그래밍 언어의 패키지 매니저와 유사한 기능을 갖추고 있다. Helm이 제공하는 구체적인 기능을 간단히 정리하면 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Chart라고 하는 설정 파일을 기반으로 다양한 리소스 자동 생성&lt;/li&gt;
&lt;li&gt;배포된 애플리케이션 삭제 및 업데이트와 같은 관리&lt;/li&gt;
&lt;li&gt;리포지토리에 게시된 Chart 찾기, 다운로드 및 설치&lt;/li&gt;
&lt;li&gt;Chart 패키징 및 리포지토리에 업로드&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Kubernetes의 베이스가 되고 있는 컨테이너 기술의 Docker에서는 이미 컨테이너 이미지를 제공하는 리포지토리 메카니즘이 이미 준비되어 있다. 그래서 Helm에서는 이미지 자체는 직접 다루지 않고, &amp;ldquo;Chart(차트)&amp;ldquo;라고 하는 설정 파일만을 리포지토리로 관리하는 구조로 되고 있다. 그 점을 제외하면 Helm에서 제공하는 기능은 일반적인 패키지 관리자가 제공하는 기능과 거의 동일하며, &lt;code&gt;helm&lt;/code&gt;이라는 CLI 도구를 사용하여 Chart를 다운로드하거나, 이를 기반으로 클러스터에 자동으로 응용 프로그램을 배포할 수 있다.&lt;/p&gt;
&lt;p&gt;또, Helm에서는 &amp;ldquo;stable&amp;quot;나 &amp;ldquo;incubator&amp;quot;라고 하는 명칭의 공식 리포지토리가 제공되고 있는 것 외에, 써드 파티에 의한 리포지토리도 많이 제공되고 있다. 이러한 리포지토리에 공개된 Chart는 &lt;a href=&#34;https://artifacthub.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Arfifact Hub&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;라는 사이트에서 통해서 검색할 수 있게 되어 있다(그림 2).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/helm/artifact-hub-site.png&#34; alt=&#34;Helm의 공식 저장소 &amp;ldquo;Arfifact Hub&amp;rdquo;&#34;&gt;
&lt;strong&gt;그림2.&lt;/strong&gt; &lt;em&gt;Helm의 공식 저장소 &amp;ldquo;Arfifact Hub&amp;rdquo;&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;helm의-역사와-커뮤니티&#34;&gt;Helm의 역사와 커뮤니티&lt;/h2&gt;
&lt;p&gt;Helm은 2016년 2월에 v1.0이 릴리스되어, 현재까지 2번의 메이저 업데이트가 진행되고 있다. 최신판은 2022년 8월에 발매된 v3.9.4이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Helm v1
&lt;ul&gt;
&lt;li&gt;2015년 DEIS의 내부 프로젝트로 시작
&lt;ul&gt;
&lt;li&gt;2017년 DEIS는 Microsoft에 인수&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Helm v2
&lt;ul&gt;
&lt;li&gt;2016년 1월 : Google 프로젝트에 합류&lt;/li&gt;
&lt;li&gt;2016 ~ 2018년 : Helm2 고도화(2.0.0 ~ 2.12.2)&lt;/li&gt;
&lt;li&gt;2018년 6월 : CNCF 프로젝트에 합류&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Helm v3
&lt;ul&gt;
&lt;li&gt;2019년 11월 : 릴리즈 발표&lt;/li&gt;
&lt;li&gt;2019년 ~ 2021년 : Helm3 고도화(3.0.0 ~3.5.2)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;예당초 Kubernetes의 서브 프로젝트로서 개발이 진행되고 있었지만, 그 후 Linux Foundation 산하의 비영리 단체인 Cloud Native Computing Foundation(CNCF) 산하가 되어, 현재도 그 체제로 개발이 진행되고 있다. CNCF는 클라우드 관련 기술 개발을 추진하는 단체로 Kubernetes 자체도 CNCF 산하에서 개발이 진행되고 있다. 이러한 역사적 배경 때문에 Helm은 Kubernetes의 (사실상) 공식 패키지 매니저라고도 알려져 있다.&lt;/p&gt;
&lt;p&gt;Helm 프로젝트 자신이 제공하는 &amp;ldquo;stable&amp;quot;이나 &amp;ldquo;incubator&amp;rdquo; 등의 공식 리포지토리에서는 이미 다양한 어플리케이션의 Chart가 공개되고 있으며, 유지에 의해 작성된 Chart도 많이 공개되고 있다. 또, 이전에 소개한 Kubernetes 관련 툴의 Istio 나 Jenkins X 라고 하는 소프트웨어에서도, Helm이 공식의 설치 도구으로서 채택되어 사용되고 있다.&lt;/p&gt;
&lt;p&gt;덧붙여, helm은 선박 등에서 사용되는 배의 키를 의미하는 단어이다. 또, chart는 향해용 지도에서 유래하고 있다.&lt;/p&gt;
&lt;h2 id=&#34;helm의-주요-특징&#34;&gt;Helm의 주요 특징&lt;/h2&gt;
&lt;p&gt;Helm은 Go 언어로 작성되었으며 Helm 클라이언트와 Helm 라이브러리의 두 가지 구성 요소로 구성된다.&lt;br&gt;
Helm은 Helm 클라이언트를 통해 Kubernetes에서 실행되는 응용 프로그램을 Linux yum 명령과 같이 설치 (배포)하고 제거 할 수 있다. 애플리케이션 관리는 차트(Chart)라는 패키지화된 구성 파일을 사용하여 수행된다. 차트에는 애플리케이션 자체가 포함되어 있지 않으며 애플리케이션을 구축하는 데 필요한 정보가 포함되어 있다. 또한 Artifact Hub라는 사이트에는 다양한 차트가 공개되어 있어 사용할 수 있다.&lt;/p&gt;
&lt;p&gt;Helm 라이브러리는 Kubernetes 클라이언트 라이브러리를 사용하여 Kubernetes와 통신한다. 통신에는 REST+JSON이 사용된다. 자체 데이터베이스는 필요하지 않으며 Kubernetes 비밀에 데이터를 보관한다.&lt;/p&gt;
&lt;p&gt;Helm의 기본 개념은 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;차트 : 응용 프로그램 인스턴스를 만드는데 필요한 구성 파일 집합이다.&lt;/li&gt;
&lt;li&gt;구성 : 차트 설치시 응용 프로그램에 대한 다양한 매개 변수를 설정하기 위한 것이다.&lt;/li&gt;
&lt;li&gt;릴리스 : 차트가 설치되고 애플리케이션(릴리스 오브젝트)이 실행 가능한 상태가 된 인스턴스를 릴리스라고 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Helm은 다음을 할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;차트 새로 만들기&lt;/li&gt;
&lt;li&gt;차트를 차트 아카이브(tgz)로 패키징&lt;/li&gt;
&lt;li&gt;차트가 저장된 차트 리포지토리 작업&lt;/li&gt;
&lt;li&gt;Kubernetes 클러스터에 차트 설치 및 제거&lt;/li&gt;
&lt;li&gt;Helm으로 설치한 차트의 릴리스주기 관리&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Helm 클라이언트와 라이브러리의 역할은 각각 다음과 같다.&lt;/p&gt;
&lt;h3 id=&#34;helm-클라이언트&#34;&gt;Helm 클라이언트&lt;/h3&gt;
&lt;p&gt;최종 사용자를 위한 명령줄 프로그램에서 다음을 담당한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;로컬 차트 개발&lt;/li&gt;
&lt;li&gt;리포지토리 관리&lt;/li&gt;
&lt;li&gt;릴리스 관리&lt;/li&gt;
&lt;li&gt;Helm 라이브러리와 협력하여 차트를 제출하거나 릴리스 업그레이드 및 제거 요청을 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;helm-라이브러리&#34;&gt;Helm 라이브러리&lt;/h3&gt;
&lt;p&gt;모든 Helm 작업을 Kubernetes API와 함께 실행한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;차트에서 릴리스 객체 만들기&lt;/li&gt;
&lt;li&gt;릴리스 객체를 구축하고 Kubernetes에 설치&lt;/li&gt;
&lt;li&gt;릴리스 객체를 업그레이드하거나 제거하기&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;helm과-유사한-도구&#34;&gt;Helm과 유사한 도구&lt;/h2&gt;
&lt;p&gt;Helm과 유사한 도구로는 Ksonnet, Kapitan, Kustomize, kompose 및 Ansible이 있다.&lt;/p&gt;
&lt;h2 id=&#34;helm-명령의-예&#34;&gt;Helm 명령의 예&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;명령&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;helm install&lt;/td&gt;
&lt;td&gt;차트를 설치한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;helm list&lt;/td&gt;
&lt;td&gt;릴리스 목록을 표시한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;helm pull&lt;/td&gt;
&lt;td&gt;차트를 다운로드하여 로컬로 확장한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;helm repo add&lt;/td&gt;
&lt;td&gt;차트 리포지토리를 추가한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;helm repo list&lt;/td&gt;
&lt;td&gt;차트 리포지토리 목록을 표시한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;helm search&lt;/td&gt;
&lt;td&gt;차트를 검색한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;helm show&lt;/td&gt;
&lt;td&gt;차트의 세부 정보를 표시한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;helm uninstall&lt;/td&gt;
&lt;td&gt;릴리스를 삭제한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;helm upgrade&lt;/td&gt;
&lt;td&gt;새 차트로 업그레이드한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;helm의-참고-정보&#34;&gt;Helm의 참고 정보&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://helm.sh/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Helm 공식 사이트&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/helm/helm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub 저장소&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://artifacthub.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Artifact Hub&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Helm</category>
      
    </item>
    
    <item>
      <title>Helm 설치</title>
      <link>https://www.devkuma.com/docs/helm/install/</link>
      <pubDate>Wed, 14 Sep 2022 09:24:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/helm/install/</guid>
      <description>
        
        
        &lt;h2 id=&#34;helm-설치&#34;&gt;Helm 설치&lt;/h2&gt;
&lt;p&gt;helm 커멘드는 &lt;a href=&#34;https://github.com/helm/helm/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub의 릴리스 페이지&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에서 받아올 수 있고, 여기에서는 소스 코드 외에 Windows 및 Linux, macOS용의 바이너리도 제공되고 있다. 배포 아카이브 내에는 바이너리 파일(&amp;ldquo;helm&amp;rdquo;)이 그대로 저장되어 있기에, Helm를 이용하고 싶은 머신에서 다운로드하여 압축을 해제하여 적당한 디렉토리에 복사하면 설치 완료이다.&lt;/p&gt;
&lt;p&gt;또, macOS의 Homebrew나 Windows의 Chocolatey라고 하는 패키지 매니저 통해서더 설치 할 수 있다. 이에 대해 자세한 설명은 &lt;a href=&#34;https://helm.sh/ko/docs/intro/install/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;공식 문서&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 참조해 주었으면 한다.&lt;/p&gt;
&lt;p&gt;helm 명령은 Kubernetes 클러스터에 액세스하기 위해 &lt;code&gt;kubectl&lt;/code&gt; 명령을 사용하므로 &lt;code&gt;helm&lt;/code&gt; 명령을 실행하는 시스템에 &lt;code&gt;kubectl&lt;/code&gt; 명령이 설치되어 있으며 &lt;code&gt;kubectl&lt;/code&gt; 명령으로 Kubernetes 클러스터에 액세스 할 수 있도록 설정해야 한다.&lt;/p&gt;
&lt;p&gt;지원하는 Kubernetes 클러스터의 버전에 대해서는 명시되어 있지 않지만, &amp;ldquo;Kubernetes의 최신 안정판&amp;quot;과의 조합이 추천된다. 그렇다고는 해도, 구버전의 Kubernetes라고 해도 바로 이용할 수 없게 되는 것은 아니다. 다만, Kubernetes 1.6 이전에서는 역할(Role) 기반의 액세스 컨트롤(RBAC) 관련 설정으로 제한이 있다고 되어 있다.&lt;/p&gt;
&lt;p&gt;덧붙여서, Helm의 v2에서는 &lt;code&gt;helm&lt;/code&gt; 명령에 추가적으로 Kubernetes에서 동작하는 &lt;code&gt;tiller&lt;/code&gt;라고 하는 어플리케이션이 필요하지만, v3에서는 tiller는 폐지되어, &lt;code&gt;helm&lt;/code&gt; 명령만이 필요하게 변경되었다.&lt;/p&gt;
&lt;h3 id=&#34;macos에서-설치homebrew&#34;&gt;macOS에서 설치(Homebrew)&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% brew install helm
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Running &lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;brew update --auto-update&lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Auto-updated Homebrew!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Updated &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; taps &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;homebrew/core and homebrew/services&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You have &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; outdated formulae installed.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You can upgrade them with brew upgrade
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;or list them with brew outdated.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Downloading https://ghcr.io/v2/homebrew/core/helm/manifests/3.9.4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Downloading https://ghcr.io/v2/homebrew/core/helm/blobs/sha256:01a042f197753
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Pouring helm--3.9.4.arm64_monterey.bottle.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Caveats
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zsh completions have been installed to:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  /opt/homebrew/share/zsh/site-functions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Summary
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;🍺  /opt/homebrew/Cellar/helm/3.9.4: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;64&lt;/span&gt; files, 47.6MB
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Running &lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;brew cleanup helm&lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hide these hints with HOMEBREW_NO_ENV_HINTS &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;see &lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;man brew&lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>Helm</category>
      
    </item>
    
    <item>
      <title>Helm 사용하기</title>
      <link>https://www.devkuma.com/docs/helm/uses/</link>
      <pubDate>Wed, 14 Sep 2022 09:24:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/helm/uses/</guid>
      <description>
        
        
        &lt;h3 id=&#34;공개된-chart를-사용하여-애플리케이션-배포&#34;&gt;공개된 Chart를 사용하여 애플리케이션 배포&lt;/h3&gt;
&lt;p&gt;앞에서 설명하였듯이, Helm에서는 Chart라고 하는 설정 파일에 기반으로 어플리케이션의 배포를 실행한다. Chart는 &lt;code&gt;helm&lt;/code&gt; 명령를 실행하는 로컬 머신상에 준비된 것 뿐만이 아니라, 리포지토리로 공개되고 있는 Chart를 직접 다운로드하여 이용하는 것도 가능하다. 우선은 Helm에 의한 어플리케이션의 배포 예로서 리포지토리에서 공개되고 있는 Chart를 이용하는 방법에 대해 보도록 하겠다.&lt;/p&gt;
&lt;p&gt;앞에서 이미 언급했듯이 공개된 Chart는 &lt;a href=&#34;https://artifacthub.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Arfifact Hub&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;라는 사이트에서 검색할 수 있다. Arfifact Hub에서는 &lt;code&gt;&amp;lt;리포지토리명&amp;gt;/&amp;lt;Chart명&amp;gt;/&lt;/code&gt;이라는 형식으로 Chart가 표시되어 있으며, 그 중에 리포지토리 명이 &amp;ldquo;&lt;a href=&#34;https://charts.helm.sh/stable/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;stable&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&amp;ldquo;이나 &amp;ldquo;&lt;a href=&#34;https://charts.helm.sh/incubator/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;incubator&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&amp;ldquo;로 되어 있는 것이 Helm의 공식 리포지토리에서 제공되고 있는 Chart로 리포지토리명이 그 이외의 것이 되고 있는 것은 타사가 제공하고 있는 Chart이다. 같은 이름의 Chart가 다른 리포지토리에 공개되어 있는 경우도 있지만, 이것들은 소스가 다르다는 점에 주의해야 한다.&lt;/p&gt;
&lt;p&gt;그럼 리포지토리를 통해서 Chart를 설치하려면, 먼저 Chart를 제공하는 리포지토리를 로컬 컴퓨터에 등록해야 한다. Helm의 설치 직후에는 어느 리포지토리도 등록되어 있지 않은 상태가 되어 있을 것이므로, 공식 리포지토리로 제공되고 있는 Chart를 이용하는 경우에서도 리포지토리의 추가 작업이 필요하게 된다.&lt;/p&gt;
&lt;p&gt;리포지토리의 추가는 &lt;code&gt;helm repo add &amp;lt;리포지토리 이름&amp;gt; &amp;lt;URL&amp;gt;&lt;/code&gt;명령으로 수행 할 수 있다. 예를 들어 공식 &amp;ldquo;bitnami&amp;rdquo; 리포지토리를 추가하는 경우 다음과 같이 실행한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;% helm repo add bitnami https://charts.bitnami.com/bitnami
&amp;#34;bitnami&amp;#34; has been added to your repositories
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;덧붙여 Linux 환경에서는 사용하는 리포지토리의 설정은 홈 디렉토리에서 &lt;code&gt;.config/helm&lt;/code&gt;이라는 디렉토리에 있고, 리포지토리로 공개되고 있는 Chart 목록의 캐시는 홈 디렉토리에서 &lt;code&gt;.cache/helm/repository&lt;/code&gt; 디렉토리에 저장된다. 이러한 정보는 &lt;code&gt;helm -h&lt;/code&gt; 명령으로 표시할 수 있는 &lt;code&gt;helm&lt;/code&gt; 명령의 도움말에 기재되어 있으므로, 필요에 따라서 확인해 둔다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% helm -h
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The Kubernetes package manager
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;... 중간 생략 ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Operating System &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Cache Path                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Configuration Path             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Data Path               &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;------------------&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;---------------------------&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;--------------------------------&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;-------------------------&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Linux            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$HOME&lt;/span&gt;/.cache/helm         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$HOME&lt;/span&gt;/.config/helm             &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$HOME&lt;/span&gt;/.local/share/helm &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; macOS            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$HOME&lt;/span&gt;/Library/Caches/helm &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$HOME&lt;/span&gt;/Library/Preferences/helm &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$HOME&lt;/span&gt;/Library/helm      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Windows          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; %TEMP%&lt;span style=&#34;color:#4e9a06&#34;&gt;\h&lt;/span&gt;elm               &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; %APPDATA%&lt;span style=&#34;color:#4e9a06&#34;&gt;\h&lt;/span&gt;elm                 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; %APPDATA%&lt;span style=&#34;color:#4e9a06&#34;&gt;\h&lt;/span&gt;elm          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;... 이하 생략 ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;리포지토리의 등록 후에는 &lt;code&gt;helm search&lt;/code&gt; 명령으로 리포지토리에 등록되어 있는 Chart를 검색할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;helm search repo &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&amp;lt;검색 키워드&amp;gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;키워드를 생략하게 되면 등록되어 있는 리포지토리에서 제공되고 있는 모든 Chart가 출력된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% helm search repo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME                                        	CHART VERSION	APP VERSION  	DESCRIPTION
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bitnami/airflow                             	13.1.5       	2.3.4        	Apache Airflow is a tool to express and execute...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bitnami/apache                              	9.2.3        	2.4.54       	Apache HTTP Server is an open-source HTTP serve...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bitnami/argo-cd                             	4.1.3        	2.4.11       	Argo CD is a continuous delivery tool &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; Kuber...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;... 이하 생략 ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;등록된 리포지토리의 정보는 로컬에 캐시되므로 시간이 지남에 따라 오래되었을 수 있다. &lt;code&gt;helm repo update&lt;/code&gt; 명령을 실행하면 리포지토리 캐시를 최신 캐시로 업데이트할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% helm repo update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hang tight &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;while&lt;/span&gt; we grab the latest from your chart repositories...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...Successfully got an update from the &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;bitnami&amp;#34;&lt;/span&gt; chart repository
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Update Complete. ⎈Happy Helming!⎈
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Helm에서는, Chart를 사용해 어플리케이션을 배포하는 것을 &amp;ldquo;install(인스톨)&amp;rdquo; 이라고 하고, 인스톨 된 어플리케이션의 인스턴스는 &amp;ldquo;Release(릴리스)&amp;ldquo;라고 한다. 또한 각 인스턴스에는 고유한 이름(Release명)이 있다. Release명이 중복하지 되지 않고, 동일한 Chart로부터 여러 Release를 작성하는 것도 가능하다.&lt;/p&gt;
&lt;p&gt;그럼 리포지토리에 공개된 Chart를 사용하여 응용 프로그램을 설치(배포)하려면 &lt;code&gt;helm install &amp;lt;Release 이름&amp;gt; &amp;lt;Chart 이름&amp;gt;&lt;/code&gt; 명령을 실행한다.&lt;/p&gt;
&lt;p&gt;다음의 예는 &amp;ldquo;stable/wordpress&amp;quot;라고 하는 Chart를 &amp;ldquo;wordpress&amp;quot;라는 Release명으로 배포한 것이다. 배포에 성공하면 그 어플리케이션에 관한 메모등을 포함한 &amp;ldquo;NOTES&amp;quot;가 표시된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% helm install wordpress bitnami/wordpress
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME: wordpress
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LAST DEPLOYED: Thu Sep &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;15&lt;/span&gt; 00:33:19 &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2022&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAMESPACE: default
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;STATUS: deployed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;REVISION: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;TEST SUITE: None
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NOTES:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CHART NAME: wordpress
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CHART VERSION: 15.2.2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;APP VERSION: 6.0.2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;** Please be patient &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;while&lt;/span&gt; the chart is being deployed **
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Your WordPress site can be accessed through the following DNS name from within your cluster:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    wordpress.default.svc.cluster.local &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;port 80&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To access your WordPress site from outside the cluster follow the steps below:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. Get the WordPress URL by running these commands:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  NOTE: It may take a few minutes &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; the LoadBalancer IP to be available.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Watch the status with: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;kubectl get svc --namespace default -w wordpress&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;SERVICE_IP&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$(&lt;/span&gt;kubectl get svc --namespace default wordpress --include &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{{ range (index .status.loadBalancer.ingress 0) }}{{ . }}{{ end }}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;WordPress URL: http://&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$SERVICE_IP&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;WordPress Admin URL: http://&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$SERVICE_IP&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;/admin&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. Open a browser and access WordPress using the obtained URL.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3. Login with the following credentials below to see your blog:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; Username: user
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; Password: &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;$(&lt;/span&gt;kubectl get secret --namespace default wordpress -o &lt;span style=&#34;color:#000&#34;&gt;jsonpath&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{.data.wordpress-password}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; base64 -d&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;배포는 현재 Kubernetes의 컨텍스트에 대해 수행되므로, 특정 네임스페이스를 사용하고 싶은 경우은 사전에 &lt;code&gt;kubectl config&lt;/code&gt; 명령 등으로 컨텍스트를 설정해 둔다.&lt;/p&gt;
&lt;p&gt;그리고, 이 &lt;code&gt;bitnami/wordpress&lt;/code&gt; Chart에서는 영속화 스토리지를 이용하기 때문에, 클러스터내에서 디폴트의 Storage Class가 설정되어 있어야 있다. Storage Class의 설정 방법은 사용하고 있는 Kubernetes 클러스터에 따라서 다르지만, Kubernetes용 Storage Class 생성에 대해서 따로 알아보길 바란다.&lt;/p&gt;
&lt;p&gt;배포된 Release 목록은 &amp;ldquo;helm list&amp;rdquo; 명령으로 확인할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;% helm list
NAME     	NAMESPACE	REVISION	UPDATED                             	STATUS  	CHART           	APP VERSION
wordpress	default  	1       	2022-09-15 00:33:19.166716 +0900 KST	deployed	wordpress-15.2.2	6.0.2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여기에서 작성된 Pod를 &lt;code&gt;kubectl get pods&lt;/code&gt; 명령으로 확인해 보면, 다음과 같이 &amp;ldquo;wordpress-d5c8dffb7-bws4d&amp;quot;과 &amp;ldquo;wordpress-mariadb-0&amp;quot;의 2개의 Pod가 작성되고 있는 것을 알 수 있다(환경에 따라 &amp;ldquo;d5c8dffb7-bws4d&amp;quot;의 부분은 바뀐다).&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;% kubectl get pods
NAME                        READY   STATUS             RESTARTS        AGE
wordpress-d5c8dffb7-bws4d   0/1     CrashLoopBackOff   5 (2m21s ago)   7m33s
wordpress-mariadb-0         1/1     Running            0               7m33s
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;hellip; 작성중(Pod에 에라가 발생하여 작성 중지;;;) &amp;hellip;&lt;/p&gt;

      </description>
      
      <category>Helm</category>
      
    </item>
    
    <item>
      <title>Helm</title>
      <link>https://www.devkuma.com/docs/helm/</link>
      <pubDate>Mon, 05 Sep 2022 18:17:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/helm/</guid>
      <description>
        
        
        &lt;h2 id=&#34;개요&#34;&gt;개요&lt;/h2&gt;
&lt;p&gt;Helm은 공식 홈페이지에도 정의가 나와있는 것 처럼 &amp;lsquo;Kubernetes 패키지 관리(Kubernetes package manager)&amp;lsquo;를 도와준다.&lt;br&gt;
흔히 패키지 관리를 도와주는 리눅스의 yum 또는 apt, Node.js의 npm과 Python의 pip 등과 같은 역할이라고 보면 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://helm.sh/ko/docs/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Helm 공식 문서&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;참조-문서&#34;&gt;참조 문서&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://tech.ktcloud.com/51&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;쿠버네티스(kubernetes)와 가까워지기 - Helm 이란?&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bcho.tistory.com/1337&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;쿠버네티스 패키지 매니저 Helm #2-1. Chart | 조대협의 블로그&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cyuu.tistory.com/160?category=825414&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Helm Chart를 이용한 Kubernetes배포/관리 | Cyuu&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Helm</category>
      
    </item>
    
  </channel>
</rss>
