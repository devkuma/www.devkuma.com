<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devkuma – Apache</title>
    <link>https://www.devkuma.com/tags/apache/</link>
    <image>
      <url>https://www.devkuma.com/tags/apache/logo/180x180.jpg</url>
      <title>Apache</title>
      <link>https://www.devkuma.com/tags/apache/</link>
    </image>
    <description>Recent content in Apache on devkuma</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <managingEditor>kc@example.com (kc kim)</managingEditor>
    <webMaster>kc@example.com (kc kim)</webMaster>
    <copyright>The devkuma</copyright>
    
	  <atom:link href="https://www.devkuma.com/tags/apache/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Apache | Apache 설치</title>
      <link>https://www.devkuma.com/docs/apache/install/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/install/</guid>
      <description>
        
        
        &lt;p&gt;Apache의 다운로드 및 설치 방법에 대해 설명한다. 설치를 한 후에 Apache를 시작하는 방법과 Apache 기술 문서를 참조하는 방법도 함께 설명한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 설치 | Apache 다운로드 및 설치</title>
      <link>https://www.devkuma.com/docs/apache/download-install/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/download-install/</guid>
      <description>
        
        
        &lt;p&gt;Apache의 다운로드 및 설치 방법에 대해 설명한다. 2019 년 11월 현재 최신 버전은 Apache2.4.41이다. 여기선 설치하려는 환경은  Windows10(64bit)이다.&lt;/p&gt;
&lt;h2 id=&#34;apache-다운로드&#34;&gt;Apache 다운로드&lt;/h2&gt;
&lt;p&gt;Apache 다운로드을 한다. Apache의 공식 웹 사이트는 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://httpd.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://httpd.apache.org/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/httpd_apache_org.png&#34; alt=&#34;httpd.apache.org&#34;&gt;&lt;/p&gt;
&lt;p&gt;최신 버전인 &amp;lsquo;Apache httpd 2.4.41 Released 2019-08-14&amp;quot;블록에 있는&amp;quot;Download &amp;ldquo;를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_download1.png&#34; alt=&#34;apache_download&#34;&gt;&lt;/p&gt;
&lt;p&gt;이번에는 Windows10(64bit) 환경에 설치하기에 &amp;ldquo;Files for Microsoft Windows&amp;quot;라고 작성된 링크를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://httpd.apache.org/download.cgi#apache24&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://httpd.apache.org/download.cgi#apache24&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_download2.png&#34; alt=&#34;apache_download&#34;&gt;&lt;/p&gt;
&lt;p&gt;Files for Microsoft Windows를 클릭했을 때, 한글이 표시된다면 상단으로 올리면 &amp;ldquo;이 문서는 최신판 번역이 아닙니다. 최근에 변경된 내용은 영어 문서를 참고하세요.&amp;ldquo;라는 경고문이 표시되어 있는 것을 볼 수 있을 것이다. 그렇다면 en를 눌려서 영문을 표시하도록 하자.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://httpd.apache.org/docs/current/ko/platform/windows.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://httpd.apache.org/docs/current/ko/platform/windows.html&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_download3.png&#34; alt=&#34;apache_download&#34;&gt;&lt;/p&gt;
&lt;p&gt;Apache의 공식 사이트에서는 소스 코드만 제공되고, Windows 용 바이너리는 제공하지 않는다고 안내를 하고 있다. 대신에 배포를 해주고 있는 사이트를 몇 가지 알려주고 있기에 이 중에서 여기에서는 &amp;ldquo;Apache Lounge&amp;rdquo; 를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://httpd.apache.org/docs/current/en/platform/windows.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://httpd.apache.org/docs/current/en/platform/windows.html  &lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_download4.png&#34; alt=&#34;apache_download&#34;&gt;&lt;/p&gt;
&lt;p&gt;Apache Lounge 사이트가 표시된다.
&lt;a href=&#34;https://www.apachelounge.com/download/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.apachelounge.com/download/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_download5.png&#34; alt=&#34;apache_download&#34;&gt;&lt;/p&gt;
&lt;p&gt;32bit 버전과 64bit 버전이 있는데 여기에서는 64bit 환경에 설치하기 때문에 &amp;ldquo;Apache 2.4.41 Win64&amp;quot;아래에 표시되는 &amp;ldquo;httpd-2.4.41-win64-VC16.zip&amp;quot;을 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_download6.png&#34; alt=&#34;apache_download&#34;&gt;&lt;/p&gt;
&lt;p&gt;다운로드가 완료되면, 임의의 장소에 보관해 하면 Apache 다운로드는 이것으로 완료되었다.&lt;/p&gt;
&lt;h2 id=&#34;visual-c--재배포-가능-패키지-설치&#34;&gt;Visual C ++ 재배포 가능 패키지 설치&lt;/h2&gt;
&lt;p&gt;Visual Studio를 사용하여 빌드된 Visual C++ 응용 프로그램을 실행하는 경우에는 필요한 런타임 구성 요소가 설치되어 있어야 한다. Window용 Apache 바이너리도 Visual Studio를 사용하여 구축되어 있기 때문에 런타임이 필요하다.&lt;/p&gt;
&lt;p&gt;다른 응용 프로그램에서 사용하기 위해 이미 설치되어있는 경우가 많지만, 런타임 구성 요소가 설치가 되지 않으면 아래와 같이 &amp;ldquo;VCRUNTIME140.dll이(가) 없어 코드  실행할 수 없습니다. 프로그램을 다시 설치하면 이 문제가 해결될 수 있습니다.&amp;ldquo;와 같은 오류가 표시된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/vs_error.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://visualstudio.microsoft.com/ko/downloads/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://visualstudio.microsoft.com/ko/downloads/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그러면 아래 페이지로 가서 Visual C++ 런타임을 설치한다. 여기에서는 Visual Studio 2019 용이 필요하다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/vs_download.png&#34; alt=&#34;vs_download&#34;&gt;&lt;/p&gt;
&lt;p&gt;이제 준비는 완료되었다. 다음은 Apache 설치에 대해 설명하도록 하겠다.&lt;/p&gt;
&lt;h2 id=&#34;apache-설치&#34;&gt;Apache 설치&lt;/h2&gt;
&lt;p&gt;Apache의 설치는 다운로드한 압축 파일  &amp;ldquo;httpd-2.4.41-win64-VC16.zip&amp;quot;를 적당한 폴더에 압축을 풀어 놓기면 하면 된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_folder.png&#34; alt=&#34;apache_folder&#34;&gt;&lt;/p&gt;
&lt;p&gt;여기에서는 &amp;ldquo;C:\dev\Apache24&amp;quot;에 저장하였다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache</title>
      <link>https://www.devkuma.com/docs/apache/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache.png&#34; alt=&#34;Apache&#34;&gt;&lt;/p&gt;
&lt;p&gt;많이 이용되는 Web 서버 중 하나인 Apache 사용법에 대해서 설명한다. 여기에서는 로컬 환경에 Apache를 설치하는 방법, Apache를 사용하여 Web 사이트를 인터넷에 공개하기까지의 절차, 접근 제어 및 로그 파일의 보는 방법 등 기본적인 사용법과 각종 설정 방법 등에 대해 직접 실습하면서 설명한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 설치 | 설정 파일(http.conf)의 초기 설정하기</title>
      <link>https://www.devkuma.com/docs/apache/%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-http-conf%EC%9D%98-%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-http-conf%EC%9D%98-%EC%B4%88%EA%B8%B0-%EC%84%A4%EC%A0%95%ED%95%98%EA%B8%B0/</guid>
      <description>
        
        
        &lt;p&gt;Apache에 대한 설정은 http.conf 파일에서 설정한다. Apache를 설치 한 후에 설치한 디렉터리이나 사용하는 포트 번호에 맞게 설정 파일을 변경을 해야 한다. 여기에서는 Apache 설치 직후에 실시 초기 설정에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;설치-디렉터리-수정&#34;&gt;설치 디렉터리 수정&lt;/h2&gt;
&lt;p&gt;Apache 설정 파일인 http.conf 파일은 설치 디렉터리에서 &amp;ldquo;/Apache24/conf/&amp;ldquo;에 들어 있다.&lt;/p&gt;
&lt;p&gt;MacOS은 /etc/apache2/httpd.conf 에 있다.&lt;/p&gt;
&lt;p&gt;수정하기 전에 http.conf 파일을 만약을 위해 복사하여 백업으로 따로 저장하도록 하자. (구지 할 필요가 없다고 생각된다면 안해도 된다.)&lt;/p&gt;
&lt;p&gt;그러면 http.conf 파일을 편집하도록 하겠다. http.conf 파일은 텍스트 파일이므로 텍스트 편집기에서 열면 열린다. (예를 들면, 윈도우 메모장도 편집이 가능하다.)&lt;/p&gt;
&lt;p&gt;먼저 파일에서 &amp;ldquo;&lt;strong&gt;ServerRoot&lt;/strong&gt;&amp;ldquo;을 검색한다. 그러면 다음과 같이 작성되어 있는 것을 찾을 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# ServerRoot: The top of the directory tree under which the server&amp;#39;s
# configuration, error, and log files are kept.
#
# Do not add a slash at the end of the directory path.  If you point
# ServerRoot at a non-local disk, be sure to specify a local disk on the
# Mutex directive, if file-based mutexes are used.  If you wish to share the
# same ServerRoot for multiple httpd daemons, you will need to change at
# least PidFile.
#
Define SRVROOT &amp;#34;c:/Apache24&amp;#34;

ServerRoot &amp;#34;${SRVROOT}&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ServerRoot에 Apache 서버의 디렉터리를 설정한다. 기본적으로 &amp;ldquo;c:/Apache24&amp;quot;로 되어 있는 부분을 실제로 Apache를 설치한 디렉터리로 변경하면 된다. 구체적으로는 SRVROOT 변수에 설치한 디렉터리 설정하고 있고,  ServerRoot에 SRVROOT 변수를 사용하여 설정하고 있다. 여기에서는 다음과 같이 변경하였다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Define SRVROOT &amp;#34;C:/apache/Apache24&amp;#34;

ServerRoot &amp;#34;${SRVROOT}&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위에서 설정한 SRVROOT 변수는 아래와 같이 다른  설정 부분에서 사용하여 동일한 디렉터리가 설정된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
DocumentRoot &amp;#34;${SRVROOT}/htdocs&amp;#34;

&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs&amp;#34;&amp;gt;

 ...생략...

&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;IfModule alias_module&amp;gt;

 ...생략...

    #
    # ScriptAlias: This controls which directories contain server scripts. 
    # ScriptAliases are essentially the same as Aliases, except that
    # documents in the target directory are treated as applications and
    # run by the server when requested rather than as documents sent to the
    # client.  The same rules about trailing &amp;#34;/&amp;#34; apply to ScriptAlias
    # directives as to Alias.
    #
    ScriptAlias /cgi-bin/ &amp;#34;${SRVROOT}/cgi-bin/&amp;#34;

&amp;lt;/IfModule&amp;gt;

#
# &amp;#34;${SRVROOT}/cgi-bin&amp;#34; should be changed to whatever your ScriptAliased
# CGI directory exists, if you have that configured.
#
&amp;lt;Directory &amp;#34;${SRVROOT}/cgi-bin&amp;#34;&amp;gt;
    AllowOverride None
    Options None
    Require all granted
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;포트-번호-설정&#34;&gt;포트 번호 설정&lt;/h2&gt;
&lt;p&gt;다음 포트 번호 설정을 확인한다. 파일에서 &amp;ldquo;&lt;strong&gt;Listen&lt;/strong&gt;&amp;ldquo;을 검색한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the &amp;lt;VirtualHost&amp;gt;
# directive.
#
# Change this to Listen on specific IP addresses as shown below to 
# prevent Apache from glomming onto all bound IP addresses.
#
#Listen 12.34.56.78:80
Listen 80
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Listen는 Apache가 어떤 포트 번호와 IP 주소를 listen 할 것인지를 설정한다. 일반적으로 Web 서버와 브라우저와의 통신은 80번 포트를 사용하여 실행되기에 기본 설정에도 80번이 설정되어 있다. 일반적으로 변경할 필요는 없지만, 여러 Web 서버가 동일한 서버 컴퓨터에서 실행하는 경우에는 포트 번호가 중복되지 않게 여기에서 설정을 변경하면 된다.&lt;/p&gt;
&lt;h2 id=&#34;servername-설정&#34;&gt;ServerName 설정&lt;/h2&gt;
&lt;p&gt;마지막으로 ServerName 설정이다. 설정 파일에서 &amp;ldquo;&lt;strong&gt;ServerName&lt;/strong&gt;&amp;ldquo;을 검색한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn&amp;#39;t have a registered DNS name, enter its IP address here.
#
#ServerName www.example.com:80
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ServerName은 서버 자체를 나타내는 호스트명과 포트 번호를 설정한다. 초기 설정은 주석으로 되어 있고 설정하려면 &amp;ldquo;&lt;a href=&#34;https://www.example.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.example.com&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;:80&amp;quot;와 같이 호스트명 + 포트 번호로 설정한다. (포트 번호를 생략하면 서버에 요청을 할 수 있는 기본 포트 번호인 80을 사용한다.)&lt;/p&gt;
&lt;p&gt;여기에서는 Apache는 로컬 환경에 설치되어 있기 때문에 ServerName 앞에 &amp;ldquo;#&amp;ldquo;을 제거하고 다음과 같이 변경하였다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn&amp;#39;t have a registered DNS name, enter its IP address here.
#
ServerName localhost:80
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;설정 파일의 수정이 끝나면 설정 파일을 저장한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 설치 | Apache 시작 (콘솔에서 부팅과 서비스 등록)</title>
      <link>https://www.devkuma.com/docs/apache/apache-%EC%8B%9C%EC%9E%91-%EC%BD%98%EC%86%94%EC%97%90%EC%84%9C-%EB%B6%80%ED%8C%85%EA%B3%BC-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%93%B1%EB%A1%9D/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/apache-%EC%8B%9C%EC%9E%91-%EC%BD%98%EC%86%94%EC%97%90%EC%84%9C-%EB%B6%80%ED%8C%85%EA%B3%BC-%EC%84%9C%EB%B9%84%EC%8A%A4-%EB%93%B1%EB%A1%9D/</guid>
      <description>
        
        
        &lt;p&gt;Apache를 시작하는 방법에 대해 설명한다. Windows 환경에서 사용하는 경우에는 시작하는 방법으로는 크게 두 가지가 있다. 콘솔 응용 프로그램을 이용하여 수동으로 시작하는 방법과 Windows 서비스로 Apache를 등록 및 설정을 하여 자동으로 시작하도록 하는 방법이다.&lt;/p&gt;
&lt;h2 id=&#34;apache를-간단히-시작&#34;&gt;Apache를 간단히 시작&lt;/h2&gt;
&lt;p&gt;우선 탐색기에서 Apache를 시작하는 방법이다. 실행 파일(httpd.exe)의 위치는 &amp;ldquo;(Apache 설치 디렉터리)\Apache24\bin\httpd.exe&amp;quot;에 있다.&lt;/p&gt;
&lt;p&gt;시작하려면  &amp;ldquo;(Apache 설치 디렉터리)\Apache24\bin&amp;quot; 폴더에 있는 &amp;ldquo;httpd.exe&amp;quot;를 &amp;ldquo;관리자 권한으로 실행&amp;quot;하면, Apache를 시작된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/httpd_exe.png&#34; alt=&#34;httpd.exe&#34;&gt;&lt;/p&gt;
&lt;p&gt;Apache를 시작되면, 콘솔 응용 프로그램이 뜨고 시작하는 동안 다음과 같은 상태가 된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/httpd_exe_start.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;그러면 Apache가 실행되고 있는지 확인해 보자. 브라우저를 시작하여 &amp;ldquo;http://localhost/&amp;ldquo;라고 입력하면 다음과 같이 표시된다면 Apache 성공적으로 시작되었다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/it_works_ok.png&#34; alt=&#34;It works!&#34;&gt;&lt;/p&gt;
&lt;p&gt;만약 다음과 같이 연결할 수 없다는 에러 표시가 되었다면 Apache의 시작에 실패한 것이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/it_works_fail.png&#34; alt=&#34;It works! Failed&#34;&gt;&lt;/p&gt;
&lt;p&gt;에러가 발생하면 명령 프롬프트에서 httpd.exe를 실행 보면 친절하게 에러의 원인을 표시해 준다&lt;/p&gt;
&lt;p&gt;다음은 ServerRoot이 제대로 설정이 되지 않았을 경우에 발생한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;httpd.exe
httpd.exe: Syntax error on line 39 of C:/Apache24/conf/httpd.conf: ServerRoot must be a valid directory
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;다음은 ServerName이 제대로 설정이 되지 않았을 경우에 발생한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;httpd.exe
AH00558: httpd.exe: Could not reliably determine the server&amp;#39;s fully qualified domain name, using fe80::3179:bb2:de42:8a63. Set the &amp;#39;ServerName&amp;#39; directive globally to suppress this message
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;시작된 Apache를 중지하려면 콘솔 응용 프로그램을 꺼버리면 된다. 명령 프룸프트로 실행을 하였다면 &amp;ldquo;Ctrl + c&amp;quot;를 누른다. 다음과 같이 표시되면 Apache가 중지되어 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;httpd.exe

C:\apache\Apache24\bin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;apache를-서비스에-등록&#34;&gt;Apache를 서비스에 등록&lt;/h2&gt;
&lt;p&gt;다음 Apache를 서비스로 시작하는 방법이다. 우선 서비스로 등록을 한다. Apache가 실행중인 경우 중지하라. 명령 프롬프트를 관리자로 시작하고 &amp;ldquo;(Apache 설치 디렉터리)\Apache24\bin&amp;quot;디렉터리로 이동하여 &amp;ldquo;httpd -k install&amp;quot;라고 명령어를 실행한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\&amp;gt;cd apache\Apache24\bin

C:\apache\Apache24\bin&amp;gt;httpd -k install
Installing the &amp;#39;Apache2.4&amp;#39; service
The &amp;#39;Apache2.4&amp;#39; service is successfully installed.
Testing httpd.conf....
Errors reported here must be corrected before the service can be started.

C:\apache\Apache24\bin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위와 같이 표시되면 서비스로 등록이 완료되었다.&lt;/p&gt;
&lt;p&gt;등록된 여부를 확인하려면 Windows10의 &amp;ldquo;서비스&amp;quot;화면에서 확인할 수 있다. 바탕 화면 왼쪽 하단의 시작 메뉴를 마우스 오른쪽 버튼을 클릭하여 표시되는 메뉴 중에서 &amp;ldquo;컴퓨터 관리&amp;quot;를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/com_mgt.png&#34; alt=&#34;컴퓨터 관리&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;컴퓨터 관리&amp;quot;화면이 나타나면 왼쪽 메뉴에서 &amp;ldquo;서비스 및 응용 프로그램&amp;quot;에있는 &amp;ldquo;서비스&amp;quot;를 클릭한다. 화면 오른쪽에 등록되어 있는 서비스 목록이 표시되며,이 가운데 Apache2.4가 포함되어있는 것을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/com_mgt_svc.png&#34; alt=&#34;컴퓨터 관리-서비스&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;apache-시작&#34;&gt;Apache 시작&lt;/h2&gt;
&lt;p&gt;이어서 Apache를 시작한다. 명령 프롬프트에서 &amp;ldquo;httpd -k start&amp;quot;고 실행한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;httpd -k start

C:\apache\Apache24\bin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;서비스&amp;quot;의 화면을 확인해 보면 Apache2.4 서비스의 상태가 &amp;ldquo;실행 중&amp;quot;으로 되어 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/com_mgt_svc2.png&#34; alt=&#34;컴퓨터 관리-서비스-시작&#34;&gt;&lt;/p&gt;
&lt;p&gt;확인을 위해 브라우저에서 &amp;ldquo;http://localhost/&amp;ldquo;라고 입력하면 다음과 같이 표시가 되면 Apache 성공적으로 시작되었다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/it_works_ok.png&#34; alt=&#34;Apach 시작&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;apache-중지&#34;&gt;Apache 중지&lt;/h2&gt;
&lt;p&gt;서비스로 실행중인 Apache 명령 프롬프트에서 중지하려면 &amp;ldquo;httpd -k stop&amp;rdquo; 또는 &amp;ldquo;httpd -k shutdown&amp;quot;라고 실행한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;httpd -k stop
The &amp;#39;Apache2.4&amp;#39; service is stopping.
The &amp;#39;Apache2.4&amp;#39; service has stopped.

C:\apache\Apache24\bin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;apache-재시작&#34;&gt;Apache 재시작&lt;/h2&gt;
&lt;p&gt;Apache가 실행된 상태에서 재시작을 위해 &amp;ldquo;httpd -k restart&amp;quot;라고 실행한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;httpd -k restart

C:\apache\Apache24\bin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;apache를-서비스에서-삭제&#34;&gt;Apache를 서비스에서 삭제&lt;/h2&gt;
&lt;p&gt;서비스로 등록된 Apache를 서비스에서 삭제하려면 &amp;ldquo;&lt;strong&gt;httpd -k uninstall&lt;/strong&gt;&amp;ldquo;라고 실행한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;httpd -k uninstall
Removing the &amp;#39;Apache2.4&amp;#39; service
The &amp;#39;Apache2.4&amp;#39; service has been removed successfully.

C:\apache\Apache24\bin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;서비스로-어떻게-apache를-시작할지-여부를-설정&#34;&gt;서비스로 어떻게 Apache를 시작할지 여부를 설정&lt;/h2&gt;
&lt;p&gt;Apache를 서비스로 등록한 경우에는 Windows 서비스 관리 기능을 사용하여 Apache를 시작하거나 PC 부팅시 자동으로 시작하도록 설정할 수 있다. &amp;ldquo;서비스&amp;quot;화면에서 Apache2.4를 더블 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/com_mgt_svc3.png&#34; alt=&#34;컴퓨터 관리-서비스&#34;&gt;&lt;/p&gt;
&lt;p&gt;Apache2.4 서비스에 대한 속성이 표시된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/com_mgt_svc4.png&#34; alt=&#34;컴퓨터 관리-서비스&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;시작 유형&amp;quot;은 현재 &amp;ldquo;자동&amp;quot;으로 설정되어 있기에 Windows가 시작될 때 자동으로 Apache도 시작된다. 자동이 아닌 수동으로 Apache 시작을 수행하려면 &amp;ldquo;시작 유형&amp;quot;을 &amp;ldquo;수동&amp;quot;으로 변경한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/com_mgt_svc5.png&#34; alt=&#34;컴퓨터 관리-서비스&#34;&gt;&lt;/p&gt;
&lt;p&gt;그리고 먼저번에 명령 프롬프트로 Apache를 시작 및 중지를 하였지만, 화면의 &amp;ldquo;시작&amp;rdquo;, &amp;ldquo;중지&amp;rdquo;, &amp;ldquo;일시 중지&amp;rdquo;, &amp;ldquo;다시 시작&amp;quot;버튼을 클릭하여 Apache를 기동하거나 중지할 수도 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/com_mgt_svc6.png&#34; alt=&#34;컴퓨터 관리-서비스&#34;&gt;&lt;/p&gt;
&lt;p&gt;이와 같이 서비스의 관리 화면에서도 Apache를 시작 및 중지를 제어할 수 있다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 설치 | Apache 문서 참조하기</title>
      <link>https://www.devkuma.com/docs/apache/apache-%EB%AC%B8%EC%84%9C-%EC%B0%B8%EC%A1%B0%ED%95%98%EA%B8%B0/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/apache-%EB%AC%B8%EC%84%9C-%EC%B0%B8%EC%A1%B0%ED%95%98%EA%B8%B0/</guid>
      <description>
        
        
        &lt;p&gt;Apache 설정을 할 때 참조가 되는 것은 공식 사이트에 공개되고 있는 Apache 문서이다. 여기에서는 한국어 및 영어로 Apache 문서를 참조하는 방법에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;한국어로-작성된-apache-문서-참조하기&#34;&gt;한국어로 작성된 Apache 문서 참조하기&lt;/h2&gt;
&lt;p&gt;문서를 참조하려면 다음 URL에 접근한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://httpd.apache.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://httpd.apache.org/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/httpd_apache_org.png&#34; alt=&#34;httpd.apache.org&#34;&gt;&lt;/p&gt;
&lt;p&gt;왼쪽 메뉴에서 &amp;ldquo;Documentation&amp;quot;에 속해 있는 &amp;ldquo;Version 2.4&amp;rdquo; 링크를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_doc1.png&#34; alt=&#34;Apache Documentation&#34;&gt;&lt;/p&gt;
&lt;p&gt;클릭하면 페이지가 열리면 한국어로 된 Apache2.4 시스템에 대한 문서를 볼 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_doc2.png&#34; alt=&#34;Apache Documentation&#34;&gt;&lt;/p&gt;
&lt;p&gt;일부 영어로 된 부분도 있긴 하지만, 한국어로 작성된 상세한 문서가 준비되어 있다. 공식 문서로 매우 알기 쉽게 설명되어 있기에 모르는 것이 있으면 수시로 방문하도록 하자.&lt;/p&gt;
&lt;h2 id=&#34;영어-버전의-문서-참조하기&#34;&gt;영어 버전의 문서 참조하기&lt;/h2&gt;
&lt;p&gt;한국어 버전의 문서에서는 &amp;ldquo;이 문서는 최신판 번역이 아닙니다. 최근에 변경된 내용은 영어 문서를 참고하세요.&amp;ldquo;라고 표시되어 있듯이 내용이 조금 오래된 경우도 있는 것 같다. 만약 영어 버전으로 참조되고 싶다면 문서 페이지의 오른쪽 상단에 표시되는 &amp;ldquo;en&amp;quot;을 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_doc3.png&#34; alt=&#34;Apache Documentation&#34;&gt;&lt;/p&gt;
&lt;p&gt;클릭하면 영어 버전의 문서가 표시된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_doc4.png&#34; alt=&#34;Apache Documentation&#34;&gt;&lt;/p&gt;
&lt;p&gt;영어 문서를 어느정도 볼 수 있고, 최신의 내용을 확인하고 싶은 경우에 여기를 참조하면 좋을거 같다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 설치 | 80이 아닌 다른 포트 번호 사용하여 Web 접근하기</title>
      <link>https://www.devkuma.com/docs/apache/80%EC%9D%B4-%EC%95%84%EB%8B%8C-%EB%8B%A4%EB%A5%B8-%ED%8F%AC%ED%8A%B8-%EB%B2%88%ED%98%B8-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-web-%EC%A0%91%EA%B7%BC%ED%95%98%EA%B8%B0/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/80%EC%9D%B4-%EC%95%84%EB%8B%8C-%EB%8B%A4%EB%A5%B8-%ED%8F%AC%ED%8A%B8-%EB%B2%88%ED%98%B8-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-web-%EC%A0%91%EA%B7%BC%ED%95%98%EA%B8%B0/</guid>
      <description>
        
        
        &lt;p&gt;Apache뿐만 아니라 다른 Web 서버에서도 일반적으로 포트 번호로 80번을 사용한다. 혹시 이미 같은 서버에서 80번을 사용하는 응용 프로그램이 기동되어 있다면, 다른 포트 번호를 사용하도록 설정해야 한다. 여기에 포트 번호로 80번가 아닌 다른 번호를 사용하여 Web 서버에 브라우저에서 접근하는 방법에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;apache에서-사용하는-포트-번호를-변경하기&#34;&gt;Apache에서 사용하는 포트 번호를 변경하기&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;&lt;a href=&#34;https://www.devkuma.com/books/pages/1365&#34;&gt;설정 파일(http.conf)의 초기 설정하기 &amp;gt; 포트 번호 설정&lt;/a&gt;&amp;ldquo;에서 설명했듯이 Apache에서 사용하는 포트 번호 지정은 http.conf 파일에서 지정한다. 기본적으로 Listen 지시어를 사용하여 다음과 같이 80번이 지정되어 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the &amp;lt;VirtualHost&amp;gt;
# directive.
#
# Change this to Listen on specific IP addresses as shown below to 
# prevent Apache from glomming onto all bound IP addresses.
#
#Listen 12.34.56.78:80
Listen 80
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;같은 서버에서 다른 Web 서버가 기동되어 80번 포트가 이미 사용되고 있는 경우에는 다른 포트 번호(예: 8080)를 지정한다. 무엇이든 원하는 번호를 지정할 수 있는 것은 아니고, 같은 서버에서 실행되는 다른 응용 프로그램(메일 서버와 DNS 서버 등)를 사용하지 않는 번호를 지정해야 한다. 여기에서는 예로 8080을 사용하도록 하겠다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the &amp;lt;VirtualHost&amp;gt;
# directive.
#
# Change this to Listen on specific IP addresses as shown below to 
# prevent Apache from glomming onto all bound IP addresses.
#
#Listen 12.34.56.78:80
Listen 8080
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;설정을 적용하려면 http.conf 파일을 저장한 후 Apache를 다시 시작한다.&lt;/p&gt;
&lt;h2 id=&#34;브라우저에서-포트-번호를-지정하여-apache에-접근하기&#34;&gt;브라우저에서 포트 번호를 지정하여 Apache에 접근하기&lt;/h2&gt;
&lt;p&gt;브라우저에서 Apache와 같은 웹 서버에 접근하는 경우에느 다음 형식에 따라 접근한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http://(Web 서버의 호스트 이름):(Web 서버에서 사용하는 포트 번호)/...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;예를 들어, 8080번으로 지정된 Web 사이트에 접근하려면 &amp;ldquo;&lt;a href=&#34;http://www.devkuam.com:8080/%22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.devkuam.com:8080/&#34;&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;과 같이 접근한다.&lt;/p&gt;
&lt;p&gt;포트 번호로 80번을 사용하는 경우에는 예외로 &lt;strong&gt;포트 번호를 생략하면 80번이 지정된 것으로 간주된다.&lt;/strong&gt; 따라서 원래 대로라면 &amp;ldquo;&lt;a href=&#34;http://www.devkuam.com:80&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.devkuam.com:80&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&amp;quot;와 같이 접근하는 대신에 &amp;ldquo;&lt;a href=&#34;http://www.devkuam.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://www.devkuam.com&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&amp;quot;와 같이 포트 번호를 생략하고 접근할 수 있다.&lt;/p&gt;
&lt;p&gt;포트 번호가 80번의 경우에는 생략할 수 있으므로 다음의 2개는 동일하다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http://www.example.com/
http://www.example.com:80/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이번 Apache는 포트 번호 8080을 사용하고 있기에, 이 Web 서버에 접근하려면 http://localhost/ 가 아닌 http://localhost:8080과 같이 포트 번호를 지정하여 접근해야 한다. 그럼 브라우저를 열어서 연결을 해보자.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/it_works_8080.png&#34; alt=&#34;It works&#34;&gt;&lt;/p&gt;
&lt;p&gt;성공적으로 접속이 되었다. 80이 아닌 다른 포트 번호를 사용하는 경우에는 Web 서버에 접근할 때 포트 번호를 지정하여 접근해야 한다는 것을 잊지 말도록 하자.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 기본 설정</title>
      <link>https://www.devkuma.com/docs/apache/apache-%EA%B8%B0%EB%B3%B8-%EC%84%A4%EC%A0%95/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/apache-%EA%B8%B0%EB%B3%B8-%EC%84%A4%EC%A0%95/</guid>
      <description>
        
        
        &lt;p&gt;Apache 설정 중에서도 기본적인 항목에 대한 설정 방법에 대해 설명한다. Apache에서는 http.conf 파일을 사용하여 설정한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 기본 설정 | 설정 파일(httpd.conf) 위치와 보조 설정 파일 읽기</title>
      <link>https://www.devkuma.com/docs/apache/%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-httpd-conf-%EC%9C%84%EC%B9%98%EC%99%80-%EB%B3%B4%EC%A1%B0-%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-%EC%9D%BD%EA%B8%B0/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-httpd-conf-%EC%9C%84%EC%B9%98%EC%99%80-%EB%B3%B4%EC%A1%B0-%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-%EC%9D%BD%EA%B8%B0/</guid>
      <description>
        
        
        &lt;p&gt;Apache의 설정은 http.conf 파일에서 하는데, 다른 파일에 설정을 작성하고 이를 http.conf 파일에 포함시킬  수도 있다. 여기에서는 http.conf 파일의 위치와 별도로 준비한 보조 설정 파일을 포함 시키는 방법을 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;httpconf-파일의-위치&#34;&gt;http.conf 파일의 위치&lt;/h2&gt;
&lt;p&gt;Apache를 설치하면 파일 구성은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24&amp;gt;dir
 C 드라이브의 볼륨에는 이름이 없습니다.
 볼륨 일련 번호: XXXX-XXX

 C:\apache\Apache24 디렉터리

2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          .
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          ..
2015-04-16  오전 05:53            13,740 ABOUT_APACHE.txt
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          bin
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          cgi-bin
2019-08-09  오후 11:37                59 CHANGES.txt
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          conf
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          error
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          htdocs
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          icons
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          include
2016-05-18  오전 02:59             3,869 INSTALL.txt
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          lib
2019-08-09  오후 11:38            44,480 LICENSE.txt
2019-11-28  오후 12:30    &amp;lt;DIR&amp;gt;          logs
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          manual
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          modules
2019-08-09  오후 11:38             2,865 NOTICE.txt
2019-08-09  오후 11:50            41,993 OPENSSL-NEWS.txt
2019-08-09  오후 11:50             4,545 OPENSSL-README.txt
2014-01-24  오전 01:33             4,752 README.txt
               8개 파일             116,303 바이트
              13개 디렉터리  459,275,866,112 바이트 남음

C:\apache\Apache24&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Apache 설정 파일은 http.conf 파일은 &amp;ldquo;(설치 디렉터리)\Apache24\conf&amp;quot;디렉터리에 들어 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\conf&amp;gt;dir
 C 드라이브의 볼륨에는 이름이 없습니다.
 볼륨 일련 번호: XXXX-XXX

 C:\apache\Apache24\conf 디렉터리

2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          .
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          ..
2019-08-09  오후 11:50             1,820 charset.conv
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          extra
2019-11-28  오후 12:30            20,555 httpd.conf
2019-08-09  오후 11:50            13,449 magic
2019-08-09  오후 11:50            62,702 mime.types
2019-05-28  오후 10:12            11,259 openssl.cnf
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          original
               5개 파일             109,785 바이트
               4개 디렉터리  459,279,749,120 바이트 남음

C:\apache\Apache24\conf&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;설정 변경을 하기 전에 백업으로  http.conf 파일을 다른 이름으로 복사하여 저장해 둔다. 설정을 변경하려면 http.conf 파일은 텍스트 파일이므로 텍스트 편집기를 사용하여 파일을 불러온다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/http_conf_note.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;보조-설정-파일을-포함시키는-방법&#34;&gt;보조 설정 파일을 포함시키는 방법&lt;/h2&gt;
&lt;p&gt;현재 버전에서는 일부 설정 항목에 대해서는 별도의 파일로 분리하고, 필요에 따라 httpd.conf 파일에서 가져 올 수 있게 되어 있다. 기본적으로 제공되는 보조 설정 파일은 &amp;ldquo;(설치 디렉터리)\Apache24\conf\ext &amp;quot;디렉터리에 저장되어 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache24_conf1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache24_conf2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;http.conf 파일에서 다른 설정 파일을 가져 오려면 Include 지시어를 사용한다. 구체적인 예로 http.conf 파일의 마지막 부분을 보면, 다음과 같은 내용이 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Supplemental configuration
#
# The configuration files in the conf/extra/ directory can be 
# included to add extra features or to modify the default configuration of 
# the server, or you may simply copy their contents here and change as 
# necessary.

# Server-pool management (MPM specific)
#Include conf/extra/httpd-mpm.conf

# Multi-language error messages
#Include conf/extra/httpd-multilang-errordoc.conf

# Fancy directory listings
#Include conf/extra/httpd-autoindex.conf

# Language settings
#Include conf/extra/httpd-languages.conf

# User home directories
#Include conf/extra/httpd-userdir.conf

# Real-time info on requests and configuration
#Include conf/extra/httpd-info.conf

# Virtual hosts
#Include conf/extra/httpd-vhosts.conf

# Local access to the Apache HTTP Server Manual
#Include conf/extra/httpd-manual.conf

# Distributed authoring and versioning (WebDAV)
#Include conf/extra/httpd-dav.conf

# Various default settings
#Include conf/extra/httpd-default.conf

# Configure mod_proxy_html to understand HTML4/XHTML1
&amp;lt;IfModule proxy_html_module&amp;gt;
Include conf/extra/proxy-html.conf
&amp;lt;/IfModule&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;지금은 모두 &amp;ldquo;#&amp;ldquo;이 맨 앞에 있어 주석이서서, 실제로는 보조 설정 파일을 가져 오지 않고 있다. 여기서 사용자 디렉터리에 대한 보조 설정 파일을 가져 오고 싶다면 문장의 앞에 있는 &amp;ldquo;#&amp;ldquo;을 삭제하고 다음과 같이 작성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# User home directories
Include conf/extra/httpd-userdir.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이제 보조 설정 파일인 &amp;ldquo;conf/extra/httpd-userdir.conf&amp;quot;파일이 포함된다. Include 지시어 사용에 대한 자세한 내용은 &amp;ldquo;설정 파일 가져오기 (Include)&amp;ldquo;를 참조한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 기본 설정 | 도메인명과 포트 번호 (ServerName, Listen)</title>
      <link>https://www.devkuma.com/docs/apache/%EB%8F%84%EB%A9%94%EC%9D%B8%EB%AA%85%EA%B3%BC-%ED%8F%AC%ED%8A%B8-%EB%B2%88%ED%98%B8-servername-listen/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EB%8F%84%EB%A9%94%EC%9D%B8%EB%AA%85%EA%B3%BC-%ED%8F%AC%ED%8A%B8-%EB%B2%88%ED%98%B8-servername-listen/</guid>
      <description>
        
        
        &lt;p&gt;Apache의 설정에서 도메인명과 포트 번호 (ServerName, Listen)를 설정하는 방법에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;servername-지시어directive---도메인-지정&#34;&gt;ServerName 지시어(directive) - 도메인 지정&lt;/h2&gt;
&lt;p&gt;ServerName 지시어(directive)는 Apache 서버가 자신의 도메인명을 나타내는 이름을 지정한다. 예를 들어, Apache가 오류 표시를 할 때, 자신을 나타내는 도메인명도 함께 표시할 때 등에 여기서 설정한 도메인명이 사용된다.&lt;/p&gt;
&lt;p&gt;일반적으로 IP 주소에 대해 할당된 도메인명이지만, 따로 이름을 할당하고 그것을 공식 도메인명으로 원하는 경우에 사용한다. &amp;ldquo;ServerName&amp;quot;가 지정되어 있지 않은 경우는 Apache에 할당된 IP 주소를 역으로 도메인명을 가져온다.&lt;/p&gt;
&lt;p&gt;형식은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ServerName [스키마://]도메인명|IP 주소[:포트 번호]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;ServerName&amp;quot;의 지정은 보통 &amp;ldquo;도메인명: 포트 번호&amp;quot;형식으로 지정한다.&lt;/p&gt;
&lt;p&gt;그러면 &amp;ldquo;httpd.conf&amp;quot;파일에서 &amp;ldquo;ServerName&amp;quot;를 검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn&amp;#39;t have a registered DNS name, enter its IP address here.
#
#ServerName www.example.com:80
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;기본적으로 앞에 &amp;lsquo;#&amp;lsquo;을 있어서 주석처리 되어 있다.&lt;/p&gt;
&lt;p&gt;이번에는 Apache를 로컬 환경에서 이동하고 있기 때문에 위와 같이되어 있지만 외부에 공개되는 Web 서버의 경우 예를 들어 &amp;ldquo;&lt;a href=&#34;https://www.example.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.example.com&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&amp;quot;와 같이 지정 될 거라고 생각한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ServerName www.example.com:80
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;포트 번호는 생략할 수 있지만 선택 사항이지만, 생략된 경우는 http 포트 번호를 사용한다. 포트 번호도 지정하는 것을 추천하고 있다.&lt;/p&gt;
&lt;h2 id=&#34;listen-지시어directive---요청을-받을-포트-번호-지정&#34;&gt;Listen 지시어(directive) - 요청을 받을 포트 번호 지정&lt;/h2&gt;
&lt;p&gt;Listen 지시어(directive)는 Apache가 외부에서 요청을 받아들이는 포트 번호를 지정한다. 형식은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Listen [IP 주소:] 포트 번호 [프로토콜]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그러면 &amp;ldquo;httpd.conf&amp;quot;파일에서 &amp;ldquo;Listen&amp;quot;으로 검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the &amp;lt;VirtualHost&amp;gt;
# directive.
#
# Change this to Listen on specific IP addresses as shown below to 
# prevent Apache from glomming onto all bound IP addresses.
#
#Listen 12.34.56.78:80
Listen 80
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;요청을 받는 포트 번호로 80 번이 지정되어 있는 것을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;받을 수 있는 포트 번호는 여러 개를 지정할 수 있는데 Listen 지시어를 여러 개를 작성한다. 아래와 같이 하면 80번 포트와 8080번 포트에서 요청을 받게 된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Listen 80
Listen 8080
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;포트 번호만 지정하게 되면 모든 인터페이스에서 지정한 포트 번호의 요청을 받는데, Apache가 실행되는 서버에 여러 개의 인터페이스가 연결되어 특정 인터페이스에서만 요청을 받기를 원한다면 그 인터페이스의 IP 주소를 지정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Listen 192.170.2.1:80
Listen 192.170.2.5:8000
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;프로토콜는 포트 번호 443를 사용하는 경우에는 https, 그 외의 포트 번호에는 http가 기본적으로 설정된다. 만약 443 이외의 포트 번호로 받으려면 https를 사용하려면 지정을 해야 한다. 예를 들면, 아래와 같이 지정하면 포트 번호 8443를 사용하면서 프로토콜 https를 사용하게 된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Listen 192.170.2.1:8443 https
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://httpd.apache.org/docs/2.4/mod/core.html#servername&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://httpd.apache.org/docs/2.4/mod/core.html#servername&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://httpd.apache.org/docs/2.4/mod/mpm_common.html#listen&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://httpd.apache.org/docs/2.4/mod/mpm_common.html#listen&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 기본 설정 | 연락처 이메일 주소 (ServerAdmin)</title>
      <link>https://www.devkuma.com/docs/apache/%EC%97%B0%EB%9D%BD%EC%B2%98-%EC%9D%B4%EB%A9%94%EC%9D%BC-%EC%A3%BC%EC%86%8C-serveradmin/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EC%97%B0%EB%9D%BD%EC%B2%98-%EC%9D%B4%EB%A9%94%EC%9D%BC-%EC%A3%BC%EC%86%8C-serveradmin/</guid>
      <description>
        
        
        &lt;p&gt;Apache 설정에서 연락처 이메일 주소(ServerAdmin) 설정에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;serveradmin-지시자&#34;&gt;ServerAdmin 지시자&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;ServerAdmin&amp;quot;는 Apache가 에러가 발생하였을 때 표시되는 질의를 실행하는 연락처 이메일 주소를 표시 할 때 사용된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ServerAdmin 이메일 주소 | URL
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;관리자 이메일 주소보다는 연락처 이메일 주소이다. 또한 이메일 주소 외에 URL을 작성할 수 있다.&lt;/p&gt;
&lt;p&gt;그러면 &amp;ldquo;httpd.conf&amp;quot;파일에서 &amp;ldquo;ServerAdmin&amp;quot;로검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.  e.g. admin@your-domain.com
#
ServerAdmin admin@example.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;만약 URL을 지정하는 경우에는 다른 서버의 URL을 작성한다. Apache에 장애가 발생한 경우에 연락처 URL이 동일한 Apache 서버라면 결국 연락을 할 수 없게 되어 버릴 수 있다는 것을 주의하자.&lt;/p&gt;
&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://httpd.apache.org/docs/2.4/mod/core.html#serveradmin&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://httpd.apache.org/docs/2.4/mod/core.html#serveradmin&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 기본 설정 | 서버 위치 디렉터리 (ServerRoot)</title>
      <link>https://www.devkuma.com/docs/apache/%EC%84%9C%EB%B2%84-%EC%9C%84%EC%B9%98-%EB%94%94%EB%A0%89%ED%84%B0%EB%A6%AC-serverroot/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EC%84%9C%EB%B2%84-%EC%9C%84%EC%B9%98-%EB%94%94%EB%A0%89%ED%84%B0%EB%A6%AC-serverroot/</guid>
      <description>
        
        
        &lt;p&gt;Apache의 설정에서 서버의 위치 디렉터리 (ServerRoot)의 설정에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;serverroot-지시어&#34;&gt;ServerRoot 지시어&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;ServerRoot&amp;quot;는 Apache가 설치되어있는 디렉터리이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ServerRoot 디렉터리
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그러면 &amp;ldquo;httpd.conf&amp;quot;파일에서 &amp;ldquo;ServerRoot&amp;quot;로 검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# ServerRoot: The top of the directory tree under which the server&amp;#39;s
# configuration, error, and log files are kept.
#
# Do not add a slash at the end of the directory path.  If you point
# ServerRoot at a non-local disk, be sure to specify a local disk on the
# Mutex directive, if file-based mutexes are used.  If you wish to share the
# same ServerRoot for multiple httpd daemons, you will need to change at
# least PidFile.
#
Define SRVROOT &amp;#34;c:/Apache24&amp;#34;

ServerRoot &amp;#34;${SRVROOT}&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SRVROOT라는 변수로 디렉터리를 지정하고, ServerRoot에서 사용되었다. 기본으로 &amp;ldquo;c:/Apache24&amp;quot;되어 있는데, 변경하려면 새 디렉터리를 지정한다. (마지막에 &amp;ldquo;/&amp;ldquo;는 붙이지 않도록 주의하자.)&lt;/p&gt;
&lt;p&gt;Apache의 각종 설정에서 절대 경로가 아닌 상대 경로로 작성되면 ServerRoot에 지정된 디렉터리로부터의 상대 경로이다. 예를 들어 &amp;ldquo;ErrorLog&amp;quot;설정 부분을 보도록 하자.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a &amp;lt;VirtualHost&amp;gt;
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a &amp;lt;VirtualHost&amp;gt;
# container, that host&amp;#39;s errors will be logged there and not here.
#
ErrorLog &amp;#34;logs/error.log&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이와 같이 상대 경로로 작성된 경우 &amp;ldquo;ServerRoot&amp;quot;값이 &amp;ldquo;c:/Apache24&amp;quot;이거 이므로, &amp;ldquo;c:/Apache24/logs/error.log&amp;quot;가 실제로 가리키는 파일이 된다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 기본 설정 | 설정 파일 포함 (Include)</title>
      <link>https://www.devkuma.com/docs/apache/%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-%ED%8F%AC%ED%95%A8-include/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EC%84%A4%EC%A0%95-%ED%8C%8C%EC%9D%BC-%ED%8F%AC%ED%95%A8-include/</guid>
      <description>
        
        
        &lt;p&gt;Apache 구성에서 Include 지시어를 사용하여 다른 설정 파일 포함시키는 방법에 대해 설명한다.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;h2 id=&#34;include-지시어&#34;&gt;Include 지시어&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;Include&amp;quot;는 다른 설정 파일를 포함시킬 때 사용한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Include 파일 이름
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;파일 이름은 절대 경로로 지정하거나 &amp;ldquo;ServerRoot&amp;quot;에 대한 상대 경로로 지정한다.&lt;/p&gt;
&lt;p&gt;그러면 &amp;ldquo;httpd.conf&amp;quot;파일에서 &amp;ldquo;Include&amp;quot;로 검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Supplemental configuration
#
# The configuration files in the conf/extra/ directory can be 
# included to add extra features or to modify the default configuration of 
# the server, or you may simply copy their contents here and change as 
# necessary.

# Server-pool management (MPM specific)
#Include conf/extra/httpd-mpm.conf

# Multi-language error messages
#Include conf/extra/httpd-multilang-errordoc.conf

# Fancy directory listings
#Include conf/extra/httpd-autoindex.conf

# Language settings
#Include conf/extra/httpd-languages.conf

# User home directories
#Include conf/extra/httpd-userdir.conf

# Real-time info on requests and configuration
#Include conf/extra/httpd-info.conf

# Virtual hosts
#Include conf/extra/httpd-vhosts.conf

# Local access to the Apache HTTP Server Manual
#Include conf/extra/httpd-manual.conf

# Distributed authoring and versioning (WebDAV)
#Include conf/extra/httpd-dav.conf

# Various default settings
#Include conf/extra/httpd-default.conf

# Configure mod_proxy_html to understand HTML4/XHTML1
&amp;lt;IfModule proxy_html_module&amp;gt;
Include conf/extra/proxy-html.conf
&amp;lt;/IfModule&amp;gt;

# Secure (SSL/TLS) connections
#Include conf/extra/httpd-ssl.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;현재는 모든 주석으로 되어 있지만 &amp;ldquo;httpd.conf&amp;rdquo; 이외에 준비된 설정 파일을 &amp;ldquo;httpd.conf&amp;quot;에 포함하고 싶은 경우에는 주석을 해제하고 &amp;ldquo;Include&amp;quot;를 사용한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 기본 설정 | 접근 허용 범위 설정 (섹션 컨테이너)</title>
      <link>https://www.devkuma.com/docs/apache/%EC%A0%91%EA%B7%BC-%ED%97%88%EC%9A%A9-%EB%B2%94%EC%9C%84-%EC%84%A4%EC%A0%95-%EC%84%B9%EC%85%98-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EC%A0%91%EA%B7%BC-%ED%97%88%EC%9A%A9-%EB%B2%94%EC%9C%84-%EC%84%A4%EC%A0%95-%EC%84%B9%EC%85%98-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88/</guid>
      <description>
        
        
        &lt;p&gt;Apache에서는 접근을 허용하는 적용 범위를 디렉터리 단위와 파일 단위로 제한할 수 있다. 여기에서는 구성 적용 범위를 지정하는 방법에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;구성-적용-범위를-제한&#34;&gt;구성 적용 범위를 제한&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;httpd.conf&amp;quot;파일을 보면 다음과 같은 내용을 볼 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory /&amp;gt;
    AllowOverride none
    Require all denied
&amp;lt;/Directory&amp;gt;

&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs&amp;#34;&amp;gt;
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
&amp;lt;/Directory&amp;gt;

&amp;lt;Files &amp;#34;.ht*&amp;#34;&amp;gt;
    Require all denied
&amp;lt;/Files&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;유사한 설정이 반복적으로 이루어지고 있다. 실제 설정이 영향을 받는 범위를 지정하고, 그 범위마다 설정을 되고 있다. 이 범위를 지정하기 위한 작성을 섹션 컨테이너라고 하는 &lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;Files&amp;gt;&lt;/code&gt;  등을 이용하여 작성한다.&lt;/p&gt;
&lt;p&gt;영향 범위 지정은 (1) 디렉터리 단위로 지정하는 방법, (2) 파일 단위로 지정하는 방법, (3) URL의 경로명 단위로 지정하는 방법의 3 가지로 지정할 수 있다. 예를 들어, 디렉터리에 있는 파일을 보기 위해서는 인증이 필요하도록 설정하는 것이 가능하다.&lt;/p&gt;
&lt;p&gt;간단히 작성하는 방법을 살펴 보겠다.&lt;/p&gt;
&lt;h2 id=&#34;디렉터리-단위로-지정&#34;&gt;디렉터리 단위로 지정&lt;/h2&gt;
&lt;p&gt;디렉터리 단위로 범위를 지정하는 경우에는 섹션 컨테이너로 &amp;ldquo;&lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt;&amp;ldquo;를 사용한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory 경로&amp;gt;
    ...
    설정 지시어
    ...
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;디렉터리를 나타내는 경로는 전체 경로를 지정한다. Windows의 경우 드라이브에서 지정된다. 별표(*) 및 물음표(?)와 같은 와일드 카드를 사용한 지정도 가능하다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory /&amp;gt;
    ...
&amp;lt;/Directory&amp;gt;


&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs&amp;#34;&amp;gt;
    ...
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위에서는 경로로 &amp;ldquo;/&amp;ldquo;와 &amp;ldquo;${SRVROOT}/htdocs&amp;quot;두 가지가 지정되어 있다. 디렉터리로 지정되면 지정된 디렉터리와 그 디렉터리에 포함된 모든 하위 디렉터리 전체가 포함된다. &amp;ldquo;${SRVROOT}/htdocs&amp;quot;라고 지정되어 이 디렉터리 아래에 있는 모든 파일 및 하위 디렉터리 모두가 대상이 된다.&lt;/p&gt;
&lt;p&gt;${SRVROOT}는 아래와 같이 지정되어 있기에 실제 경로는 &amp;ldquo;${SRVROOT}/htdocs&amp;quot;의 실제 경로는 &amp;ldquo;C:/apache/Apache24/htdocs&amp;rdquo; 이렇게 된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Define SRVROOT &amp;#34;C:/apache/Apache24&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;경로 이름 &amp;ldquo;/&amp;ldquo;라고 작성된 부분은 특별하다. 앞에서 작성한 대로 디렉터리로 지정된 경우에는 모든 하위 디렉터리가 대상이 된다. &amp;ldquo;/&amp;ldquo;는 루트 디렉터리를 나타내기에 경로를 &amp;ldquo;/&amp;ldquo;로 지정하면 모든 파일이 적용된다. 즉, 여기에서 작성된 설정은 개별로 설정이 되지 않는 모든 디렉터리의 기본 설정이 될 것이다.&lt;/p&gt;
&lt;p&gt;별도의 디렉터리에 설정을 작성하고, 그 하위 디렉터리 대해 별도의 설정을 할 수 있다. 이 경우 2개의 설정 (정확하게는 루트에 대한 설정도 포함하면 3개의 설정)이 대상 디렉터리에 대해 작성될 수 있지만, 디렉터리로 지정하는 경우에는 루트에서 길이가 가장 짧은 순(경로가 가장 짧은 순)으로 적용되어 같은 설정 항목에 대한 설정은 덮어쓰여 진다.&lt;/p&gt;
&lt;h2 id=&#34;파일-단위로-지정&#34;&gt;파일 단위로 지정&lt;/h2&gt;
&lt;p&gt;파일 단위로 범위를 지정하는 경우에는 섹션 컨테이너로 &lt;code&gt;&amp;lt;Files&amp;gt;&lt;/code&gt;를 사용한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Files 파일명&amp;gt;
    ...
    설정 지시어
    ...
&amp;lt;/Files&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;파일 이름을 지정하는 경우 해당 파일이 존재하는 디렉터리에 관계없이 특정 파일 이름의 파일이나 특정 확장자를 가진 파일 전반에 설정을 하고 싶은 경우에 이용하면 편리한다. 파일명도 별표(*) 및 물음표(?)와 같은 와일드 카드를 사용한 지정도 가능하다.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;httpd.conf&amp;quot;파일에 작성된 예를 보면 다음과 같이 기술되어 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Files &amp;#34;.ht*&amp;#34;&amp;gt;
    ...
&amp;lt;/Files&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위에서는 &amp;ldquo;.ht*&amp;ldquo;라고 지정되어서 이 와일드 카드와 일치하는 파일명은 모두 적용된다. 예를 들면, &amp;ldquo;a.html&amp;quot;와 파일명이 모두 적용된다.&lt;/p&gt;
&lt;p&gt;그리고 아래와 같이 파일명의 정규표현식으로도 사용 가능하다. 정규표현식으로 작성되어 있으면 이 정규표현식과 일치하는 파일명이 모두 적용된다&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Files ~ &amp;#34;\.(htm|html|css|js|php)$&amp;#34;&amp;gt;
   ...
&amp;lt;/Files&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위에 예는 htm, html, css, js, php가 모두 적용된다. 이와 동일하게 &lt;code&gt;&amp;lt;FileMatch&amp;gt;&lt;/code&gt;를 사용해서도 정규표현식이 가능하다.  &lt;code&gt;&amp;lt;Files&amp;gt;&lt;/code&gt;와 다른 점은 &amp;quot; ~&amp;ldquo;를 붙히지 않아도 정규표현식이 적용된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;FilesMatch &amp;#34;\.(htm|html|css|js|php)$&amp;#34;&amp;gt;
    ...
&amp;lt;/FilesMatch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;파일명으로 범위 지정된 설정이 여러개가 작성되었다면, 작성된 순서대로 설정이 활성화되어 간다. 디렉터리의 경우 경로가 가장 짧은 이었지만, 파일명의 경우는 작성된 순서대로 적용되어가는 점에 주의하도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;url-경로-단위로-지정&#34;&gt;URL 경로 단위로 지정&lt;/h2&gt;
&lt;p&gt;URL 경로 단위로 범위를 지정하는 경우에는 섹션 컨테이너로 &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt;를 사용한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Location URL경로&amp;gt;
    ...
    설정 지시어
    ...
&amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;실제 파일의 존재 위치와는 다르게 어떻게 호출되는지의 URL 경로(및 해당 URL 경로로 시작하는 전체 URL)에 설정이 적용된다. 경로는 URL이 &amp;ldquo;http://호스트/aaa/bbb&amp;quot;라면 &amp;ldquo;/aaa/bbb&amp;quot;부분을 지정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Location /aaa/bbb&amp;gt;
    ...
&amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;Location&amp;quot;는 데이터베이스으로 부터 동적으로 URL을 생성하는 경우에 사용하면 편리하다.&lt;/p&gt;
&lt;h2 id=&#34;실제-설정-방법&#34;&gt;실제 설정 방법&lt;/h2&gt;
&lt;p&gt;3개의 섹션 컨테이너가 작성되었다면 &amp;ldquo;디렉터리&amp;rdquo;, &amp;ldquo;파일명&amp;rdquo;, &amp;ldquo;URL 경로&amp;quot;의 순서로 설정이 적용되어 가고 이후 설정은  덮어쓰기를 하게 된다.&lt;/p&gt;
&lt;p&gt;여기서 실제 파일에 대해 하나의 액세스 작성 방법으로 &amp;ldquo;Location&amp;quot;의 URL 표기에 대한 설정을 설명하고 있는데, 이는 어디까지나 파일에 접근 방식의 작성 방법에 대한 제한이지 실제 파일에 대한 범위 설정은 아니다. 문제 없을 수도 있겠지만, 존재하는 파일에 대한 설정은 되도록이면 &amp;ldquo;Directory&amp;quot;와 &amp;ldquo;Files&amp;quot;를 사용하여 작성하도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://httpd.apache.org/docs/2.4/en/sections.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://httpd.apache.org/docs/2.4/en/sections.html&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 기본 설정 | 호스트 접근 설정 (hosts 파일)</title>
      <link>https://www.devkuma.com/docs/apache/%ED%98%B8%EC%8A%A4%ED%8A%B8-%EC%A0%91%EA%B7%BC-%EC%84%A4%EC%A0%95-hosts-%ED%8C%8C%EC%9D%BC/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%ED%98%B8%EC%8A%A4%ED%8A%B8-%EC%A0%91%EA%B7%BC-%EC%84%A4%EC%A0%95-hosts-%ED%8C%8C%EC%9D%BC/</guid>
      <description>
        
        
        &lt;p&gt;hosts 파일을 사용 호스트로 접근 설정하는 방법에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;hosts-파일을-사용한-접근-설정&#34;&gt;hosts 파일을 사용한 접근 설정&lt;/h2&gt;
&lt;p&gt;Apache를 로컬 환경에 설치한 경우 브라우저에서 접근하는 경우에는 자신을 나타내는 &amp;ldquo;localhost&amp;quot;가 사용된다. 또한 &amp;ldquo;localhost&amp;quot;이외에도 &amp;ldquo;127.0.0.1&amp;quot;에서도 접근이 가능하다.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;127.0.0.1&amp;quot;은 로컬 루프백((Local Loopback) 주소라고 하는 자신을 가리키는 특별한 IP 주소이다. 로컬 호스트에 IP 주소를 설정하는 경우에도 &amp;ldquo;127.0.0.1&amp;quot;는 항상 자신을 나타낸다.&lt;/p&gt;
&lt;p&gt;그래서 Apache 등을 클라이언트와 동일한 컴퓨터에서 실행하는 경우에는 &amp;ldquo;127.0.0.1&amp;quot;로 접근하면 자신의 PC에 액세스하는 것이기에, 결과적으로 같은 컴퓨터에서 실행중인 Apache에 접근할 수 있다.&lt;/p&gt;
&lt;p&gt;그럼 &amp;ldquo;localhost&amp;quot;이란? IP 주소 &amp;ldquo;127.0.0.1&amp;quot;에 설정되어 있는 호스트명이다. 그러기에 &amp;ldquo;localhost&amp;quot;에 접근하면 &amp;ldquo;127.0.0.1&amp;quot;에 접근하게 되어, 결과적으로 자신에게 접근하게 된다.&lt;/p&gt;
&lt;p&gt;이 호스트명과 IP 주소에 대해 정의하는 곳이 &amp;ldquo;hosts&amp;rdquo; 파일이다. 호스트명과 IP 주소를 정의하기 위해서는 DNS 서버 등을 사용하는 방법도 있지만, 로컬에 &amp;ldquo;hosts&amp;rdquo; 파일에 작성하여 DNS 서버 등을 참조하지 않고 IP 주소에 대한 호스트명을 등록할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;hosts-파일의-위치&#34;&gt;hosts 파일의 위치&lt;/h2&gt;
&lt;p&gt;Windows의 경우에 &amp;ldquo;hosts&amp;quot;파일은 &amp;ldquo;C:\Windows\System32\drivers\etc&amp;quot;에 위치한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\Windows\System32\drivers\etc&amp;gt;dir
 C 드라이브의 볼륨에는 이름이 없습니다.
 볼륨 일련 번호: XXXX-XXXX

 C:\Windows\System32\drivers\etc 디렉터리

2019-03-19  오후 01:53    &amp;lt;DIR&amp;gt;          .
2019-03-19  오후 01:53    &amp;lt;DIR&amp;gt;          ..
2019-03-19  오후 01:49               824 hosts &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; 여기 존재한다.
2019-03-19  오후 01:49             3,683 lmhosts.sam
2019-03-19  오후 01:49               407 networks
2019-03-19  오후 01:49             1,358 protocol
2019-03-19  오후 01:49            17,635 services
               5개 파일              23,907 바이트
               2개 디렉터리  458,572,058,624 바이트 남음

C:\Windows\System32\drivers\etc&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;hosts&amp;quot;는 텍스트 파일이므로 텍스트 편집기으로 열어 볼 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Copyright (c) 1993-2009 Microsoft Corp.
#
# This is a sample HOSTS file used by Microsoft TCP/IP for Windows.
#
# This file contains the mappings of IP addresses to host names. Each
# entry should be kept on an individual line. The IP address should
# be placed in the first column followed by the corresponding host name.
# The IP address and the host name should be separated by at least one
# space.
#
# Additionally, comments (such as these) may be inserted on individual
# lines or following the machine name denoted by a &amp;#39;#&amp;#39; symbol.
#
# For example:
#
#      102.54.94.97     rhino.acme.com          # source server
#       38.25.63.10     x.acme.com              # x client host

# localhost name resolution is handled within DNS itself.
#	127.0.0.1       localhost
#	::1             localhost
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;hosts&amp;quot;파일은 IP 주소에 대한 호스트명을 등록 할 수 있다. 형식은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;IP주소		호스트명
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;기본 설정으로 &amp;ldquo;127.0.0.1&amp;quot;에 &amp;ldquo;localhost&amp;quot;가 호스트로 등록되어 있다. 여기에 등록이 되어 있기에 &amp;ldquo;localhost&amp;quot;를 입력하면 해당 호스트명의 IP 주소가 &amp;ldquo;127.0.0.1&amp;quot;임을 알 수 있으며, 결과적으로 &amp;ldquo;127.0.0.1&amp;quot;에 접근할 수 있는 것이다 .&lt;/p&gt;
&lt;p&gt;여기서 127.0.0.1은 IPv4 주소이고,  &lt;code&gt;::1&lt;/code&gt;는 IPv6 주소이다.&lt;/p&gt;
&lt;p&gt;Windows 환경에서 확인한 결과 모두 코멘트로 되어 있었다. 그대로 하면 여러가지 불편이 나오는 경우가 있으므로 다음과 같이 &amp;ldquo;#&amp;ldquo;을 제거하도록 한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# localhost name resolution is handled within DNS itself.
127.0.0.1           localhost
#	::1             localhost
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Windows의 경우 관리자 권한으로 실행한 텍스트 에디터가 아닌 편집할 수 없을 수도 있기에 주의하도록 한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 콘텐츠의 설치</title>
      <link>https://www.devkuma.com/docs/apache/%EC%BD%98%ED%85%90%EC%B8%A0%EC%9D%98-%EC%84%A4%EC%B9%98/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EC%BD%98%ED%85%90%EC%B8%A0%EC%9D%98-%EC%84%A4%EC%B9%98/</guid>
      <description>
        
        
        &lt;p&gt;Web 서버로 클라이언트에 공개하는 콘텐츠의 설치 방법이나 외부에서의 접근 방법에 설명한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 콘텐츠의 설치 | 도큐먼트 루트 (Document Root)</title>
      <link>https://www.devkuma.com/docs/apache/document-root/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/document-root/</guid>
      <description>
        
        
        &lt;p&gt;Apache는 WWW 서버이기에 클라이언트에서 콘텐츠 요청에 대응하는 콘텐츠를 반환한다. 그 내용을 배치해 두는 위치는 &amp;ldquo;DocumentRoot&amp;quot;로 지정한다.&lt;/p&gt;
&lt;h2 id=&#34;documentroot-디렉터리&#34;&gt;DocumentRoot 디렉터리&lt;/h2&gt;
&lt;p&gt;디렉터리는 절대 경로 또는 ServerRoot에 상대 경로로 지정한다. 마지막에 슬래시(/)는 작성하지 않는다.&lt;/p&gt;
&lt;p&gt;그러면 &amp;ldquo;httpd.conf&amp;quot;파일에서 &amp;ldquo;DocumentRoot&amp;quot;로 검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
DocumentRoot &amp;#34;${SRVROOT}/htdocs&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이것으로 WWW 서버로 공개하는 콘텐츠는 &amp;ldquo;${SRVROOT}/htdocs&amp;rdquo; 디렉터리 아래에 위치하는 것을 의미한다. 여기서 ${SRVROOT}는 앞 페이지(&lt;a href=&#34;http://www.devkuma.com/books/pages/1365&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;설정 파일(http.conf)의 초기 설정하기&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;)에 의해 아래와 같이 지정했다면 경로는&amp;quot;C:/dev/Apache2.2/htdocs&amp;quot;이 디렉터리가 된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Define SRVROOT &amp;#34;C:/apache/Apache24&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위치된 파일과 클라이언트의 요청의 관계는 다음과 같다.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;브라우저에서 요청 URL&lt;/th&gt;
          &lt;th&gt;클라이언트에 반환되는 실제 파일&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;http : //localhost/index.html&lt;/td&gt;
          &lt;td&gt;C:/apache/Apache24/htdocs/index.html&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;http : //localhost/sub/index.html&lt;/td&gt;
          &lt;td&gt;C:/apache/Apache24/htdocs/sub/index.html&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;http : //localhost/img/image.gif&lt;/td&gt;
          &lt;td&gt;C:/apache/Apache24/htdocs/ img/image.gif&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;현재 Apache에 브라우저에서 액세스하면 다음과 같은 화면이 표시된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/it_works_ok.png&#34; alt=&#34;Apache&#34;&gt;&lt;/p&gt;
&lt;p&gt;이 화면은 &amp;ldquo;C:/apache/Apache24/htdocs/index.html&amp;rdquo; 파일이 표시된 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\dev\Apache24\htdocs&amp;gt;dir
 C 드라이브의 볼륨에는 이름이 없습니다.
 볼륨 일련 번호: XXXX-XXXX

 C:\dev\Apache24\htdocs 디렉터리

2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          .
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          ..
2007-06-12  오전 03:53                46 index.html &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; 표시된 파일
               1개 파일                  46 바이트
               2개 디렉터리  458,576,863,232 바이트 남음

C:\dev\Apache24\htdocs&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;실습&#34;&gt;실습&lt;/h2&gt;
&lt;p&gt;그럼  다음과 같은 간단한 HTML 파일을 작성하여 문서 루트 디렉터리에 넣어보자.&lt;/p&gt;
&lt;p&gt;hello.html&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Apache&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello World devkuma!&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;브라우저를 시작하여 다음 URL에 접근한다.&lt;/p&gt;
&lt;p&gt;http://localhost/hello.html&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/hello.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 콘텐츠의 설치 | 디렉터리 인덱스 (DirectoryIndex)</title>
      <link>https://www.devkuma.com/docs/apache/directoryindex/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/directoryindex/</guid>
      <description>
        
        
        &lt;p&gt;Apache는  파일에 접근 시에 디렉터리만 지정될 경우에 기본으로 반환하는 파일을 &amp;ldquo;DirectoryIndex&amp;quot;로 지정한다.&lt;/p&gt;
&lt;h2 id=&#34;디렉터리-인덱스-directoryindex&#34;&gt;디렉터리 인덱스 (DirectoryIndex)&lt;/h2&gt;
&lt;p&gt;클라이언트의 요청이 있을 때, 파일명을 지정하지 않고 디렉터리만 지정될 경우가 있다. 파일명이 생략된 경우에 어떤 파일을 반환할까를 &amp;ldquo;DirectoryIndex&amp;quot;로 지정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DirectoryIndex 파일명 [파일명 [...]]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;파일명은 하나 이상을 지정할 수 있다.&lt;/p&gt;
&lt;p&gt;그러면 &amp;ldquo;httpd.conf&amp;quot;파일에서 &amp;ldquo;DirectoryIndex&amp;quot;로 검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
&amp;lt;IfModule dir_module&amp;gt;
    DirectoryIndex index.html
&amp;lt;/IfModule&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;기본 설정으로 &amp;ldquo;index.html&amp;quot;이 지정되어 있다. 그러므로 &amp;ldquo;http://localhost/&amp;ldquo;로 클라이언트에서 요청하면 실제로는 &amp;ldquo;http://localhost/index.html&amp;quot;가 존재하는지 여부를 확인하고 있는 경우에 그 파일을 보내준다.&lt;/p&gt;
&lt;p&gt;디렉터리 인덱스에는 여러 파일을 지정할 수 있다. 파일은 공백으로 구분하여 이어서 작성한다. 여러 파일을 작성되면, 앞에서부터 순서대로 작성된 파일이 존재하는지 확인하고 있다면 경우에는 그 파일을 표시한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DirectoryIndex index.html index.htm index.php
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이와 같은 경우는 &amp;ldquo;index.html&amp;rdquo;, &amp;ldquo;index.htm&amp;rdquo;, &amp;ldquo;index.php&amp;quot;를 순서대로 검색하여 찾아서 존재하는 파일을 클라이언트에 반환한다.&lt;/p&gt;
&lt;h2 id=&#34;실습&#34;&gt;실습&lt;/h2&gt;
&lt;p&gt;그럼 다음과 같은 간단한 HTML 파일을 작성하여 문서 루트 디렉터리에 넣어보자.&lt;/p&gt;
&lt;p&gt;hello.html&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;head&amp;gt;&amp;lt;title&amp;gt;Apache&amp;lt;/title&amp;gt;&amp;lt;/head&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Hello World devkuma!&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그리고 &amp;ldquo;DirectoryIndex&amp;quot;을 다음과 같이 작성한다. 혹시 이미 Apache가 켜져 있다면 재기동해야 변경된 내용이 반영된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
&amp;lt;IfModule dir_module&amp;gt;
    DirectoryIndex hello.html index.html
&amp;lt;/IfModule&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;브라우저를 시작하여 다음 URL에 접근한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;http://localhost/&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/hello_index.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;DirectoryIndex&amp;quot;에 &amp;ldquo;hello.html&amp;rdquo; 파일이 가장 앞에 작성이 되어 있기에 디렉터리만 지정했을 때 먼저 &amp;ldquo;hello.html &amp;ldquo;를 검색하고 파일이 존재하여 그 파일이 표시되었다.&lt;/p&gt;
&lt;p&gt;그럼 &amp;ldquo;DirectoryIndex&amp;quot;은 그대로 두고 &amp;ldquo;hello.html&amp;quot;를 문서 루트에서 다른 곳으로 이동하려고 한다. 도큐먼트 루트( \htdocs)에 bak 디렉터리를 만든고 거기로 이동시킨다. 그리고 다시 브라우저로 &amp;ldquo;http://localhost/&amp;ldquo;에 접근한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/it_works_ok.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;이번 경우는 &amp;ldquo;hello.html&amp;quot;를 먼저 찾고 파일이 존재하지 않기에 다음 후보인 &amp;ldquo;index.html&amp;quot;을 찾는다. 그리고 &amp;ldquo;index.html&amp;quot;이 존재하여 파일을 내용을 클라이언트에 반환한다.&lt;/p&gt;
&lt;p&gt;그럼 &amp;ldquo;DirectoryIndex&amp;quot;은 그대 두고 &amp;ldquo;index.html&amp;quot;문서 루트에서 다른 곳으로 이동하려고 한다.  이 파일 역시 bak디렉터리를 이동시킨다. 그리고 다시 브라우저로 &amp;ldquo;http://localhost/&amp;ldquo;에 접근한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/index_emtpy.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;DirectoryIndex&amp;quot;에 지정된 파일이 전부 찾을 수 없는 경우는 그 디렉터리에 포함된 파일 및 디렉터리 목록을 표시한다. 단, 파일 목록이 표시되는 것은 보안 상 문제도 있기 때문에 일반적으로 파일 목록이 표시되지 않도록 설정되어 것이 좋다. (설정 방법은 다른 페이지에서 확인한다)&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 콘텐츠의 설치 | 앨리어스 (Alias)</title>
      <link>https://www.devkuma.com/docs/apache/alias/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/alias/</guid>
      <description>
        
        
        &lt;p&gt;Apache는 앨리어스(Alias)을 사용하면 도큐먼트 루트(\htdocs)가 아닌 디렉터리를 외부에서 접근할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;앨리어스-alias&#34;&gt;앨리어스 (Alias)&lt;/h2&gt;
&lt;p&gt;클라이언트에 공개하는 콘텐츠는 도큐먼트 루트(\htdocs) 아래의 디렉터리에 위치해야 하지만, 앨리어스(Alias)을 사용하여 전혀 다른 디렉터리에 있는 파일을 도큐먼트 루트 아래에 위치된 것처럼 보이게 할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Alias URL-path file-path|directory-path
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;클라이언트의 요청에 포함된 URL 경로가 서버의 실제 어느 디렉터리에 대응될 것인가를 지정한다.&lt;/p&gt;
&lt;p&gt;그러면 &amp;ldquo;httpd.conf&amp;quot;파일에서 &amp;ldquo;Alias&amp;quot;로 검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;IfModule alias_module&amp;gt;
    #
    # Redirect: Allows you to tell clients about documents that used to 
    # exist in your server&amp;#39;s namespace, but do not anymore. The client 
    # will make a new request for the document at its new location.
    # Example:
    # Redirect permanent /foo http://www.example.com/bar

    #
    # Alias: Maps web paths into filesystem paths and is used to
    # access content that does not live under the DocumentRoot.
    # Example:
    # Alias /webpath /full/filesystem/path
    #
    # If you include a trailing / on /webpath then the server will
    # require it to be present in the URL.  You will also likely
    # need to provide a &amp;lt;Directory&amp;gt; section to allow access to
    # the filesystem path.

    #
    # ScriptAlias: This controls which directories contain server scripts. 
    # ScriptAliases are essentially the same as Aliases, except that
    # documents in the target directory are treated as applications and
    # run by the server when requested rather than as documents sent to the
    # client.  The same rules about trailing &amp;#34;/&amp;#34; apply to ScriptAlias
    # directives as to Alias.
    #
    ScriptAlias /cgi-bin/ &amp;#34;${SRVROOT}/cgi-bin/&amp;#34;

&amp;lt;/IfModule&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Alias를 사용하지 않는 경우를 생각해 보겠다. 도큐먼트 루트가 &amp;ldquo;${SRVROOT}/htdocs&amp;quot;이었다면 클라이언트에서 &amp;ldquo;http://localhost/sub/index.html&amp;quot;와 같은 요청은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http://localhost/sub/index.html
${SRVROOT}/htdocs/sub/index.html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이에 대응되게 다음과 같이 &amp;ldquo;Alias&amp;quot;를 설정하려고 한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Alias /sub/ &amp;#34;C:/apache/data&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 되면 클라이언트에서 &amp;ldquo;http://localhost/sub/index.html&amp;quot;와 같은 요청은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http://localhost/sub/index.html
C:/apache/data/index.html
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;Alias&amp;quot;를 설정하여 Apache 도큐먼트 루트 아래에 한정되지 않고 (Apache가 포함되어 있는 디렉터리 이외에서도) 문서를 위치시킬 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;실습&#34;&gt;실습&lt;/h2&gt;
&lt;p&gt;그럼 실습으로 &amp;ldquo;C:/apache/data&amp;rdquo; 디렉터리를 만들고, 그 디렉터리 안에 아래 HTML 파일을 넣어보자.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;hello.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;Apache Alias&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;Hello World Alias devkuma!&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그리고 &amp;ldquo;Alias&amp;quot;에 대한 설정을 추가한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;alias_module&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # Redirect: Allows you to tell clients about documents that used to 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # exist in your server&amp;#39;s namespace, but do not anymore. The client 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # will make a new request for the document at its new location.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # Example:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # Redirect permanent /foo http://www.example.com/bar
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # Alias: Maps web paths into filesystem paths and is used to
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # access content that does not live under the DocumentRoot.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # Example:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # Alias /webpath /full/filesystem/path
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # If you include a trailing / on /webpath then the server will
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # require it to be present in the URL.  You will also likely
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # need to provide a &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;Directory&amp;gt;&lt;/span&gt; section to allow access to
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # the filesystem path.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Alias /data/ &amp;#34;C:/apache/data/&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;Directory&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#34;C:/apache/data&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Require all granted
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/Directory&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # ScriptAlias: This controls which directories contain server scripts. 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # ScriptAliases are essentially the same as Aliases, except that
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # documents in the target directory are treated as applications and
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # run by the server when requested rather than as documents sent to the
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # client.  The same rules about trailing &amp;#34;/&amp;#34; apply to ScriptAlias
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # directives as to Alias.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ScriptAlias /cgi-bin/ &amp;#34;${SRVROOT}/cgi-bin/&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;※ 디렉터리에 대한 권한이 필요하기 때문에 &amp;ldquo;Require all granted&amp;quot;를 설정하고 있다.&lt;/p&gt;
&lt;p&gt;브라우저를 시작하여 다음 URL에 접근한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;http://localhost/data/hello.html&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_alias.png&#34; alt=&#34;apache alias&#34;&gt;&lt;/p&gt;
&lt;p&gt;도큐먼트 루트 이외의 디렉터리에 설치된 파일에 대해 앨리어스(Alias)을 사용하여 외부에서 접근할 수 있게 되었다.&lt;/p&gt;
&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://httpd.apache.org/docs/2.4/en/mod/mod_alias.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://httpd.apache.org/docs/2.4/en/mod/mod_alias.html&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 콘텐츠의 설치 | MIME 타입 추가 (AddType)</title>
      <link>https://www.devkuma.com/docs/apache/mime-addtype/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/mime-addtype/</guid>
      <description>
        
        
        &lt;p&gt;Web 서버에 공개되는 파일은 텍스트 파일이나 HTML 파일만 가능한 것이 아니다. 이미지나 동영상 등 다양한 파일을 처리할 수 있다. 클라이언트에서 요청하는 파일에 대해 WWW 서버는 파일의 내용을 요청된 파일이 어떤 종류의 파일인지를 맞춰서 클라이언트에 반환을 하게 된다. 그에 따라 클라이언트는 받은 데이터를 적절한 표시 방법으로 처리를 하게 된다.&lt;/p&gt;
&lt;p&gt;기본 MIME 타입 및 확장자의 조합은 기본적으로 &amp;lsquo;mime.types&amp;rsquo;파일에 등록되어 있다. 이 파일 이름과 설치 디렉터리는 &amp;ldquo;TypesConfig&amp;quot;로 설정되어 있다.&lt;/p&gt;
&lt;p&gt;그러면 &amp;ldquo;httpd.conf&amp;quot;파일에서 &amp;ldquo;TypesConfig&amp;quot;로 검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;mime_module&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # TypesConfig points to the file containing the list of mappings from
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # filename extension to MIME-type.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    TypesConfig conf/mime.types
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;... 생략 ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;상대 경로로 지정되어 있기에 &amp;ldquo;ServerRoot&amp;quot;에 대한 상대 경로로 되어 있어, 실제의 파일은 &amp;ldquo;${SRVROOT}\conf\mime.types&amp;quot;이 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\Apache24\conf&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;dir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C 드라이브의 볼륨에는 이름이 없습니다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 볼륨 일련 번호: XXXX-XXXX
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C:\apache\Apache24\conf 디렉터리
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-11-26  오후 10:39    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-11-26  오후 10:39    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          ..
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-08-09  오후 11:50             1,820 charset.conv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-11-26  오후 10:39    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          extra
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-01  오후 11:41            20,686 httpd.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-08-09  오후 11:50            13,449 magic
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-08-09  오후 11:50            62,702 mime.types &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; 여기 있다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-05-28  오후 10:12            11,259 openssl.cnf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-11-26  오후 10:39    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          original
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               5개 파일             109,916 바이트
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               4개 디렉터리  456,097,648,640 바이트 남음
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\Apache24\conf&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;lsquo;mime.types&amp;rsquo;는 텍스트 파일이므로 텍스트 편집기에서 열어 일부분만 발췌해 보면 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# MIME type (lowercased)			Extensions
# ============================================	==========
application/json				json
text/css					css
text/csv					csv
text/html					html htm
text/plain					txt text conf def list log in
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;MIME 타입에 해당하는 확장자가 등록되어 있다. 예를 들어 &amp;ldquo;.html&amp;rdquo; 및 &amp;ldquo;.htm&amp;quot;확장자를 가진 파일은 MIME 형식이 &amp;ldquo;text/html&amp;quot;이 되고, &amp;ldquo;. txt&amp;rdquo; 및 &amp;ldquo;.log&amp;rdquo; 확장자를 가진 파일은 MIME 유형은 &amp;ldquo;text/plain&amp;quot;이 된다.&lt;/p&gt;
&lt;h2 id=&#34;mime-타입을-추가&#34;&gt;MIME 타입을 추가&lt;/h2&gt;
&lt;p&gt;이미 등록되어 있는 확장자 외에 다른 확장자에 대한 MIME 형식을 추가로 등록할 수 있다. 이 경우 &amp;ldquo;mime.types&amp;rdquo; 에 추가로 작성하는 대신에 &amp;ldquo;httpd.conf &amp;ldquo;파일에서 &amp;ldquo;AddType&amp;quot;를 사용하여 작성하는 것을 추천하고 있다.&lt;/p&gt;
&lt;p&gt;AddType MIME 유형 확장명
MIME 타입 및 확장자를 세트로 지정다.&lt;/p&gt;
&lt;p&gt;그러면 &amp;ldquo;httpd.conf&amp;quot;파일에서 &amp;ldquo;AddType&amp;quot;로 검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;IfModule mime_module&amp;gt;

... 생략...

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz
		
... 생략...

&amp;lt;/IfModule&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;예를 들면, PHP 파일 인 &amp;ldquo;.php&amp;rdquo; 및 &amp;ldquo;.phps&amp;quot;에 대한 MIME 타입 설정하려면 다음과 같이 작성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;IfModule mime_module&amp;gt;

... 생략 ...

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz

    AddType application/x-httpd-php .php
    AddType application/x-httpd-php-source .phps

... 생략 ...

&amp;lt;/IfModule&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://httpd.apache.org/docs/2.4/mod/mod_mime.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://httpd.apache.org/docs/2.4/mod/mod_mime.html&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 액세스(Access) 권한</title>
      <link>https://www.devkuma.com/docs/apache/access-permission/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/access-permission/</guid>
      <description>
        
        
        &lt;p&gt;Apache에서 공개된 콘텐츠에 대한 액세스(Access)  제한을 설정하는 방법에 대해 설명한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 액세스(Access) 권한 | 액세스 권한 설정 (Require)</title>
      <link>https://www.devkuma.com/docs/apache/access-require/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/access-require/</guid>
      <description>
        
        
        &lt;p&gt;액세스(Access) 권한 설정에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;액세스-권한-설정require&#34;&gt;액세스 권한 설정(Require)&lt;/h2&gt;
&lt;p&gt;Apache에서 사용되는 모든 파일을 대상으로 접근 제한을 설정할 수 있다. 접근 제한 구역 컨테이너 등을 사용하여 디렉터리 단위와 파일 단위로 설정할 수 있다.&lt;/p&gt;
&lt;p&gt;※ 섹션 컨테이너에 대해서는 &amp;ldquo;&lt;a href=&#34;https://www.devkuma.com/books/pages/1376&#34;&gt;접근 허용 범위 설정 (섹션 컨테이너)&lt;/a&gt;&amp;ldquo;를 참조한다.&lt;/p&gt;
&lt;p&gt;예를 들어 다음과 같이 작성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs&amp;#34;&amp;gt;
    Require all granted
    Require not ip 10.252.46.165
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;액세스 제한은 Require로 작성을 한다. all를 사용하여 모두 허용(granted) 하거나 모두 거부(denied)할 수 있다. 그리고 host, ip 를 사용하여 특정 호스트나 IP 주소에 대해 허용 및 거부할 수 있다.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;형식&lt;/th&gt;
          &lt;th&gt;의미&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Require all granted&lt;/td&gt;
          &lt;td&gt;모든 액세스 허용&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Require all denied&lt;/td&gt;
          &lt;td&gt;모든 액세스 거부&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Require ip IP-주소&lt;/td&gt;
          &lt;td&gt;해당 IP 주소 허용&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Require not ip IP-주소&lt;/td&gt;
          &lt;td&gt;해당 IP 주소 거부&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Require host 호스트&lt;/td&gt;
          &lt;td&gt;해당 호스트 허용&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Require not host 호스트&lt;/td&gt;
          &lt;td&gt;해당 호스트 거부&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;all&#34;&gt;all&lt;/h3&gt;
&lt;p&gt;&amp;ldquo;all&amp;quot;을 지정하면 모든 액세스가 적용된다. &amp;ldquo;Require all granted&amp;quot;이면 모든 액세스가 허용된다. &amp;ldquo;Require all denied&amp;quot;이면 모든 액세스가 거부된다.&lt;/p&gt;
&lt;h3 id=&#34;ip-주소&#34;&gt;IP 주소&lt;/h3&gt;
&lt;p&gt;IP 주소를 지정하는 경우 해당 IP 주소만 클라이언트에서 접근할 수 있다. &amp;ldquo;Require ip 192.168.1.1&amp;quot;이면 IP 주소 &amp;ldquo;192.168.1.1&amp;quot;에서의 접근만 허용된다.&lt;/p&gt;
&lt;p&gt;IP 주소를 작성하는 방법은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;192.168.1.2
192.168.1
192.168.1.0/255.255.255.0
192.168.1.0/24
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;1번째는 개별 IP 주소를 지정한다. 2번째로 작성하는 경우는 &amp;ldquo;192.168.1.0/24&amp;quot;에 해당한다. 세 번째와 네 번째는 넷 마스크를 사용한 작성 방식으로 &amp;ldquo;192.168.1.0 ~ 192.168.1.255&amp;quot;주소가 대상이 된다. (※ IP 주소에 대한 설명은 생략하겠다.)&lt;/p&gt;
&lt;h3 id=&#34;호스트&#34;&gt;호스트&lt;/h3&gt;
&lt;p&gt;호스트 또는 도메인로 지정할 수 있다. 접근한 IP 주소로부터 호스트를 가져온다. 호스트과 대상에 지정된 호스트나 도메인이 뒷부분이 일치하는 항목이 대상이 된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Require host devkuma.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;예를 들어, 위와 같이 작성한 경우에는 사용자가 접근한 IP 주소로 구한 호스트의 뒷부분이 &amp;ldquo;devkuma.com&amp;quot;와 일치하면 허용된다. 일치하는 예로는 &amp;ldquo;host1.devkuma.com&amp;rdquo; 라든가 &amp;ldquo;&lt;a href=&#34;https://www.sub.devkuma.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;www.sub.devkuma.com&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&amp;rdquo; 등과 같이  뒤부분이 일치하는 것이다.&lt;/p&gt;
&lt;h2 id=&#34;설정의-우선-순위&#34;&gt;설정의 우선 순위&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;Directory&amp;gt;&lt;/code&gt;를 사용한 디렉터리에 대한 액세스 제한 설정하면 지정된 디렉터리 및 모든 하위 디렉터리가 대상이 된다. 예를 들어 하위 디렉터리에 대해 다른 액세스 제한 설정한 경우에는 하위 디렉터리에 대한 설정에 의해 덮어 쓰여 진다.&lt;/p&gt;
&lt;p&gt;그럼 기본 설정이 어떻게 되어 있는지를 &amp;ldquo;httpd.conf&amp;quot;파일에서 살펴 보자. 액세스 제한된 일부분만 발췌하면 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory /&amp;gt;
    AllowOverride none
    Require all denied
&amp;lt;/Directory&amp;gt;

&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs&amp;#34;&amp;gt;
    Options Indexes FollowSymLinks
    AllowOverride None
    Require all granted
&amp;lt;/Directory&amp;gt;

&amp;lt;Files &amp;#34;.ht*&amp;#34;&amp;gt;
    Require all denied
&amp;lt;/Files&amp;gt;

&amp;lt;Directory &amp;#34;${SRVROOT}/cgi-bin&amp;#34;&amp;gt;
    AllowOverride None
    Options None
    Require all granted
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;먼저 루트 디렉터리 &amp;ldquo;/&amp;ldquo;에 대해 모든 액세스를 거부하도록 설정되어 있다. 앞에서 설명했듯이 디렉터리에 대한 권한 설정은 모든 하위 디렉터리도 포함되어 있기에 루트 디렉터리에 대한이 설정은 Apache에 포함된 모든 파일에 대한 액세스가 거부로 설정된다.&lt;/p&gt;
&lt;p&gt;다음 도큐먼트 루트인 &amp;ldquo;${SRVROOT}/htdocs&amp;rdquo; 디렉터리에 모든 액세스가 허용으로 설정되어 있다. 도큐먼트 루트의 디렉터리 및 하위 디렉터리는 외부에 공개되기에 액세스를 허용해 두어야 한다.&lt;/p&gt;
&lt;p&gt;그리고 먼저 작성한 대로 하위 디렉터리에 대한 설정에 의해 덮어 쓰여져서 루트 디렉터리에 설정된 &amp;ldquo;모두 거부&amp;rdquo; 설정은 도큐먼트 루트의 하위 디렉터리에 대해 &amp;ldquo;모든 권한&amp;quot;에 덮어 쓰여 진다.&lt;/p&gt;
&lt;p&gt;또한 &amp;ldquo;cgi-bin&amp;quot;디렉터리도 모든 액세스가 허용되고 있다. 이 디렉터리는 CGI 등이 위치하는 디렉터리이다.&lt;/p&gt;
&lt;p&gt;Files를 사용하여 &amp;ldquo;.ht*&amp;ldquo;로 와이드카드에 해당되는  모든 파일에 대한 모든 액세스가 거부되어 있다. 이는 위치되어 있는 디렉터리에 관계없이 &amp;ldquo;.htaccess&amp;quot;라고 파일은 외부에서 접근할 수 없도록하기 위한 것이다. &amp;ldquo;.htaccess&amp;rdquo; 액세스 제한을 작성한 특별한 파일로별도로 다른 페이지에서 자세히 살펴 보겠다.&lt;/p&gt;
&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://httpd.apache.org/docs/2.4/upgrading.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://httpd.apache.org/docs/2.4/upgrading.html&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://httpd.apache.org/docs/2.4/howto/access.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://httpd.apache.org/docs/2.4/howto/access.html&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 액세스(Access) 권한 | 링크 제한 (SetEnvIf, Referer)</title>
      <link>https://www.devkuma.com/docs/apache/access-setenvif-referer/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/access-setenvif-referer/</guid>
      <description>
        
        
        &lt;h3 id=&#34;링크-제한-setenvif-referer&#34;&gt;링크 제한 (SetEnvIf, Referer)&lt;/h3&gt;
&lt;p&gt;클라이언트의 요청 헤더에는 &amp;ldquo;Referer&amp;quot;라는 정보가 포함되어 있는 경우가 있다. 이것은 어디서 링크가 되었는지에 대한 URL에 대한 정보가 포함되어 있다.&lt;/p&gt;
&lt;p&gt;직접 URL를 입력하여 액세스하여 Referer 정보가 포함되지 않은 경우에는 액세스 제한을 걸 수 있다.&lt;/p&gt;
&lt;p&gt;먼저 &amp;ldquo;SetEnvIf&amp;quot;를 사용하여 환경 변수를 설정한다. 이번에는 &amp;ldquo;Referer&amp;quot;를 체크하고 조건을 충족하는 경우에 설정하는 환경 변수를 정의한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SetEnvIf Referer 링크가-발생한-정보 설정하는-환경-변수
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;헤더에 포함된 &amp;ldquo;Referer&amp;quot;를 확인하여 올바르게 링크가 되었는지 비교한다. 올바른 경우에는 환경 변수를 설정한다. 구체적인 예를 들면 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SetEnvIf Referer &amp;#34;http://localhost&amp;#34; local_referal
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 경우에는 해당 파일에 대한 액세스 Referer를 체크하고 &amp;ldquo;http://localhost&amp;quot;에서 링크로 액세스가 있었는지 여부를 확인한다. 만약 맞다면 환경 변수에 &amp;ldquo;check&amp;quot;라는 이름의 환경 변수를 설정한다. (check는 예이다. 임의로 환경 변수를 설정할 수 있다.)&lt;/p&gt;
&lt;p&gt;그리고 &amp;ldquo;Require&amp;quot;으로 환경 변수가 설정되어 있는지를 확인하도록 한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Require env check
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위에서는 IP 주소 등의 정보 대신에 환경 변수 &amp;ldquo;check&amp;quot;가 설정되어 있으면 허용한다는 설정이 된다.&lt;/p&gt;
&lt;h2 id=&#34;실습&#34;&gt;실습&lt;/h2&gt;
&lt;p&gt;그럼 실습으로 사용해 보도록 하자. 먼저 &amp;ldquo;img&amp;quot;디렉터리에 포함된 파일에 대해 &amp;ldquo;http://localhost&amp;quot;로 시작하는 파일에서 링크를 통해 요청이 있을 경우에만 액세스를 허용하도록 설정하려고 한다.&lt;/p&gt;
&lt;p&gt;우선 다음과 같이 HTML 파일을 도큐먼트 루트에 생성한다.&lt;/p&gt;
&lt;p&gt;referer.html&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Referer Test&amp;lt;/h1&amp;gt;
&amp;lt;img src=&amp;#34;./img/devkuma.png&amp;#34;&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그리고 도큐먼트 루트에 &amp;ldquo;img&amp;rdquo; 디렉터리를 생성하고 그 안에 &amp;ldquo;devkuma.png&amp;quot;라는 파일명으로 아무 이미지 파일을 넣는다.&lt;/p&gt;
&lt;p&gt;아무 설정을하지 않은 경우에는 &amp;ldquo;http://localhost/referer.html&amp;quot;를 입력한 경우와 &amp;ldquo;http://localhost/img/referer.png&amp;quot;라고 이미지 파일을 직접 URL을 입력한 경우에도 아무 문제없이 표시가 된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_referer1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_referer2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;그럼 직접 링크하는 경우를 제한하기 위해 &amp;ldquo;httpd.conf&amp;quot;파일의 마지막 부근에 아래와 같이 내용을 추가한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SetEnvIf Referer &amp;#34;^http://localhost&amp;#34; local_referal
&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs/img&amp;#34;&amp;gt;
    Require all denied
    Require env local_referal
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;도큐먼트 루트 아래에 있는 &amp;ldquo;img&amp;rdquo; 디렉터리에 대한 액세스 제한을 하고 있다. Referer를 확인하고  Referer의 앞부분이 &amp;ldquo;http://localhost&amp;quot;인  경우에만 액세스를 허용한다.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;http://localhost/referer.html&amp;quot;를 입력하면 HTML 파일 중에 &amp;ldquo;img&amp;rdquo; 디렉터리에 있는 이미지 파일이 요청된다. 이 경우 이미지 파일의 Referer는 &amp;ldquo;http://localhost/referer.html&amp;quot;가 되므로 액세스가 허용된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_referer1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;그러고 &amp;ldquo;http://localhost/img/devkuma.jpg&amp;quot;를 직접 URL을 입력하면 Referer가 설정되지 않기 때문에 액세스가 허용되지 않아 표시되지 않는다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_referer3.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;이것으로 Referer를 사용하여 액세스 제한을 어느 정도의 링크 제한을 걸 수 있게 되었다. 어느 정도는 Referer를 원래 보내 오지 않는 브라우저도 있고, 보안 소프트웨어에 따라 Referer를 끄는 경우도 있다. 이와 같은 경우는 클라이언트에서 액세스할 수 없게 된다. 또한 Referer를 위조 할 수 있는 것도 있으므로 Referer에 의한 액세스 제한은 절대적이라고는 할 수 없다.&lt;/p&gt;
&lt;p&gt;이와 관련하여 보안 소프트웨어 대응으로 Referer가 없는 경우에도 액세스를 허용하려면 다음과 같이 작성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SetEnvIf Referer &amp;#34;^http://localhost&amp;#34; local_referal
SetEnvIf Referer &amp;#34;^$&amp;#34; local_referal
&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs/img&amp;#34;&amp;gt;
    Require all denied
    Require env local_referal
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 작성되면 직접 URL을 입력한 경우에도 허용되긴 하지만, 다른 서버에 있는 HTML 파일에서 직접 이미지에만 링크를 붙여 표시하는 것을 제한할 수 있다 .&lt;/p&gt;
&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ko.wikipedia.org/wiki/HTTP_%EB%A6%AC%ED%8D%BC%EB%9F%AC&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://ko.wikipedia.org/wiki/HTTP_리퍼러&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://httpd.apache.org/docs/2.4/en/env.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://httpd.apache.org/docs/2.4/en/env.html&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 액세스(Access) 권한 | 기본 인증 설정 (AuthType)</title>
      <link>https://www.devkuma.com/docs/apache/access-authtype/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/access-authtype/</guid>
      <description>
        
        
        &lt;h2 id=&#34;인증-설정&#34;&gt;인증 설정&lt;/h2&gt;
&lt;p&gt;특정 디렉터리에 있는 파일이나 URL에 사용자 이름 및 비밀번호에 의한 기본 인증을 구성하는 방법을  설명한다. 인증 설정은 많은 설정이 필요하므로 하나 하나 설명하도록 하겠다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;AuthType 인증-방식
AuthName 인증-영역
AuthUserFile 암호-파일
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Apache에서 사용 가능한 인증 방법은 기본 인증(Basic) 또는 다이제스트 인증 (Digest)이다. 먼저 어느 인증 방식을 사용할지를 &amp;ldquo;AuthType&amp;quot;으로 설정한다. 기본 인증을 사용하는 경우의 설정은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;AuthType Basic
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;다음은 인증 영역 이름을 지정한다. 이것은 인증을 구별하기 위한 것으로 인증시 영역 이름이 같으면 브라우저 같은 &amp;ldquo;Authorization&amp;rdquo; 헤더를 보낸다. (자세한 내용은 별도로 설명한다.)&lt;/p&gt;
&lt;p&gt;이 영역 이름에 작성한 문자열이 인증 대화 상자에 표시되는 문자열이다. &amp;ldquo;사용자명과 비밀번호를 입력하세요.&amp;ldquo;라고 표시할 경우에는 다음과 같이 작성한다. (비록 이렇게 작성을 하긴 하지만, 본래의 의미는 영역 이름이기에 인증에 대해 서로 다른 문자열로하는 것이 바람직하다고 생각된다.) 단, 브라우저에 따라 표시가 되지 않을 수도 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;AuthName &amp;#34;사용자명과 비밀번호를 입력하세요.&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;다음은 사용자 인증을 위한 사용자 이름과 암호가 등록되어있는 파일을 &amp;ldquo;AuthUserFile&amp;quot;로 지정한다. 이번 비밀번호 파일을 &amp;ldquo;C:\apache\passwd\passfile&amp;quot;로 한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;AuthUserFile &amp;#34;C:/apache/password/pw&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;허가하는-사용자-지정&#34;&gt;허가하는 사용자 지정&lt;/h2&gt;
&lt;p&gt;인증을 통과한 모든 사용자에게 액세스를 허용할 수도 있으며,  허가하는 사용자를 지정할 수도 있다 (인증을 통과하고 권한이 있는 사용자와 일치해야 한다.) 허가된 사용자 설정에 &amp;ldquo;Require&amp;quot;를 사용한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Require 옵션 사용자명1 사용자명2 ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;먼저 옵션은 &amp;ldquo;user&amp;rdquo; 또는 &amp;ldquo;group&amp;quot;을 지정한다. 허가의 대상이 사용자 단위이면 &amp;ldquo;user&amp;quot;를 그룹 단위이면 &amp;ldquo;group&amp;quot;을 지정한다. (그룹에 대해서 다른 페이지에서 설명하도록 하겠다.)&lt;/p&gt;
&lt;p&gt;그리고 부여할 사용자명을 공백으로 구분한다. 예를 들어 수있는 사용자를 &amp;ldquo;devkuma&amp;rdquo;, &amp;ldquo;kimkc&amp;rdquo;, &amp;ldquo;araikuma&amp;quot;의 3개로 하려면 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Require user devkuma kimkc araikuma
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그리고 인증을 통과한 모든 사용자의 액세스를 허용하려면 다음과 같이 작성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Require valid-user
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이와 같이 사용자명이나 그룹에 액세스를 허용하기위한 비밀번호 파일 전체에서 하나만 생성 해두고, 그 위에 별도의 디렉터리별로 접근을 허용할 사용자와 그룹을 지정할 수 있다 .&lt;/p&gt;
&lt;h2 id=&#34;인증-대화-상자-표시&#34;&gt;인증 대화 상자 표시&lt;/h2&gt;
&lt;p&gt;그러면 비밀번호 파일 작성하기 전에 인증 대화 상자가 표시되는 것까지 확인해 보자.&lt;/p&gt;
&lt;p&gt;먼저 도큐먼트 루트에 &amp;ldquo;admin&amp;quot;란 디렉터리를 만들고 admin.html 을 생성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;Admin&amp;lt;/h1&amp;gt;
This is Admin page.
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그리고 기본 인증을 설정한다. 아래 내용을 &amp;ldquo;httpd.conf&amp;rdquo; 어딘가에 추가한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs/admin&amp;#34;&amp;gt;
    AuthType Basic
    AuthName &amp;#34;사용자명과 비밀번호를 입력하세요.&amp;#34;
    AuthUserFile &amp;#34;C:/apache/passwd/passfile&amp;#34;
    Require valid-user
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그러면 Apache를 다시 시작하여 &amp;ldquo;http://localhost/admin/admin.html&amp;quot;에 액세스한다.&lt;/p&gt;
&lt;p&gt;크롬에서 접속한 경우&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_authtype1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Edge에서 접속한 경우&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_authtype2.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;사용자명과 비밀번호를 입력을 요구하는 인증 대화 상자가 표시되었다.&lt;/p&gt;
&lt;p&gt;그럼 다음 페이지에서 사용자명과 비밀번호를 등록하는 비밀번호 파일 작성에 대해 설명하겠다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 액세스(Access) 권한 | 비밀번호 파일 생성 (htpasswd)</title>
      <link>https://www.devkuma.com/docs/apache/access-htpasswd/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/access-htpasswd/</guid>
      <description>
        
        
        &lt;p&gt;사용자 인증시 참조되는 비밀번호 파일을 생성하고, 거기에 새로 사용자도 추가해 본다.&lt;/p&gt;
&lt;h2 id=&#34;비밀번호-파일-생성-실행-명령어&#34;&gt;비밀번호 파일 생성 실행 명령어&lt;/h2&gt;
&lt;p&gt;사용자 인증시 참조되는 파일이 비밀번호 파일이다. 사용자 이름과 비밀번호가 쌍으로 등록되어 있다. 비밀번호 파일은 실제로 텍스트 파일인데 작성하려면 Apache에서 제공되는 &amp;ldquo;htpasswd.exe&amp;quot;를 사용하여 만든다.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;htpasswd.exe&amp;quot;파일은 &amp;ldquo;(Apache가 설치되어 있는 디렉터리)\Apache24\bin&amp;quot;에 포함되어 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;dir
 C 드라이브의 볼륨에는 이름이 없습니다.
 볼륨 일련 번호: XXXX-XXXX

 C:\apache\Apache24\bin 디렉터리

2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          .
2019-11-26  오후 10:39    &amp;lt;DIR&amp;gt;          ..
2019-08-09  오후 11:47            97,280 ab.exe
2019-08-09  오후 11:47           109,056 abs.exe
2019-08-09  오후 11:47            41,984 ApacheMonitor.exe
2019-08-09  오후 11:47            18,432 apr_crypto_openssl-1.dll
2019-08-09  오후 11:47            31,232 apr_dbd_odbc-1.dll
2019-08-09  오후 11:47            14,848 apr_ldap-1.dll
2019-08-09  오후 11:50             9,192 dbmmanage.pl
2019-08-09  오후 11:47           100,352 htcacheclean.exe
2019-08-09  오후 11:47           123,392 htdbm.exe
2019-08-09  오후 11:47            84,992 htdigest.exe
2019-08-09  오후 11:47           117,760 htpasswd.exe &amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; 여기 있다.
2019-08-09  오후 11:50            29,696 httpd.exe
2019-08-09  오후 11:47            65,024 httxt2dbm.exe

... 생략 ...

2019-04-05  오후 07:30            86,016 zlib1.dll
              30개 파일           9,142,248 바이트
               3개 디렉터리  453,122,154,496 바이트 남음

C:\apache\Apache24\bin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Windows에서 실행하려면 명령 프롬프트에서 실행해야 한다. 실행 형식은 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;htpasswd 옵션 비밀번호-파일 사용자명
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;생성하려는 비밀번호 파일을 지정하고, 추가할 사용자명을 지정한다. 비밀번호 파일을 새로 만들려면 옵션 &amp;ldquo;-c&amp;quot;를 지정한다. 기존에 있는 비밀번호 파일에 사용자를 추가하는 경우에는 옵션에 아무것도 지정하지 않는다.&lt;/p&gt;
&lt;p&gt;비밀번호 신규 생성하는 경우:&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;htpasswd -c &amp;#34;C:\apache\passwd\passfile&amp;#34; devkuma
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;사용자 추가하는 경우 :&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;htpasswd &amp;#34;C:\apache\passwd\passfile&amp;#34; kimkc
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;새-비밀번호-파일-생성&#34;&gt;새 비밀번호 파일 생성&lt;/h2&gt;
&lt;p&gt;그럼 새 비밀번호 파일 생성해 보자. 먼저 명령 프롬프트를 열어 &amp;ldquo;(Apache가 설치되어있는 디렉터리)\Apache24\bin&amp;quot;로 이동하고, &amp;ldquo;htpasswd -c &amp;ldquo;C:\apache\passwd\passfile&amp;rdquo; devkuma&amp;rdquo; 명령어를 입력하여 실행한다.&lt;/p&gt;
&lt;p&gt;명령어를 실행 전 생성하는 파일의 디렉터리가 생성되어 있어야 한다. 디렉터리가 없으면 아래와 같이 에러가 발생한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;htpasswd -c &amp;#34;C:\apache\passwd\passfile&amp;#34; devkuma
htpasswd: cannot create file C:\apache\passwd\passfile
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;명령어를 실행해서 문제가 없다면 아래와 같이 비밀번호를 입력란이 표시된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;htpasswd -c &amp;#34;C:\apache\passwd\passfile&amp;#34; devkuma
New password: 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;추가할 사용자의 신규 비밀번호를 입력을 한다. 그러면 확인을 위해 다시 비밀번호 입력란이 표시된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;htpasswd -c &amp;#34;C:\apache\passwd\passfile&amp;#34; devkuma
New password: ****
Re-type new password: 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;신규 비밀번호와 동일한 비밀번호를 입력한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;htpasswd -c &amp;#34;C:\apache\passwd\passfile&amp;#34; devkuma
New password: ****
Re-type new password: ****
Adding password for user devkuma

C:\apache\Apache24\bin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;확인까지 제대로 입력이 되었다면, 이제 새 비밀번호 파일이 생성되고 계정 하나가 추가되었다.&lt;/p&gt;
&lt;h2 id=&#34;사용자-추가&#34;&gt;사용자 추가&lt;/h2&gt;
&lt;p&gt;이미 생성된 비밀번호 파일에 사용자를 추가하기 위해 &amp;ldquo;-c&amp;quot;를 붙이지 않고 실행한다. &amp;ldquo;-c&amp;quot;을 붙이면 새 암호 파일을 새로 생성되어, 기존에 등록된 사용자 정보가 없어지기에 주의하도록 하자.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;htpasswd &amp;#34;C:\apache\passwd\passfile&amp;#34; kimkc
New password: ****
Re-type new password: ****
Adding password for user kimkc

C:\apache\Apache24\bin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;명령어를 입력하는 방법은 새로 비밀번호 파일 생성하는 방법과 동일하다.&lt;/p&gt;
&lt;h2 id=&#34;암호-파일-확인&#34;&gt;암호 파일 확인&lt;/h2&gt;
&lt;p&gt;그러면 생성된 암호 파일의 내용을 확인해 보자. 텍스트 파일이므로 텍스트 편집기으로 열어 볼 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;devkuma:$apr1$H.4gZ1un$LTl9FvfcbxRrRKfqZ4Txy0
kimkc:$apr1$/P6swipC$60iAhelYy/0i6bVbhPHy5/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;현재 &amp;ldquo;devkuma&amp;quot;와 &amp;ldquo;kimkc&amp;rdquo;  이렇게 2개의 계정이 생성되어 있다. 비밀번호는 암호화되어 저장되어 있기에 내용은 알 수 없다.&lt;/p&gt;
&lt;h2 id=&#34;사용자-삭제&#34;&gt;사용자 삭제&lt;/h2&gt;
&lt;p&gt;사용자 삭제는 다른 암호 파일에서 해당 행을 삭제해도 되지만, &amp;ldquo;- D&amp;rdquo; 옵션으로 실행하여 사용자의 삭제가 가능하다. 실행 형식은 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;htpasswd -D 비밀번호-파일 사용자명
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그럼 kimkc 계정을 삭제해 보도록 하겠다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;htpasswd -D &amp;#34;C:\apache\passwd\passfile&amp;#34; kimkc
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;htpasswd -D &amp;#34;C:\apache\passwd\passfile&amp;#34; kimkc
Deleting password for user kimkc

C:\apache\Apache24\bin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;kimkc&amp;quot;가 삭제되었다. 확인을 위해 비밀번호 파일을 열어 본다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;devkuma:$apr1$H.4gZ1un$LTl9FvfcbxRrRKfqZ4Txy0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;kimkc&amp;quot;행이 삭제된 것을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;이것으로 비밀번호 파일이 준비되었다. 다음 페이지에서 인증을 실행해 보도록 하자.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 액세스(Access) 권한 | 인증 실행</title>
      <link>https://www.devkuma.com/docs/apache/%EC%9D%B8%EC%A6%9D-%EC%8B%A4%ED%96%89/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EC%9D%B8%EC%A6%9D-%EC%8B%A4%ED%96%89/</guid>
      <description>
        
        
        &lt;h2 id=&#34;인증-실행&#34;&gt;인증 실행&lt;/h2&gt;
&lt;p&gt;인증이 필요한 페이지에 접근하려고 하면 서버 측은 &amp;ldquo;Authorization&amp;quot;라는 헤더가 브라우저의 요청에 포함되어 있는지 확인한다. 처음 접근할 때에는 &amp;ldquo;Authorization&amp;rdquo; 헤더가 없기 때문에 브라우저에 인증이 필요하다고 알린다.&lt;/p&gt;
&lt;p&gt;알림를 받은 브라우저는 인증 대화 상자를 표시하고 입력된 사용자명과 비밀번호로 &amp;ldquo;Authorization&amp;rdquo; 헤더를 만들고 다시 Web 서버에 &amp;ldquo;Authorization&amp;rdquo; 헤더가 포함하여 요청을 보낸다.&lt;/p&gt;
&lt;p&gt;서버 측에서는 보내온 &amp;ldquo;Authorization&amp;rdquo; 헤더를 인증하고, 인증을 통과하면 페이지를 표시하고, 인증을 통과하지 못하면 브라우저 측에 다시 인증이 필요함을 알린다. 즉, 인증 대화 상자는 서버가 표시하는 것이 아니라, 서버로 부터 알림을 받은 브라우저가 &amp;ldquo;Authorization&amp;rdquo; 헤더를 생성하기 위해 표시하고 있는 것이다.&lt;/p&gt;
&lt;p&gt;그러면 실제로 인증 대화에 등록한 사용자명과 암호를 입력해 본다. &amp;ldquo;http://localhost/admin/admin.html&amp;quot;에 액세스한다. (인증의 설정에 대해서는 &amp;ldquo;&lt;a href=&#34;https://www.devkuma.com/books/pages/1386&#34;&gt;기본 인증 설정 (AuthType)&lt;/a&gt;&amp;ldquo;를 참조한다).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_auth1.png&#34; alt=&#34;인증 실행&#34;&gt;&lt;/p&gt;
&lt;p&gt;인증 대화 상자가 열리므로,  비밀번호 파일에 등록된 사용자와 암호를 입력한다. 입력된 값이 암호 파일에 등록된 사용자명과 비밀번호가 맞다면 인증을 통과하고 페이지가 표시된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_auth2.png&#34; alt=&#34;인증 실행&#34;&gt;&lt;/p&gt;
&lt;p&gt;브라우저는 다른 인증이 필요한 페이지에 대한 요청을 서버에 보내는 경우에도 &amp;ldquo;AuthName&amp;quot;이 같다면 브라우저가 닫힐 때까지 같은 &amp;ldquo;Authorization&amp;rdquo; 헤더로 Web 서버에 요청을 하도록 되어 있다.&lt;/p&gt;
&lt;p&gt;그러기에 동일한 영역 이름이 설정되어 인증이 필요한 페이지를 이동하게 하면 처음부터 &amp;ldquo;Authorization&amp;rdquo; 헤더가 포함되어 있어 그 인증이 통과된다. 그래서 일단 인증이 통과하면 동일한 인증이 필요한 다른 페이지를 다시 인증할 수 없음을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_auth3.png&#34; alt=&#34;인증 실행&#34;&gt;&lt;/p&gt;
&lt;p&gt;위에 페이지는 먼저 인증을 통과한 페이지와 같은 디렉터리에 있는 다른 페이지이다. 이 페이지도 같은 디렉터리에 대한 인증이 필요하지만, 이미 인증이 통과되어 &amp;ldquo;Authorization&amp;rdquo; 헤더가 포함된 상태이기에 인증을 다시 하지 않는다.&lt;/p&gt;
&lt;h2 id=&#34;인증에-실패했을-경우&#34;&gt;인증에 실패했을 경우&lt;/h2&gt;
&lt;p&gt;인증 대화 상자가 열려 사용자와 비밀번호를 입력하였을때, 입력이 잘못되었거나 입력된 값이 비밀번호 파일에 등록되어 있지 않는 경우에는 서버 측에서 브라우저로 다시 인증이 필요하다고 알린다. 이는 처음에 &amp;ldquo;Authorization&amp;rdquo; 헤더가 없었을 때와 동일한 동작이다. 그래서 다시 인증 대화 상자를 브라우저가 열려 새로운 &amp;ldquo;Authorization&amp;rdquo; 헤더를 포함해서 서버에 요청을 하려고 한다.&lt;/p&gt;
&lt;p&gt;인증에 성공할 때까지 반복되지만 결국 인증을 포기하고, 대화 상자에 &amp;ldquo;취소&amp;quot;버튼을 클릭하면 브라우저는 인증이 필요하다는 오류 메시지를 표시하고 Web 서버에 페이지 조회 요청을 보내는 것을 포기하게 된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_auth4.png&#34; alt=&#34;인증 실행&#34;&gt;&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 액세스(Access) 권한 | 그룹 단위로 인증</title>
      <link>https://www.devkuma.com/docs/apache/%EA%B7%B8%EB%A3%B9-%EB%8B%A8%EC%9C%84%EB%A1%9C-%EC%9D%B8%EC%A6%9D/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EA%B7%B8%EB%A3%B9-%EB%8B%A8%EC%9C%84%EB%A1%9C-%EC%9D%B8%EC%A6%9D/</guid>
      <description>
        
        
        &lt;p&gt;&amp;ldquo;Require&amp;quot;를 사용하여 접근할 수 있는 사용자를 설정할 시에 사용자가 적은 경우는 나열을 해도 상관 없지만, 미리 사용자를 그룹에 등록해 고, 그룹 단위로 접근을 허용할 수 있다. 그러면 그룹에 포함된 사용자는 인증이 통과하면 접근이 허용되는 것이다.&lt;/p&gt;
&lt;p&gt;먼저 그룹명과 그룹에 속한 사용자를 작성하는 그룹 파일을 만든다.&lt;/p&gt;
&lt;h2 id=&#34;그룹-파일-생성&#34;&gt;그룹 파일 생성&lt;/h2&gt;
&lt;p&gt;비밀번호 파일의 경우는 Apache에서 &amp;ldquo;htpasswd.exe&amp;quot;라고 도구가 준비되어 있지만, 그룹 파일에는 그러한 도구는 준비되어 있지 않다. 그룹 파일은 단순한 텍스트 파일이기에 텍스트 편집기에서 작성을 한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;그룹명1: 사용자명1 사용자명2 사용자명3 ...
그룹명2: 사용자명1 사용자명4 ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그룹 파일에 등록하는 그룹마다 한 줄로 작성한다. 그룹명 뒤에 콜론(:)으로 구분하여 그룹에 등록하는 사용자 이름을 작성한다. 사용자명은 공백으로 구분하여 이어서 작성한다.&lt;/p&gt;
&lt;p&gt;여기서는 그룹 파일명은 &amp;ldquo;C:\apache\passwd\ group&amp;quot;라고 지정하겠다. 이번에 생성하는 그룹 파일은 다음과 같다.&lt;/p&gt;
&lt;p&gt;group&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;admin: devkuma kimkc
user: araikuma
other: happykuma
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;authgroupfile을-지정&#34;&gt;AuthGroupFile을 지정&lt;/h2&gt;
&lt;p&gt;다음은 &amp;ldquo;httpd.conf&amp;rdquo; 파일에 &amp;ldquo;AuthGroupFile&amp;quot;를 사용하여 그룹 파일명을 지정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;AuthGroupFile 그룹명
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;앞에서 생성한 그룹 파일을 지정은 다음과 같이 하면 된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;AuthGroupFile &amp;#34;C:/apache/passwd/group&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpdconf에-작성-방법&#34;&gt;httpd.conf에 작성 방법&lt;/h2&gt;
&lt;p&gt;그룹 파일는 어디까지나 사용자를 한번에 관리하는 위한 것이므로, 인증은 사용자 단위로 이루어진다. 그러므로 &amp;ldquo;AuthGroupFile&amp;quot;는 사용자 인증을 위한 설정 중에 하나로서 작성이 된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs/admin&amp;#34;&amp;gt;
    AuthType Basic
    AuthName &amp;#34;사용자명과 비밀번호를 입력하세요.&amp;#34;
    AuthUserFile &amp;#34;C:/apache/passwd/passfile&amp;#34;
    AuthGroupFile &amp;#34;C:/apache/passwd/group&amp;#34;
    Require group admin user
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;Require&amp;quot;에 대한 옵션에 &amp;ldquo;group&amp;quot;을 지정하고, 이어서 접근를 허용할 그룹을 공백으로 구분하여 작성한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;※ 사용자의 경우에는 모든 사용자를 허용하는 &amp;ldquo;valid-user&amp;quot;라고 작성을 하였지만, 그룹의 경우는 그렇지 않기에 하나 하나 작성할 수 밖에 없다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;그럼 그룹을 사용한 인증을 해보도록 하겠다. 그러면 인증이 설정되어 있는 디렉터리에 포함된 &amp;ldquo;http://localhost/admin/admin.html&amp;quot;에 브라우저로 접근한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_group_auth1.png&#34; alt=&#34;그룹을 사용한 인증&#34;&gt;&lt;/p&gt;
&lt;p&gt;그룹명에 의해 인증을 설정된 경우에도 브라우저에 표시되는 인증 대화 상자는 동일하다. 권한이 설정되어 있는 그룹에 포함된 사용자명으로 인증을 통과하면 해당 페이지가 표시된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_group_auth2.png&#34; alt=&#34;그룹을 사용한 인증&#34;&gt;&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 액세스(Access) 권한 | IP 주소 제한 및 사용자 인증의 조합</title>
      <link>https://www.devkuma.com/docs/apache/ip-%EC%A3%BC%EC%86%8C-%EC%A0%9C%ED%95%9C-%EB%B0%8F-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9D%B8%EC%A6%9D%EC%9D%98-%EC%A1%B0%ED%95%A9/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/ip-%EC%A3%BC%EC%86%8C-%EC%A0%9C%ED%95%9C-%EB%B0%8F-%EC%82%AC%EC%9A%A9%EC%9E%90-%EC%9D%B8%EC%A6%9D%EC%9D%98-%EC%A1%B0%ED%95%A9/</guid>
      <description>
        
        
        &lt;p&gt;&amp;ldquo;Require&amp;quot;를 사용하여 IP 주소 및 도메인의 제한을 설정하는 방법과 사용자명과 비밀번호를 사용하는 사용자 인증을 수행하는 방법을 하나의 디렉터리에 모두 지정할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs/admin&amp;#34;&amp;gt;
    Require all granted
    Require ip 192.168.1.0/24
		
    AuthType Basic
    AuthName &amp;#34;사용자명과 비밀번호를 입력하세요.&amp;#34;
    AuthUserFile &amp;#34;C:/apache/passwd/passfile&amp;#34;
    Require valid-user
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 두 방식으로 액세스 제한이 설정되어 있으면, 기본적으로 두 조건을 모두 만족하는 경우에만 액세스가 허용된다. 즉, IP 주소도 지정 주소에서 접근이면서, 사용자 인증을 통과한 경우를 말한다.&lt;/p&gt;
&lt;p&gt;Apache에서는 어느 하나의 조건만 맞다면 액세스를 허용하도록 설정하는 것도 가능하다. 즉, IP 주소가 조건에 맞는다면 무조건 접근을 허용하고 지정된 IP 주소가 아니라면 사용자 인증해야 한다. 이는 사내에서 자유롭게 볼 수 있지만, 외부에서 볼 경우에 액세스 인증이 해야만 하는 경우를 생각할 수 있다.&lt;/p&gt;
&lt;p&gt;설정하려면 &amp;ldquo;&lt;code&gt;&amp;lt;RequireAny&amp;gt;&lt;/code&gt;&amp;ldquo;으로 설정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;RequireAny&amp;gt;
....
&amp;lt;/RequireAny&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그리고 &amp;ldquo;&lt;code&gt;&amp;lt;RequireAll&amp;gt;&lt;/code&gt;&amp;ldquo;로 설정하면, 특별히 아무것도 지정되지 않은 경우와 동일하게 두 조건이 충족된 경우에만 액세스가 허용된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;RequireAll&amp;gt;
...
&amp;lt;/RequireAll&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이는 다음과 같이 작성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs/admin&amp;#34;&amp;gt;
    &amp;lt;RequireAll&amp;gt;
    Require all granted
    Require ip 192.168.1.0/24
		
    AuthType Basic
    AuthName &amp;#34;사용자명과 비밀번호를 입력하세요.&amp;#34;
    AuthUserFile &amp;#34;C:/apache/passwd/passfile&amp;#34;
    Require valid-user
    &amp;lt;/RequireAll&amp;gt;
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 액세스(Access) 권한 | 다이제스트 인증 설정 (htdigest)</title>
      <link>https://www.devkuma.com/docs/apache/access-htdigest/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/access-htdigest/</guid>
      <description>
        
        
        &lt;p&gt;기본(basic) 인증은 거의 모든 브라우저에서 사용할 수 있지만, 사용자명과 비밀번호 정보를 서버에 전송할 때 일반(Plain) 텍스트로 전송되므로 만약 통신 내용을 중간에 가로채면 사용자명과 비밀번호를 노출이 되어 버린다.&lt;/p&gt;
&lt;p&gt;그래서 브라우저와 서버간에 이루어지는 통신에서 흐르는 정보를 MD5로 암호화하고 통신하는 방식이 다이제스트 인증이다.&lt;/p&gt;
&lt;p&gt;설정 방법은 기본 인증의 경우와 비슷하다. 순서대로 살펴 보도록 하자.&lt;/p&gt;
&lt;h2 id=&#34;비밀번호-파일-생성&#34;&gt;비밀번호 파일 생성&lt;/h2&gt;
&lt;p&gt;먼저 비밀번호 파일을 작성한다. 기본 인증의 경우에는 Apache에서 제공되는 &amp;ldquo;htpasswd.exe&amp;quot;를 사용했지만, 다이제스트 인증의 경우에는 &amp;ldquo;htdigest.exe&amp;quot;를 사용한다. 이 파일이 놓여있는 위치는 &amp;ldquo;htpasswd&amp;quot;와 동일하게 &amp;ldquo;(Apache 설치 디렉터리)/Apache24/bin&amp;quot;에 있다.&lt;/p&gt;
&lt;p&gt;실행시의 형식은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;htdigest 옵션 비밀번호-파일 영역명 사용자명
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;생성한 비밀번호 파일을 지정하고 추가하는 사용자명을 지정한다. 비밀번호 파일을 새로 만들려면 옵션 &amp;ldquo;-c&amp;quot;를 지정한다. 기존의 비밀번호 파일에 사용자를 추가하는 경우에는 옵션에 아무것도 지정하지 않는다.&lt;/p&gt;
&lt;p&gt;기본 인증의 경우와 다른 점은 &amp;ldquo;영역명&amp;quot;을 맞게 지정한다. 이 영역명은 &amp;ldquo;AuthName&amp;quot;로 지정하는 영역명과 동일해야 한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;htdigest -c &amp;#34;C:/apache/passwd/digestpass&amp;#34; &amp;#34;Digest Auth&amp;#34; devkuma
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위에서는 비밀번호 파일은 &amp;ldquo;C:/apache/passwd/digestpass&amp;quot;으로 하고, 영역명은 &amp;ldquo;Digest Auth&amp;quot;으로 하였으며, 사용자명은 &amp;ldquo;devkuma&amp;quot;로 지정하여 새 암호 파일을 만들고 있다. 생성할 때는 설정 비밀번호를 두 번 입력해야 하다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\Apache24\bin&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;htdigest -c &amp;#34;C:/apache/passwd/digestpass&amp;#34; &amp;#34;Digest Auth&amp;#34; devkuma&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Adding password for devkuma in realm Digest Auth.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;New password: ****
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Re-type new password: ****
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\Apache24\bin&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;생성된 비밀번호 파일은 텍스트 파일이므로 텍스트 편집기으로 열어 볼 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;devkuma:Digest Auth:511a7e57972fad36f7687cf36cd57d6e
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;사용자명:영역명:비밀번호&amp;quot;의 형식으로 사용자 1명에 1줄로 작성된다.&lt;/p&gt;
&lt;h2 id=&#34;httpdconf-설정&#34;&gt;httpd.conf 설정&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;httpd.conf&amp;rdquo; 설정은 기본 인증의 경우와 거의 동일하다.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;AuthType&amp;quot;에는 &amp;ldquo;Basic&amp;rdquo; 대신에 &amp;ldquo;Digest&amp;quot;을 지정하고, &amp;ldquo;AuthName&amp;quot;는 비밀번호 파일을 만들 때 지정한 것과 동일한 영역명을 지정한다. 비밀번호 파일의 지정은 이전 버전에서는 &amp;ldquo;AuthDigestFile&amp;quot;를 사용한 것 같은데 Apache2.2 이후부턴&amp;quot;AuthUserFile &amp;ldquo;이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs/admin&amp;#34;&amp;gt;
    AuthType Digest
    AuthName &amp;#34;Digest Auth&amp;#34;
    AuthUserFile &amp;#34;C:/apache/passwd/digestpass&amp;#34;
    Require valid-user
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;모듈-추가&#34;&gt;모듈 추가&lt;/h2&gt;
&lt;p&gt;다이제스트 인증을 사용하는 경우에는 &amp;ldquo;auth_digest_module&amp;quot;모듈을 로드해야 한다. 디폴트로는 로드하지 않도록 되어있다. &amp;ldquo;httpd.conf&amp;quot;파일에서 &amp;ldquo;auth_digest_module&amp;quot;로 검색 해보세요. 71 번째 줄 부근에 설명이 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LoadModule allowmethods_module modules/mod_allowmethods.so
LoadModule asis_module modules/mod_asis.so
LoadModule auth_basic_module modules/mod_auth_basic.so
#LoadModule auth_digest_module modules/mod_auth_digest.so &amp;lt;--------- 디폴트로 로드하지 않도록 주석으로 되어 있다.
#LoadModule auth_form_module modules/mod_auth_form.so
#LoadModule authn_anon_module modules/mod_authn_anon.so
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;auth_digest_module&amp;quot;에 대한 &amp;ldquo;LoadModule&amp;quot;의 앞에 &amp;ldquo;#&amp;ldquo;이 작성 되어있다면 &amp;ldquo;#&amp;ldquo;을 제거한다. 이것으로 다음부터는 &amp;ldquo;auth_digest_module&amp;rdquo; 모듈을 로딩이 될 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LoadModule asis_module modules / mod_asis.so
LoadModule auth_basic_module modules / mod_auth_basic.so
LoadModule auth_digest_module modules / mod_auth_digest.so  &amp;lt;--------- &amp;#39;#&amp;#39;를 제거하여 주석을 풀었다.
#LoadModule authn_anon_module modules / mod_authn_anon.so
#LoadModule authn_dbm_module modules / mod_authn_dbm.so
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;다이제스트-인증을-시도&#34;&gt;다이제스트 인증을 시도&lt;/h2&gt;
&lt;p&gt;그럼 문서 루트 아래의 &amp;ldquo;admin&amp;rdquo; 디렉터리에서 다이제스트 인증을 설정한다. 사용되는 비밀번호 파일은 앞에서 작성한 것을 그대로 사용한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs/admin&amp;#34;&amp;gt;
    AuthType Digest
    AuthName &amp;#34;Digest Auth&amp;#34;
    AuthUserFile &amp;#34;C:/apache/passwd/digestpass&amp;#34;
    Require valid-user
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그러면 브라우저에서 &amp;ldquo;http://localhost/admin/admin.html&amp;quot;에 액세스하면 다음과 같이 인증 대화 상자가 표시된다.&lt;/p&gt;
&lt;p&gt;크롬에서 접속한 경우&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_digest1.png&#34; alt=&#34;다이제스트 인증&#34;&gt;&lt;/p&gt;
&lt;p&gt;Microsoft Edge에서 접속한 경우&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_digest2.png&#34; alt=&#34;다이제스트 인증&#34;&gt;&lt;/p&gt;
&lt;p&gt;인증 대화 화면의 기본 인증의 경우와는 약간 차이가 있지만 기본적으로 동일하다. 올바른 사용자명과 비밀번호를 입력하고 인증을 통과하면 해당 페이지가 표시된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_digest3.png&#34; alt=&#34;다이제스트 인증&#34;&gt;&lt;/p&gt;
&lt;p&gt;인증 대화 화면에서 &amp;ldquo;취소&amp;quot;버튼을 클릭하면 다음과 같은 오류 표시가 행해지고 요청은 종료된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_digest4.png&#34; alt=&#34;다이제스트 인증&#34;&gt;&lt;/p&gt;
&lt;p&gt;덧붙여서 비밀번호 파일을 만들 때 사용자에게 설정한 영역명과 &amp;ldquo;AuthName&amp;quot;에서 설정한 영역명이 다른 경우에는 사용자명과 비밀번호가 일치하여도도 인증은 되지 않는다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | PHP 사용을 위한 설정</title>
      <link>https://www.devkuma.com/docs/apache/php-%EC%82%AC%EC%9A%A9%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%84%A4%EC%A0%95/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/php-%EC%82%AC%EC%9A%A9%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%84%A4%EC%A0%95/</guid>
      <description>
        
        
        &lt;p&gt;Apache에서 PHP를 사용하는 경우에 필요한 설정에 대해 설명한다. 구체적으로는 &amp;ldquo;httpd.conf&amp;rdquo; 파일에 PHP에 대한 설정을 추가하는 방법에 대해 설명한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | PHP 사용을 위한 설정 | 모듈(php7_module) 추가와 확장(.php) 등록</title>
      <link>https://www.devkuma.com/docs/apache/%EB%AA%A8%EB%93%88-php7module-%EC%B6%94%EA%B0%80%EC%99%80-%ED%99%95%EC%9E%A5-php-%EB%93%B1%EB%A1%9D/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EB%AA%A8%EB%93%88-php7module-%EC%B6%94%EA%B0%80%EC%99%80-%ED%99%95%EC%9E%A5-php-%EB%93%B1%EB%A1%9D/</guid>
      <description>
        
        
        &lt;p&gt;Apache 통해서 PHP를 사용하기 위해 필요한 모듈 (php7_module)의 추가와 확장(.php) 등록하는 방법에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;모듈-추가&#34;&gt;모듈 추가&lt;/h2&gt;
&lt;p&gt;먼저 PHP를 사용하기위한 모듈을 추가해야 한다. Apache 설정 파일인 &amp;ldquo;Apache24/conf/httpd.conf&amp;rdquo; 파일을 텍스트 편집기로 열어 &amp;ldquo;Dynamic Shared Object (DSO) Support&amp;quot;를 검색하면, 다음과 같은 내용을 찾을 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule&amp;#39; lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Statically compiled modules (those listed by `httpd -l&amp;#39;) do not need
# to be loaded here.
#
# Example:
# LoadModule foo_module modules/mod_foo.so
#
#LoadModule access_compat_module modules/mod_access_compat.so
LoadModule actions_module modules/mod_actions.so

.. (중간 생략) ..

#LoadModule watchdog_module modules/mod_watchdog.so
#LoadModule xml2enc_module modules/mod_xml2enc.so
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;동적으로 추가할 모듈이 작성되어 있다. Apache2.4를 이용하고 있는 경우에는 이 블록의 맨 끝에 다음 행을 추가한다. (PHP7를 이용하는 경우이다.)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#LoadModule watchdog_module modules/mod_watchdog.so
#LoadModule xml2enc_module modules/mod_xml2enc.so
LoadModule php7_module C:/apache/php-7.4.0-Win32-vc15-x64/php7apache2_4.dll
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;추가하는 DLL 파일의 경로는 PHP를 설치한 각자의 환경에 맞게 변경한다.&lt;/p&gt;
&lt;p&gt;&amp;ndash;&lt;/p&gt;
&lt;p&gt;PHP를 설치한 디렉터리를 확인하면 앞에서의 DLL 파일이 존재하는 것을 확인할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\php-7.4.0-Win32-vc15-x64&amp;gt;dir
 C 드라이브의 볼륨에는 이름이 없습니다.
 볼륨 일련 번호: 4E53-ECB8

 C:\apache\php-7.4.0-Win32-vc15-x64 디렉터리

2019-12-05  오후 11:06    &amp;lt;DIR&amp;gt;          .
2019-12-05  오후 11:06    &amp;lt;DIR&amp;gt;          ..
2019-11-27  오후 08:24           119,808 deplister.exe
2019-12-05  오후 11:06    &amp;lt;DIR&amp;gt;          dev
2019-12-05  오후 11:06    &amp;lt;DIR&amp;gt;          ext
2019-12-05  오후 11:06    &amp;lt;DIR&amp;gt;          extras
2019-11-27  오후 08:24         1,374,720 glib-2.dll
2019-11-27  오후 08:24            18,432 gmodule-2.dll
2019-11-27  오후 08:24        27,980,288 icudt65.dll
2019-11-27  오후 08:24         2,632,192 icuin65.dll
2019-11-27  오후 08:24            61,440 icuio65.dll
2019-11-27  오후 08:24         1,890,304 icuuc65.dll
2019-12-05  오후 11:06    &amp;lt;DIR&amp;gt;          lib
2019-11-27  오후 08:24         3,422,208 libcrypto-1_1-x64.dll
2019-11-27  오후 08:24            47,616 libenchant.dll
2019-11-27  오후 08:24           282,624 libpq.dll
2019-11-27  오후 08:24           108,544 libsasl.dll
2019-11-27  오후 08:24           300,544 libsodium.dll
2019-11-27  오후 08:24         1,301,504 libsqlite3.dll
2019-11-27  오후 08:24           225,792 libssh2.dll
2019-11-27  오후 08:24           679,424 libssl-1_1-x64.dll
2019-11-27  오후 08:24             3,272 license.txt
2019-11-27  오후 08:24            18,782 news.txt
2019-11-27  오후 08:24           197,120 nghttp2.dll
2019-11-27  오후 08:30                43 phar.phar.bat
2019-11-27  오후 08:30            53,231 pharcommand.phar
2019-11-27  오후 08:24            72,704 php-cgi.exe
2019-11-27  오후 08:24            36,864 php-win.exe
2019-11-27  오후 08:24           128,512 php.exe
2019-11-27  오후 08:24            74,599 php.ini-development
2019-11-27  오후 08:24            74,904 php.ini-production
2019-11-27  오후 08:24            35,840 php7apache2_4.dll &amp;lt;------------ 여기 있다.
2019-11-27  오후 08:24           890,770 php7embed.lib
2019-11-27  오후 08:24           344,064 php7phpdbg.dll
2019-11-27  오후 08:24         9,496,064 php7ts.dll
2019-11-27  오후 08:24           346,112 phpdbg.exe
2019-11-27  오후 08:24            30,257 readme-redist-bins.txt
2019-11-27  오후 08:24             4,846 README.md
2019-12-05  오후 11:06    &amp;lt;DIR&amp;gt;          sasl2
2019-11-27  오후 08:24             2,224 snapshot.txt
              33개 파일          52,255,648 바이트
               7개 디렉터리  450,575,360,000 바이트 남음

C:\apache\php-7.4.0-Win32-vc15-x64&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이것으로 PHP 모듈을 Apache 시작할 때에 추가로 불려오게 된다.&lt;/p&gt;
&lt;h2 id=&#34;확장자-php-등록&#34;&gt;확장자 (.php) 등록&lt;/h2&gt;
&lt;p&gt;PHP에서 사용하는 확장자 (.php)과 PHP를 연결한다. 등록을 함으로써 확장자 (.php)의 파일에 액세스가 있었을 때에 PHP를 사용하여 실행된 결과를 클라이언트에 반환된다. &amp;ldquo;httpd.conf&amp;rdquo; 파일의 맨 아래 부분에 다음과 같이 작성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;FilesMatch &amp;#34;\.php$&amp;#34;&amp;gt;
  AddHandler php7-script .php
  AddType application/x-httpd-php .php
&amp;lt;/FilesMatch&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 하면 확장자가 등록 되었다.&lt;/p&gt;
&lt;h2 id=&#34;phpini의-위치-지정-phpinidir&#34;&gt;php.ini의 위치 지정 (PHPIniDir)&lt;/h2&gt;
&lt;p&gt;PHP 설정 파일인 &amp;ldquo;php.ini&amp;quot;가 설치되어 있는 경로를 지정한다. &amp;ldquo;httpd.conf&amp;rdquo; 파일을 열고 이번에는 맨 마지막에 다음과 같이 작성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PHPIniDir &amp;#34;C:/apache/php-7.4.0-Win32-vc15-x64&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위에 &amp;ldquo;php.ini&amp;rdquo; 파일이 &amp;ldquo;C:/apache/php-7.4.0-Win32-vc15-x64&amp;rdquo; 디렉터리에 설치가 되어 경우이다. 자신의 환경에 맞게 변경하도록 한다.  처음 설치했다면 &amp;ldquo;php.ini&amp;quot;는 존재하지 않는다면, php.ini-development 파일이나 php.ini-production 파일를 복사하여 확장자를 ini로 변경한다.&lt;/p&gt;
&lt;p&gt;이것으로 지정된 위치에있는 &amp;ldquo;php.ini&amp;quot;파일을 참조 할 수 있다.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;httpd.conf&amp;rdquo; 파일의 변경이 되면 Apache를 다시 시작하여 새 설정을 반영한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | PHP 사용을 위한 설정 | PHP 동작 여부 확인</title>
      <link>https://www.devkuma.com/docs/apache/php-%EB%8F%99%EC%9E%91-%EC%97%AC%EB%B6%80-%ED%99%95%EC%9D%B8/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/php-%EB%8F%99%EC%9E%91-%EC%97%AC%EB%B6%80-%ED%99%95%EC%9D%B8/</guid>
      <description>
        
        
        &lt;p&gt;Apache에서 성공적으로 PHP를 사용할 수 있도록 설정되어 있는지 여부를 확인하기 위해 phpinfo 함수를 사용한 간단한 스크립트를 작성하고 테스트해 본다.&lt;/p&gt;
&lt;p&gt;목차&lt;/p&gt;
&lt;h2 id=&#34;phpinfo-함수를-사용한-샘플-스크립트&#34;&gt;phpinfo 함수를 사용한 샘플 스크립트&lt;/h2&gt;
&lt;p&gt;텍스트 편집기를 열고 다음과 같이 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;phpinfo&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그리고 예를 들어 &amp;ldquo;phpinfo.php&amp;quot;라는 파일명으로 저장한다. 저장된 파일은 Apache 문서 루트에 넣는다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\Apache24\htdocs&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;dir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C 드라이브의 볼륨에는 이름이 없습니다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 볼륨 일련 번호: XXXX-XXXX
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C:\apache\Apache24\htdocs 디렉터리
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-05  오후 11:32    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-05  오후 11:32    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          ..
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2007-06-12  오전 03:53                46 index.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-05  오후 11:25                21 phpinfo.php
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               2개 파일                  67 바이트
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               2개 디렉터리  450,570,784,768 바이트 남음
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\Apache24\htdocs&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;브라우저를 열고 &amp;ldquo;http://localhost/phpinfo.php&amp;quot;에 액세스한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_php.png&#34; alt=&#34;phpinfo&#34;&gt;&lt;/p&gt;
&lt;p&gt;위와 같이 PHP에 대한 정보가 표시되었다면,  이제 Apache에서 PHP를 사용할 수 있게 되었다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 로그 파일</title>
      <link>https://www.devkuma.com/docs/apache/%EB%A1%9C%EA%B7%B8-%ED%8C%8C%EC%9D%BC/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EB%A1%9C%EA%B7%B8-%ED%8C%8C%EC%9D%BC/</guid>
      <description>
        
        
        &lt;p&gt;Apache 액세스가 있을 경우 또는 오류가 발생하는 경우에 저장되는 로그에 대해 로그의 저장 방법과 순환 방법에 대해 설명한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 로그 파일 | 로그 파일의 위치 (CustomLog, ErrorLog)</title>
      <link>https://www.devkuma.com/docs/apache/%EB%A1%9C%EA%B7%B8-%ED%8C%8C%EC%9D%BC%EC%9D%98-%EC%9C%84%EC%B9%98-customlog-errorlog/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EB%A1%9C%EA%B7%B8-%ED%8C%8C%EC%9D%BC%EC%9D%98-%EC%9C%84%EC%B9%98-customlog-errorlog/</guid>
      <description>
        
        
        &lt;p&gt;액세스 및 오류 로그의 위치는 &amp;ldquo;httpd.conf&amp;quot;에 정의되어 있다. 먼저 액세스 로그에서 살펴 보겠다.&lt;/p&gt;
&lt;h2 id=&#34;액세스-로그--customlog&#34;&gt;액세스 로그 : CustomLog&lt;/h2&gt;
&lt;p&gt;액세스 로그 파일의 위치는 &amp;ldquo;CustomLog&amp;quot;로 지정한다. &amp;ldquo;httpd.conf&amp;quot;에서 &amp;ldquo;CustomLog&amp;quot;로 검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;log_config_module&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # The following directives define some format nicknames for use with
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # a CustomLog directive (see below).
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LogFormat &amp;#34;%h %l %u %t \&amp;#34;%r\&amp;#34; %&amp;gt;s %b \&amp;#34;%{Referer}i\&amp;#34; \&amp;#34;%{User-Agent}i\&amp;#34;&amp;#34; combined
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    LogFormat &amp;#34;%h %l %u %t \&amp;#34;%r\&amp;#34; %&amp;gt;s %b&amp;#34; common
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;IfModule&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;logio_module&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      # You need to enable mod_logio.c to use %I and %O
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      LogFormat &amp;#34;%h %l %u %t \&amp;#34;%r\&amp;#34; %&amp;gt;s %b \&amp;#34;%{Referer}i\&amp;#34; \&amp;#34;%{User-Agent}i\&amp;#34; %I %O&amp;#34; combinedio
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # The location and format of the access logfile (Common Logfile Format).
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # If you do not define any access logfiles within a &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # container, they will be logged here.  Contrariwise, if you *do*
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # define per-&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;VirtualHost&amp;gt;&lt;/span&gt; access logfiles, transactions will be
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # logged therein and *not* in this file.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    CustomLog &amp;#34;logs/access.log&amp;#34; common
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # If you prefer a logfile with access, agent, and referer information
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    # (Combined Logfile Format) you can use the following directive.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    #CustomLog &amp;#34;logs/access.log&amp;#34; combined
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/IfModule&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;액세스 로그 파일을 지정하는 &amp;ldquo;CustomLog&amp;rdquo; 형식은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CustomLog 로그-파일-위치 로그-형식-이름
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;로그 파일 위치는 &amp;ldquo;ServerRoot&amp;quot;의 위치에서 상대 위치로 지정한다.  ServerRoot에 대해서는 &amp;ldquo;&lt;a href=&#34;https://www.devkuma.com/books/pages/1374&#34;&gt;서버 위치 디렉터리 (ServerRoot)&lt;/a&gt;&amp;ldquo;를 참조한다.&lt;/p&gt;
&lt;p&gt;로그 형식 이름은 &amp;ldquo;LogFormat&amp;quot;으로 정의된 어떤 로그를 기록할 것에 대한 정의를 지정한 것이다. &amp;ldquo;LogFormat&amp;quot;의 맨 뒤에 작성되어 있는 문장이 포멧명이 된다.  포멧 내용에 대한 자세한 내용은 다른 페이지에서 설명하겠다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LogFormat &amp;#34;%h %l %u %t \&amp;#34;%r\&amp;#34; %&amp;gt;s %b \&amp;#34;%{Referer}i\&amp;#34; \&amp;#34;%{User-Agent}i\&amp;#34;&amp;#34; combined
LogFormat &amp;#34;%h %l %u %t \&amp;#34;%r\&amp;#34; %&amp;gt;s %b&amp;#34; common
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;따라서 첫번째 줄의 LogFormat 이름은 &amp;ldquo;combined&amp;quot;이고, 두번째 줄의 LogFormat 이름은 &amp;ldquo;common&amp;quot;이다.&lt;/p&gt;
&lt;p&gt;기본적으로 활성화되어 있는 액세스 로그는 다음과 같이 정의되어 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; CustomLog &amp;#34;logs/access.log&amp;#34; common
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 설정은 로그 파일명은 &amp;ldquo;access.log&amp;quot;이고, 로그 포멧은 &amp;ldquo;common&amp;quot;으로 되어 있다.&lt;/p&gt;
&lt;h2 id=&#34;에러-로그--errorlog&#34;&gt;에러 로그 : ErrorLog&lt;/h2&gt;
&lt;p&gt;에러 로그 파일의 위치는 &amp;ldquo;ErrorLog&amp;quot;로 지정한다. &amp;ldquo;httpd.conf&amp;quot;에서 &amp;ldquo;ErrorLog&amp;quot;로 검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a &amp;lt;VirtualHost&amp;gt;
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a &amp;lt;VirtualHost&amp;gt;
# container, that host&amp;#39;s errors will be logged there and not here.
#
ErrorLog &amp;#34;logs/error.log&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;에러 로그 파일의 위치도 &amp;ldquo;ServerRoot&amp;quot;의 위치에서 상대 위치로 지정된다.&lt;/p&gt;
&lt;h2 id=&#34;로그-파일-확인&#34;&gt;로그 파일 확인&lt;/h2&gt;
&lt;p&gt;액세스 로그와 에러 로그를 텍스트 파일로 되어 있어 텍스트 편집기에서 열어 볼 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\Apache24\logs&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;dir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C 드라이브의 볼륨에는 이름이 없습니다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 볼륨 일련 번호: XXXX-XXXX
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C:\apache\Apache24\logs 디렉터리
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-05  오후 11:29    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-05  오후 11:29    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          ..
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-05  오후 11:25            17,108 access.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-05  오후 11:29            60,733 error.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-05  오후 11:29                 7 httpd.pid
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-08-09  오후 11:50             3,146 install.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               4개 파일              80,994 바이트
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               2개 디렉터리  450,580,013,056 바이트 남음
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\Apache24\logs&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;access.log&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;127.0.0.1 - - [03/Dec/2019:01:21:23 +0900] &amp;#34;GET /referer.html HTTP/1.1&amp;#34; 304 -
127.0.0.1 - - [03/Dec/2019:01:21:23 +0900] &amp;#34;GET /img/devkuma.jpg HTTP/1.1&amp;#34; 403 199
::1 - - [03/Dec/2019:01:21:32 +0900] &amp;#34;GET /referer.html HTTP/1.1&amp;#34; 304 -
::1 - - [03/Dec/2019:01:21:32 +0900] &amp;#34;GET /img/devkuma.jpg HTTP/1.1&amp;#34; 304 -
127.0.0.1 - - [03/Dec/2019:01:21:51 +0900] &amp;#34;GET /img/devkuma.jpg HTTP/1.1&amp;#34; 200 5168
::1 - - [03/Dec/2019:01:22:43 +0900] &amp;#34;-&amp;#34; 408 -
::1 - - [03/Dec/2019:01:22:43 +0900] &amp;#34;-&amp;#34; 408 -
127.0.0.1 - - [03/Dec/2019:01:22:51 +0900] &amp;#34;-&amp;#34; 408 -
127.0.0.1 - - [03/Dec/2019:01:53:07 +0900] &amp;#34;GET /admin/admin.page HTTP/1.1&amp;#34; 401 381
127.0.0.1 - - [03/Dec/2019:01:53:34 +0900] &amp;#34;GET /admin/admin.html HTTP/1.1&amp;#34; 401 381
127.0.0.1 - - [03/Dec/2019:01:54:12 +0900] &amp;#34;GET / HTTP/1.1&amp;#34; 200 99
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;error.log&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[Thu Dec 05 23:27:14.834393 2019] [mpm_winnt:notice] [pid 5788:tid 580] AH00364: Child: All worker threads have exited.
[Thu Dec 05 23:27:14.852887 2019] [mpm_winnt:notice] [pid 11848:tid 576] AH00430: Parent: Child process 5788 exited successfully.
[Thu Dec 05 23:29:01.662578 2019] [mpm_winnt:notice] [pid 10168:tid 668] AH00455: Apache/2.4.41 (Win64) PHP/7.4.0 configured -- resuming normal operations
[Thu Dec 05 23:29:01.662578 2019] [mpm_winnt:notice] [pid 10168:tid 668] AH00456: Apache Lounge VS16 Server built: Aug  9 2019 16:46:32
[Thu Dec 05 23:29:01.662578 2019] [core:notice] [pid 10168:tid 668] AH00094: Command line: &amp;#39;httpd.exe -d C:/apache/Apache24&amp;#39;
[Thu Dec 05 23:29:01.665949 2019] [mpm_winnt:notice] [pid 10168:tid 668] AH00418: Parent: Created child process 7372
[Thu Dec 05 23:29:02.063030 2019] [mpm_winnt:notice] [pid 7372:tid 664] AH00354: Child: Starting 64 worker threads.
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;기록되는 포맷의 세부 사항 및 에러 로그에 기록되는 에러 레벨 설정 등에 대해서는 다음 페이지에서 설명하도록 하겠다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 로그 파일 | 액세스 로그 포멧 (LogFormat)</title>
      <link>https://www.devkuma.com/docs/apache/%EC%95%A1%EC%84%B8%EC%8A%A4-%EB%A1%9C%EA%B7%B8-%ED%8F%AC%EB%A9%A7-logformat/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EC%95%A1%EC%84%B8%EC%8A%A4-%EB%A1%9C%EA%B7%B8-%ED%8F%AC%EB%A9%A7-logformat/</guid>
      <description>
        
        
        &lt;p&gt;액세스 로그로 저장하는 데이터는 직접 커스텀마이징하여 형식을 지정할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;로그-형식--logformat&#34;&gt;로그 형식 : LogFormat&lt;/h2&gt;
&lt;p&gt;로그 형식은 &amp;ldquo;LogFormat&amp;quot;으로 지정한다. 문법은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LogFormat &amp;#34;포맷&amp;#34; 로그-형식-이름
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;기본적으로 &amp;ldquo;httpd.conf&amp;rdquo; 파일에 작성되어 있는 로그 형식으로는 다음의 두 가지가 정의되어 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LogFormat &amp;#34;%h %l %u %t \&amp;#34;%r\&amp;#34; %&amp;gt;s %b \&amp;#34;%{Referer}i\&amp;#34; \&amp;#34;%{User-Agent}i\&amp;#34;&amp;#34; combined
LogFormat &amp;#34;%h %l %u %t \&amp;#34;%r\&amp;#34; %&amp;gt;s %b&amp;#34; common
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;로그 형식 이름으로 &amp;ldquo;common&amp;quot;과 &amp;ldquo;combined&amp;quot;의 두 가지가 있다. 형식은 여러 항목의 조합에 의해 정의되었고, 설정 가능한 주요 항목은 다음과 같다.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;설정값&lt;/th&gt;
          &lt;th&gt;의미&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;%a&lt;/td&gt;
          &lt;td&gt;액세스한 IP 주소&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%A&lt;/td&gt;
          &lt;td&gt;서버 (Apache)의 IP 주소&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%B&lt;/td&gt;
          &lt;td&gt;전송된 바이트 수 (헤더는 제외)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%b&lt;/td&gt;
          &lt;td&gt;전송된 바이트 수 (헤더는 제외), 0바이트인 경우는 &amp;lsquo;-&amp;lsquo;이 표시된다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%f&lt;/td&gt;
          &lt;td&gt;요청된 파일 이름&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%h&lt;/td&gt;
          &lt;td&gt;원격 호스트 이름&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%H&lt;/td&gt;
          &lt;td&gt;요청 프로토콜 이름&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%l&lt;/td&gt;
          &lt;td&gt;클라이언트 식별자&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%m&lt;/td&gt;
          &lt;td&gt;요청 메소드명&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%q&lt;/td&gt;
          &lt;td&gt;요청에 포함된 쿼리 문자열, 공백 이외는 &amp;ldquo;?&amp;ldquo;가 붙는다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%r&lt;/td&gt;
          &lt;td&gt;요청의 첫 번째 행의 값&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%s&lt;/td&gt;
          &lt;td&gt;응답 상태&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%&amp;gt;S&lt;/td&gt;
          &lt;td&gt;마지막 응답의 상태&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%t&lt;/td&gt;
          &lt;td&gt;시간&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%T&lt;/td&gt;
          &lt;td&gt;처리하는데 걸린 시간&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%u&lt;/td&gt;
          &lt;td&gt;인증 사용자명&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%U&lt;/td&gt;
          &lt;td&gt;요청의 URL 경로&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%v&lt;/td&gt;
          &lt;td&gt;요청에 대한 가상 호스트 이름&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%V&lt;/td&gt;
          &lt;td&gt;UseCanonicalName 따른 서버명.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%X&lt;/td&gt;
          &lt;td&gt;연결 상태&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%{쿠키명}C&lt;/td&gt;
          &lt;td&gt;요청에 포함된 쿠키 값&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;% {환경변수명}e&lt;/td&gt;
          &lt;td&gt;환경 변수명의 값&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%{헤더명}i&lt;/td&gt;
          &lt;td&gt;요청에 포함된 헤더명의 값&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%{헤더명}o&lt;/td&gt;
          &lt;td&gt;응답에 포함된 헤더명의 값&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%{메모}n&lt;/td&gt;
          &lt;td&gt;모듈에서 반환한 메모의 값&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;%{포맷}t&lt;/td&gt;
          &lt;td&gt;포맷된 시간&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;이러한 항목을 열거하고 쌍따움표( &amp;ldquo;)로 감싸서 지정한다. 포맷 중에 쌍따움표을 작성하는 경우는 역슬레쉬(&amp;rdquo;&amp;quot;)으로 이스케이프하여 작성한다.&lt;/p&gt;
&lt;p&gt;항목 중에는 중괄호({})로 감싸서 작성하는 항목이 있는데, 예를 들어, &amp;ldquo;%{헤더명}i&amp;quot;는 헤더 중에서 헤더명에 지정한 값을 받아와서 기록한다. &amp;ldquo;%{User-Agent}i&amp;quot;라고 지정할 경우에는 헤더에서 &amp;ldquo;User-Agent&amp;quot;의 값을 기록한다.&lt;/p&gt;
&lt;h2 id=&#34;액세스-로그-포맷-변경-테스트&#34;&gt;액세스 로그 포맷 변경 테스트&lt;/h2&gt;
&lt;p&gt;기본으로 활성화되어 있는 액세스 로그는 &amp;ldquo;common&amp;quot;이다. 하나  더 준비어 있는 &amp;ldquo;combined&amp;quot;으로 변경해보도록 하자. &amp;ldquo;httpd.conf&amp;rdquo; 파일의 내용중에 다음과 같이 작성된 부분이 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a &amp;lt;VirtualHost&amp;gt;
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-&amp;lt;VirtualHost&amp;gt; access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    CustomLog &amp;#34;logs/access.log&amp;#34; common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    #CustomLog &amp;#34;logs/access.log&amp;#34; combined
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;CustomLog logs / access.log common&amp;quot;앞에 &amp;ldquo;#&amp;ldquo;를 붙이고, 대신에 &amp;ldquo;CustomLog logs / access.log combined&amp;quot;이전 &amp;ldquo;#&amp;ldquo;을 제거한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a &amp;lt;VirtualHost&amp;gt;
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-&amp;lt;VirtualHost&amp;gt; access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    #CustomLog &amp;#34;logs/access.log&amp;#34; common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    CustomLog &amp;#34;logs/access.log&amp;#34; combined
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이것으로 액세스 로그는 &amp;ldquo;combined&amp;rdquo; 이름으로 정의된 형식으로 저장될 수 있다.  Apache를 재시작한 후 Apache에 적당히 액세스 로그를 확인해 보자.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;::1 - - [06/Dec/2019:00:48:42 +0900] &amp;#34;GET /admin/admin.html HTTP/1.1&amp;#34; 404 196 &amp;#34;-&amp;#34; &amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&amp;#34;
127.0.0.1 - - [06/Dec/2019:00:49:03 +0900] &amp;#34;GET / HTTP/1.1&amp;#34; 200 46 &amp;#34;-&amp;#34; &amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&amp;#34;
127.0.0.1 - - [06/Dec/2019:00:49:03 +0900] &amp;#34;GET /favicon.ico HTTP/1.1&amp;#34; 404 196 &amp;#34;http://127.0.0.1/&amp;#34; &amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&amp;#34;
127.0.0.1 - - [06/Dec/2019:00:49:24 +0900] &amp;#34;GET /phpinfo HTTP/1.1&amp;#34; 404 196 &amp;#34;-&amp;#34; &amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&amp;#34;
127.0.0.1 - - [06/Dec/2019:00:49:34 +0900] &amp;#34;GET /phpinfo.php HTTP/1.1&amp;#34; 200 72966 &amp;#34;-&amp;#34; &amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위 내용이 새로운 포맷으로 기록된 로그이다. 더 자세한 정보가 기록이 된 것을 볼 수 있다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 로그 파일 | 특정 로그를 다른 파일에 기록</title>
      <link>https://www.devkuma.com/docs/apache/%ED%8A%B9%EC%A0%95-%EB%A1%9C%EA%B7%B8%EB%A5%BC-%EB%8B%A4%EB%A5%B8-%ED%8C%8C%EC%9D%BC%EC%97%90-%EA%B8%B0%EB%A1%9D/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%ED%8A%B9%EC%A0%95-%EB%A1%9C%EA%B7%B8%EB%A5%BC-%EB%8B%A4%EB%A5%B8-%ED%8C%8C%EC%9D%BC%EC%97%90-%EA%B8%B0%EB%A1%9D/</guid>
      <description>
        
        
        &lt;p&gt;액세스 로그은 오직 1개의 파일에만 저장되는 것은 아니다. 로그 형식을 여러개를 정의하여 별도의 액세스 로그로 여러 파일에 저장할 수도 있다.&lt;/p&gt;
&lt;p&gt;기본적으로 &amp;ldquo;httpd.conf&amp;rdquo; 파일에 작성되어 있는 로그 포맷에 &amp;ldquo;User-Agent&amp;quot;만 따로 기록하는 형식을 추가한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LogFormat &amp;#34;%{User-Agent}i&amp;#34; agent
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그리고, 로그 파일 지정에서 새로운 &amp;ldquo;CustomLog&amp;quot;를 지정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CustomLog logs/agent.log agent
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;실제 적용이 된다면 아래와 같을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;IfModule log_config_module&amp;gt;
    #
    # The following directives define some format nicknames for use with
    # a CustomLog directive (see below).
    #
    LogFormat &amp;#34;%h %l %u %t \&amp;#34;%r\&amp;#34; %&amp;gt;s %b \&amp;#34;%{Referer}i\&amp;#34; \&amp;#34;%{User-Agent}i\&amp;#34;&amp;#34; combined
    LogFormat &amp;#34;%h %l %u %t \&amp;#34;%r\&amp;#34; %&amp;gt;s %b&amp;#34; common
    LogFormat &amp;#34;%{User-Agent}i&amp;#34; agent &amp;lt;--------------------------- 여기 추가하였다.

    &amp;lt;IfModule logio_module&amp;gt;
      # You need to enable mod_logio.c to use %I and %O
      LogFormat &amp;#34;%h %l %u %t \&amp;#34;%r\&amp;#34; %&amp;gt;s %b \&amp;#34;%{Referer}i\&amp;#34; \&amp;#34;%{User-Agent}i\&amp;#34; %I %O&amp;#34; combinedio
    &amp;lt;/IfModule&amp;gt;

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a &amp;lt;VirtualHost&amp;gt;
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-&amp;lt;VirtualHost&amp;gt; access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    #CustomLog &amp;#34;logs/access.log&amp;#34; common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    #CustomLog &amp;#34;logs/access.log&amp;#34; combined
		
    CustomLog logs/agent.log agent &amp;lt;--------------------------- 여기 추가하였다.
		
&amp;lt;/IfModule&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이것으로 &amp;ldquo;User-Agent&amp;quot;만 다른 액세스 로그 파일 &amp;ldquo;agent.log&amp;quot;에 기록되게 되었다.&lt;/p&gt;
&lt;p&gt;그러면 &amp;ldquo;httpd.conf&amp;rdquo; 파일을 편집한 후에 Apache를 재시작한 후 Apache에 적당히 액세스 로그를 확인해 본다.&lt;/p&gt;
&lt;p&gt;기존 액세스 로그를 기록했던 &amp;ldquo;access.log&amp;rdquo; 파일과는 별도로 새롭게 &amp;ldquo;agent.log&amp;quot;라는 파일이 새로 생성되고, 파일에 액세스한 브라우저에 대한 정보만 기재되어 있는 것을 확인할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36
Mozilla/5.0 (Windows NT 10.0; WOW64; Trident/7.0; rv:11.0) like Gecko
Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18363
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위 로그는 &amp;ldquo;Internet Explorer&amp;rdquo;, &amp;ldquo;Edge&amp;rdquo;, &amp;ldquo;Chrome&amp;rdquo; 3개의 브라우저에서 각각 Apache에서 공개되는 HTML 파일을 열람한 경우이다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 로그 파일 | 에러 로그에 기록되는 레벨 설정 (LogLevel)</title>
      <link>https://www.devkuma.com/docs/apache/%EC%97%90%EB%9F%AC-%EB%A1%9C%EA%B7%B8%EC%97%90-%EA%B8%B0%EB%A1%9D%EB%90%98%EB%8A%94-%EB%A0%88%EB%B2%A8-%EC%84%A4%EC%A0%95-loglevel/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EC%97%90%EB%9F%AC-%EB%A1%9C%EA%B7%B8%EC%97%90-%EA%B8%B0%EB%A1%9D%EB%90%98%EB%8A%94-%EB%A0%88%EB%B2%A8-%EC%84%A4%EC%A0%95-loglevel/</guid>
      <description>
        
        
        &lt;p&gt;에러 로그는 어느 레벨까지의 에러를 기록할지 여부를 8단계로 지정할 수 있다. 지정하려면 &amp;ldquo;LogLevel&amp;quot;로 사용하여 설정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LogLevel 기록하는-레벨
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;설정 가능한 레벨은 다음과 같다.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;레벨&lt;/th&gt;
          &lt;th&gt;의미&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;emerg&lt;/td&gt;
          &lt;td&gt;서버가 가동 할 수 없을 정도의 심각한 오류&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;alert&lt;/td&gt;
          &lt;td&gt;crit보다 심각한 오류&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;crit&lt;/td&gt;
          &lt;td&gt;치명적인 오류&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;error&lt;/td&gt;
          &lt;td&gt;오류&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;warn&lt;/td&gt;
          &lt;td&gt;경고&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;notice&lt;/td&gt;
          &lt;td&gt;알림 메시지&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;info&lt;/td&gt;
          &lt;td&gt;서버 정보&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;debug&lt;/td&gt;
          &lt;td&gt;디버깅을위한 정보&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;레벨은 위에서 부터 심각하고, &amp;ldquo;error&amp;quot;로 설정하면 &amp;ldquo;error&amp;rdquo; 위의 &amp;ldquo;crit&amp;rdquo;, &amp;ldquo;alert&amp;rdquo;, &amp;ldquo;emerg&amp;rdquo; 에러도 모두 기록된다.&lt;/p&gt;
&lt;p&gt;보다 낮은 수준으로 설정하면 많은 정보를 로그로 남길 수 있지만, 그 만큼 로그 파일 크기가 커지게 되므로 필요에 따라 설정을 변경한다.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;httpd.conf&amp;rdquo; 파일에 대한 &amp;ldquo;LogLevel&amp;quot;로 검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;기본으로 LogLevel가 &amp;ldquo;warn&amp;quot;으로 설정되어 있다. 변경하려면 &amp;ldquo;warn&amp;quot;부분을 다른 수준의 값으로 변경하면 된다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 로그 파일 | 로그에 IP 주소를 호스트명으로 변환 (logresolve)</title>
      <link>https://www.devkuma.com/docs/apache/%EB%A1%9C%EA%B7%B8%EC%97%90-ip-%EC%A3%BC%EC%86%8C%EB%A5%BC-%ED%98%B8%EC%8A%A4%ED%8A%B8%EB%AA%85%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98-logresolve/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EB%A1%9C%EA%B7%B8%EC%97%90-ip-%EC%A3%BC%EC%86%8C%EB%A5%BC-%ED%98%B8%EC%8A%A4%ED%8A%B8%EB%AA%85%EC%9C%BC%EB%A1%9C-%EB%B3%80%ED%99%98-logresolve/</guid>
      <description>
        
        
        &lt;p&gt;액세스 로그에 기록되는 액세스한 정보는 IP 주소로 기록된다. 기록되는 시점에 IP 주소를 호스트명으로 변환하고 기록하기 위한 설정(HostnameLookups)도 있지만, 이는 액세스할 때마다 DNS 참조가 발생하여 부하가 높아지기 때문에 일반적으로 로그에 기록된 후 호스트명으로 일괄 변환한다.&lt;/p&gt;
&lt;p&gt;IP 주소를 호스트명으로 변환하여 다른 파일로 저장하는 유틸리티 프로그램이 Apache에서는 제공하고 있다. &amp;ldquo;{Apache 설치 디렉터리}/Apache24/bin&amp;rdquo; 디렉터리에 들어있는 &amp;ldquo;logresolve&amp;rdquo; 프로그램을 사용한다.&lt;/p&gt;
&lt;p&gt;사용법은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;logresolve &amp;lt; 대상-로그-파일
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위 명령어를 실행하면 변환된 로그가 표준 출력에 표시된다. 이것을 다른 파일에 저장하는 경우에는 다음과 같이 실행한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;logresolve &amp;lt; 대상-로그-파일 &amp;gt; 변환-로그-파일
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그러면 실제로 해보도록 하자. 명령 프롬프트에서 &amp;ldquo;{Apache 설치 디렉터리}/Apache24/bin&amp;quot;로 이동한 다음과 같이 실행한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;logresolve &amp;lt; ..\logs\access.log &amp;gt; ..\logs\resolve.log
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\bin&amp;gt;logresolve &amp;lt; ..\logs\access.log &amp;gt; ..\logs\resolve.log

C:\apache\Apache24\bin&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그러면 로그 파일이 들어있는 디렉터리에 &amp;ldquo;resolve.log&amp;quot;파일이 새로 생성된. 텍스트 편집기에서 내용을 확인해 본다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DESKTOP-XXXXXXX - - [06/Dec/2019:00:48:42 +0900] &amp;#34;GET /admin/admin.html HTTP/1.1&amp;#34; 404 196 &amp;#34;-&amp;#34; &amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&amp;#34;
DESKTOP-XXXXXXX - - [06/Dec/2019:00:49:03 +0900] &amp;#34;GET / HTTP/1.1&amp;#34; 200 46 &amp;#34;-&amp;#34; &amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&amp;#34;
DESKTOP-XXXXXXX - - [06/Dec/2019:00:49:03 +0900] &amp;#34;GET /favicon.ico HTTP/1.1&amp;#34; 404 196 &amp;#34;http://127.0.0.1/&amp;#34; &amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&amp;#34;
DESKTOP-XXXXXXX - - [06/Dec/2019:00:49:24 +0900] &amp;#34;GET /phpinfo HTTP/1.1&amp;#34; 404 196 &amp;#34;-&amp;#34; &amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&amp;#34;
DESKTOP-XXXXXXX - - [06/Dec/2019:00:49:34 +0900] &amp;#34;GET /phpinfo.php HTTP/1.1&amp;#34; 200 72966 &amp;#34;-&amp;#34; &amp;#34;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36&amp;#34;
DESKTOP-XXXXXXX - - [06/Dec/2019:00:50:34 +0900] &amp;#34;-&amp;#34; 408 - &amp;#34;-&amp;#34; &amp;#34;-&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IP 주소를 호스트명으로 변환되어 저장되어 있다. (테스트 환경이기 때문에 127.0.0.1이DESKTOP-XXXXXXX으로 변환되고 있다.)&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 로그 파일 | 로그 로테이션 (rotetalogs)</title>
      <link>https://www.devkuma.com/docs/apache/%EB%A1%9C%EA%B7%B8-%EB%A1%9C%ED%85%8C%EC%9D%B4%EC%85%98-rotetalogs/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EB%A1%9C%EA%B7%B8-%EB%A1%9C%ED%85%8C%EC%9D%B4%EC%85%98-rotetalogs/</guid>
      <description>
        
        
        &lt;p&gt;로그는 별도로 지정하지 않으면 하나의 파일에 기록을 이어간다. 따로 설정을 하게 되면 로그를 일정 기간마다 별도의 파일로 전환될 수 있게 할 수 있다. 예를 들어 하루 단위로 별도의 로그 파일로 기록하도록 하면 관리도 편해진다.&lt;/p&gt;
&lt;h2 id=&#34;로그-로테이션-rotetalogs&#34;&gt;로그 로테이션 (rotetalogs)&lt;/h2&gt;
&lt;p&gt;로그를 순환하는 유틸리티 프로그램을 Apache에서는 제공하고 있다. &amp;ldquo;{Apache 설치 디렉터리}/Apache24/bin&amp;rdquo; 디렉터리에 들어있는 &amp;ldquo;rotatelogs&amp;rdquo; 프로그램을 사용한다.&lt;/p&gt;
&lt;p&gt;사용법은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rotatelogs 대상-로그-파일 지정-시간
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;지정 시간은 초 단위로 로그를 분할하는 시간을 지정한다. 1 일 단위라면 &amp;ldquo;60 × 60 × 24 = 86400 &amp;ldquo;으로 지정한다.&lt;/p&gt;
&lt;p&gt;로그 로테이션은 &amp;ldquo;httpd.conf&amp;quot;로 설정하여 자동으로 할 수 있다. 설정하려면 &amp;ldquo;CustomLog&amp;quot;에 대해 다음과 같이 설정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CustomLog &amp;#34;| rotatelogs 대상-로그-파일 지정=시간&amp;#34; 로그-형식명
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;예를 들어 &amp;ldquo;common&amp;rdquo; 로그 포맷을 사용하여 1일 단위의 로그 회전을 설정하려면 다음과 같이 작성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CustomLog logs/access.log common
CustomLog &amp;#34;|bin/rotatelogs.exe logs/access.log 86400&amp;#34; common
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Windows 운영체제에선 반드시 rotatelogs 다음에 .exe 를 붙여주어야 한다.&lt;/p&gt;
&lt;p&gt;이것으로 로그가 저장될 때 지정된 시간이 경과할 때마다 다른 로그 파일을 생성하여 기록하게 된다.&lt;/p&gt;
&lt;p&gt;그럼 실제로 해보록 하자. 앞에서의 설정을 &amp;ldquo;httpd.conf&amp;quot;로 설정하고 Apache를 재시작한다. 그리고 Apache에서 공개된 파일에 액세스한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\Apache24\logs&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;dir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C 드라이브의 볼륨에는 이름이 없습니다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 볼륨 일련 번호: XXXX-XXXX
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C:\apache\Apache24\logs 디렉터리
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 01:40    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 01:40    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          ..
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 01:40               427 access.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 01:40                 0 access.log.1575590400
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 01:40               532 error.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 01:40                 6 httpd.pid
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               4개 파일                 965 바이트
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               2개 디렉터리  450,662,526,976 바이트 남음
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\Apache24\logs&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같이 새로 &amp;ldquo;access.log.1575590400&amp;quot;라는 파일이 생성되어 로그가 저장되어 있다. 뒤에 붙어있는 &amp;ldquo;.1575590400&amp;quot;는 1970년 1월 1일 이후의 시간을 초단위로 표시한다.&lt;/p&gt;
&lt;p&gt;그러면 클라이언트에 설정되어있는 날짜를 2일 진행 후 다시 Apache의 파일에 액세스해 본다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\apache\Apache24\logs&amp;gt;dir
 C 드라이브의 볼륨에는 이름이 없습니다.
 볼륨 일련 번호: XXXX-XXXX

 C:\apache\Apache24\logs 디렉터리

2019-12-09  오전 01:51    &amp;lt;DIR&amp;gt;          .
2019-12-09  오전 01:51    &amp;lt;DIR&amp;gt;          ..
2019-12-07  오전 01:40               427 access.log
2019-12-07  오전 01:41               475 access.log.1575590400
2019-12-09  오전 01:51                 0 access.log.1575763200
2019-12-07  오전 01:40               532 error.log
2019-12-07  오전 01:40                 6 httpd.pid
               5개 파일               1,440 바이트
               2개 디렉터리  450,650,722,304 바이트 남음

C:\apache\Apache24\logs&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이전 생성된 로그에서 86400 초 이상 경과하여, 새 로그 파일이 생성되고 기록이 되고 있다.&lt;/p&gt;
&lt;h2 id=&#34;로그-파일의-형식을-지정&#34;&gt;로그 파일의 형식을 지정&lt;/h2&gt;
&lt;p&gt;별로 설정을 하지 않으면 로그 파일 뒤에 1970년 1월 1일 이후의 시간을 초단위로 표시된다. 이대로는 알아 보기 어렵기 때문에 로그를 구별하기 위해 붙는 부분의 포맷을 지정할 수 있다. 예를 들어, 시간(초)가 아닌 날짜를 표시하도록 하려면 다음과 같이 작성한다.&lt;/p&gt;
&lt;p&gt;CustomLog &amp;ldquo;| ¥&amp;ldquo;D : / Apache Group / Apache2.2 / bin / rotatelogs ¥ &amp;ldquo;¥&amp;ldquo;D : / Apache Group / Apache2.2 / logs / access.log % Y- % m- % d ¥ &amp;ldquo;86400&amp;rdquo; common&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CustomLog &amp;#34;|bin/rotatelogs.exe logs/access.log.%Y-%m-%d 86400&amp;#34; common
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;대상 로그 파일명 뒤에 마침표(.)를 입력 후 포맷을 지정한다. 이번에는 날짜를 &amp;ldquo;-&amp;ldquo;으로 구분된 형식으로 지정하였다.&lt;/p&gt;
&lt;p&gt;그럼 실제로 해보도록 하겠다. 위에 설정을 &amp;ldquo;httpd.conf&amp;quot;에 설정하고 Apache를 재시작한다. 그리고 뭔가 Apache에서 공개된 파일에 액세스한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\Apache24\logs&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;dir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C 드라이브의 볼륨에는 이름이 없습니다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 볼륨 일련 번호: XXXX-XXXX
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C:\apache\Apache24\logs 디렉터리
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 02:05    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 02:05    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          ..
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 02:04               122 access.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 02:04               122 access.log.2019-12-06
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 02:05             1,287 error.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               3개 파일               1,531 바이트
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               2개 디렉터리  450,652,733,440 바이트 남음
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\Apache24\logs&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이번에는 지정된 형식의 형식으로 날짜가 추가되었다.&lt;/p&gt;
&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://httpd.apache.org/docs/2.4/en/programs/rotatelogs.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://httpd.apache.org/docs/2.4/en/programs/rotatelogs.html&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 가상 호스트(VirtualHost) 설정</title>
      <link>https://www.devkuma.com/docs/apache/virtualhost/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/virtualhost/</guid>
      <description>
        
        
        &lt;p&gt;1대의 서버를 사용하여 여러 도메인을 사용한 Web 서버로서의 기능을 제공하는 방법에 대해 설명한다. 서버가 여러 인터페이스를 가지고 있고 IP 주소가 여러개를 할당할 수있는 경우와 하나의 IP 주소에 호스트을 보고 배분 방법이 있다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 가상 호스트(VirtualHost) 설정 | IP 기반 가상 호스트</title>
      <link>https://www.devkuma.com/docs/apache/ip-%EA%B8%B0%EB%B0%98-%EA%B0%80%EC%83%81-%ED%98%B8%EC%8A%A4%ED%8A%B8/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/ip-%EA%B8%B0%EB%B0%98-%EA%B0%80%EC%83%81-%ED%98%B8%EC%8A%A4%ED%8A%B8/</guid>
      <description>
        
        
        &lt;h3 id=&#34;ip-기반-가상-호스트&#34;&gt;IP 기반 가상 호스트&lt;/h3&gt;
&lt;p&gt;IP 기반은 하나의 서버에 여러 개의 LAN 카드가 장착되어 있어, 여러 IP 주소를 있는 경우에 각각의 IP 주소에 대한 가상 호스트를 지정한다.&lt;/p&gt;
&lt;p&gt;IP 기반 가상 호스트를 할당하려면 &amp;ldquo;VirtualHost&amp;quot;를 사용한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;VirtualHost IP주소1:포트번호&amp;gt;
  ...
  ...
&amp;lt;/VirtualHost&amp;gt;

&amp;lt;VirtualHost IP주소2:포트번호&amp;gt;
  ...
  ...
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;예를 들어, &amp;ldquo;192.168.1.1&amp;quot;와 &amp;ldquo;192.168.1.2&amp;rdquo; 2개의 IP 주소가 할당되어 있다면 DNS에 &amp;ldquo;ww1.devkuma.com&amp;quot;을 &amp;ldquo;192.168.1.1&amp;quot;으로 등록하고, &amp;ldquo;ww2.devkuma.com&amp;quot;을 &amp;ldquo;192.168.1.2&amp;quot;을 등록한다.&lt;/p&gt;
&lt;p&gt;하나의 Apache에서 2개의 호스트에 대한 설정을 하려면 &amp;ldquo;httpd.conf&amp;rdquo; 혹은 &amp;ldquo;http-vhosts.conf&amp;rdquo; 파일에 다음과 같이 작성한다. (관리 측면으로 본다면 &amp;ldquo;httpd.conf&amp;rdquo; 보다는 &amp;ldquo;http-vhosts.conf&amp;quot;에 작성하는 것이 맞을 것이다. 상세한 내용은 &amp;ldquo;&lt;a href=&#34;https://www.devkuma.com/books/pages/1404&#34;&gt;이름 기반 가상 호스트&lt;/a&gt;&amp;ldquo;를 참조한다.)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;VirtualHost 192.168.1.1:80&amp;gt;
    ServerName     ww1.devkuma.com
    ServerAdmin    devkuma@devkuma.com
    DocumentRoot   &amp;#34;${SRVROOT}/htdocs-ww1&amp;#34;
    CustomLog      logs/ww1.access.log common
    ErrorLog       logs/ww1.error.log
&amp;lt;/VirtualHost&amp;gt;

&amp;lt;VirtualHost 192.168.1.2:80&amp;gt;
    ServerName     ww2.devkuma.com
    ServerAdmin    devkuma@devkuma.com
    DocumentRoot   &amp;#34;${SRVROOT}/htdocs-ww2&amp;#34;
    CustomLog      logs/ww2.access.log common
    ErrorLog       logs/ww2.error.log
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IP 주소마다 필요한 설정해야 한다. 예를 들어, &amp;ldquo;ww1.devkuma.com&amp;quot;에 액세스하게 되면 &amp;ldquo;192.168.1.1&amp;quot;에 설정된 도큐먼트 루트 &amp;ldquo;${SRVROOT}/htdocs-ww1&amp;quot;에 있는 내용이 반환된다.&lt;/p&gt;
&lt;p&gt;VirtualHost마다 개별 설정을 작성할 수 있으므로 필요한 설정을 하도록 한다.  위에 작성된 것처럼 &amp;ldquo;ServerName&amp;quot;과 &amp;ldquo;DocumentRoot&amp;rdquo; 그리고 로그 관계는 개별적으로 설정하기를 추천한다. 물론 필수는 아니기에 공통된 설정하여도 상관은 없다.&lt;/p&gt;
&lt;p&gt;그 외에도 각 도큐먼트 루트 액세스 권한 설정이 필요하다.  &amp;ldquo;httpd.conf&amp;rdquo; 파일에서 아래와 같이 이 두 도큐먼트 루트에 적절한 권한을 설정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs-ww1&amp;#34;&amp;gt;
    Require all granted
&amp;lt;/Directory&amp;gt;

&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs-ww2&amp;#34;&amp;gt;
    Require all granted
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;실습&#34;&gt;실습&lt;/h2&gt;
&lt;p&gt;※ IP 기반 가상 호스트의 테스트가 가능한 환경이 없어서실제로 실습 및 확인 테스트을 못하고 작성되었다. 참고하길 바란다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 가상 호스트(VirtualHost) 설정 | 이름 기반 가상 호스트</title>
      <link>https://www.devkuma.com/docs/apache/%EC%9D%B4%EB%A6%84-%EA%B8%B0%EB%B0%98-%EA%B0%80%EC%83%81-%ED%98%B8%EC%8A%A4%ED%8A%B8/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EC%9D%B4%EB%A6%84-%EA%B8%B0%EB%B0%98-%EA%B0%80%EC%83%81-%ED%98%B8%EC%8A%A4%ED%8A%B8/</guid>
      <description>
        
        
        &lt;h3 id=&#34;이름-기반-가상-호스트&#34;&gt;이름 기반 가상 호스트&lt;/h3&gt;
&lt;p&gt;이름  기반의 경우 IP 주소는 한개가 아니어도 된다. 이름 기반의 경우는 클라이언트의 요청에 포함된 Hosts 헤더를 보고 어떤 호스트에 액세스할 것인지를 결정한다.&lt;/p&gt;
&lt;p&gt;먼저 &amp;ldquo;VirtualHost&amp;quot;를 사용하여 ServerName마다 설정하고 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;VirtualHost IP주소:포트-번호&amp;gt;
    ServerName www1.devkuma.com
    ....
&amp;lt;/VirtualHost&amp;gt;

&amp;lt;VirtualHost  IP주소:포트-번호&amp;gt;
    ServerName www2.devkuma.com
    ....
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;요청(request)에 포함된 Hosts 헤더를 참조하여 &amp;ldquo;ServerName&amp;quot;와 일치하는 블록을 찾는다. 일치하는 블록이 발견되면 그 블록의 설정이 적용된다.&lt;/p&gt;
&lt;p&gt;좀 더 구체적으로 설명을 하자면, &amp;ldquo;ww1.devkuma.com&amp;quot;과 &amp;ldquo;ww1.devkuma.com&amp;rdquo; 두 호스트를 1개 이상의 IP 주소에 할당하고, 각각에 대한 액세스에 대해 다른 동작을 하게 하려면 다음과 같이 설정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
    ServerName     ww1.devkuma.com
    ServerAdmin    devkuma@devkuma.com
    DocumentRoot   &amp;#34;${SRVROOT}/htdocs-ww1&amp;#34;
    CustomLog      logs/ww1.access.log common
    ErrorLog       logs/ww1.error.log
&amp;lt;/VirtualHost&amp;gt;

&amp;lt;VirtualHost *:80&amp;gt;
    ServerName     ww2.devkuma.com
    ServerAdmin    devkuma@devkuma.com
    DocumentRoot   &amp;#34;${SRVROOT}/htdocs-ww2&amp;#34;
    CustomLog      logs/ww2.access.log common
    ErrorLog       logs/ww2.error.log
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;※ 위의 &amp;ldquo;*:80&amp;quot;이라고 지정되어 있는 부분은 &amp;ldquo;192.168.1.2:80&amp;quot;와 같이 명시적으로 IP 주소를 지정해도 된다.&lt;/p&gt;
&lt;h2 id=&#34;실습&#34;&gt;실습&lt;/h2&gt;
&lt;p&gt;그럼 실제 실습을 해보도록 하겠다. 먼저 2개의 호스트에 대한 DNS 등록한다. 여기서는 DNS 대신에 &amp;ldquo;hosts&amp;rdquo; 파일에 다음과 같이 작성한다. (※ &amp;ldquo;hosts&amp;quot;파일에 대해서는 &amp;ldquo;&lt;a href=&#34;https://www.devkuma.com/books/pages/1377&#34;&gt;호스트 접근 설정 (hosts 파일)&lt;/a&gt;&amp;ldquo;를 참조한다.)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;127.0.0.1 ww1.devkuma.com
127.0.0.1 ww2.devkuma.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;다음은 &amp;ldquo;httpd.conf&amp;rdquo; 설정이다. 가상 호스트에 대한 설정은 &amp;ldquo;httpd-vhosts.conf&amp;rdquo; 파일에 작성하도록 하겠다.&lt;/p&gt;
&lt;p&gt;먼저 &amp;ldquo;httpd-vhosts.conf&amp;rdquo; 파일을 사용한다. &amp;ldquo;httpd.conf&amp;rdquo; 파일에서 &amp;ldquo;httpd-vhosts.conf&amp;quot;로 검색해 보면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Virtual hosts
#Include conf/extra/httpd-vhosts.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;Include&amp;rdquo; 앞에 있는 &amp;lsquo;#&amp;lsquo;를 제거하고 &amp;ldquo;httpd-vhosts.conf&amp;quot;을 읽도록 설정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Virtual hosts
Include conf/extra/httpd-vhosts.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;다음은 &amp;ldquo;httpd-vhosts.conf&amp;rdquo; 파일을 수정한다. &amp;ldquo;(Apache 설치 디렉터리)Apache24\conf\extra&amp;quot;디렉터리에 있다.&lt;/p&gt;
&lt;p&gt;다음과 같이 샘플로 작성되어 있을 것이다. (주석은 생략한다.)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
    ServerAdmin webmaster@dummy-host.example.com
    DocumentRoot &amp;#34;${SRVROOT}/docs/dummy-host.example.com&amp;#34;
    ServerName dummy-host.example.com
    ServerAlias www.dummy-host.example.com
    ErrorLog &amp;#34;logs/dummy-host.example.com-error.log&amp;#34;
    CustomLog &amp;#34;logs/dummy-host.example.com-access.log&amp;#34; common
&amp;lt;/VirtualHost&amp;gt;

&amp;lt;VirtualHost *:80&amp;gt;
    ServerAdmin webmaster@dummy-host2.example.com
    DocumentRoot &amp;#34;${SRVROOT}/docs/dummy-host2.example.com&amp;#34;
    ServerName dummy-host2.example.com
    ErrorLog &amp;#34;logs/dummy-host2.example.com-error.log&amp;#34;
    CustomLog &amp;#34;logs/dummy-host2.example.com-access.log&amp;#34; common
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여기서는 다음과 같이 변경한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
    ServerName     ww1.devkuma.com
    ServerAdmin    devkuma@devkuma.com
    DocumentRoot   &amp;#34;${SRVROOT}/htdocs-ww1&amp;#34;
    CustomLog      logs/ww1.access.log common
    ErrorLog       logs/ww1.error.log
&amp;lt;/VirtualHost&amp;gt;

&amp;lt;VirtualHost *:80&amp;gt;
    ServerName     ww2.devkuma.com
    ServerAdmin    devkuma@devkuma.com
    DocumentRoot   &amp;#34;${SRVROOT}/htdocs-ww2&amp;#34;
    CustomLog      logs/ww2.access.log common
    ErrorLog       logs/ww2.error.log
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;※ &amp;ldquo;httpd-vhosts.conf &amp;quot; 파일은 &amp;ldquo;Include&amp;quot;에 의해 &amp;ldquo;httpd.conf &amp;ldquo;파일에 로드된다. 그러므로 위의 로그 형식명을 지정하고 있는 &amp;ldquo;common&amp;quot;은 &amp;ldquo;httpd.conf&amp;rdquo; 파일에 정의된 &amp;ldquo;common&amp;quot;형식이 사용도 된다.&lt;/p&gt;
&lt;p&gt;또한 위에서 설정한 대로 도큐먼트 루트를 각각 생성하고, 별도의 HTML 파일을 아래와 같이 각각 작성하여 넣는다.&lt;/p&gt;
&lt;p&gt;{Apache 설치 디렉터리}/htdocs-ww1/index.html&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;WW1 Page&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;{Apache 설치 디렉터리}/htdocs-ww2/index.html&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;html&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;h1&amp;gt;WW2 Page&amp;lt;/h1&amp;gt;
&amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;httpd.conf&amp;rdquo; 파일에서 아래와 같이 이 두 도큐먼트 루트에 적절한 권한을 설정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs-ww1&amp;#34;&amp;gt;
    Require all granted
&amp;lt;/Directory&amp;gt;

&amp;lt;Directory &amp;#34;${SRVROOT}/htdocs-ww2&amp;#34;&amp;gt;
    Require all granted
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이제 준비는 완료하였다. 우선 &amp;ldquo;&lt;a href=&#34;http://ww1.devkuma.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://ww1.devkuma.com&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&amp;quot;에 액세스해 본다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_ww1.png&#34; alt=&#34;이름 기반 가상 호스트&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;ww1.devkuma.com&amp;quot;용의 도큐먼트 루트에 포함된 HTML 파일이 표시된다.&lt;/p&gt;
&lt;p&gt;다음은 &amp;ldquo;&lt;a href=&#34;http://ww2.devkuma.com/%22&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://ww2.devkuma.com/&#34;&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에 액세스해 본다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_ww2.png&#34; alt=&#34;이름 기반 가상 호스트&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;ww2.devkuma.com&amp;quot;용의 도큐먼트 루트에 포함된 HTML 파일이 표시된다.&lt;/p&gt;
&lt;p&gt;이것으로 하나의 IP 주소와 Apache를 사용하여 여러 도메인을 사용하여 호스트에 대해 별도의 페이지를 반환하는 방법에 대해 알아보았다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | 가상 호스트(VirtualHost) 설정 | 가상 호스트 별칭 설정 (ServerAlias)</title>
      <link>https://www.devkuma.com/docs/apache/%EA%B0%80%EC%83%81-%ED%98%B8%EC%8A%A4%ED%8A%B8-%EB%B3%84%EC%B9%AD-%EC%84%A4%EC%A0%95-serveralias/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EA%B0%80%EC%83%81-%ED%98%B8%EC%8A%A4%ED%8A%B8-%EB%B3%84%EC%B9%AD-%EC%84%A4%EC%A0%95-serveralias/</guid>
      <description>
        
        
        &lt;h2 id=&#34;가상-호스트-별칭-설정-serveralias&#34;&gt;가상 호스트 별칭 설정 (ServerAlias)&lt;/h2&gt;
&lt;p&gt;이름 기반 가상 호스트의 설정이 되었을 때, 등록되지 않은 호스트명으로 액세스된 경우에 어떻게 되는 보도록 하겠다.&lt;/p&gt;
&lt;p&gt;예를 들어, DNS (또는 hosts 파일)의 다음과 같은 작성이 되어 있다고 하자.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;127.0.0.1 localhost
127.0.0.1 ww1.devkuma.com
127.0.0.1 ww2.devkuma.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이에 대해 가상 호스트가 &amp;ldquo;ww1.devkuma.com&amp;quot;과 &amp;ldquo;ww2.devkuma.com&amp;quot;만 설정이 되어 있다고 하자.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
    ServerName     ww1.devkuma.com
    ServerAdmin    devkuma@devkuma.com
    DocumentRoot   &amp;#34;${SRVROOT}/htdocs-ww1&amp;#34;
    CustomLog      logs/ww1.access.log common
    ErrorLog       logs/ww1.error.log
&amp;lt;/VirtualHost&amp;gt;

&amp;lt;VirtualHost *:80&amp;gt;
    ServerName     ww2.devkuma.com
    ServerAdmin    devkuma@devkuma.com
    DocumentRoot   &amp;#34;${SRVROOT}/htdocs-ww2&amp;#34;
    CustomLog      logs/ww2.access.log common
    ErrorLog       logs/ww2.error.log
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이러한 경우에 &amp;ldquo;http://localhost&amp;quot;에 대한 액세스가 되면, 먼저 등록되어 있는 가상 호스트 설정인 기본값으로 적용된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_localhost_ww1.png&#34; alt=&#34;가상 호스트 별칭 설정 (ServerAlias)&#34;&gt;&lt;/p&gt;
&lt;p&gt;여기서는 먼저 등록된 가상 호스트 &amp;ldquo;ww1.devkuma.com&amp;quot;가 표시되었다.&lt;/p&gt;
&lt;p&gt;이러한 때, 가상 호스트 설정이 되어 있지 않은 호스트에 대해 기본이 아닌 호스트의 설정을 적용할 수 있다. &amp;ldquo;ServerAlias&amp;quot;를 사용하여 가상 호스트 설정에 별칭으로 등록한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ServerAlias 호스트명1 호스트명2 ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여러 호스트명을 등록하고자하는 경우에는 공백으로 구분 이어서 작성한다.&lt;/p&gt;
&lt;h2 id=&#34;실습&#34;&gt;실습&lt;/h2&gt;
&lt;p&gt;그럼 실제 실습을 해보도록 하겠다.  &amp;ldquo;http://localhost/&amp;ldquo;에 대한 액세스도 &amp;ldquo;ww2.devkuma.com &amp;ldquo;설정이 적용되도록 ww2.devkuma.com&amp;quot;에 ServerAlias으로 &amp;ldquo;localhost&amp;quot;를 등록한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;VirtualHost *:80&amp;gt;
    ServerName     ww1.devkuma.com
    ServerAdmin    devkuma@devkuma.com
    DocumentRoot   &amp;#34;${SRVROOT}/htdocs-ww1&amp;#34;
    CustomLog      logs/ww1.access.log common
    ErrorLog       logs/ww1.error.log
&amp;lt;/VirtualHost&amp;gt;

&amp;lt;VirtualHost *:80&amp;gt;
    ServerName     ww2.devkuma.com
    ServerAdmin    devkuma@devkuma.com
    DocumentRoot   &amp;#34;${SRVROOT}/htdocs-ww2&amp;#34;
    CustomLog      logs/ww2.access.log common
    ErrorLog       logs/ww2.error.log
    ServerAlias    localhost
&amp;lt;/VirtualHost&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이제 준비는 완료하였다. Apache를 재시작한 후 다시 &amp;ldquo;http://localhost/&amp;ldquo;에 액세스해 본다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_localhost_ww2.png&#34; alt=&#34;가상 호스트 별칭 설정 (ServerAlias)&#34;&gt;&lt;/p&gt;
&lt;p&gt;이번에는 기본 설정이 아닌 별칭 설정된 &amp;ldquo;ww2.devkuma.com&amp;quot;가 표시되었다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Tomcat과 연동 (mod_proxy_ajp)</title>
      <link>https://www.devkuma.com/docs/apache/tomcat%EA%B3%BC-%EC%97%B0%EB%8F%99-modproxyajp/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/tomcat%EA%B3%BC-%EC%97%B0%EB%8F%99-modproxyajp/</guid>
      <description>
        
        
        &lt;p&gt;Apache와 Tomcat을 연동시키는 방법에 대해 알아 보겠다. 연동에는 &amp;ldquo;mod_proxy_ajp&amp;quot;를 사용한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Tomcat과 연동 (mod_proxy_ajp) | Tomcat에 간단한 웹생성</title>
      <link>https://www.devkuma.com/docs/apache/tomcat%EC%97%90-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%9B%B9%EC%83%9D%EC%84%B1/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/tomcat%EC%97%90-%EA%B0%84%EB%8B%A8%ED%95%9C-%EC%9B%B9%EC%83%9D%EC%84%B1/</guid>
      <description>
        
        
        &lt;p&gt;먼저 Tomcat 단독으로 동작하도록 설정한다. 간단히 Tomcat에서 &amp;ldquo;Tomcat Page&amp;quot;라고만 표시하는 JSP를 Apache 통해 작동시키는 것을 목표로 한다.&lt;/p&gt;
&lt;p&gt;이번에 만들 웹 프로그램은 &amp;ldquo;{Tomcat 설치 디렉터리}/webapps&amp;quot;안에 hello라는 디렉터리를 만든다,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\apache-tomcat-9.0.29\webapps&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;dir&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C 드라이브의 볼륨에는 이름이 없습니다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 볼륨 일련 번호: XXXX-XXXX
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C:\apache\apache-tomcat-9.0.29\webapps 디렉터리
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-08  오전 02:38    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-08  오전 02:38    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          ..
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 02:19    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          docs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 02:19    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          examples
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-08  오전 02:40    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          hello &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;------------------ 새로 생성한 디렉터리이다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 02:19    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          host-manager
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 02:19    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          manager
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2019-12-07  오전 02:19    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;DIR&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;          ROOT
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               0개 파일                   0 바이트
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               8개 디렉터리  450,057,445,376 바이트 남음
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\apache\apache-tomcat-9.0.29\webapps&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;생성된 디렉터리에 &amp;ldquo;{Tomcat 설치 디렉터리}/webapps/hello/WEB-INF/web.xml&amp;rdquo; 설정 파일을 생성하여, 아래와 같이 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;web-app&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;xmlns=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://java.sun.com/xml/ns/javaee&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;xmlns:xsi=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://www.w3.org/2001/XMLSchema-instance&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;xsi:schemaLocation=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#c4a000&#34;&gt;version=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;3.0&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;welcome-file-list&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;welcome-file&amp;gt;&lt;/span&gt;index.jsp&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/welcome-file&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/welcome-file-list&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;/web-app&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그러고 화면에 표시할 &amp;ldquo;{Tomcat 설치 디렉터리}/webapps/hello/index.jsp&amp;rdquo; 파일도 생성하여, 아래와 같이 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;Tomcat Page&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이제 톰켓을 기동하기 위해 &amp;ldquo;{Tomcat 설치 디렉터리}/bin/startup.bat&amp;rdquo; 명령 파일을 실행시킨다. 그러면 아래와 같이 콘솔창이 표시될 것이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_tomcat.png&#34; alt=&#34;Tomcat에 간단한 웹생성&#34;&gt;&lt;/p&gt;
&lt;p&gt;화면이 표시되는지 브라우저에서 &amp;ldquo;http://localhost:8080/hello/&amp;ldquo;에 액세스 해본다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_tomcat_page.png&#34; alt=&#34;Tomcat에 간단한 웹생성&#34;&gt;&lt;/p&gt;
&lt;p&gt;위와 같이 표시되었다면 준비가 완료 되었다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Tomcat과 연동 (mod_proxy_ajp) | 8080 포트를 중지하고 AJP/1.3 프로토콜 확인</title>
      <link>https://www.devkuma.com/docs/apache/8080-%ED%8F%AC%ED%8A%B8%EB%A5%BC-%EC%A4%91%EC%A7%80%ED%95%98%EA%B3%A0-ajp/1-3-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C-%ED%99%95%EC%9D%B8/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/8080-%ED%8F%AC%ED%8A%B8%EB%A5%BC-%EC%A4%91%EC%A7%80%ED%95%98%EA%B3%A0-ajp/1-3-%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C-%ED%99%95%EC%9D%B8/</guid>
      <description>
        
        
        &lt;p&gt;Apache를 통해 액세스로 변경하기 위해 현재 8080 포트에서 실행하고 있는 Tomcat에 직접 연결을 못하게 한다.&lt;/p&gt;
&lt;p&gt;설정을 위해 &amp;ldquo;{Tomcat 설치 디렉터리}/conf&amp;quot;에 있는 &amp;ldquo;server.xml&amp;quot;를 텍스트 편집기로 연다. 그리고 &amp;ldquo;8080&amp;rdquo; 로 검색하면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;lt;Connector&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;port=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;8080&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;protocol=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;HTTP/1.1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#c4a000&#34;&gt;connectionTimeout=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;20000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               &lt;span style=&#34;color:#c4a000&#34;&gt;redirectPort=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;8443&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 부분 전체를 주석 처리하도록 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-xml&#34; data-lang=&#34;xml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!--
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    &amp;lt;Connector port=&amp;#34;8080&amp;#34; protocol=&amp;#34;HTTP/1.1&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;               connectionTimeout=&amp;#34;20000&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;               redirectPort=&amp;#34;8443&amp;#34; /&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;--&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이제 8080 포트에서 Tomcat에 연결하려고 하면 연결할 수 없게 되었다.&lt;/p&gt;
&lt;p&gt;설정이 완료되면 Tomcat을 다시 시작하여  &amp;ldquo;http:// localhost:8080/hello/helloworld&amp;quot;브라우저에서 액세스 해본다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_tomcat_err_connect_.png&#34; alt=&#34;8080 포트 중지&#34;&gt;&lt;/p&gt;
&lt;p&gt;그러고&amp;quot;server.xml&amp;quot;파일에 다음과 같은 내용이 있는지 검색한다. &amp;ldquo;AJP&amp;quot;로 검색하면 나올 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    &amp;lt;!-- Define an AJP 1.3 Connector on port 8009 --&amp;gt;
    &amp;lt;Connector port=&amp;#34;8009&amp;#34; protocol=&amp;#34;AJP/1.3&amp;#34; redirectPort=&amp;#34;8443&amp;#34; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Apache에서 Tomcat에 연결을 &amp;ldquo;AJP/1.3&amp;quot;라고 프로토콜을 사용하여 8009 포트로 접속하게 될 것이다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Tomcat과 연동 (mod_proxy_ajp) | Apache 설정 (mod_proxy_ajp을 사용하여 연결)</title>
      <link>https://www.devkuma.com/docs/apache/apache-%EC%84%A4%EC%A0%95-modproxyajp%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EC%97%B0%EA%B2%B0/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/apache-%EC%84%A4%EC%A0%95-modproxyajp%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%EC%97%B0%EA%B2%B0/</guid>
      <description>
        
        
        &lt;p&gt;이제 Apache 설정만 하면 된다. 연동을 하기 위해서는 &amp;ldquo;mod_proxy_ajp&amp;quot;을 사용하므로 먼저 &amp;lsquo;mod_proxy&amp;rsquo;과 &amp;lsquo;mod_proxy_ajp &amp;ldquo;모듈을 로드하도록 변경한다.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;httpd.conf&amp;quot;파일에서 &amp;ldquo;mod_proxy_ajp&amp;quot;로 검색하면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#LoadModule proxy_module modules/mod_proxy.so
#LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;주석 처리가 되어 있다면 앞에 &amp;ldquo;#&amp;ldquo;를 제거합한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이로써 &amp;lsquo;mod_proxy&amp;rsquo;과 &amp;lsquo;mod_proxy_ajp &amp;ldquo;모듈이 로드되도록 변경되었다.&lt;/p&gt;
&lt;p&gt;다음 톰켓에 대한 요청이 있을 경우 설정한다. &amp;ldquo;http://localhost/hello/&amp;ldquo;로 시작하는 URL으로 액세스가 되면 Tomcat의 파일을 호출하도록 할 것이다. 그러기 위해 먼저 섹션 컨테이너로 &amp;ldquo;Location&amp;quot;을 사용하여 다음과 같이 작성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Location /hello/&amp;gt;

&amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;※ 섹션 컨테이너에 대해서는 &amp;ldquo;&lt;a href=&#34;https://www.devkuma.com/books/pages/1376&#34;&gt;접근 허용 범위 설정 (섹션 컨테이너)&lt;/a&gt;&amp;ldquo;를 참조한다.&lt;/p&gt;
&lt;p&gt;Tomcat에 액세스를 하도록 하는 설정을 &lt;code&gt;&amp;lt;Location&amp;gt;&lt;/code&gt; 안에 작성한다. Tomcat는 AJP/1.3 프로토콜으로 8009 포트를 사용하여 연결을 하기에 다음과 같이 작성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Location /hello/&amp;gt;
    ProxyPass ajp://localhost:8009/hello/
&amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이것으로 &amp;ldquo;httpd.conf&amp;rdquo; 파일에 작성하면 완료되었다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_tomcat_ok.png&#34; alt=&#34;mod_proxy_ajp을 사용하여 연결&#34;&gt;&lt;/p&gt;
&lt;p&gt;위와 같이 표시되면 Apache 통한 Tomcat 호출을 성공하였다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 서버 관리 (mod_status)</title>
      <link>https://www.devkuma.com/docs/apache/apache-%EC%84%9C%EB%B2%84-%EA%B4%80%EB%A6%AC-modstatus/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/apache-%EC%84%9C%EB%B2%84-%EA%B4%80%EB%A6%AC-modstatus/</guid>
      <description>
        
        
        &lt;p&gt;Apache의 작동 상황과 설정에 대한 정보를 클라이언트 측에서 보는 등의 Apache 서버 관리에 대해 설명한다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 서버 관리 (mod_status) | 작동 상태 확인 (server-status)</title>
      <link>https://www.devkuma.com/docs/apache/%EC%9E%91%EB%8F%99-%EC%83%81%ED%83%9C-%ED%99%95%EC%9D%B8-server-status/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%EC%9E%91%EB%8F%99-%EC%83%81%ED%83%9C-%ED%99%95%EC%9D%B8-server-status/</guid>
      <description>
        
        
        &lt;p&gt;Apache에서는 &amp;ldquo;mod_status&amp;rdquo; 모듈에 &amp;ldquo;server-status&amp;quot;라는 핸들러를 제공한다. (핸들러는 있는 동작을 시키는 함수 같은 것이다. 프로그램의 모임이라고 생각하면 된다.)&lt;/p&gt;
&lt;p&gt;&amp;ldquo;server-status&amp;rdquo; 핸들러를 호출하여 Apache의 동작 상황을 확인할 수 있다. 그럼 브라우저에서 &amp;ldquo;server-status&amp;rdquo; 핸들러를 호출하여 동작 상황을 볼 수 있도록 해보자.&lt;/p&gt;
&lt;h2 id=&#34;mod_status-모듈-로드&#34;&gt;mod_status 모듈 로드&lt;/h2&gt;
&lt;p&gt;먼저 &amp;ldquo;mod_status&amp;quot;모듈을 이용할 수 있도록 &amp;ldquo;LoadModule&amp;quot;에서 모듈을 로드한다. &amp;ldquo;httpd.conf&amp;rdquo; 파일에서 &amp;ldquo;mod_status&amp;quot;로 검색하면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#LoadModule status_module modules/mod_status.so
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;LoadModule&amp;rdquo; 앞부분에 &amp;ldquo;#&amp;ldquo;이 있다면 &amp;ldquo;#&amp;ldquo;을 제거한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;LoadModule status_module modules/mod_status.so
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;다음은 &amp;ldquo;server-status&amp;rdquo; 핸들러를 호출하는 설정을 한다. &amp;ldquo;Include&amp;quot;을 사용하여 &amp;ldquo;httpd-info.conf&amp;rdquo; 파일을 로드한다. &amp;ldquo;httpd.conf&amp;rdquo; 파일에서 &amp;ldquo;httpd-info.conf&amp;quot;로 검색하면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Real-time info on requests and configuration
#Include conf/extra/httpd-info.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;Include&amp;rdquo; 앞부분에 &amp;ldquo;#&amp;ldquo;이 있다면 &amp;ldquo;#&amp;ldquo;을 제거한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Real-time info on requests and configuration
Include conf/extra/httpd-info.conf
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;httpd-infoconf-파일-확인&#34;&gt;httpd-info.conf 파일 확인&lt;/h2&gt;
&lt;p&gt;다음은 &amp;ldquo;httpd-info.conf&amp;rdquo; 파일에서  &amp;ldquo;/server-status&amp;quot;로 검색하면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Location /server-status&amp;gt;
    SetHandler server-status
    Require host .example.com
    Require ip 127
&amp;lt;/Location&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;Location&amp;quot;을 사용하여 URL 경로를 &amp;ldquo;/server-status&amp;quot;으로 설정되었고,  &amp;ldquo;/ server-status&amp;rdquo; 라고 URL 경로로 호출 할때 &amp;ldquo;server-status&amp;rdquo; 핸들러를 호출하여 실행 설정을 &amp;ldquo;SetHandler&amp;quot;가 지정되어 있다.&lt;/p&gt;
&lt;p&gt;이와 같이 작성되면  브라우저에서 &amp;ldquo;http://localhost/server-status&amp;quot;라고 요청하게 되면 &amp;ldquo;server-status&amp;rdquo; 핸들러를 실행하고 결과를 돌려준다.
또한 서버의 작동 상황은 누구에게나 공개하는 것은 아니다. 그래서 로컬 호스트에서만 액세스를 허용한다.&lt;/p&gt;
&lt;h2 id=&#34;실행-확인&#34;&gt;실행 확인&lt;/h2&gt;
&lt;p&gt;로컬에서 &amp;ldquo;http://127.0.0.1/server-status&amp;quot;에 액세스하십시오.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_status.png&#34; alt=&#34;server-status&#34;&gt;&lt;/p&gt;
&lt;p&gt;이 처럼 URL에 접근할 수 있다면 위와 같이 Apache의 작동 상태를 모니터링 할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;지정된-시간에-자동-업데이트&#34;&gt;지정된 시간에 자동 업데이트&lt;/h2&gt;
&lt;p&gt;로컬 호스트에서 접속할 때 URL에 페라미터로 &amp;ldquo;?refresh=초&amp;quot;와 같이 넣으면, 지정한 초마다 최신 정보를 다시 받아오게 된다.&lt;/p&gt;
&lt;p&gt;그럼 5초 단위로 자동 업데이트하도록 &amp;ldquo;http://127.0.0.1/server-status?refresh=5&amp;quot;라고 URL 입력한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_status_refresh.png&#34; alt=&#34;server-status&#34;&gt;&lt;/p&gt;
&lt;p&gt;위와 같이 5초 단위로 자동으로 최신의 정보를 얻을 다시 받아와 표시하는 것을 확인할 수 있다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Apache | Apache 서버 관리 (mod_status) | 확장 상태 표시 (ExtendedStatus)</title>
      <link>https://www.devkuma.com/docs/apache/%ED%99%95%EC%9E%A5-%EC%83%81%ED%83%9C-%ED%91%9C%EC%8B%9C-extendedstatus/</link>
      <pubDate>Wed, 13 Nov 2019 23:46:40 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/apache/%ED%99%95%EC%9E%A5-%EC%83%81%ED%83%9C-%ED%91%9C%EC%8B%9C-extendedstatus/</guid>
      <description>
        
        
        &lt;p&gt;&amp;ldquo;server-status&amp;rdquo; 핸들러를 실행할 때 &amp;ldquo;ExtendedStatus&amp;quot;에 &amp;ldquo;On&amp;quot;을 설정하면, 현재 처리하고 있는 URL 및 자원에 대한 정보도 함께 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;httpd-info.conf&amp;rdquo; 파일에서 &amp;ldquo;ExtendedStatus&amp;quot;로 검색하면, 다음과 같은 내용을 찾을 수 있을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#
# ExtendedStatus controls whether Apache will generate &amp;#34;full&amp;#34; status
# information (ExtendedStatus On) or just basic information (ExtendedStatus
# Off) when the &amp;#34;server-status&amp;#34; handler is called. The default is Off.
#
#ExtendedStatus On
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;기본으로 Off라고 설명이 되어 있다. &amp;ldquo;ExtendedStatus On&amp;quot;의 &amp;ldquo;#&amp;ldquo;을 제거하여 확장 상태를 &amp;ldquo;On&amp;quot;으로 설정하면 상세 접보를 확인 할 수 있게 된다.&lt;/p&gt;
&lt;p&gt;그럼 &amp;ldquo;On&amp;quot;으로 설정하겨 &amp;ldquo;http://localhost/server-status&amp;quot;에 액세스한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/apache/apache_ExtendedStatus.png&#34; alt=&#34;ExtendedStatus&#34;&gt;&lt;/p&gt;
&lt;p&gt;화면의 맨 마지막보다 자세한 정보가 표시된 것을 볼 수 있다.&lt;/p&gt;

      </description>
      
      <category>Apache</category>
      
      <category>WEB</category>
      
    </item>
    
  </channel>
</rss>
