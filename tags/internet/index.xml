<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devkuma – Internet</title>
    <link>https://www.devkuma.com/tags/internet/</link>
    <image>
      <url>https://www.devkuma.com/tags/internet/logo/180x180.jpg</url>
      <title>Internet</title>
      <link>https://www.devkuma.com/tags/internet/</link>
    </image>
    <description>Recent content in Internet on devkuma</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <managingEditor>redfreek2c@gmail.com (kimkc)</managingEditor>
    <webMaster>redfreek2c@gmail.com (kimkc)</webMaster>
    <copyright>The devkuma</copyright>
    
	  <atom:link href="https://www.devkuma.com/tags/internet/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>인터넷 개요</title>
      <link>https://www.devkuma.com/docs/internet/intro/</link>
      <pubDate>Sun, 03 Apr 2022 17:26:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/internet/intro/</guid>
      <description>
        
        
        &lt;h2 id=&#34;인터넷이란&#34;&gt;인터넷이란?&lt;/h2&gt;
&lt;p&gt;인터넷(Internet)이란? Interconnect Network의 합성어로 서로 연결된 네트워크를 뜻하며, 전세계에 걸처 수많은 컴퓨터들이 연결된 네트워크들의 집합체를 말한다. 인터넷에 연결된 컴퓨터들은 TCP/IP(Transmission Control Protocol/Internet Protocol)라는 통신 프로토콜을 사용하여 연결되어 있다. 인터넷을 이루는 각 컴퓨터들은 IP 주소라고 부르는 고유의 컴퓨터 주소를 가지고 있으며, 케이블 또는 인공 위성 등의 통신 수단을 통해 서로 연결되어 있다.&lt;/p&gt;
&lt;p&gt;이로 인해 전세계의 컴퓨터 사용자들은 인터넷을 통해서 언제 어디서나 필요한 정보를 쉽게 얻을 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;인터넷의-역사&#34;&gt;인터넷의 역사&lt;/h2&gt;
&lt;p&gt;인터넷의 시작은 미국 국방성의 ARPANet(알파넷, Advanced Research Project Agency Network)이 처음으로 등작한 1969년으로 거슬러 올라간다. 초기의 ARPANet은 핵전쟁 발발 시 어느 한 시스템이 파괴되어도 다른 시스템들을 통하여 완벽하게 연결하여 보완할 수 있는 네트워크로서 미국 4개 대학교(스텐포드, UCLA, UC 산타바바라, 유타주립대)의 컴퓨터 시스템을 연결하는 것으로부터 시작되었다. 그 후 미국의 주요 정부 기관과 교육 기관들을 연결하면서 점차 확대되어 왔고, 1983년 ARPANet은 군사적인 목적으로 사용되던 부분이 MILNet으로, 민간용도 부분이 인터넷으로 분리되었다.&lt;/p&gt;
&lt;h2 id=&#34;인터넷의-주소-체계&#34;&gt;인터넷의 주소 체계&lt;/h2&gt;
&lt;p&gt;인터넷에서 정보를 교환하기 위해서는 각각의 컴퓨터에서 주소나 이름을 부여하여 구분할 필요성이 있다. 인터넷에서 제공하는 주소 체계로는 IP 주소와 도메인네임이 있다.&lt;/p&gt;
&lt;p&gt;인터넷을 유지하기 위해서는 인터넷 주소를 관리해야 하며 새로운 인터넷 기술과 표준화를 담당할 기관이 필요한데, NIC(Network Information Center)는 IP 주소와 도메임네임과 같은 네트워크와 컴퓨터들으 주소를 등록하고 관리하는 국제적인 기관으로서 우리 나라에서는 NIC의 산하 기관인 KRNIC가 인터넷 주소와 관리르 담당한다.&lt;/p&gt;
&lt;h3 id=&#34;ip-주소&#34;&gt;IP 주소&lt;/h3&gt;
&lt;p&gt;IP 주소는 컴퓨터의 주소를 숫자로 나타내는 방식이다. 그 구성은 최상의 주소로 부터 &amp;lsquo;.&amp;lsquo;으로 구별하여 4개의 영역을 차례로 나열하는 방식이다. 예를 들어 구글의 IP 주소는 &amp;lsquo;172.217.174.100&amp;rsquo;과 같이 나타낸다. 그러나 이 방식은 외우거나 사용하기에 불편하여 통상 도메인네임을 사용한다.&lt;/p&gt;
&lt;h2 id=&#34;url에-대한-이해&#34;&gt;URL에 대한 이해&lt;/h2&gt;
&lt;p&gt;인터넷사의 모든 웹 문서들은 각각의 어드레스 및 독특하게 보관되는 방식인 URL(Uniform Resource Locator)을 가지고 있다. 모든 홈페이지들은 개개의 사람들이 유일한 자신의 지문을 가지고 있는 것과 같이 유일한 URL을 가지고 있다. 즉, 인터넷 상의 자료를 가져오기 위해 어떤 자료가 어디에 있는지 나타낼 수 있는 방법이 있어야 한다. 따라서 URL은 인터넷에 있는 정보의 위치를 표기하기 위한 방법이다. 1990년부터 사용되어 왔으며 현재에는 그것이 표준으로 자리잡았다.&lt;/p&gt;
&lt;p&gt;URL은 식별성과 컴퓨터 네트웍 내에 항목들에 대한 주소 명기를 위해 문자를 사용하여 기록한다. 즉, URL은 한 문서가 있는 위치 정보(location information)를 알려주는 것이며, 인터넷 웹브라우저는 그 위치에 있는 URL을 열어 그 문서를 보여준다. 대부분 위치 정보는 강조된 연결고리에 작성되어 있는 때문에 각 문서 및 홈페이지의 URL을 기억할 필요가 있다.&lt;/p&gt;

      </description>
      
      <category>Network</category>
      
      <category>Internet</category>
      
    </item>
    
    <item>
      <title>Telnet</title>
      <link>https://www.devkuma.com/docs/telnet/</link>
      <pubDate>Sun, 03 Apr 2022 18:02:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/telnet/</guid>
      <description>
        
        
        &lt;h2 id=&#34;telnet&#34;&gt;Telnet&lt;/h2&gt;
&lt;p&gt;인터넷의 Telnet 서비스란 다른 컴퓨터 특히 UNIX 운영 체제를 쓰는 컴퓨터에 접속하여 마치 그 컴퓨터에 직접 키보드와 모니터를 연결한 것과 같이 사용할 수 있도록 해주는 서비스를 말한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;인터넷을 통하여 원격지의 호스트 컴퓨터에 접속할 때에 지원되는 인터넷 표준 프로토콜이다/&lt;/li&gt;
&lt;li&gt;TCP/IP 기반의 프로토콜이다.&lt;/li&gt;
&lt;li&gt;원격 터미널 접속 서비스이다.&lt;/li&gt;
&lt;li&gt;TCP 포트 번호는 23번을 기본으로 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그래픽 화면이 아닌 텍스트 화면만을 표시할 수 있지만 단순하게 빠른 속도에다 직접 UNIX를 사용할 수 있다는 장점으로 아직까지 많이 사용되고 있다. 그러나 Telnet을 잘 사용하기 위해서는 UNIX의 명령어를 익혀야 하고, 단지 텍스트 화면만을 사용할 수 있기 때문에 특별한 지식이 없이는 사용하기에는 어렵다는 단점이 있다.&lt;/p&gt;
&lt;h2 id=&#34;telnet-특징&#34;&gt;Telnet 특징&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Telnet은 일종의 터미널 에뮬레이션 프로토콜로 NVT(Network Virtual Terminal) 라고 불리는 가상 터미널의 개념 사용한다.&lt;/li&gt;
&lt;li&gt;터미널과 호스트와의 일대일 대칭적인 관계이다.&lt;/li&gt;
&lt;li&gt;추가적인 옵션 협상 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;nvtnetwork-virtual-terminal-란-&#34;&gt;NVT(Network Virtual Terminal) 란 ?&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Telnet 프로토콜의 가장 기본으로 접속하고자 하는 원격지 시스템과 로컬 시스템의 버전이 상이할 경우 데이터 형식이 다르므로 원활한 통신을 위해 데이터를 변환시켜주는 가상장치이다.&lt;/li&gt;
&lt;li&gt;NVT 는 기본적인 터미널 제어 문자들 정의한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/internet/telnet_nvt.jpeg&#34; alt=&#34;NVT(Network Virtual Terminal)&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;telnet-동작-방식&#34;&gt;Telnet 동작 방식&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/internet/telnet_flow.jpeg&#34; alt=&#34;Telnet 동작 방식&#34;&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;클라이언트는 원격 로그인을 통해 원격지 시스템(서버)에 TCP 연결을 한다.(기본 포트 23번)&lt;/li&gt;
&lt;li&gt;원격지 시스템은 연결된 클라이언트에게 가상의 터미널 제공한다.&lt;/li&gt;
&lt;li&gt;클라이언트는 실제 터미널인 것처럼 원격지 시스템에 명령어를 실행한다.&lt;/li&gt;
&lt;li&gt;원격지 시스템은 클라이언트의 명령을 수행하여 결과를 다시 클라이언트에서 전송한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;telnet-접속용-클라이언트&#34;&gt;Telnet 접속용 클라이언트&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Windows에 기본으로 내장된 서버 및 클라이언트
&lt;ul&gt;
&lt;li&gt;보안적으로 문제로 기본적으로 기능이 비활성화 되어 있다. 사용하려면 설정으로 활성화를 시켜 줘야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Putty, SecureCRT, Xshell 등등 이용하여 편히라게 사용 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://egloos.zum.com/guswl47/v/6481497&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Telnet 프로토콜 분석 및 패킷 분석 (1)&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Network</category>
      
      <category>Internet</category>
      
      <category>Telnet</category>
      
    </item>
    
    <item>
      <title>웹(Web)</title>
      <link>https://www.devkuma.com/docs/web/</link>
      <pubDate>Sun, 03 Apr 2022 18:02:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/web/</guid>
      <description>
        
        
        &lt;h2 id=&#34;웹이란&#34;&gt;웹이란?&lt;/h2&gt;
&lt;p&gt;인터넷 사용시에 가장 자주 접하는 용어는 월드 와이드 웹(World Wide Web, WWW)일 것이다. 웹은 영어 단어 첫 글자만 따사 WWW 또는 웹(Web)이라고도 부른다. 웹은 거미줄이라는 뜻을 가진 웹을 상징한다.&lt;/p&gt;
&lt;p&gt;웹은 그래픽으로 구현되어 있기 때문에 정보 검색이 편리하다는 것이 가장 큰 장점 중의 하나이며, 화면에 텍스트와 그래픽을 동시에 표현할 수 있고, 뛰어난 사용자 인터페이스의 덕분으로 텍스트, 그래픽, 사운드, 동영상 등을 브라우저 상에서 쉽게 처리할 수 있게 되었다.&lt;/p&gt;
&lt;h2 id=&#34;웹-브라우저&#34;&gt;웹 브라우저&lt;/h2&gt;
&lt;p&gt;웹 브라우저(Web Browser)란 사용자 인터넷을 이용하여 웹 서버의 하이퍼테스트 문서를 볼 수 있도록 해주는 클라이언트 프로그램으로서 문자뿐만 아니라 멀티미디어 자료를 처리할 수 있는 하이이퍼미디어의 기능도 가지고 있다. 사용자가 음성이나 영상 정보를 원할 때 필요한 프로그램들을 불러와 실행함으러써 웹의 다양한 자원들을 다룰 수 있다.&lt;/p&gt;
&lt;p&gt;웹 브라우저가 제공하는 기본적인 기능들에는 웹 페이지 열기, 최근 방문한 URL(Uniform Resource Locator)의 목록 제공, 자주 방문하는 URL의 기억과 관리. 웬 페이지의 저장과 인쇄 등이 있다. 이 웹 브라우저가 없다면 아무리 인터넷에 연결되어 있어도 인터넷에 있는 홈페이지들을 볼 수가 없다.&lt;/p&gt;
&lt;h3 id=&#34;웹-브라우저의-종류&#34;&gt;웹 브라우저의 종류&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Google Chrome.&lt;/li&gt;
&lt;li&gt;Mozilla Firefox.&lt;/li&gt;
&lt;li&gt;Chromium Microsoft Edge.&lt;/li&gt;
&lt;li&gt;Opera 브라우저&lt;/li&gt;
&lt;li&gt;Vivaldi 브라우저&lt;/li&gt;
&lt;li&gt;네이버 웨일&lt;/li&gt;
&lt;li&gt;Brave 브라우저&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;web-동작-방식&#34;&gt;WEB 동작 방식&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/internet/web_flow.png&#34; alt=&#34;WEB 동작 방식&#34;&gt;&lt;br&gt;
이미지 출처: &lt;a href=&#34;http://tcpschool.com/webbasic/works&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://tcpschool.com/webbasic/works&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;사용자가 브라우저에 URL을 입력한다.&lt;/li&gt;
&lt;li&gt;브라우저는 DNS를 통해 서버의 IP 주소를 찾는다.&lt;/li&gt;
&lt;li&gt;HTTP 프로토콜을 사용하여 HTTP 요청 메세지를 생성한다.&lt;/li&gt;
&lt;li&gt;TCP/IP 연결을 통해 HTTP 요청 메세지를 생성한다.&lt;/li&gt;
&lt;li&gt;서버는 HTTP 프로토콜을 활용해 HTTP 응답 메세지를 생성한다.&lt;/li&gt;
&lt;li&gt;TCP/IP 연결을 통해 요청한 컴퓨터로 전송한다.&lt;/li&gt;
&lt;li&gt;도착한 HTTP 응답 메세지는 웹 페이지 데이터로 반환되고, 웹 브라우저에 의해 출력되어 사용자가 볼 수 있게 된다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&#34;웹-접근성의-국제-표준&#34;&gt;웹 접근성의 국제 표준&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;웹 접근성을 높이기 위해 고안된 웹 표준은 표준적으로 사용되는 기술이나 규칙을 의미한다.&lt;/li&gt;
&lt;li&gt;웹 표준을 정하기 위하여 W3C(World Wide Web Consortium)이 설립되었다.&lt;/li&gt;
&lt;li&gt;웹 표준으로 구조 언어인 HTML, 표현 언어인 CSS, 동작 언어인 Script를 지정하였다.&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Network</category>
      
      <category>Internet</category>
      
      <category>Web</category>
      
    </item>
    
    <item>
      <title>FTP (File Transfer Protocol)</title>
      <link>https://www.devkuma.com/docs/ftp/</link>
      <pubDate>Sun, 03 Apr 2022 18:02:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/ftp/</guid>
      <description>
        
        
        &lt;h2 id=&#34;ftp&#34;&gt;FTP&lt;/h2&gt;
&lt;p&gt;FTP는파일 전송 프로토콜(File Transfer Protocol)의 약자로 TCP/IP 네트워크 상에서 컴퓨터들이 파일을 교환하기 위해 1971년에 최초로 공개된 통신 규약이다.&lt;br&gt;
인터넷에서 파일을 전송하기 위해 사용하는 서비스이다. Telnet이 다른 컴퓨터를 사용하기 위해 접속하는 서비스인데 비해, FTP는 서버 컴퓨터로 파일을 전송하거나 서버 컴퓨터의 파일을 전송하거나 서버 컴퓨터의 파일을 내 컴퓨터로 받아 오기 위해 사용한다.&lt;/p&gt;
&lt;p&gt;FTP의 경우 빠르고 안정적으로 파일을 전송할 수 있기 때문에 요즘에도 많이 쓰이고 있으며, Telnet 사용시와 같이 모든 명령어를 익혀야 하는 담점을 극복하기 위해 FTP 전용 프로그램들이 등장하여 편리하게 사용할 수 있게 되었다.&lt;/p&gt;
&lt;h2 id=&#34;ftp의-원리&#34;&gt;FTP의 원리&lt;/h2&gt;
&lt;p&gt;FTP는 클라이언트-서버 프로토콜이다. 클라이언트가 파일을 요청하면 서버가 요청된 파일을 제공한다. 따라서 FTP의 연결 설정을 위해서는 2개의 기본 채널이 필요하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;채널 하나는 명령을 내리고 어떤 파일에 액세스할 수 있는지 등의 기본 정보를 전달하는 명령 채널이다.&lt;/li&gt;
&lt;li&gt;또 하나의 채널은 2개의 장치 간에 파일 데이터를 전송하는 데이터 채널이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;연결을 설정하려면 사용자는 FTP 서버로의 로그인 정보를 제공해야 하며, FTP는 일반적으로는 21번 포트를 기본 통신 모드로 사용한다.&lt;/p&gt;
&lt;h3 id=&#34;ftp의-연결-모드&#34;&gt;FTP의 연결 모드&lt;/h3&gt;
&lt;p&gt;FTP의 연결 모드에는 능동 모드, 수동 모드 2가지가 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;능동 모드(액티브 모드)
&lt;ul&gt;
&lt;li&gt;서버가 데이터 요청을 승인하는 능동적인 역할을 한다.&lt;/li&gt;
&lt;li&gt;능동 모드에서는 방화벽으로 인한 문제가 종종 발생한다. 제3자가 권한이 없는 세션에 액세스하려고 하면 해당 세션이 차단된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;수동 모드(패시브 모드)
&lt;ul&gt;
&lt;li&gt;수동 모드에서는 제3자가 권한이 없는 세션에 액세스하려고 하면, 서버가 능동적으로 연결을 유지하지 않는다.&lt;/li&gt;
&lt;li&gt;즉, 사용자가 데이터 채널과 명령 채널 모두를 설정한다. 서버는 기본적으로 &amp;lsquo;듣기만&amp;rsquo;할 뿐, 적극적으로 관여하지 않음으로써 다른 장치가 대부분의 작업을 처리하도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ftp-접속-클라이언트&#34;&gt;FTP 접속 클라이언트&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;FileZilla : 제일 많이 쓰이고, Windows, MacOS용이 제공되는 무료 프로그램이다.&lt;/li&gt;
&lt;li&gt;WinSCP : Windows용으로 개발된 무료 프로그램이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ftp의-장단점&#34;&gt;FTP의 장단점&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;장점
&lt;ul&gt;
&lt;li&gt;여러 개의 파일을 동시에 전송할 수 있다.&lt;/li&gt;
&lt;li&gt;연결이 끊긴 경우 전송을 다시 시작할 수 있다.&lt;/li&gt;
&lt;li&gt;전송 일정을 예약할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;단점
&lt;ul&gt;
&lt;li&gt;보안에 취약하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sftp란&#34;&gt;SFTP란?&lt;/h3&gt;
&lt;p&gt;FTP는 오늘날 우리가 사용하는 대부분의 사이버 보안 조치가 개발된 시기보다 앞선 1970년대에 개발되었다. 보안 프로토콜로 설계된 것이 아니기 때문에 FTP 전송은 파일을 암호화하지 않는다. 그래서 데이터 패킷에 대한 패킷 캡처 공격을 통해 비교적 쉽게 비밀번호, 사용자명, 그 외 기타 민감한 데이터를 읽을 수 있다.&lt;/p&gt;
&lt;p&gt;SFTP(SSH 파일 전송 프로토콜)란 시큐어 셸(SSH) 데이터 스트림을 통해 보안 등급이 높은 파일 전송을 실현하는 별도의 프로토콜을 말한다. 21번 포트를 사용하는 FTP 클라이언트와는 달리 SFTP는 22번 포트를 사용한다. FTP의 취약한 보안으로 인해 많은 사람이 보안 기능을 기본으로 제공하고 SSH 연결을 사용하는 SFTP를 선호한다.&lt;/p&gt;
&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://namu.wiki/w/FTP&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;나무 위키 : FTP&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ko.wikipedia.org/wiki/%ED%8C%8C%EC%9D%BC_%EC%A0%84%EC%86%A1_%ED%94%84%EB%A1%9C%ED%86%A0%EC%BD%9C&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;위키 백과 : 파일 전송 프로토콜&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://experience.dropbox.com/ko-kr/resources/what-is-ftp&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Dropbox: FTP의 의미&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Network</category>
      
      <category>Internet</category>
      
      <category>FTP</category>
      
    </item>
    
    <item>
      <title>E-Mail</title>
      <link>https://www.devkuma.com/docs/e-mail/</link>
      <pubDate>Sun, 03 Apr 2022 18:02:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/e-mail/</guid>
      <description>
        
        
        &lt;h2 id=&#34;이메일&#34;&gt;이메일&lt;/h2&gt;
&lt;p&gt;이메일은 인터넷을 시용하여 편지를 주고 받을 수 있는 서비스를 말하는데, Web기반 이메일과 POP3를 사용하는 이메일로 나눌 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;web-기반-이메일&#34;&gt;Web 기반 이메일&lt;/h2&gt;
&lt;p&gt;Web 기반 이메일로는 gmail, naver 등이 있으며, 이런 메일은 별로의 프로그램 없이 인터넷에서 해당 사이트에 접속한 후, 그 곳에서 메일을 관리하고 수신할 수 있는 방식이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;장점 : 별도의 프로그램을 쓰지 않기 때문에 여러 사람들이 하나의 컴퓨터를 공유하거나 별도의 프로그램을 설치하기 곤란한 곳에서 쉽게 사용할 있다.&lt;/li&gt;
&lt;li&gt;단점 : 해당 회사에서 제공하는 인터페이스를 반드시 사용해야 하고, 그 웹 사이트에 접속을 해야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;pop3&#34;&gt;POP3&lt;/h2&gt;
&lt;p&gt;POP3 서버의 경우는 Outlook Expresss와 같은 POP3 지원 이메일 클라이언트를 이용하여 메일을 주고 받을 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;장점 : 단지 편지를 전해 주는 것이므로 POP3을 지원하는 프로그램을 쓰더라도 가능하기 때문에 자신에 편리한 프로그램을 쓸 수 있다.&lt;/li&gt;
&lt;li&gt;단점 : 프로그램을 설치해야만 이메일 내용 확인이 가능하다.&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Network</category>
      
      <category>Internet</category>
      
      <category>E-Mail</category>
      
    </item>
    
    <item>
      <title>Forward와 Redirect 차이</title>
      <link>https://www.devkuma.com/docs/forward-and-redirect/</link>
      <pubDate>Thu, 07 Apr 2022 01:19:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/forward-and-redirect/</guid>
      <description>
        
        
        &lt;h2 id=&#34;forward-방식&#34;&gt;Forward 방식&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Forward는 Web Container 차원에서 페이지의 이동만 존재한다. 실제로 웹 브라우저는 다른 페이지로 이동했음을 알 수 없다. 그렇기 때문에 웹 브라우저에는 최초에 호출한 URL이 표시되고, 이동한 페이지의 URL 정보는 확인할 수 없다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;현재 실행중인 페이지와 forward에 의해 호출될 페이지는 Request 객체와 Response 객체를 공유한다.&lt;/strong&gt;
ㅇㅇㅇㅇ
&lt;img src=&#34;https://www.devkuma.com/docs/web/web_forward.png&#34; alt=&#34;Forward 방식&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Servlet에서 JSP로 페이지 이동할 때 사용되는 명령문&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;RequestDispatcher&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;rd&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;request&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;getRequestDispatcher&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;test01.jsp&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;rd&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;forward&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;request&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;response&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;redirect-방식&#34;&gt;Redirect 방식&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Redirect는 Web Container로 명령이 들어오면, 웹 브라우저에게 다른 페이지로 이동하라고 명령을 내린다. 그러면 웹 브라우저는 URL을 지시된 주소로 바꾸고 해당 주소로 이동한다. 다른 웹 컨테이너에 있는 주소로 이동한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;새로운 페이지에서는 Request와 Response 객체가 새롭게 생성된다.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/web/web_redirect.png&#34; alt=&#34;Redirect 방식&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Servlet에서 JSP로 페이지 이동할 때 사용되는 명령문&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-java&#34; data-lang=&#34;java&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;response&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;sendRedirect&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;test02.jsp&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;출처&#34;&gt;출처&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.naver.com/saintw/100165339381&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;redirect, forward 차이&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Network</category>
      
      <category>Internet</category>
      
      <category>Web</category>
      
    </item>
    
  </channel>
</rss>
