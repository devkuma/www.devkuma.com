<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devkuma – SQL</title>
    <link>https://www.devkuma.com/tags/sql/</link>
    <image>
      <url>https://www.devkuma.com/tags/sql/logo/180x180.jpg</url>
      <title>SQL</title>
      <link>https://www.devkuma.com/tags/sql/</link>
    </image>
    <description>Recent content in SQL on devkuma</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <managingEditor>redfreek2c@gmail.com (kimkc)</managingEditor>
    <webMaster>redfreek2c@gmail.com (kimkc)</webMaster>
    <copyright>The devkuma</copyright>
    
	  <atom:link href="https://www.devkuma.com/tags/sql/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>SQL 기본 | SQL</title>
      <link>https://www.devkuma.com/docs/sql/sql/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/sql/</guid>
      <description>
        
        
        &lt;p&gt;SQL(Structured Query Language)은 관계형 데이터베이스 관리 시스템(RDBMS)의 데이터를 관리하기 위해 설계된 특수 목적의 프로그래밍 언어이다. 관계형 데이터베이스 관리 시스템에서 자료의 검색과 관리, 데이터베이스 스키마 생성과 수정, 데이터베이스 객체 접근 조정 관리를 위해 고안되었다. 많은 수의 데이터베이스 관련 프로그램들이 SQL을 표준으로 채택하고 있다.&lt;/p&gt;
&lt;h2 id=&#34;명령어-종류&#34;&gt;명령어 종류&lt;/h2&gt;
&lt;p&gt;데이터 정의(DDL), 데이터 조작(DML), 데이터 제어(DCL)를 나눈다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터 정의 언어 (DDL : Data Definition Language)&lt;/li&gt;
&lt;li&gt;데이터 조작 언어 (DML : Data Manipulation Language)&lt;/li&gt;
&lt;li&gt;데이터 제어 언어 (DCL : Data Control Language)&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | SQL | Comments : 주석</title>
      <link>https://www.devkuma.com/docs/sql/comments/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/comments/</guid>
      <description>
        
        
        &lt;p&gt;주석(comment)은 로직에 대한 설명이나 코드를 비활성화 할 때 사용한다. 주석은 코드에 영향을 미치지 않는다. SQL에서 사용할 수 있는 주석문은 2가지 종류가 있다.&lt;/p&gt;
&lt;h2 id=&#34;단일-라인-주석-single-line-comment&#34;&gt;단일 라인 주석 (Single-line comment)&lt;/h2&gt;
&lt;p&gt;한줄 라인 주석은 &amp;lsquo;&amp;ndash;&amp;rsquo; 를 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;--Select all:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;블록-주석-multi-line-comment&#34;&gt;블록 주석 (Multi-line Comment)&lt;/h2&gt;
&lt;p&gt;/* 에서  */까지의 모든 내용이 주석 처리 된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/*Select all the columns
of all the records
in the customers table:*/
SELECT * FROM customer;
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본</title>
      <link>https://www.devkuma.com/docs/sql/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/sql/sql_devkuma.png&#34; alt=&#34;SQL 기본&#34;&gt;&lt;/p&gt;
&lt;p&gt;SQL에 대해서 설명한다&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DDL : 데이터 정의 언어</title>
      <link>https://www.devkuma.com/docs/sql/ddl--%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%95%EC%9D%98-%EC%96%B8%EC%96%B4/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/ddl--%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%95%EC%9D%98-%EC%96%B8%EC%96%B4/</guid>
      <description>
        
        
        &lt;p&gt;DDL(Data Definition Language) 는 데이터 베이스 스키마를 정의 하거나 조작하기 위해 사용한다. SCHEMA, DOMAIN, TABLE, VIEW, INDEX 를 다음 명령어로 정의, 변경, 삭제한다.&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DDL : 데이터 정의 언어 | DATABASE</title>
      <link>https://www.devkuma.com/docs/sql/database/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/database/</guid>
      <description>
        
        
        &lt;h2 id=&#34;create-database&#34;&gt;CREATE DATABASE&lt;/h2&gt;
&lt;p&gt;CREATE DATABASE 문은 최초 데이터베이스를 생성할 때 사용된다.&lt;/p&gt;
&lt;h3 id=&#34;create-database-문법&#34;&gt;CREATE DATABASE 문법&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DATABASE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;데이터베이스명&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;create-database-예제&#34;&gt;CREATE DATABASE 예제&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DATABASE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;devkuma&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;drop-database&#34;&gt;DROP DATABASE&lt;/h2&gt;
&lt;p&gt;DROP DATABASE문은 데이터베이스를 삭제할 때 사용된다.&lt;/p&gt;
&lt;h3 id=&#34;drop-database-문법&#34;&gt;DROP DATABASE 문법&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DATABASE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;databasename&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;drop-database-예제&#34;&gt;DROP DATABASE 예제&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DATABASE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;devkuma&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DDL : 데이터 정의 언어 | TABLE</title>
      <link>https://www.devkuma.com/docs/sql/table/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/table/</guid>
      <description>
        
        
        &lt;p&gt;테이블은 데이터베이스에서 데이터 저장의 기본 구조이다.  테이블은 컬럼(column) 및 로우(row)으로 나눈다. 각 열은 하나의 데이터를 나타내며 각 열은 하나의 데이터의 일부를 나타낸다. 예를 들어, 고객 데이터가 기록된 테이블이 있는 경우, 그 컬럼에는 이름, 주소, 생년월일 등이 포함된다. 테이블에 정의를 할 때, 그 컬럼의 제목 및 그 필드의 데이터 유형을 표시한다.&lt;/p&gt;
&lt;p&gt;데이터는 여러 형태가 있을 수 있다. 정수의 경우(예 : 1), 실수 (예 : 0.55), 문자열 (예 : &amp;lsquo;sql&amp;rsquo;), 날짜/시간(예 : &amp;lsquo;2000-JAN-25 03:22:22&amp;rsquo;), 이진 (binary)까지 등의 형식으로 존재한다. 이런 형식들을 데이터 유형(data type)이라고 한다. 하나의 테이블에 정의를 할 때에 각 컬럼의 데이터 정의를 해야 한다. 예를 들어, &amp;lsquo;이름&amp;rsquo; 필드의 데이터 유형은 &lt;code&gt;char(50)&lt;/code&gt;로 50개의 문자열을 나타내는 것이다. 그러나 데이터베이스에 따라 데이터 유형이 다르기 때문에 그것에 주의해야 한다. 따라서 테이블에 정의를 할 때에 그 데이터베이스에 대한 설명을 참고하도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;create-table&#34;&gt;CREATE TABLE&lt;/h2&gt;
&lt;p&gt;CREATE TABLE 문은 테이블을 생성할 때 사용된다.&lt;/p&gt;
&lt;h3 id=&#34;create-table-문법&#34;&gt;CREATE TABLE 문법&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE TABLE &amp;#34;테이블명&amp;#34; (
    &amp;#34;필드명1&amp;#34; &amp;#34;데이터 유형&amp;#34;,
    &amp;#34;필드명2&amp;#34; &amp;#34;데이터 유형&amp;#34;,
    &amp;#34;필드명3&amp;#34; &amp;#34;데이터 유형&amp;#34;,
    ... 
);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;예를 들어, 고객 데이터를 만들 경우 아래와 같이 SQL을 입력한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE TABLE customer (
    first_name char(50),
    last_name char(50),
    address char(50),
    city char(50),
    country char(25),
    birth_date datetime
);
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;drop-table&#34;&gt;DROP TABLE&lt;/h2&gt;
&lt;p&gt;DROP TABLE 문은 데이터 테이블을 삭제할 때 사용된다.&lt;/p&gt;
&lt;p&gt;데이터베이스에서 하나의 테이블을 삭제하는 경우가 있고, 그것을 실행하지 않으면 큰 문제가 발생할 우려가 있다. 데이터베이스 관리자 (Database Administrator - DBA)가 데이터베이스 관리를 효율적으로 할 수 없기 때문입니다. 다행히 SQL에서 DROP TABLE 프로그래밍을 이용하여 테이블을 제거할 수 있다. DROP TABLE 프로그래밍은 다음과 같습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;테이블을 삭제하려면 다음과 같이 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;truncate-table&#34;&gt;TRUNCATE TABLE&lt;/h2&gt;
&lt;p&gt;DROP TABLE를 하여 테이블을 삭제하면 테이블 전체가 사라지게 된다. 그에 비해 TRUNCATE TABLE를 삭제를 하면 테이블의 데이터가 모두 사라지고 테이블 자체가 그대로 남는다&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TRUNCATE TABLE &amp;#34;테이블명&amp;#34;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;테이블의 데이터를 삭제하려면 다음과 같이 입력한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TRUNCATE TABLE customer;
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DDL : 데이터 정의 언어 | VIEW</title>
      <link>https://www.devkuma.com/docs/sql/view/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/view/</guid>
      <description>
        
        
        &lt;p&gt;뷰(View)는 가상 테이블로 볼 수 있다. 테이블과의 차이점은 테이블에 데이터가 실제로 저장되어 있지만, 뷰는 테이블에 만들어진 구조에서 데이터가 실제로 저장되지 않는다.&lt;/p&gt;
&lt;h2 id=&#34;create-view&#34;&gt;CREATE VIEW&lt;/h2&gt;
&lt;p&gt;뷰를 생성하는 명령문은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE VIEW &amp;#34;VIEW_NAME&amp;#34; AS &amp;#34;SQL문&amp;#34;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;SQL문&amp;quot;는 어떠한 SQL이라도 상관없다.&lt;/p&gt;
&lt;h3 id=&#34;view-생성&#34;&gt;VIEW 생성&lt;/h3&gt;
&lt;p&gt;예를 들면, 다음과 같은 테이블이 있다고 하자.&lt;/p&gt;
&lt;h4 id=&#34;customer-테이블&#34;&gt;customer 테이블&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;컬럼명&lt;/th&gt;
&lt;th&gt;자료형&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;first_name&lt;/td&gt;
&lt;td&gt;char(50)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;last_name&lt;/td&gt;
&lt;td&gt;char(50)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;address&lt;/td&gt;
&lt;td&gt;char(50)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;city&lt;/td&gt;
&lt;td&gt;char(50)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;country&lt;/td&gt;
&lt;td&gt;char(25)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;birth_date&lt;/td&gt;
&lt;td&gt;datetime&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;이 테이블에서 first_name, last_name과 country 3개의 필드가 포함된 뷰를 만드는 경우 다음과 같이 입력한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE VIEW v_customer
AS SELECT first_name, last_name, country
FROM customer;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그러면 v_customer라는 뷰가 생성된다.&lt;/p&gt;
&lt;h4 id=&#34;v_customer-뷰&#34;&gt;v_customer 뷰&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;컬럼명&lt;/th&gt;
&lt;th&gt;자료형&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;first_name&lt;/td&gt;
&lt;td&gt;char(50)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;last_name&lt;/td&gt;
&lt;td&gt;char(50)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;country&lt;/td&gt;
&lt;td&gt;char(25)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;테이블-결합하여-만든-view&#34;&gt;테이블 결합하여 만든 VIEW&lt;/h3&gt;
&lt;p&gt;뷰를 사용하여 두 테이블을 조인할 수도 있다. 따라서 사용자는 두 개의 서로 다른 테이블을 결합하지 않아도, 뷰로 사용하여 필요한 정보를 직접 확인할 수 있다. 가령 다음과 같은 두 테이블이 있다고 하자.&lt;/p&gt;
&lt;h4 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;geography-테이블&#34;&gt;Geography 테이블&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;region_name&lt;/th&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;East&lt;/td&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;East&lt;/td&gt;
&lt;td&gt;New York&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;West&lt;/td&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;West&lt;/td&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;아래 명령으로 지역(Region)의 판매(Sales)가 포함된 뷰를 만들 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE VIEW v_region_sales
AS SELECT A1.region_name region, SUM(A2.sales) sales
FROM geography A1, store_Information A2
WHERE A1.store_name = A2.store_name
GROUP BY A1.region_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이것으로 &lt;strong&gt;v_region_sales&lt;/strong&gt;라는 뷰가 생성되었다. 이 뷰에 다른 지역의 매출 데이터가 포함된다. 이 뷰에서 데이터를 검색하는 경우 다음과 같이 입력한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT * FROM v_region_sales;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위 명령의 결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;region&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;east&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;west&lt;/td&gt;
&lt;td&gt;2050&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;drop-view&#34;&gt;DROP VIEW&lt;/h2&gt;
&lt;p&gt;DROP VIEW 명령을 사용하여 기존 뷰를 삭제한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DROP VIEW &amp;#34;[데이터베이스명.]VIEW_NAME&amp;#34;;
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DDL : 데이터 정의 언어 | INDEX</title>
      <link>https://www.devkuma.com/docs/sql/index/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/index/</guid>
      <description>
        
        
        &lt;p&gt;테이블의 데이터를 조회할 때 빠르고 효과적으로 조회할 수 있도록 도와주는 역활을 한다. 대신, 조회는 빠르지만 INSERT, UPDATE등을 수행할 떄는 느려지기 때문에 주의가 필요하다. 조회가 많은 테이블을 기준으로 설정하기를 추천한다.&lt;/p&gt;
&lt;h2 id=&#34;create-index&#34;&gt;CREATE INDEX&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;index_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;column1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;column2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;drop-index&#34;&gt;DROP INDEX&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IF&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXISTS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;index_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DDL : 데이터 정의 언어 | Primary Key : 기본 키</title>
      <link>https://www.devkuma.com/docs/sql/primary-key/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/primary-key/</guid>
      <description>
        
        
        &lt;p&gt;기본 키(Primary Key)의 각 데이터는 테이블에서 유일한 값이다. 즉, 기본 키는 하나의 테이블에서 각 행의 데이터를 유일하게 확인하는데 사용되는 것이다. 기본 키는 원래의 데이터 내의 하나의 필드 또는 하나로 만들어진 필드(원래 데이터와 관계없는 필드)가 가능하다. 기본 키는 하나 이상의 필드를 포함할 수 있다. 기본 키가 여러 필드를 포함하는 경우, 복합 키(Composite Key)라고 한다.&lt;/p&gt;
&lt;p&gt;기본 키는 새로운 테이블을 만들기 위해 설정된다(CREATE TABLE 절에서) 또는 기존에 있는 테이블의 구조 설정 변경(ALTER TABLE에서)에 사용될 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;테이블-생성시-기본-키-설정-방법&#34;&gt;테이블 생성시 기본 키 설정 방법&lt;/h2&gt;
&lt;p&gt;다음 새 테이블을 만드는데 사용되는 기본 키 설정 방법에 대한 몇 가지 예를 올려두었다.&lt;/p&gt;
&lt;h3 id=&#34;mysql&#34;&gt;MySQL:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE TABLE customer  (
  sid INTEGER, 
  last_name VARCHAR(30), 
  first_name VARCHAR(30), 
  PRIMARY KEY (sid)
);
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;oracle&#34;&gt;Oracle:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE TABLE Customer (
  sid integer PRIMARY KEY, 
  last_name VARCHAR(30), 
  first_name VARCHAR(30)
);
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;sql-server&#34;&gt;SQL Server:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE TABLE Customer (
  sid INTEGER PRIMARY KEY, 
  last_name VARCHAR(30), 
  first_name VARCHAR(30)
);
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;테이블의-구조-변경시-기본-키-설정-방법&#34;&gt;테이블의 구조 변경시 기본 키 설정 방법&lt;/h2&gt;
&lt;p&gt;다음은 기존에 있는 테이블의 구조 설정을 변경하는 데 사용되는 기본 키 설정 방법이다.&lt;/p&gt;
&lt;h3 id=&#34;mysql-1&#34;&gt;MySQL:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE customer ADD PRIMARY KEY (sid);
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;oracle-1&#34;&gt;Oracle:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE customer ADD PRIMARY KEY (sid);
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;sql-server-1&#34;&gt;SQL Server:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE customer ADD PRIMARY KEY (sid);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ALTER TABLE 절에서 기본 키를 설정하기 전에 기본 키로 사용되는 필드가 NOT NULL 및 설정되는지 여부를 확인하는 것에 주의한다. 즉, 그 필드에 데이터가 항상 들어있다.&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DDL : 데이터 정의 언어 | Foreign Key : 외래 키</title>
      <link>https://www.devkuma.com/docs/sql/foreign-key/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/foreign-key/</guid>
      <description>
        
        
        &lt;p&gt;외래 키(Foreign Key)가 하나(또는 복수) 다른 테이블의 기본 키 필드를 가리키는 데이터의 참조 무결성(referential integrity)을 확인하기 위하여 사용된다. 즉, 허용된 데이터 값만 데이터베이스에 저장되는 것이다.&lt;/p&gt;
&lt;h2 id=&#34;외레키-예제&#34;&gt;외레키 예제&lt;/h2&gt;
&lt;p&gt;예를 들어, 만일 두 개의 테이블이 있다고 하자. 하나는 customer 테이블에서 모든 고객 데이터가 기록되는 것이고, 또 하나는 orders 테이블에서 고객의 주문이 모두 기록되는 것이다. 그리고 하나의 제약이 있으며, 모든 주문 데이터 고객이 customer 테이블에 존재한다. 여기서 orders 테이블에 외래 키를 설정하고 외래 키가 customer 테이블의 기본 키가 된다. 그러면 orders 테이블에 있는 고객이 모든 customer 테이블에 존재하는 것을 보장할 수 있다. 즉, orders 테이블은 모든 customer 테이블에 있는 고객의 데이터이다.&lt;/p&gt;
&lt;p&gt;그 두 테이블의 구조는 다음과 같다.&lt;/p&gt;
&lt;h3 id=&#34;customer-테이블&#34;&gt;customer 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;필드명&lt;/th&gt;
&lt;th&gt;특성&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;sid&lt;/td&gt;
&lt;td&gt;기본 키&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;last_name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;first_name&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;orders-테이블&#34;&gt;orders 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;필드명&lt;/th&gt;
&lt;th&gt;특성&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;order_id&lt;/td&gt;
&lt;td&gt;기본 키&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;order_date&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;customer_sid&lt;/td&gt;
&lt;td&gt;외래키&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;amount&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;위의 예제에서, orders 테이블에 있는 customer_sid 필드는 customer 테이블의 sid 필드를 가리키는 외래 키이다.&lt;/p&gt;
&lt;p&gt;다음은 orders 테이블을 만들 때에 사용되는 외래 키의 지정 방법을 몇 가지 들어 있다.&lt;/p&gt;
&lt;h3 id=&#34;mysql&#34;&gt;MySQL:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE TABLE orders  (
    order_id INTEGER,   
    order_date DATE,
    customer_sid INTEGER, 
    amount DOUBLE, 
    PRIMARY KEY (order_id), 
    FOREIGN KEY (customer_sid) REFERENCES customer (sid)
);
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;oracle&#34;&gt;Oracle:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE TABLE orders (
    order_id INTEGER PRIMARY KEY, 
    order_date DATE, 
    customer_sid INTEGER REFERENCES customer (sid), 
    amount DOUBLE
);
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;sql-server&#34;&gt;SQL Server:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE TABLE orders  (
    order_id integer PRIMARY KEY, 
    order_date DATETIME, 
    customer_sid INTEGER REFERENCES customer(sid), 
    amount DOUBLE
);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이어서 테이블 구조 변경으로 인해, 외래 키를 지정하는 예제를 보도록 하겠다.&lt;br&gt;
여기서는 orders 테이블이 이미 만들어진 외래 키가 지정되지 않은 것을 가정한다.&lt;/p&gt;
&lt;h3 id=&#34;mysql-1&#34;&gt;MySQL:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE orders 
ADD FOREIGN KEY (customer_sid) REFERENCES customer (sid);
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;oracle-1&#34;&gt;Oracle:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE orders 
ADD (CONSTRAINT fk_orders1) FOREIGN KEY (customer_sid) REFERENCES customer(sid);
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;sql-server-1&#34;&gt;SQL Server:&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE orders 
ADD FOREIGN KEY (customer_sid) REFERENCES customer (sid);
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DCL : 데이터 제어 언어</title>
      <link>https://www.devkuma.com/docs/sql/dcl/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/dcl/</guid>
      <description>
        
        
        &lt;p&gt;DCL (Data Control Language) 는 데이터를 제어하는 언어이다. 데이터의 보안, 무결성, 회복, 병행 수행제어 등을 정의하는데 사용한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;COMMIT : 트랜잭션의 작업 결과를 반영&lt;/li&gt;
&lt;li&gt;ROLLBACK : 트랜잭션의 작업을 취소 및 원래대로 복구&lt;/li&gt;
&lt;li&gt;GRANT : 사용자에게 권한 부여&lt;/li&gt;
&lt;li&gt;REVOKE : 사용자 권한 취소&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;tcl&#34;&gt;TCL&lt;/h2&gt;
&lt;p&gt;일부에서는 DCL 에서 트랜잭션을 제어하는 명령인 COMMIT 과 ROLLBACK 만을 따로 분리해서 TCL (Transaction Control Language) 라고 표현하기도 한다.&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어</title>
      <link>https://www.devkuma.com/docs/sql/dml/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/dml/</guid>
      <description>
        
        
        
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | SELECT</title>
      <link>https://www.devkuma.com/docs/sql/select/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/select/</guid>
      <description>
        
        
        &lt;p&gt;SELECT 문은 데이터베이스에서 데이터를 조회하는데 사용한다.&lt;/p&gt;
&lt;p&gt;반환된 데이터는 Result set에 저장된다.&lt;/p&gt;
&lt;h2 id=&#34;select-문법&#34;&gt;SELECT 문법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;테이블명&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기에서 컬럼명1, 컬럼명2, &amp;hellip;는 데이터를 선택할 테이블의 필드 이름이며 컬럼이라고 읽는다.  table에서 사용 가능한 모든 필드를 선택하려면 다음 구문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;테이블명&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;select-예제&#34;&gt;SELECT 예제&lt;/h2&gt;
&lt;h3 id=&#34;column-예제&#34;&gt;Column 예제&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;column1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;column2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;예제&#34;&gt;예제&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;한 번에 여러 컬럼을 로드할 수도 있으며, 테이블의 데이터를 몇개를 선택할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;select-데모&#34;&gt;SELECT 데모&lt;/h2&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;sql&#34;&gt;sql&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;store_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;store_information&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;실행-결과&#34;&gt;실행 결과&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | DISTINCT</title>
      <link>https://www.devkuma.com/docs/sql/distinct/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/distinct/</guid>
      <description>
        
        
        &lt;p&gt;DISTINCT 명령문은 SELECT 문의 결과에서 중복 행을 제거한다.&lt;/p&gt;
&lt;p&gt;SELECT 명령을 사용하여 테이블에서 하나 이상의 필드의 모든 데이터를 로드할 수 있다. 같은 값이 반복 되더라도, 모든 데이터를 로드할 수 있다. 데이터 처리시에 어떤 다른 수치가 있는 경우는 자주 발생한다. 즉, 각 수치가 나온 횟수보다는 그 테이블/필드 안에 어떤 다른 수치가 있는지 알아야 되는 것이다. 그것은 SQL에서는 이것은 쉽게 할 수 있다. SELECT 뒤에 DISTINCT를 덧붙이면 된다.&lt;/p&gt;
&lt;h2 id=&#34;distinct-문법&#34;&gt;DISTINCT 문법&lt;/h2&gt;
&lt;p&gt;DISTINCT 명령은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DISTINCT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;테이블명&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;distinct-예제&#34;&gt;DISTINCT 예제&lt;/h2&gt;
&lt;p&gt;예를 들어 보겠다. 만일 다음 테이블 Store_Information에서 다른 가게의 이름을 찾을 경우,&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;아래와 같이 명령을 입력하면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT DISTINCT store_name FROM store_information;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | WHERE</title>
      <link>https://www.devkuma.com/docs/sql/where/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/where/</guid>
      <description>
        
        
        &lt;p&gt;WHERE 명령은 레코드를 검색 필터링하는데 사용된다. WHERE 명령은 지정된 조건을 충족하는 레코드만 추출하는데 사용된다.&lt;/p&gt;
&lt;p&gt;우리는 반드시 매번 테이블의 데이터를 모두 로드하지는 않는다. 종종 데이터를 선택적으로 로드한다. 예를 들어, 매출이 $ 1,000 이상의 데이터만 가져 와야 한다면, WHERE 명령을 사용한다.&lt;/p&gt;
&lt;h2 id=&#34;where-문법&#34;&gt;WHERE 문법&lt;/h2&gt;
&lt;p&gt;WHERE 명령은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;테이블명&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;조건문&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;where-예제&#34;&gt;WHERE 예제&lt;/h2&gt;
&lt;p&gt;만일 다음 테이블에서 매출이 $ 1,000 이상의 데이터를 가져 와야 하는 경우,&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;아래와 같이 명령을 입력하면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT Store_Name
FROM Store_Information
WHERE Sales &amp;gt; 1000;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Store_Name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | AND, OR</title>
      <link>https://www.devkuma.com/docs/sql/and-or/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/and-or/</guid>
      <description>
        
        
        &lt;p&gt;앞 페이지에서는 WHERE 명령으로 테이블에서 조건의 데이터를 로드하는 방법에 대해 설명했다. 그 조건은 간단한 경우(이전 예)도 있고, 복잡한 경우도 있다. 복잡한 조건은 두개 이상의 간단한 조건을 AND 또는 OR에 의해 결합하는 것이다. 하나의 SQL 에서 갯수에 제한되지 없는 간단한 조건이 있다.&lt;/p&gt;
&lt;h2 id=&#34;and--or-문법&#34;&gt;AND | OR 문법&lt;/h2&gt;
&lt;p&gt;AND | OR 명령은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT &amp;#34;필드명&amp;#34;
FROM &amp;#34;테이블명&amp;#34;
WHERE &amp;#34;조건문&amp;#34;
{[AND|OR] &amp;#34;조건문&amp;#34;}+;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;{}+&lt;/code&gt;는 &lt;code&gt;{}&lt;/code&gt; 안의 조건이 하나 이상의 발생이 가능하다는 것을 의미한다. 여기에서는 AND에 조건문을 더하고, OR 조건문을 추가하는 상황이 하나 이상의 발생이 가능하다는 점을 보여준다. 또한, ()를 사용하여 조건의 우선 순서를 나타낸다.&lt;/p&gt;
&lt;h2 id=&#34;and--or-예제&#34;&gt;AND | OR 예제&lt;/h2&gt;
&lt;p&gt;만일 다음 테이블에서 매출이 $ 1,000 이상의 데이터를 가져 와야 하는 경우,&lt;/p&gt;
&lt;p&gt;만일 Store_Information 테이블에서 Sales가 $1,000 이상 또는 Sales가 $500과 $275 사이에 있는 데이터를 모두 가져 와야 하는 경우,&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Francisco&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;아래와 같이 명령을 입력하면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT store_name
FROM store_information
WHERE Sales &amp;gt; 1000
OR (sales &amp;lt; 500 AND Sales &amp;gt; 275);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Francisco&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | IN, NOT IN</title>
      <link>https://www.devkuma.com/docs/sql/in-not-in/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/in-not-in/</guid>
      <description>
        
        
        &lt;p&gt;SQL에서 두 상황에 IN 명령을 사용하는데,이 페이지에는 그 중 하나인 WHERE와 관련된 상황에 대해 설명한다. 이 용법에는 필요한 값을 적어도 하나를 알아 두어야 한다. 그리고 알려진 모든 값을 IN 절에 입력된다.&lt;/p&gt;
&lt;h2 id=&#34;in-not-in-문법&#34;&gt;IN, NOT IN 문법&lt;/h2&gt;
&lt;p&gt;IN 절은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT &amp;#34;필드명&amp;#34;
FROM &amp;#34;테이블명&amp;#34;
WHERE &amp;#34;필드명&amp;#34; IN (&amp;#39;값1&amp;#39;, &amp;#39;값2&amp;#39;, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;괄호 안에 하나 이상의 값이 있고, 그 수치 상호간에 쉼표로 구분한다. 값은 숫자나 문자일 수 있다. 만약 괄호 안에 값이 하나만 있는 경우는 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;WHERE &amp;#34;필드명&amp;#34; = &amp;#39;값1&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;IN 절의 반대로 조회할 경우는 NOT IN를 사용한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT &amp;#34;필드명&amp;#34;
FROM &amp;#34;테이블명&amp;#34;
WHERE &amp;#34;필드명&amp;#34; NOT IN (&amp;#39;값1&amp;#39;, &amp;#39;값2&amp;#39;, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;in-예제&#34;&gt;IN 예제&lt;/h2&gt;
&lt;p&gt;예를 들어, 만일 store_information 테이블, Los Angeles 또는 San Diego가 포함된 데이터를 모두 가져오는 경우,&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;아래와 같이 명령을 입력하면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT *
FROM store_information
WHERE store_name IN (&amp;#39;Los Angeles&amp;#39;, &amp;#39;San Diego&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;not-in-예제&#34;&gt;NOT IN 예제&lt;/h2&gt;
&lt;p&gt;이와 반대로  Los Angeles 또는 San Diego가 제외한 데이터를 모두 가져오는 경우,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT *
FROM store_information
WHERE store_name NOT IN (&amp;#39;Los Angeles&amp;#39;, &amp;#39;San Diego&amp;#39;);;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | BETWEEN</title>
      <link>https://www.devkuma.com/docs/sql/between/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/between/</guid>
      <description>
        
        
        &lt;p&gt;IN 명령은 하나 이상의 불연속(discrete) 값을 제한적으로 데이터베이스에서 해당 값을 가져온다. BETWEEN는 어느 정도의 범위(range)로 데이터베이스에서 해당 값을 가져온다.&lt;/p&gt;
&lt;h2 id=&#34;between-문법&#34;&gt;BETWEEN 문법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BETWEEN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;값1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;값2&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기에서 필드 값에서 값1과 값2 사이에 포함된 데이터를 조회할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;between-예제&#34;&gt;BETWEEN 예제&lt;/h2&gt;
&lt;p&gt;예를 들어, 만일 store_information 테이블에서 January 6, 2018 및 January 10, 2018 사이에 있는 데이터를 가져 오는 경우,&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;참고&lt;/strong&gt; : 데이터베이스에 따라, 날짜를 저장하는 방법이 다를 수 있다. 여기에서 거론된 것은 그 저장 방법 중 하나이다.&lt;/p&gt;
&lt;p&gt;아래와 같이 명령을 입력하면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT *
FROM Store_Information
WHERE Txn_Date BETWEEN &amp;#39;Jan-06-2018&amp;#39; AND &amp;#39;Jan-10-2018&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Francisco&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | LIKE</title>
      <link>https://www.devkuma.com/docs/sql/like/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/like/</guid>
      <description>
        
        
        &lt;p&gt;LIKE는 WHERE 절에 사용되는 또 다른 명령이다. 기본적으로 LIKE를 사용하여, 어떤 패턴(pattern)에 따라 필요한 데이터를 찾을 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;like-문법&#34;&gt;LIKE 문법&lt;/h2&gt;
&lt;p&gt;LIKE 절은 문법은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LIKE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;{패턴}&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;{패턴}는 와이드카드(wildcard)를 포함한다. 다음은 몇 가지 예이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&amp;lsquo;A_Z&amp;rsquo;&lt;/strong&gt; : &amp;lsquo;A&amp;rsquo;를 시작되고, 이어서  어떤 글자를 넣고, &amp;lsquo;Z&amp;rsquo;로 끝나는 문자열. &amp;lsquo;ABZ&amp;rsquo;와 &amp;lsquo;A2Z&amp;rsquo;는 이 패턴과 일치하지만 &amp;lsquo;AKKZ&amp;rsquo;는 그것과 일치하지 않는다(A와 Z사이에 두 글자가 한 글자가 아니기 때문).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;lsquo;ABC%&amp;rsquo;&lt;/strong&gt; : &amp;lsquo;ABC&amp;rsquo;를 시작으로 하는 문자열. 예를 들면, &amp;lsquo;ABCD&amp;rsquo;와 &amp;lsquo;ABCABC&amp;rsquo;는이 패턴에 적합하다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;rsquo;%XYZ&amp;rsquo;&lt;/strong&gt; : &amp;lsquo;XYZ&amp;rsquo;로 끝나는 문자열. 예를 들면, &amp;lsquo;WXYZ&amp;rsquo;와 &amp;lsquo;ZZXYZ&amp;rsquo;는 이 패턴에 적합하다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&amp;rsquo;%AN%&amp;rsquo;&lt;/strong&gt; : &amp;lsquo;AN&amp;rsquo;가 포함된 문자열. 예를 들면, &amp;lsquo;LOS ANGELES&amp;rsquo;와 &amp;lsquo;SAN FRANCISCO&amp;rsquo;는 이 패턴과 일치한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;위의 마지막 예를 store_information 테이블에 사용하는 경우,&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;아래와 같이 명령을 입력하면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT *
FROM Store_Information
WHERE Store_Name LIKE &amp;#39;%AN%&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;LOS ANGELES&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SAN DIEGO&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SAN FRANCISCO&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | IS NULL, IS NOT NULL</title>
      <link>https://www.devkuma.com/docs/sql/is-null-is-not-null/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/is-null-is-not-null/</guid>
      <description>
        
        
        &lt;p&gt;필드 값이 비어 있는 경우 즉, NULL일때에 유무에 대한 조건이다.&lt;/p&gt;
&lt;h2 id=&#34;is-null-is-not-null-문법&#34;&gt;IS NULL, IS NOT NULL 문법&lt;/h2&gt;
&lt;p&gt;IS NULL 조건은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;IS NULL 조건의 반대를 조회할 경우는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NOT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;is-null-예제&#34;&gt;IS NULL 예제&lt;/h2&gt;
&lt;p&gt;아래와 같이 store_information 테이블이 있을 때, sales가 비어 있는 경우,&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;아래와 같이 명령을 입력하면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT *
FROM store_information
WHERE sales IS NULL
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 조회된다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;is-not-null-예제&#34;&gt;IS NOT NULL 예제&lt;/h2&gt;
&lt;p&gt;sales가 비어 있는 않은 경우는&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT *
FROM store_information
WHERE sales IS NOT NULL
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 조회된다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | EXISTS</title>
      <link>https://www.devkuma.com/docs/sql/exists/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/exists/</guid>
      <description>
        
        
        &lt;p&gt;EXISTS는 WHERE의 조건에서 실행한 결과가 있을 경우에 조회가 된다.&lt;/p&gt;
&lt;h2 id=&#34;exists-문법&#34;&gt;EXISTS 문법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXISTS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;조회 조건&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;exists-예제&#34;&gt;EXISTS 예제&lt;/h2&gt;
&lt;p&gt;아래와 같이 두개의 테이블이 있을 때, East 지역에 있는 매장의 정보를 조회하고 싶을 경우&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;geography-테이블&#34;&gt;geography 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;region_name&lt;/th&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;East&lt;/td&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;East&lt;/td&gt;
&lt;td&gt;New York&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;West&lt;/td&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;West&lt;/td&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;East 지역에 있는 매장의 정보를 조회하고 싶을 경우&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT *
FROM store_information A1
WHERE EXISTS
(SELECT * FROM geography WHERE region_name = &amp;#39;East&amp;#39; AND store_name = A1.store_name);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | ORDER BY</title>
      <link>https://www.devkuma.com/docs/sql/order-by/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/order-by/</guid>
      <description>
        
        
        &lt;p&gt;ORDER BY 키워드는 결과 집합을 오름차순 또는 내림차순으로 정렬하는 데 사용된다.&lt;/p&gt;
&lt;p&gt;ORDER BY 키워드는 레코드를 기본적으로 오름차순으로 정렬한다. 내림차순으로 레코드를 정렬하려면 DESC 키워드를 사용하면 된다.&lt;/p&gt;
&lt;h2 id=&#34;order-by-문법&#34;&gt;ORDER BY 문법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;테이블명&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;컬럼명&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ASC&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DESC&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;order-by-예제&#34;&gt;ORDER BY 예제&lt;/h2&gt;
&lt;h3 id=&#34;예제1&#34;&gt;예제1&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customers&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;country&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;예제2&#34;&gt;예제2&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customers&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;country&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customer_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;예제3&#34;&gt;예제3&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customers&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;country&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ASC&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customer_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DESC&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | GROUP BY</title>
      <link>https://www.devkuma.com/docs/sql/group-by/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/group-by/</guid>
      <description>
        
        
        &lt;p&gt;GROUP BY 절은 같은 값끼리 그룹을 만드는 것이다.&lt;/p&gt;
&lt;p&gt;함수의 이야기로 되돌아갑니다. SUM 명령을 사용하여 모든 Sales (판매)를 계산 했어요. 여기에서 각각의 가게 (Store_Name) 판매 (Sales)을 계산하는 경우, 어떻게하면 좋을까요. 그런 경우에는 할 일이 두 가지 : 첫째는, store_name 및 Sales 두 필드를 선택한다. 둘째는 모든 sales를 확인하기 위해 store_name에 따라 각각 계산한다. 그 프로그램은 다음과 같이됩니다.&lt;/p&gt;
&lt;h2 id=&#34;group-by-문법&#34;&gt;GROUP BY 문법&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT &amp;#34;필드1&amp;#34;, SUM(&amp;#34;필드2&amp;#34;)
FROM &amp;#34;테이블명&amp;#34;
GROUP BY &amp;#34;필드1&amp;#34;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;예를 들어,&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;아래와 같이 명령을 입력하면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT store_name, SUM(sales)
FROM store_Information
GROUP BY store_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;SUM(sales)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;필드를 하나 이상 선택하고, 적어도 그 중 하나에 함수의 계산이 포함된 경우 GROUP BY 명령을 사용하지 않으면 안된다. 이러한 경우, GROUP BY를 가진 다른 필드를 확인한다. 즉, 함수가 포함된 필드를 확인한 후에 그것을 GROUP BY 절에 넣는다.&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | HAVING</title>
      <link>https://www.devkuma.com/docs/sql/having/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/having/</guid>
      <description>
        
        
        &lt;p&gt;함수의 값에 조건을 넣는 방법을 설명한다.&lt;/p&gt;
&lt;p&gt;예를 들어, 매출이 $1,500 이상 상점만을 조회를 하고 싶은 경우가 있다고 했을 때, WHERE 명령만으로는 할 수 없다. 그럴 경우에는 HAVING 같은 명령이 그 명령을 사용한다. 일반적으로 HAVING 절은 SQL 문장의 마지막에 있다. HAVING 절이 포함된 SQL에서 GROUP BY 절을 포함하는 것은 아니다.&lt;/p&gt;
&lt;h2 id=&#34;having-문법&#34;&gt;HAVING 문법&lt;/h2&gt;
&lt;p&gt;HAVING 문의 문법은 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT &amp;#34;컬럼1&amp;#34;, SUM(&amp;#34;필드2&amp;#34;)
FROM &amp;#34;테이블명&amp;#34;
GROUP BY &amp;#34;필드1&amp;#34;
HAVING (함수 조건);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;주의&lt;/strong&gt; : GROUP BY 절이 반드시 필요한 것은 아니다.&lt;/p&gt;
&lt;h2 id=&#34;having-예제&#34;&gt;HAVING 예제&lt;/h2&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;위와 같은 테이블이 있다고 했을 때, 아래와 같이 명령문을 입력한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT store_name, SUM(sales)
FROM store_Information
GROUP BY store_name
HAVING SUM(sales) &amp;gt; 1500;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위 명령문에 의한 결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;SUM(sales)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | AS - Aliases</title>
      <link>https://www.devkuma.com/docs/sql/as--aliases/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/as--aliases/</guid>
      <description>
        
        
        &lt;p&gt;AS는 앨리어스(alias)의 약자이다. 테이블 또는 테이블의 필드에 임시 이름 즉, 별칭을 제공하는데 사용된다. 앨리어스는 컬럼 이름을 읽기 쉽게하기 위해 자주 사용되고, query가 실행 조회되는 동안에만 존재를 한다.&lt;/p&gt;
&lt;p&gt;간단히 말하면, 필드 별칭은 SQL의 결과를 알기 쉽도록 사용되는 것이다. 예제에서 매출을 합하면 SUM(sales)라는 필드명이 나온다. 지금의 경우는 문제가 없지만, 만약 필드가 간단한 합계가 아니라 복잡한 합계가 된다면, 필드명은 같이 복잡해 진다. 이런 필드에 앨리어스을 사용하면 나올 수 있는 결과의 필드명이 알기 쉽게 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;두번째 별칭은 테이블 별칭이다. 테이블에 별칭을 붙이는 경우, FROM 절에 테이블 이름에 공백을 하나두고, 별칭을 지정한다. 그것은 SQL을 사용하여, 서로 다른 테이블에서 데이터를 읽어들이는데 매우 유용하다.&lt;/p&gt;
&lt;h2 id=&#34;as-문법&#34;&gt;AS 문법&lt;/h2&gt;
&lt;p&gt;필드 및 테이블 별칭은 아래와 같이 지정한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블 별칭&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드 별칭&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블 별칭&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;기본적으로 이 두 별칭은 테이블명 및 필드 뒤에 공간이 하나 두고 지정한다. 또는 AS를 명시하기도 한다.&lt;/p&gt;
&lt;h2 id=&#34;as-예제&#34;&gt;AS 예제&lt;/h2&gt;
&lt;p&gt;다음 아래 store_information 테이블을 예로 들어 보겠다.&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;아래와 같이 GROUP BY 사용하여, 필드 별칭 및 테이블 별명을 추가한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT A1.store_name Store, SUM(A1.sales) &amp;#39;Total Sales&amp;#39;
FROM store_information A1
GROUP BY A1.store_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Store&lt;/th&gt;
&lt;th&gt;Total Sales&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;결과에서 데이터 자체는 같지만, 필드의 제목이 바뀌었다. 이는 필드 별칭을 사용하는 것이다. 두번째 필드에서 &amp;ldquo;Sum (Sales)&amp;ldquo;이었던 제목 대신에 &amp;ldquo;Total Sales&amp;quot;이 명시된 제목이 표시되었다. 분명히, &amp;ldquo;Total Sales&amp;quot;는 &amp;ldquo;Sum(sales)&amp;ldquo;에 의해 필드의 의미를 보다 더 명확하게 보여줄 수 있는 것이다.&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | JOIN</title>
      <link>https://www.devkuma.com/docs/sql/join/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/join/</guid>
      <description>
        
        
        &lt;p&gt;JOIN는 테이블과 테이블 사이의 결합을 할 시에 사용한다.&lt;/p&gt;
&lt;p&gt;다음은 SQL에있는 JOIN의 여러 유형이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(INNER) JOIN : 두 테이블에서 값이 일치하는 레코드를 반환한다.&lt;/li&gt;
&lt;li&gt;LEFT (OUTER) JOIN : 왼쪽 테이블에서 모든 레코드를 반환하고, 오른쪽 테이블에서 일치하는 레코드를 반환한다.&lt;/li&gt;
&lt;li&gt;RIGHT (OUTER) JOIN : 오른쪽 테이블에서 모든 레코드를 반환하고, 왼쪽 테이블에서 일치하는 레코드를 반환한다.&lt;/li&gt;
&lt;li&gt;FULL (OUTER) JOIN : 왼쪽 또는 오른쪽 테이블의 모든 레코드를 반환한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/sql/sql_join1.png&#34; alt=&#34;SQL JOINS&#34;&gt;&lt;/p&gt;
&lt;p&gt;추가적으로 아래와 같이 반환되는 값을 조절할 수도 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/sql/sql_join2.png&#34; alt=&#34;SQL JOINS&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;join-문법&#34;&gt;JOIN 문법&lt;/h2&gt;
&lt;h3 id=&#34;inner-join&#34;&gt;INNER JOIN&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;column_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INNER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;JOIN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;column_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;column_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;left-outer-join&#34;&gt;LEFT (OUTER) JOIN&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;column_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;LEFT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;JOIN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;column_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;column_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;right-outer-join&#34;&gt;RIGHT (OUTER) JOIN&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;column_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;RIGHT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;JOIN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;column_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;column_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;full-outer-join&#34;&gt;FULL (OUTER) JOIN&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;column_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;s&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FULL&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;OUTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;JOIN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;column_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;column_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;inner-join-예제&#34;&gt;INNER JOIN 예제&lt;/h2&gt;
&lt;p&gt;SQL의 결합(JOIN)에 대한 예제이다.&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;geography-테이블&#34;&gt;geography 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;region_name&lt;/th&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;East&lt;/td&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;East&lt;/td&gt;
&lt;td&gt;New York&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;West&lt;/td&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;West&lt;/td&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;내부 조인 (inner join)는 두 테이블에서 일치하는 값이 있어야, 해당 데이터가 조회 된다.&lt;/p&gt;
&lt;p&gt;지역(region_name) 별로 매출(Sales)을 조사한다. geography 테이블에 각 지역의 상점, store_information 테이블에 각 점포의 매출이 표시된다. 만약 지역별 매출을 살펴보면 그 두 테이블의 데이터를 결합한다. 자세히 보면 필드 store_name의 하나로,이 두 테이블을 조인 할 수 있는 것을 알 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;region_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;REGION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sales&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SALES&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;geography&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;JOIN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;store_information&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;store_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;store_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GROUP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;region_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;혹은&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;region_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;REGION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sales&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SALES&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;geography&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;store_information&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;store_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;store_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GROUP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;A1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;region_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;REGION&lt;/th&gt;
&lt;th&gt;SALES&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;East&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;West&lt;/td&gt;
&lt;td&gt;2050&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;첫번째 줄 곳에서 SQL을 사용하여 두 필드를 선택한다. 첫째는 geography 테이블의 region_name 필드 (일명 REGION), 두 번째는 store_information 테이블의 sales 필드(일명 SALES). 여기에서 사용되는 테이블 별칭은 Geography 테이블는 A1으로 store_information 테이블의 별칭은 A2으로 지정하였다. 테이블 별칭을 사용하지 않으면, 첫번째 행은 다음과 같게 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Geography&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;region_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;REGION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Store_Information&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Sales&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SALES&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이는 보면 알 수 있듯이 테이블 명을 모두 표시하기 길어지고 복잡해 진다. 여기에서 본 테이블 별칭의 용도는 SQL 문이 알기 쉽게 될 수 있으며, 특히 여러 테이블을 포함하는 SQL 문장의 경우 더 유용해 진다.&lt;/p&gt;
&lt;p&gt;이어서 두번째 줄에서 FROM 절을 보면, geography 테이블의 store_name 필드와 store_information 테이블의 store_name를 JOIN으로 연결을 하고 있다.&lt;/p&gt;
&lt;h2 id=&#34;outer-join-예제&#34;&gt;OUTER JOIN 예제&lt;/h2&gt;
&lt;p&gt;한 테이블있는 데이터 값이 다른 테이블에 하나도 나타나지 않는 경우 OUTER JOIN(외부 조인)를 사용한다.&lt;/p&gt;
&lt;p&gt;외부 조인는 데이터베이스에 따라 다른 경우도 있다. 예를 들어, Oracle은 테이블의 데이터가 필요하다는 것을 나타내기 위해 WHERE 절에 로드된 모든 테이블 후에 &amp;ldquo;(+)&amp;ldquo;를 넣는다.&lt;/p&gt;
&lt;p&gt;각 상점의 매출을 조회한다. 만약 내부 조인을 하면 store_information 테이블에 존재하지 않는 &amp;lsquo;New York&amp;rsquo; 매장의 데이터가 누락이 되어 버린다. 그래서 그런 경우 외부 조인을 사용한다.&lt;/p&gt;
&lt;p&gt;여기에 사용된 Oracle의 외부 조인는 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT A1.store_name, SUM(A2.sales) SALES
FROM geography A1, store_information A2
WHERE A1.store_name = A2.store_name (+)
GROUP BY A1.store_name;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;SALES&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;New York&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1800&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;두번째 테이블에 해당 데이터가 없는 경우 SQL에서 NULL 값이 들어간다. 이 예제에서 &amp;lsquo;New York&amp;rsquo;가 store_information 테이블에 존재하지 않기 때문에, 그 &amp;ldquo;SALES&amp;quot;필드가 NULL이 된다.&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | Subquery</title>
      <link>https://www.devkuma.com/docs/sql/subquery/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/subquery/</guid>
      <description>
        
        
        &lt;p&gt;하나의 SQL 문에, 또 다른 SQL 문을 넣을 수 있다. 그리고 WHERE 절 또는 HAVING 절에 다른 SQL 문을 삽입한 경우, subquery 구문이 넣을 수 있다. Subquery는 먼저 테이블의 결합에 사용된다. 그리고 때로는 subquery가 두 테이블을 조인하는 유일한 방법이다.&lt;/p&gt;
&lt;h2 id=&#34;subquery&#34;&gt;Subquery&lt;/h2&gt;
&lt;p&gt;Subquery은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT &amp;#34;필드1&amp;#34; FROM &amp;#34;테이블1&amp;#34;
WHERE &amp;#34;필드2&amp;#34; [비교 연산자] (SELECT &amp;#34;필드1&amp;#34; FROM &amp;#34;테이블2&amp;#34; WHERE &amp;#34;조건&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;비교 연산자는 =,&amp;gt;, &amp;lt;,&amp;gt; =, &amp;lt;= 등의 연산자가 있고, &amp;ldquo;LIKE&amp;quot;등과 같은 문자에 대한 연산자가 있다.&lt;/p&gt;
&lt;h2 id=&#34;subquery-예제&#34;&gt;Subquery 예제&lt;/h2&gt;
&lt;p&gt;SQL의 결합에 대한 예제이다.&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;geography-테이블&#34;&gt;geography 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;region_name&lt;/th&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;East&lt;/td&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;East&lt;/td&gt;
&lt;td&gt;New York&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;West&lt;/td&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;West&lt;/td&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;subquery를 이용하여 West에 있는 가게의 매출을 모두 조사하는 경우, 다음 SQL로 사용할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT SUM(sales) FROM store_information
WHERE store_name IN
(SELECT store_name FROM geography
WHERE region_name = &amp;#39;West&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;SUM(sales)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2050&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;이 예제에서는 두 개의 테이블을 직접 결합하지 않지만, West에 있는 가게의 매출을 모두 직접 계산할 수 있다. 그것은 먼저 어떤 가게가 West에 있는지 확인한다. 그리고, 그 가게의 매상을 계산하고 합계를 구한다.&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | UNION, UNION ALL</title>
      <link>https://www.devkuma.com/docs/sql/union-union-all/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/union-union-all/</guid>
      <description>
        
        
        &lt;p&gt;UNION 연산자는 두 개 이상의 SELECT 문의 결과 집합을 결합하는 데 사용된다.&lt;/p&gt;
&lt;p&gt;UNION은 두개의 SQL 문의 결과를 결합하는데 사용되는 명령이다. 그러고 보면 UNION는 JOIN와 다소 유사하다. 이 두 명령 모두 여러 테이블에서 데이터를 가져올 수 있기 때문이다. 그러나 UNION이 제한되는 것은 두개의 SQL 문에서 만들어진 필드가 동일한 데이터 유형에 사용되어야 한다. 또한 UNION 명령을 사용하는 경우 중복 데이터는 출력되지 않는다(SELECT DISTINCT와 유사).&lt;/p&gt;
&lt;h2 id=&#34;union-생성-조건&#34;&gt;UNION 생성 조건&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;UNION 내의 각 SELECT 문은 같은 수의 열을 가져야 한다.&lt;/li&gt;
&lt;li&gt;열은 유사한 데이터 형식을 가져야 한다.&lt;/li&gt;
&lt;li&gt;각 SELECT 문의 열은 또한 동일한 순서로 있어야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;UNION ALL도 두 SQL 문의 결과를 결합하는데 사용되는 명령이다. UNION ALL가 UNION과 다른 점은 UNION ALL은 데이터 값이 중복되더라도 조건에 일치하는 데이터를 모두 표시한다.&lt;/p&gt;
&lt;h2 id=&#34;union-union-all--문법&#34;&gt;UNION, UNION ALL  문법&lt;/h2&gt;
&lt;p&gt;UNION는 아래와 같이 사용한다.&lt;/p&gt;
&lt;h3 id=&#34;union-문법&#34;&gt;UNION 문법&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[SQL문1]
UNION
[SQL문2];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여기서 SQL문이 두개가 들어간다.&lt;/p&gt;
&lt;p&gt;UNION ALL는 아래와 같이 사용한다.&lt;/p&gt;
&lt;h3 id=&#34;union-all-문법&#34;&gt;UNION ALL 문법&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[SQL문1]
UNION ALL
[SQL문2];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;ALL를 붙은거 말고는 UNION과 모두 동일하다.&lt;/p&gt;
&lt;h2 id=&#34;union-예제&#34;&gt;UNION 예제&lt;/h2&gt;
&lt;p&gt;그럼 다음과 같은 두 테이블이 있다고 하자.&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;internet_sales-테이블&#34;&gt;internet_sales 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-10-2018&lt;/td&gt;
&lt;td&gt;535&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-11-2018&lt;/td&gt;
&lt;td&gt;320&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-12-2018&lt;/td&gt;
&lt;td&gt;750&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;여기서 매출(sales)의 날짜를 모두 확인하는 경우에는 다음의 SQL 문을 사용할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT txn_date FROM store_information
UNION
SELECT txn_date FROM internet_sales;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-10-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-11-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-12-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;하나 알아야 할 점은  SQL 문(또는 두 절에서 사용 가능한 경우)에 &lt;code&gt;SELECT DISTINCT txn_date&lt;/code&gt;를 사용하면 같은 결과가 나온다.&lt;/p&gt;
&lt;h2 id=&#34;union-all-예제&#34;&gt;UNION ALL 예제&lt;/h2&gt;
&lt;p&gt;그리고 상점 판매 및 인터넷 매출이 있는 날짜를 조회해 보도록 한다. 그럴 경우에 다음 SQL 문을 사용한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT txn_date FROM store_information
UNION ALL
SELECT txn_date FROM internet_sales;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-10-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-11-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-12-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | INTERSECT</title>
      <link>https://www.devkuma.com/docs/sql/intersect/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/intersect/</guid>
      <description>
        
        
        &lt;p&gt;INTERSECT는 UNION 명령과 유사하고, 두 SQL 문의 결과를 처리하는데 사용되는 명령이다. 2개가 다른 점은 UNION은 기본적으로 OR이며(설정된 값이 첫번째 구문 또는 두번째 구문에 있는 경우, 해당 값이 선택되어 출력한다), INTERSECT는 AND에 가깝다(설정된 값이 첫번째 구문과 두번째 구문에 존재하는 경우에만 선택된다). UNION은 결합이고, INTERSECT 교차이다.&lt;/p&gt;
&lt;h2 id=&#34;intersect-문법&#34;&gt;INTERSECT 문법&lt;/h2&gt;
&lt;p&gt;INTERSECT 명령은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[SQL문1]
INTERSECT
[SQL문2];
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;intersect-예제&#34;&gt;INTERSECT 예제&lt;/h2&gt;
&lt;p&gt;다음과 같은 두 테이블이 있다고 하자.&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;internet_sales-테이블&#34;&gt;internet_sales 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-10-2018&lt;/td&gt;
&lt;td&gt;535&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-11-2018&lt;/td&gt;
&lt;td&gt;320&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-12-2018&lt;/td&gt;
&lt;td&gt;750&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;여기서 어떤 날에 상점 판매와 인터넷 판매가 있는지 확인하기 위해 다음과 같은 SQL 문을 사용할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT txn_date FROM store_information
INTERSECT
SELECT txn_date FROM internet_sales;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SQL 구문 실행 결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;INTERSECT 명령은 다른 값이 한 번 밖에 나타나지 않는다는 점에 유의한다.&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | MINUS</title>
      <link>https://www.devkuma.com/docs/sql/minus/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/minus/</guid>
      <description>
        
        
        &lt;p&gt;MINUS는 두개의 SQL 문에 사용되는 명령이다. MINUS는 먼저 첫번째 SQL문 결과를 확인한다. 그리고, 그 검색한 결과가 두번째 SQL문 결과에 있는지 여부를 확인한다. 만약 있다면 그 데이터가 삭제되고 최종 결과는 나오지 않는다. 만약 두 SQL 구문의 결과가 첫번째 SQL 구문의 결과에 없을 경우 해당 데이터가 제외로 처리된다.&lt;/p&gt;
&lt;h2 id=&#34;minus-문법&#34;&gt;MINUS 문법&lt;/h2&gt;
&lt;p&gt;MINUS 명령은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[SQL문1]
MINUS
[SQL문2];
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;minus-예제&#34;&gt;MINUS 예제&lt;/h2&gt;
&lt;p&gt;아래와 같이 두개의 테이블이 있다고 하자.&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;internet_sales-테이블&#34;&gt;internet_sales 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-10-2018&lt;/td&gt;
&lt;td&gt;535&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-11-2018&lt;/td&gt;
&lt;td&gt;320&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-12-2018&lt;/td&gt;
&lt;td&gt;750&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;여기서 어느 날이 가게의 매출이 있고 인터넷 매출이 없는지 확인하기 위해 다음과 같은 SQL 문을 사용할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT txn_date FROM store_information
MINUS
SELECT txn_date FROM Internet_sales;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SQL 구문 실행 결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;lsquo;Jan-05-2018&amp;rsquo;, &amp;lsquo;Jan-07-2018&amp;rsquo;, 그리고 &amp;lsquo;Jan-08-2018&amp;rsquo;는 &lt;code&gt;SELECT txn_date FROM store_information&lt;/code&gt;에 의해 나온 결과이다. 그 중에 &amp;lsquo;Jan-07-2018&amp;rsquo; 은 &lt;code&gt;SELECT txn_date FROM internet_sales&lt;/code&gt;의 결과로 존재하는 것으로, 최종 결과는 나오지 않는다.&lt;/p&gt;
&lt;p&gt;MINUS 명령문은 명령문 바탕으로 다른 값이 한 번 밖에 나타나지 않는다는 점에 유의하도록 한다.&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | INSERT</title>
      <link>https://www.devkuma.com/docs/sql/insert/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/insert/</guid>
      <description>
        
        
        &lt;p&gt;기본적으로 데이터를 테이블에 입력하는 방법이 두 가지 있다. 하나는 한번에 하나의 데이터를 등록한다. 또 하나는 한번에 여러 개의 데이터를 입력한다.&lt;/p&gt;
&lt;h2 id=&#34;insert-문법&#34;&gt;INSERT 문법&lt;/h2&gt;
&lt;p&gt;제일 기본이 되는 데이터를 등록하는 SQL는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INSERT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INTO&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;VALUES&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;값1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;값2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;테이블이 생성된 필드의 순서와 입력한 값의 순서만 맞다면 필드명은 생략할 수도 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INSERT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INTO&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;VALUES&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;값1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;값2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;SELECT로 한번에 여러 개의 데이터를 입력 할 수도 있다. 앞에서 언급한 예제와 달리 SELECT 명령을 사용하여 입력하는 테이블의 데이터를 명시한다. 그러면 데이터가 다른 테이블에서 온 건가요,라는 질문이 있으시면, 전혀 그렇지. 한 번에 여러 개의 데이터를 입력하는 SQL은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INSERT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INTO&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table2&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;condition&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기서 가장 기본 형식으로 SQL 문에서 WHERE, GROUP BY 및 HAVING 등 외에 테이블의 결합이나 별명 등이 포함되는 것도 가능하다.&lt;/p&gt;
&lt;h2 id=&#34;insert-예제-한번에-1건-등록&#34;&gt;INSERT 예제: 한번에 1건 등록&lt;/h2&gt;
&lt;p&gt;다음과 같은 구조의 테이블이 있다고 하자.&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;필드명&lt;/th&gt;
&lt;th&gt;자료형&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;store_name&lt;/td&gt;
&lt;td&gt;char(50)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;sales&lt;/td&gt;
&lt;td&gt;float&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;txn_date datetime&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;그리고 다음에 Los Angeles 매장에 Jan-10-2018, 매출 $900 데이터를 해당 테이블에 넣는 경우 다음과 같은 SQL 문을 입력한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INSERT INTO store_information (store_name, sales, txn_Date)
VALUES (&amp;#39;Los Angeles&amp;#39;, 900, &amp;#39;Jan-10-2018&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;혹은, 아래와 같이도 입력할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INSERT INTO store_information VALUES (&amp;#39;Los Angeles&amp;#39;, 900, &amp;#39;Jan-10-2018&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;insert-예제-한번에-여러-건-등록&#34;&gt;INSERT 예제: 한번에 여러 건 등록&lt;/h2&gt;
&lt;p&gt;2017년의 판매한 데이터를 store_information 테이블에 등록한다고 할때, 그 데이터가 sales_information 테이블에서 얻어서 넣은 경우 다음과 같은 SQL을 입력한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;INSERT INTO store_information (store_name, sales, txn_date)
SELECT store_name, sales, txn_date
FROM sales_information
WHERE Year(txn_date) = 2017;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여기에서 SQL Server의 함수에서 날짜의 연도를 검색했는데, 데이터베이스에 따라 문법이 다르다. 예를 들어, Oracle에서는 &lt;code&gt;WHERE TO_CHAR(Txn_Date, &#39;yyyy&#39;) = 2017&lt;/code&gt;와 같이 사용한다.&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | UPDATE</title>
      <link>https://www.devkuma.com/docs/sql/update/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/update/</guid>
      <description>
        
        
        &lt;p&gt;테이블의 데이터를 수정하는 경우에 UPDATE 명령을 사용한다.&lt;/p&gt;
&lt;h2 id=&#34;update-문법&#34;&gt;UPDATE 문법&lt;/h2&gt;
&lt;p&gt;UPDATE문의 기본 SQL은 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;UPDATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;새로운&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;값&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;조건&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;한번에 여러 필드를 동시에 수정할 수도 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;UPDATE &amp;#34;테이블명&amp;#34;
SET &amp;#34;필드1&amp;#34; = [값1], &amp;#34;필드2&amp;#34; = [값2]
WHERE &amp;#34;조건&amp;#34;;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;update-예제&#34;&gt;UPDATE 예제&lt;/h2&gt;
&lt;p&gt;아래와 같이 테이블이 있다고 하자.&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;Los Angeles 매장에서 2018/01/08의 실제 매출이 테이블에 저장된 $300이 아니라, $500이라는 것을 뒤늦게 발견하여, 다음과 같은 SQL을 사용하여 데이터를 수정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;UPDATE store_information
SET Sales = 500
WHERE Store_Name = &amp;#39;Los Angeles&amp;#39;
AND Txn_Date = &amp;#39;Jan-08-2018&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;테이블을 다시 조회해 보면 아래와 같이 수정된 것을 확인할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블-1&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;500&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;이 예제에서는 하나의 데이터만 WHERE 절의 조건에 일치한다. 만약 여러 데이터가 그 조건에 일치하는 경우 일치하는 모든 데이터가 수정된다.&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DML : 데이터 조작 언어 | DELETE</title>
      <link>https://www.devkuma.com/docs/sql/delete/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/delete/</guid>
      <description>
        
        
        &lt;p&gt;데이터베이스에서 일부 데이터를 직접 삭제할 수 있다. 삭제는 DELETE를 사용한다.&lt;/p&gt;
&lt;h2 id=&#34;delete-문법&#34;&gt;DELETE 문법&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DELETE FROM &amp;#34;테이블명&amp;#34;
WHERE &amp;#34;조건&amp;#34;;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;delete-예제&#34;&gt;DELETE 예제&lt;/h2&gt;
&lt;p&gt;그럼 예를 들어 설명한다. 가령 다음과 같은 테이블이 있다고 하자.&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;여기서 Los Angeles에 대한 데이터를 모두 삭제할 시에는 다음과 같은 SQL 문을 사용한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DELETE FROM store_information
WHERE store_name = &amp;#39;Los Angeles&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 SQL를 실행하면 테이블은 아래와 같이 된다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | 함수</title>
      <link>https://www.devkuma.com/docs/sql/%ED%95%A8%EC%88%98/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/%ED%95%A8%EC%88%98/</guid>
      <description>
        
        
        &lt;p&gt;데이터베이스에서 많은 데이터가 숫자로 나타난 숫자 연산 있는 것이 함수이다. 예를 들어, 그 숫자를 합을 구하거나, 평균값을 계산하는 등이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;AVG(평균)&lt;/li&gt;
&lt;li&gt;COUNT(카운트)&lt;/li&gt;
&lt;li&gt;MAX(최대 값)&lt;/li&gt;
&lt;li&gt;MIN(최소값)&lt;/li&gt;
&lt;li&gt;SUM(합계)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;함수-문법&#34;&gt;함수 문법&lt;/h2&gt;
&lt;p&gt;함수 사용은 다음과 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT &amp;#34;함수명&amp;#34;(&amp;#34;필드명&amp;#34;)
FROM &amp;#34;테이블명&amp;#34;;
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | 함수 | AVG(평균)</title>
      <link>https://www.devkuma.com/docs/sql/avg-%ED%8F%89%EA%B7%A0/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/avg-%ED%8F%89%EA%B7%A0/</guid>
      <description>
        
        
        &lt;p&gt;AVG는 테이블에 조회되는 데이터의 평균을 구한다&lt;/p&gt;
&lt;h2 id=&#34;avg평균-문법&#34;&gt;AVG(평균) 문법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AVG&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;avg평균-예제&#34;&gt;AVG(평균) 예제&lt;/h2&gt;
&lt;p&gt;예를 들어, 아래 테이블의 sales 필드의 평균이 몇인지 알아내는 경우&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;아래와 같이 명령을 입력하면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT AVG(sales)
FROM store_information
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;AVG(sales)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;687.5000&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | 함수 | COUNT(카운트)</title>
      <link>https://www.devkuma.com/docs/sql/count-%EC%B9%B4%EC%9A%B4%ED%8A%B8/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/count-%EC%B9%B4%EC%9A%B4%ED%8A%B8/</guid>
      <description>
        
        
        &lt;p&gt;COUNT는 테이블에 조회되는 데이터가 얼마나 있는지, 갯수를 조회할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;count카운트-문법&#34;&gt;COUNT(카운트) 문법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;count카운트-예제&#34;&gt;COUNT(카운트) 예제&lt;/h2&gt;
&lt;p&gt;예를 들어, 아래 테이블의 store_name 필드에 공백 데이터가 아닌 것이 몇개가 있는지 알아내는 경우&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;아래와 같이 명령을 입력하면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT COUNT(store_name)
FROM store_information
WHERE store_name IS NOT NULL;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;COUNT(store_name)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;ldquo;IS NOT NULL&amp;quot;는 이 필드가 NULL 즉, 비어 있지 않는다는 것을 나타낸다.&lt;/p&gt;
&lt;p&gt;COUNT와 DISTINCT를 같이 사용되는 경우는 테이블에서 같은 데이터는 제거하고 몇개인지 조회할 때 사용된다. 예를 들명, 테이블의 store_name가 몇 개인지를 조회하는 경우 다음과 같이 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;COUNT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DISTINCT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;store_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;store_information&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;COUNT(DISTINCT store_name)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | 함수 | MAX(최대값), MIN(최소값)</title>
      <link>https://www.devkuma.com/docs/sql/max-%EC%B5%9C%EB%8C%80%EA%B0%92-min-%EC%B5%9C%EC%86%8C%EA%B0%92/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/max-%EC%B5%9C%EB%8C%80%EA%B0%92-min-%EC%B5%9C%EC%86%8C%EA%B0%92/</guid>
      <description>
        
        
        &lt;p&gt;MAX와 MIN는 테이블에 조회되는 데이터의 최대값 및 최소값을 구한다&lt;/p&gt;
&lt;h2 id=&#34;max최대값-min최소값-문법&#34;&gt;MAX(최대값), MIN(최소값) 문법&lt;/h2&gt;
&lt;p&gt;최대값을 구하는 함수는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;MAX&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;최소값을 구하는 함수는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;MIN&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;avg-예제&#34;&gt;AVG() 예제&lt;/h2&gt;
&lt;p&gt;예를 들어, 아래 테이블의 sales 필드의 최대값 및 최소값이 몇인지 알아내는 경우&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;아래와 같이 명령을 입력하면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT MAX(sales), MIN(sales)
FROM store_information
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과를 아래와 구할 수 있다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;MAX(sales)&lt;/th&gt;
&lt;th&gt;MIN(sales)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | 함수 | SUM(합계)</title>
      <link>https://www.devkuma.com/docs/sql/sum/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/sum/</guid>
      <description>
        
        
        &lt;p&gt;SUM는 테이블에 조회되는 데이터의 합계를 조회할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;sum합계-문법&#34;&gt;SUM(합계) 문법&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;필드명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;테이블명&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;sum합계-예제&#34;&gt;SUM(합계) 예제&lt;/h2&gt;
&lt;p&gt;예를 들어, 예제 테이블에 있는 sales 필드의 합계를 계산하는 경우,&lt;/p&gt;
&lt;h3 id=&#34;store_information-테이블&#34;&gt;store_information 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;th&gt;sales&lt;/th&gt;
&lt;th&gt;txn_date&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;1500&lt;/td&gt;
&lt;td&gt;Jan-05-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;td&gt;Jan-07-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;td&gt;300&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;td&gt;700&lt;/td&gt;
&lt;td&gt;Jan-08-2018&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;아래와 같이 명령을 입력하면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT SUM(sales) FROM store_information;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;아래와 같이 명령을 입력하면,&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;SUM(sales)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2750&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;2750은 모든 sales 필드의 합계 : 1500 + 250 + 300 + 700.&lt;/p&gt;
&lt;p&gt;함수 외에, SQL을 사용하여 더하기(+)와 마이너스(-)의 간단한 수학 연산도 가능하다. 문자의 데이터 내용은 SQL에도 문자 처리 함수가 몇개 있다. 예를 들어, 문자열 연결(concatenation), 문자 잘라 내기(trim) 및 부분 문자열 검색(substring). 데이터베이스에 따라 함수가 다르다. 그 함수의 사용법을 확인하기 위해, 사용하는 데이터베이스의 정보를 참고하면 된다.&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | 함수 | Substring : 문자열 일부 추출</title>
      <link>https://www.devkuma.com/docs/sql/substring/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/substring/</guid>
      <description>
        
        
        &lt;p&gt;SQL에서 함수 substring은 하나의 필드 데이터의 일부를 읽는데 사용된다. 데이터베이스에 의해 이 함수명이 다르다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL : SUBSTR(), SUBSTRING()&lt;/li&gt;
&lt;li&gt;Oracle : SUBSTR()&lt;/li&gt;
&lt;li&gt;SQL Server : SUBSTRING()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;일반적으로 사용되는 경우는 다음과 같다. 여기서, SUBSTR()를 예로 한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SUBSTR(str, pos)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;str&lt;/code&gt;에서 &lt;code&gt;pos&lt;/code&gt; 번째 위치에서 모든 문자를 읽어들입니다. 이 프로그램이 SQL Server에 적용되지 않는다는 점에 유의하십시오.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SUBSTR(str, pos, len)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;str&lt;/code&gt;에서 &lt;code&gt;pos&lt;/code&gt; 번째 위치에서 &lt;code&gt;len&lt;/code&gt; 개의 문자를 읽어 들인다.&lt;/p&gt;
&lt;h2 id=&#34;substring-예제&#34;&gt;Substring 예제&lt;/h2&gt;
&lt;p&gt;가령 다음과 같은 테이블이 있다고 하자.&lt;/p&gt;
&lt;h3 id=&#34;geography-테이블&#34;&gt;geography 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;region_name&lt;/th&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;East&lt;/td&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;East&lt;/td&gt;
&lt;td&gt;New York&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;West&lt;/td&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;West&lt;/td&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;예제-1&#34;&gt;예제 1&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT SUBSTR(store_name, 3) 
FROM geography 
WHERE store_name = &amp;#39;Los Angeles&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#39;s Angeles&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;예제-2&#34;&gt;예제 2&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT SUBSTR(store_name, 2, 4) 
FROM geography 
WHERE store_name = &amp;#39;San Diego&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#39;an D&amp;#39;
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | 함수 | Concatenate : 문자열 결합</title>
      <link>https://www.devkuma.com/docs/sql/concatenate/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/concatenate/</guid>
      <description>
        
        
        &lt;p&gt;다른 필드에서 데이터를 결합하는 경우가 있다. 각각의 데이터베이스에이 목적을 달성하기위한 방법이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL : CONCAT()&lt;/li&gt;
&lt;li&gt;Oracle : CONCAT(), ||&lt;/li&gt;
&lt;li&gt;SQL Server : +&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;concatenate-문법&#34;&gt;Concatenate 문법&lt;/h2&gt;
&lt;p&gt;CONCAT()은 다음과 사용한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CONCAT(문자열1, 문자열2, 문자열3, ...)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;문자열1, 문자열2, 문자열3&amp;hellip;를 결합한다. Oracle의 CONCAT()에는 두개의 매개 변수가 허용된다는 점에 주의한다. 즉, 한번에 두 문자열만 결합할 수 있다. 한번에 여러 문자를 결합은 &amp;lsquo;||&amp;lsquo;를 사용하여 결합할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;concatenate-예제&#34;&gt;Concatenate 예제&lt;/h2&gt;
&lt;p&gt;예를 들어, 다음과 같은 테이블이 있다고 하자.&lt;/p&gt;
&lt;h3 id=&#34;geography-테이블&#34;&gt;geography 테이블&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;region_name&lt;/th&gt;
&lt;th&gt;store_name&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;East&lt;/td&gt;
&lt;td&gt;Boston&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;East&lt;/td&gt;
&lt;td&gt;New York&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;West&lt;/td&gt;
&lt;td&gt;Los Angeles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;West&lt;/td&gt;
&lt;td&gt;San Diego&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;예제-1&#34;&gt;예제 1&lt;/h3&gt;
&lt;p&gt;MySQL / Oracle :&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT CONCAT(region_name, store_name) FROM geography 
WHERE store_name = &amp;#39;Boston&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#39;EastBoston&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;예제-2&#34;&gt;예제 2&lt;/h3&gt;
&lt;p&gt;Oracle :&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT region_name || &amp;#39; &amp;#39; || store_name FROM geography 
WHERE store_name = &amp;#39;Boston&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#39;East Boston&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;예제-3&#34;&gt;예제 3&lt;/h3&gt;
&lt;p&gt;SQL Server :&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT region_name + &amp;#39; &amp;#39; + store_name FROM geography 
WHERE store_name = &amp;#39;Boston&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#39;East Boston&amp;#39;
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | 함수 | Trim : 문자열 공백 제거</title>
      <link>https://www.devkuma.com/docs/sql/trim/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/trim/</guid>
      <description>
        
        
        &lt;p&gt;SQL 함수 TRIM는 하나의 문자열의 시작 또는 끝 부분을 제거하는 데 사용된다. 흔히 볼 수 있는 것은 데이터베이스에 의해 이 함수명이 다르다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL : TRIM(), RTRIM(), LTRIM()&lt;/li&gt;
&lt;li&gt;Oracle : RTRIM() LTRIM()&lt;/li&gt;
&lt;li&gt;SQL Server : RTRIM(), LTRIM()&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;각각의 trim은 다음과 같습니다.&lt;/p&gt;
&lt;h2 id=&#34;trim위치--제거-문자열-from-문자열&#34;&gt;TRIM([[위치]  [제거 문자열] FROM] 문자열)&lt;/h2&gt;
&lt;p&gt;[위치]의 입력되는 값은 LEADING(시작 부분), TRAILING(끝) 또는 BOTH(시작 부분과 끝 부분) 이다. 이 함수는 [제거 문자열]을 문자열의 시작 부분, 끝 부분 또는 시작 부분과 끝에서 제거한다. [제거 문자열]이 표시되지 않으면 공백이 제거된다.&lt;/p&gt;
&lt;h2 id=&#34;ltrim-문자열&#34;&gt;LTRIM (문자열)&lt;/h2&gt;
&lt;p&gt;문자열의 시작 부분의 공백을 제거한다.&lt;/p&gt;
&lt;h2 id=&#34;rtrim-문자열&#34;&gt;RTRIM (문자열)&lt;/h2&gt;
&lt;p&gt;문자열의 끝 부분의 공백을 제거한다.&lt;/p&gt;
&lt;h2 id=&#34;trim-예제&#34;&gt;Trim 예제&lt;/h2&gt;
&lt;h3 id=&#34;trim-예제-1&#34;&gt;TRIM() 예제&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT TRIM(&amp;#39;   Sample   &amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#39;Sample&amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;ltrim-예제&#34;&gt;LTRIM() 예제&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT LTRIM(&amp;#39;   Sample   &amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#39;Sample   &amp;#39;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;rtrim-예제&#34;&gt;RTRIM() 예제&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT RTRIM (&amp;#39;   Sample   &amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;#39;   Sample&amp;#39;
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | 함수 | Replace : 문자열 치환</title>
      <link>https://www.devkuma.com/docs/sql/replace/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/replace/</guid>
      <description>
        
        
        &lt;p&gt;SQL에서 함수 Replace는 하나의 필드 데이터의 일부를 치환하는데 사용된다. 데이터베이스에 의해 이 함수명이 다르다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL : REPLACE()&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;replace-문법&#34;&gt;Replace 문법&lt;/h2&gt;
&lt;p&gt;REPLACE()은 다음과 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;REPLACE&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;문자열&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;치환할 문자열&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;치환될 문자열&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;replace-예제&#34;&gt;Replace 예제&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;REPLACE&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;abcdefg&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;abc&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;aaa&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;결과는 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;| REPLACE(&amp;#39;abcdefg&amp;#39;, &amp;#39;abc&amp;#39;, &amp;#39;aaa&amp;#39;) |
|--|
| aaadefg |
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
  </channel>
</rss>
