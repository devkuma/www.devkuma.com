<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devkuma – php</title>
    <link>https://www.devkuma.com/tags/php/</link>
    <image>
      <url>https://www.devkuma.com/tags/php/logo/180x180.jpg</url>
      <title>php</title>
      <link>https://www.devkuma.com/tags/php/</link>
    </image>
    <description>Recent content in php on devkuma</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <managingEditor>redfreek2c@gmail.com (kimkc)</managingEditor>
    <webMaster>redfreek2c@gmail.com (kimkc)</webMaster>
    <copyright>The devkuma</copyright>
    
	  <atom:link href="https://www.devkuma.com/tags/php/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>php 입문 | 개요</title>
      <link>https://www.devkuma.com/docs/php/%EA%B0%9C%EC%9A%94/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EA%B0%9C%EC%9A%94/</guid>
      <description>
        
        
        &lt;p&gt;현재 가장 안정적인 인기 프로그래밍 언어라고 하면 아마도 &amp;ldquo;Java&amp;quot;와 &amp;ldquo;PHP&amp;quot;일 것이다. Java는 서버 측의 본격적인 개발에서 Android 스마트폰의 어플 제작까지 폭넓게 사용되고 있다. 또 하나의 PHP는 &amp;ldquo;Web 프로그래밍&amp;quot;에 특화한 언어로써, Java와 같은 본격적인 프로그래밍 기술이 없어도 부담없이 시작할 수 있다. Java가 비교적 프로페셔널 같은 느낌이 있는 반면, PHP는 &amp;ldquo;아마추어용&amp;quot;이라는 인상이 강하다.&lt;/p&gt;
&lt;p&gt;최근에는 PHP를 사용할 수 있는 호스팅 사이트 등도 많이 증가했고, 누구나 좀 공부하면 PHP를 쓸 수 있다. &amp;ldquo;그렇다면 나도 한번 해볼까&amp;quot;라고 생각한 프로그래밍 미경험자를 위한 쓴 입문 문서가 본 연재이다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Laravel 시작 및 프로젝트 생성</title>
      <link>https://www.devkuma.com/docs/laravel/start/</link>
      <pubDate>Wed, 10 Jan 2018 21:43:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/laravel/start/</guid>
      <description>
        
        
        &lt;h2 id=&#34;laravel-준비&#34;&gt;Laravel 준비&lt;/h2&gt;
&lt;p&gt;Laravel은 PHP Web 응용 프로그램 프레임워크이다. Model-View-Controller에 의해 응용 프로그램을 구성하는 이른바 &amp;lsquo;MVC 아키텍처 &amp;ldquo;에 기초하여 만들어진 것으로, 예를 들어 CakePHP 등과 같은 역할을 한다.&lt;/p&gt;
&lt;p&gt;Laravel은 다음 사이트에서 공개되어 있다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://laravel.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://laravel.com/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;한국어 싸이트는 아래와 같다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://laravel.kr/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://laravel.kr/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;여기에서 Laravel의 소프트웨어를 다운로드하고 설치하는 방식은 하지 않는다. Laravel은 패키지 관리 도구를 사용하여 설치한다. 여기에서는 PHP 패키지 관리 도구 &amp;ldquo;Composer&amp;quot;를 이용하기로 한다.&lt;/p&gt;
&lt;h3 id=&#34;composer-준비&#34;&gt;Composer 준비&lt;/h3&gt;
&lt;p&gt;Composer는 다음의 주소에서 공개되어 있다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://getcomposer.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://getcomposer.org/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;여기에서 Comoser 설치 프로그램을 다운로드하여 설치한다. 프로젝트의 작성 등은 모두 Composer를 이용하여 실시한다. 따라서 Laravel 자체를 설치하는 작업은 특별히 필요 없다.&lt;/p&gt;
&lt;p&gt;이 Composer는 명령 프롬프트에서 명령으로 실행한다. 명령 프롬프트를 기동하고 &amp;ldquo;composer&amp;quot;고 실행한다. 그러면 Composer 명령 목록이 나타나는 것이다. 이 목록이 나오면 Composer를 사용할 수 있게 된 것이다.&lt;/p&gt;
&lt;p&gt;만약 &amp;ldquo;composer는 내부 또는 외부 명령, 실행할 수 있는 프로그램 또는 배치 파일이 인식되지 않다&amp;quot;라는 메시지가 나타나면 Composer 경로가 들어가 있지 않는 것이다. Composer는 다음 중 하나에 저장되어 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\ProgramFies(x86)\ComposerSetup\bin;
C:\ProgramData\ComposerSetup\bin;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이중 하나에 composer.bat가 있을 것이므로, 파일이 있는 쪽의 경로를 path 변수에 추가하도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;laravel-프로젝트-생성&#34;&gt;Laravel 프로젝트 생성&lt;/h2&gt;
&lt;p&gt;Laravel 예제를 만들어 보자. Laravel은 &amp;ldquo;프로젝트&amp;quot;를 작성하고 개발한다.&lt;/p&gt;
&lt;p&gt;프로젝트라는 것은 만드는 응용 프로그램에 필요한 파일과 설정 등을 모두 한 묶음으로 모은 것으로, Laravel의 개발은 기본적으로 프로젝트를 만들고, 거기에 필요한 파일을 추가하거나 편집하고 가는 방식으로 한다.&lt;/p&gt;
&lt;p&gt;이 프로젝트 생성은 명령 프롬프트를 사용하여 composer 명령을 실행한다.&lt;/p&gt;
&lt;h3 id=&#34;laravel-프로젝트-만들기&#34;&gt;Laravel 프로젝트 만들기&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;composer create-project laravel/laravel 프로젝트명 --prefer-dist
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;composer create-project laravel/laravel&lt;/code&gt;는 조금 긴데, 이는 composer으로 Laravel 프로젝트를 만드는 명령이다. 이 명령 이후에 프로젝트명을 넣는다. 그러고 &lt;code&gt;--prefer-dist&lt;/code&gt;라는 것은 패키지의 다운로드 하는 위치에 관한 것으로, &lt;code&gt;--prefer-source&lt;/code&gt;와 &lt;code&gt;--prefer-dist&lt;/code&gt; 중 하나를 지정한다.&lt;/p&gt;
&lt;p&gt;그럼, &amp;ldquo;myapp&amp;quot;라는 프로젝트를 만들어 보자. 명령 프롬프트를 열고, 프로젝트를 저장할 위치로 cd로 이동하고, 다음과 같이 실행한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;composer create-project laravel/laravel myapp --prefer-dist
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이것으로 현재 디렉터리에 &amp;ldquo;myapp&amp;quot;이라는 폴더가 생성되고, 그 안에 필요한 파일들이 저장된다.&lt;/p&gt;
&lt;h3 id=&#34;laravel-설치에-대해&#34;&gt;Laravel 설치에 대해&lt;/h3&gt;
&lt;p&gt;Laravel 이용은 Composer를 사용하여 수행할 수 있지만, 좀 더 쉽게 사용할 수 있도록 하고 싶다면 Laravel 인스톨러을 이용하면 된다. 이는 명령 프롬프트에서 다음과 같이 실행한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;composer global require &amp;#34;laravel/installer=~1.1&amp;#34;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이제 Laravel 프로그램이 포함된다. 그러고 Laravel 설치 프로그램의 위치를 path 변수에 추가한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\Users\사용자명\AppData\Roaming\Composer\vendor\bin;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ldquo;사용자명&amp;quot;은 각각의 맞는 이름으로 대체한다. 이것으로 Laravel 설치 프로그램을 사용할 수 있게 된다. 이것을 사용하면 다음과 같이 쉽게 프로젝트를 만들 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;laravel new 프로젝트명
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;명령 프롬프트에서 이렇게 실행하면 프로젝트를 만들 수 있다. myapp라면 &lt;code&gt;laravel new myapp&lt;/code&gt;라고 입력만 하면 된다.&lt;/p&gt;
&lt;p&gt;Composer를 사용하여도, Laravel 인스톨러에서 생성되어도 프로젝트에는 차이가 없다. 어느 방법이라도 선호하는 방법으로 하면 된다.&lt;/p&gt;
&lt;h2 id=&#34;laravel-프로젝트-실행&#34;&gt;Laravel 프로젝트 실행&lt;/h2&gt;
&lt;p&gt;생성된 프로젝트를 동작시켜 보자.&lt;/p&gt;
&lt;p&gt;생성된 Laravel 프로젝트에 대한 작업은 &amp;ldquo;artisan&amp;quot;라는 프로그램을 사용한다. 우선 cd 명령으로 프로젝트로 이동한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd myapp
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그리고 내장 서버를 시작한다. Laravel은 내장의 서버 프로그램을 사용하여 로컬 환경에서 프로젝트를 Web 응용 프로그램으로 시작할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ php artisan serve
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;artisan는 PHP 프로그램이다. &lt;code&gt;php artisan&lt;/code&gt;라는 명령 뒤에 옵션으로 실행하는 내용을 지정한다. &amp;ldquo;serve&amp;quot;를 지정하면 내장 서버를 시작한다. 실행이 되면, Web 브라우저에서 다음 주소를 접근해 본다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:8000/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://localhost:8000/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;화면의 중앙에 &amp;ldquo;Laravel 5&amp;quot;라고 표시된 페이지가 나타난다. 이것이 만든 프로젝트의 실행 화면이다. 프로젝트에는 기본적으로 이러한 페이지가 샘플로 준비되어 있다.&lt;/p&gt;
&lt;p&gt;프로그램을 종료하려면, 실행중인 명령 프롬프트를 선택하고 &lt;code&gt;Ctrl + C&lt;/code&gt; 키를 눌러 작업을 중단하면 된다. 그러면, 서버 프로그램도 실행을 중단하고 입력 대기 상태로 돌아간다.&lt;/p&gt;
&lt;h2 id=&#34;laravel-프로젝트-구성&#34;&gt;Laravel 프로젝트 구성&lt;/h2&gt;
&lt;p&gt;만든 프로젝트 폴더를 열어 보면 살펴 보자. 많은 폴더가 있을 것이다. 여기서 대략 적은 설명을 하겠다&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;app 폴더&lt;/strong&gt; : 어플리케이션의 본체 부분이다. 응용 프로그램 개발을 할 때 여기에 PHP 프로그램을 배치하고 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;bootstrap 폴더&lt;/strong&gt; : 어플리케이션의 부트스트랩 프로그램이다. 기동을 하고 각종 처리가 준비되어 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;config 폴더&lt;/strong&gt; : 어플리케이션의 각종 설정 정보 파일이 있는 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;database 폴더&lt;/strong&gt; : 데이터베이스 관련 파일을 정리된 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;public 폴더&lt;/strong&gt; : 공개 폴더이다. MVC 아키텍처를 사용하지 않는 일반 HTML 파일 등은 여기에 배치한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;resources 폴더&lt;/strong&gt; : 어플리케이션에서 사용하는 리소스 파일을 두는 폴더이다. MVC의 뷰(화면)의 템플릿 파일 등은 여기에 놓는다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;storage 폴더&lt;/strong&gt; : 데이터 저장을 위한 폴더이다. 세션 및 캐시 등의 저장 파일이 작성된다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;tests 폴더&lt;/strong&gt; : 단위 테스트 관련 파일의 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;vendor 폴더&lt;/strong&gt; : 공급 업체가 만드는 프로그램등이 모와둔 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이 밖에 파일들도 여러가지 저장되어 있지만, 우리가 작업해야 하는 것은 특별히 없으므로 생략한다. 많이 있지만, 중요한 것은 app, config, public, resources 정도 일것이다.&lt;/p&gt;
&lt;p&gt;app는 실제 프로그래밍을 할 때마다 사용한다. config는 예를 들어 사용하는 데이터베이스를 설정할 때 사용한다. public은 보통의 HTML 파일 등을 설치하는데 사용하는 것이다. resources는 화면 표시를 위한 템플릿을 설치하는데 사용한다.&lt;/p&gt;
&lt;p&gt;이것 외에는 즉시 사용하지 않으므로 일단은 기억해 두지 않아도 된다. 우선, 이 4 개의 폴더의 역할 정도는 대충 기억한다.&lt;/p&gt;
&lt;h3 id=&#34;app-폴더&#34;&gt;app 폴더&lt;/h3&gt;
&lt;p&gt;프로젝트에 포함되어 있는 폴더 중에서 가장 중요한 것이 app 폴더 것이다. 이 폴더는 Laravel 응용 프로그램의 주요 부분을 배치하는 곳이다.&lt;/p&gt;
&lt;p&gt;이 app 폴더 안에는 여러 폴더가 포함되어 있다. 정리하면 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Console 폴더&lt;/strong&gt; : 콘솔 프로그램(명령 프로그램)을 모와둔 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Events 폴더&lt;/strong&gt; : 이벤트의 프로그램이 모와둔 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Exceptions 폴더&lt;/strong&gt; : 예외 처리의 핸들링에 관한 프로그램을 모와둔 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Http 폴더&lt;/strong&gt; : HTTP 액세스할 때의 처리에 관한 것을 모와둔 폴더이다. 응용 프로그램에서 만드는 기본적인 프로그램은 여기에 포함된다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Jobs 폴더&lt;/strong&gt; : 큐에 추가하고 실행되는 프로그램(작업)을 모와둔 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Listeners 폴더&lt;/strong&gt; : 이벤트 리스너 프로그램을 모와둔 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Policies 폴더&lt;/strong&gt; :  &amp;ldquo;정책&amp;quot;이라는 인증 처리 프로그램을 모와둔 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Providers 폴더&lt;/strong&gt; - 서비스 제공자라는 프로그램을 모와둔 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이 중에 잘 모르는 것도 많이 있겠지만, 당분간은 사용하지 않는 것이 많기에 모두 기억할 필요는 없다. 우선 여기서 꼭 기억해야 할 것은 &amp;ldquo;Http&amp;quot;폴더이다. 실제로 프로그래밍을 시작하면 알겠지만 Laravel 프로그램은 먼저 이 Http 폴더에 &amp;ldquo;컨트롤러&amp;quot;라는 프로그램을 설치부터 시작한다. 그러므로, 이 &amp;ldquo;Http&amp;quot;폴더라는 것만은 기억해 두도록 한다.&lt;/p&gt;
&lt;h3 id=&#34;http-폴더&#34;&gt;Http 폴더&lt;/h3&gt;
&lt;p&gt;가장 중요한 Http 폴더 안에는 더욱 여러 폴더와 파일이 있다. 이도 대충 정리하면 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Controllers 폴더&lt;/strong&gt; : 컨트롤러라는 프로그램을 모와두는 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Middleware 폴더&lt;/strong&gt; : 미들웨어는 소위 필터와 같은 역할을 하는 프로그램을 모와두는 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Requests 폴더&lt;/strong&gt; : 요청에 대한 프로그램을 모와두는 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Kernel.php&lt;/strong&gt; : HTTP 커널이라는 Http 액세스 미들웨어가 되는 프로그램을 모와두는 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;routes.php&lt;/strong&gt; : 액세스 한 주소에 대해 처리를 할당 라우팅 프로그램을 모와두는 폴더이다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;우선, Controllers 폴더와 routes.php은 실제 프로그래밍에 들어가면 바로 사용해야 하기에, 이 2가지 내용은 기억해 두도록 하자.&lt;/p&gt;
&lt;p&gt;이것으로 프로젝트의 대략적인 구성에 대해서 살펴 봤다. 다음에는 실제 프로그래밍을 시작해 보도록 하겠다.&lt;/p&gt;

      </description>
      
      <category>Laravel</category>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문</title>
      <link>https://www.devkuma.com/docs/php/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/php/php.jpeg&#34; alt=&#34;php 입문&#34;&gt;&lt;/p&gt;
&lt;p&gt;프로그래밍은 해본 적이 없다 &amp;hellip;&amp;hellip;라고 하는 사람을 위해 기초부터 PHP의 사용법을 설명한다.
우선 Web과 HTML의 기본 정도 알고 있으면 된다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 서버 준비</title>
      <link>https://www.devkuma.com/docs/php/%EC%84%9C%EB%B2%84-%EC%A4%80%EB%B9%84/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EC%84%9C%EB%B2%84-%EC%A4%80%EB%B9%84/</guid>
      <description>
        
        
        &lt;p&gt;우선, 서버 프로그램을 설치하여 PHP를 움직여 보자.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Laravel 라우팅, 컨트롤러</title>
      <link>https://www.devkuma.com/docs/laravel/routes-controller/</link>
      <pubDate>Wed, 10 Jan 2018 21:43:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/laravel/routes-controller/</guid>
      <description>
        
        
        &lt;h2 id=&#34;라우팅과-routesphp&#34;&gt;라우팅과 routes.php&lt;/h2&gt;
&lt;p&gt;Web 어플리케이션의 개발을 할 때 먼저 생각해야 하는 것은은 **라우팅(routing)**이다. 라우팅이란, 어떤 주소에 액세스하면 어떤 작업을 수행하는지를 할당하는 것이다.&lt;/p&gt;
&lt;p&gt;프레임워크를 사용하지 않았을 때에는 Web 개발은 매우 간단했다. 공개 폴더에서 &amp;ldquo;myapp&amp;quot;라는 폴더에 &lt;code&gt;helo.php&lt;/code&gt;라는 파일을 두면, &lt;code&gt;/myapp/helo.php&lt;/code&gt;에 접속하면 그것이 호출되었다.&lt;/p&gt;
&lt;p&gt;그런데 프레임워크에서는 그런 간단한 접근 방법은 하지 않는다. 응용 프로그램 전체를 프레임워크에 의해 제어하고, 필요한 경우에 프로그램을 호출 실행하도록 되어 있다. 이 주소에 액세스하면, 어떤 프로그램을 실행하고 어떤 파일을 표시할지에 대해서 프레임워크에서 모두 관리할 수 있게 되어 있는 것이다. 이렇게 하는 것이 라우팅이다.&lt;/p&gt;
&lt;p&gt;이 라우팅은 app 안에 Http 폴더에 있는 routes.php 라는 파일에 의해 수행된다. 이 파일을 열면 아래 목록과 같은 스크립트가 적혀 있다.&lt;/p&gt;
&lt;p&gt;여기에서는 2개의 static 메소드의 호출이 작성되어 있다. 정리하면, 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Route::get(XX);
Route::group(XX);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;라우팅은 이렇게 Route 라는 클래스에 포함되어 있는 static 메소드를 호출하는 것으로 설정한다. 이러한 방법은 다음과 같이 2개의 인수를 가지고 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Route::메소드(값, 함수);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;첫번째 인수가 라우팅에 할당되는 드레스 등의 정보를 나타내는 것이다. 이 값은 메소드에 의해 다소 내용이 다르다. get 메소드에는 주소를 나타내는 텍스트이며, group에서는 주소 정보를 정리한 배열되어 있기도 한다. (자세한 내용은 나중에)&lt;/p&gt;
&lt;p&gt;그리고, 두번째 인수가 거기에 액세스 되었을 때 호출되는 처리이다. 이 함수에서 반환된 값이 해당 주소에 접근한 결과로 처리된다. 출력할 내용(텍스트)을 그대로 return해도 되고, HTML 등의 템플릿 파일을 반환하거나 컨트롤러의 호출 처리를 지정할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;route-클래스의-메소드&#34;&gt;Route 클래스의 메소드&lt;/h3&gt;
&lt;p&gt;Route에 포함되어 있는 라우팅 설정을 위한 방법에 대해 간단하게 정리하고 설명한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Route::get(주소, 함수);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;GET 액세스 되었을 때의 라우팅을 설정한다. 첫번째 인수는 할당 주소를 텍스트로 제공한다. 두번째 인수의 함수로 텍스트를 return하면 그것이 그대로 출력된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Route::post(주소, 함수);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;POST 액세스 되었을 때의 라우팅을 설정한다. 기본적인 사용법은 get과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;Route&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;put&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;주소&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;함수&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;Route&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;delete&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;주소&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;함수&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;HTTP에는 PUT, DELETE라는 액세스도 있다. 이는 수정 및 삭제를 위한 메소드이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;Route&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;any&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;주소&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;함수&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;Route&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;::&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;match&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;배열&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;주소&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;함수&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여러 HTTP 메소드에 대응하기 위한 것이다. any는 모든 HTTP 메소드(GET, POST, PUT 및 DELETE)에 라우팅한다. match는 첫번째 인수에 HTTP 메소드명의 배열(예를 들어, &lt;code&gt;[&#39;get&#39;, &#39;post&#39;]&lt;/code&gt;)을 준비하고,  그 HTTP 메소드에 액세스하기 위해 라우팅한다.&lt;/p&gt;
&lt;p&gt;그러면 간단한 예제를 만들어 보자. routes.php를 아래와 같이 코드를 추가한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;Route&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;get&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;/helo&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;Hello World&amp;lt;/h1&amp;gt;&amp;lt;p&amp;gt;this is sample page.&amp;lt;/p&amp;gt;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그리고 서버를 기동하고, 다음 주소를 방문하여 본다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:8000/helo&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://localhost:8000/helo&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;액세스하면 Hello World라는 제목의 페이지가 표시된다. 이것이 &lt;code&gt;Route::get&lt;/code&gt; 메소드에서 생성된 표시이다.&lt;/p&gt;
&lt;p&gt;예제를 보면, get 메소드의 첫번째 인자는 &lt;code&gt;/helo&lt;/code&gt;로 지정되어 있다. 여기에 액세스하면, 두번째 인수의 함수에서 return되는 HTML 텍스트가 그대로 다시 전송 표시되는 것이다. 이렇듯 라우팅 기능만으로, 주소로 접근하여 화면에 무언가를 표시하는 것이 가능하다.&lt;/p&gt;
&lt;h2 id=&#34;탬플릿-작성&#34;&gt;탬플릿 작성&lt;/h2&gt;
&lt;p&gt;Route 클래스 메소드에서의 return으로 HTML 코드를 텍스트로 제공하고 반환하는 방식으로는 복잡한 표시는 만들기 힘들 것이다. 아무래도 미리 HTML 파일을 준비해 두어, 그것을 로드하여 이용하는 방식이 쉬울 것이다.&lt;/p&gt;
&lt;p&gt;Laravel에서는 화면 표시용 템플릿을 미리 준비해두고, 그것을 이용하여 화면 표시할 수 있다. 이 템플릿은 응용 프로그램의 resources 폴더에 있는 views 폴더에 배치한다.&lt;/p&gt;
&lt;p&gt;그러면 간단한 템플릿을 만들어 보자. views 폴더에 helo.php 라는 이름으로 PHP 파일을 작성한다. 여기에 아래와 같이 소스 코드를 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Sample&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    body&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;color&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;gray&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    h1&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;font&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;18&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;pt&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;font&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;weight&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bold&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;style&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Sample&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$message&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;보면 알 수 있듯이 매우 간단한 HTML 코드이다. 그러나 중간에 한곳에만 PHP는 태그가 포함되어 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$message&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이것으로 변수 &lt;code&gt;$message&lt;/code&gt; 값을 출력한다. 템플릿은 이처럼 매우 일반적인 PHP 파일로 준비해 둔다. 특별한 것은 아무것도 없다.&lt;/p&gt;

      </description>
      
      <category>Laravel</category>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 서버 준비 | XAMPP 서버를 기동하자!</title>
      <link>https://www.devkuma.com/docs/php/xampp-%EC%84%9C%EB%B2%84%EB%A5%BC-%EA%B8%B0%EB%8F%99%ED%95%98%EC%9E%90%21/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/xampp-%EC%84%9C%EB%B2%84%EB%A5%BC-%EA%B8%B0%EB%8F%99%ED%95%98%EC%9E%90%21/</guid>
      <description>
        
        
        &lt;p&gt;PHP를 시작하려면 먼저 어디서부터 손을 대면 좋을까? 역시 &amp;ldquo;Web 서버 환경&amp;quot;을 마련하여 시작일 것이다. Web 프로그래밍이라는 것은 Web 사이트에 움직이는 프로그램을 만드는 것이다. Web이라는 것은 Web 서버로 동작한다. 이 Web 서버에서 실행되는 프로그램 (일반적으로 &amp;ldquo;서버 사이드 프로그램&amp;quot;이라 함)을 만드는 것이 Web 프로그래밍라고 해도 좋을 것이다. PHP도 Web 서버에서 움직인다. 결국은 먼저 &amp;ldquo;Web 서버 프로그램과 거기서 움직이는 PHP 프로그램&amp;quot;을 준비하지 않으면 안된다.&lt;/p&gt;
&lt;p&gt;여기에는 &amp;ldquo;XAMPP&amp;quot;를 사용하는 것이 가장 좋다. XAMPP라는 것은 Web 서버 환경을 세트 모은 패키지 프로그램이다. Web 서버 프로그램뿐만 아니라 거기서 움직이는 Perl, PHP 등의 프로그래밍 언어, MySQL이라는 데이터베이스 메일 서버나 FTP 서버 등 Web 프로그램에서 사용되는 서버 및 언어 등이 모두 세트로 되어 있는 것이다. 이 XAMPP를 설치하면 이것들이 통째로 즉시 사용할 수 있는 상태로 설치된다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.apachefriends.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.apachefriends.org&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;우선은 이 주소에 접근해 보자. 이것이 XAMPP의 Web 페이지이다. 여기에서 자신이 사용하고 있는 플랫폼의 XAMPP를 다운로드하고 설치하자. Windows의 경우 &amp;ldquo;XAMPP for Windows&amp;quot;링크를 클릭하여 나타난 페이지에 있는 &amp;ldquo;XAMPP Windows 버전&amp;quot;의 &amp;ldquo;EXE&amp;rdquo; 파일(자동 압축 풀림 RAR 아카이브)를 다운로드하자.&lt;/p&gt;
&lt;p&gt;다운로드된 EXE 파일을 더블 클릭하여 실행하고 &amp;ldquo;install&amp;quot;버튼을 누르면 설치를 시작한다. 기본적으로 C 드라이브 바로 아래에 &amp;ldquo;xampp&amp;quot;라는 폴더를 만들고 여기에 설치한다. 도중에 갑자기 명령 프롬프트 창이 나타나거나 하지만, 그대로 Enter 키를 눌러 가면 된다. 마지막으로, &amp;ldquo;Please Choose &amp;hellip;&amp;hellip;&amp;ldquo;라고 나오고 1~7의 선택 목록이 쓰기 시작하면 설치가 완료 되었다는 표시이다. 창을 닫고 시작 메뉴의 모든 프로그램에 &amp;ldquo;XAMPP for Windows&amp;quot;라는 항목이 추가되어 있는 것을 확인하자.&lt;/p&gt;
&lt;h2 id=&#34;xampp-서버를-기동하자&#34;&gt;XAMPP 서버를 기동하자!&lt;/h2&gt;
&lt;p&gt;설치 후에 XAMPP의 Web 서버를 기동하자. XAMPP에는 일부 서버 프로그램이 준비되어 있으며, 모두 &amp;ldquo;XAMPP 컨트롤 패널&amp;quot;라고 하는 어플리케이션에서 중앙 관리 할 수 있다.&lt;/p&gt;
&lt;p&gt;시작 메뉴에 제공되는 &amp;ldquo;XAMPP for Windows&amp;quot;그룹의 &amp;ldquo;XAMPP Controll Panel&amp;quot;라고 하는 것이 이것입니다. 이 메뉴를 선택하면 화면에 작은 창이 나타난다. 이것이 XAMPP 컨트롤 패널이다. 여기에서는 &amp;ldquo;Modules&amp;quot;라는 곳에 일부 항목들이 표시된다. 표시 항목을 다음과 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Apache : 이것이 Web 서버이다.&lt;/li&gt;
&lt;li&gt;MySql : 데이터베이스 서버이다.&lt;/li&gt;
&lt;li&gt;FileZilla : FTP 서버이다.&lt;/li&gt;
&lt;li&gt;Mercury : 메일 서버이다.&lt;/li&gt;
&lt;li&gt;Tomcat : Java 서버이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;우선 PHP 공부만을 위한 거라면 &amp;ldquo;Apache&amp;quot;만 움직이면 된다. 오른쪽에 있는 &amp;ldquo;Start&amp;quot;버튼을 누르면 Apache HTTP 서버를 시작한다. 이것으로 이제 당신의 PC는 Web 서버가 되었다. 매우 간단하다.&lt;/p&gt;
&lt;p&gt;Web 서버를 시작하면, Web 브라우저를 열고 서버에 접근하여 보자. 여기에는 아래와 같이 주소를 입력한다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://localhost/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;이제 XAMPP for Windows의 화면이 나타난다. 아래쪽에 각 국어의 링크가 있으므로 &amp;ldquo;한국어&amp;quot;를 선택한다. &amp;ldquo;XAMPP for Windows&amp;quot;라고 표시된 화면으로 바뀐다. 이 화면에서는 왼쪽에 세세한 항목이 나란히 표시된다. 이것은 XAMPP에 표준으로 제공되는 다양한 툴이다. 여기에서 링크를 클릭하여 다른 서버의 정보와 설정 등을 할 수 있도록 되어 있다.&lt;/p&gt;
&lt;p&gt;우선, 이 화면이 문제없이 표시되는 것을 확인한다. 표시되면, PHP를 사용할 준비가 완료된다. &amp;ldquo;PHP는 프로그래밍 언어를 Web 서버에서 사용할 준비는 필요 없는건가?&amp;ldquo;라고 묻는다면 물론 필요없다. Web Server가 시작하면 이미 PHP는 사용할 수 있는 상태가 되어 있을 것이다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>Laravel</title>
      <link>https://www.devkuma.com/docs/laravel/</link>
      <pubDate>Wed, 10 Jan 2018 21:43:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/laravel/</guid>
      <description>
        
        
        &lt;p&gt;Laravel PHP를위한 MVC 아키텍처를 기반 Web 응용 프로그램 프레임워크이다. 이 프레임 워크의 사용법에 대해 설명한다.&lt;/p&gt;

      </description>
      
      <category>Laravel</category>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 서버 준비 | Mac OS에서 php 사용하기</title>
      <link>https://www.devkuma.com/docs/php/mac-os%EC%97%90%EC%84%9C-php-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/mac-os%EC%97%90%EC%84%9C-php-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</guid>
      <description>
        
        
        &lt;p&gt;Mac OS에서는 기본적으로 apache가 포함되어 있어서, 따로 설치를 하지 않고 설정을 변경을 해주므로써 바로 사용가능 하다.&lt;/p&gt;
&lt;h2 id=&#34;아파치-버전-확인하기&#34;&gt;아파치 버전 확인하기&lt;/h2&gt;
&lt;p&gt;아파치와 php가 이미 설치되어 있다면, 각각의 버전은 다음과 같은 명령어로 확인할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ apachectl -v
$ php -v
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위 명령을 실행해서 버전 확인된다면 서버를 실행할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;아파치-실행하기&#34;&gt;아파치 실행하기&lt;/h2&gt;
&lt;p&gt;아파치를 시작하는 명령어는 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apachectl start
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;아파치를 실행하려면 관리자 권한이 필요하므로 명령의 맨 앞에 &lt;code&gt;sudo&lt;/code&gt;를 붙여줘야 한다. 위와 같이 입력하면 비밀번호를 입력하라는 표시가 나오는데 관리자 비밀 번호를 입력하면 된다.&lt;/p&gt;
&lt;h3 id=&#34;그밖에&#34;&gt;그밖에&lt;/h3&gt;
&lt;p&gt;아파치 중지 및 재기동은 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apachectl stop
$ sudo apachectl restart
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;아파치-실행-확인하기&#34;&gt;아파치 실행 확인하기&lt;/h2&gt;
&lt;p&gt;아파치를 실행한 후에 브라우저에  &lt;code&gt;http://localhost&lt;/code&gt; 혹은 &lt;code&gt;http://127.0.0.1&lt;/code&gt; 이라고 입력하면 화면에 아래와 같이 표시되는 것을 확인 할수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;It works!
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이는 브라우저가 기본(default) index 페이지를 열었기 때문이다. 기본 index 페이지는 /Library/WebServer/Documents`폴더에 존재하는데, 이는 default로 해당 폴더가 DocumentRoot로 지정되어 있기 때문이다.&lt;/p&gt;
&lt;p&gt;해당 폴더에 가면 index.html.en 파일이 있음을 확인할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;아파치-웹-서버-환경-설정하기&#34;&gt;아파치 웹 서버 환경 설정하기&lt;/h2&gt;
&lt;p&gt;아파치의 기본 설정들을 변경하면 가장 기본이 되는 /etc/apache2/httpd.conf 를 수정하면 된다.&lt;/p&gt;
&lt;h3 id=&#34;documentroot-폴더-변경하기&#34;&gt;DocumentRoot 폴더 변경하기&lt;/h3&gt;
&lt;p&gt;앞에서 index.html.en 파일은 /Library/WebServer/Documents/ 폴더에 있다고 했는데, 이 폴더는 기본으로 DocumentRoot로 지정되어 있다.&lt;/p&gt;
&lt;p&gt;기본으로 지정된 DocumentRoot의 위치를 변경하려면 httpd.conf 파일을 열고 DocumentRoot 부분과 바로 밑 줄에 있는 Directory 부분을 변경하면 된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;...
DocumentRoot &amp;#34;/Library/WebServer/Documents&amp;#34;
&amp;lt;Directory &amp;#34;/Library/WebServer/Documents&amp;#34;&amp;gt;
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;참고로 httpd.conf 파일을 수정하려면 파일을 관리자 권한으로 열어야 한다.
다만, DocumentRoot를 변경하는 것은 그다지 추천할 만한 방법이 아니다. 따라서 DocumentRoot를 바꾸기 보다는 userdir을 활성화하는 것이 바람직하다.&lt;/p&gt;
&lt;h3 id=&#34;userdir-활성화를-위해-httpd-userdirconf-파일-수정하기&#34;&gt;userdir 활성화를 위해 httpd-userdir.conf 파일 수정하기&lt;/h3&gt;
&lt;p&gt;userdir를 활성화한다는 것은 이름에서 알 수 있듯이 브라우저에서 localhost/~username/ 처럼 자신의 계정으로 된 URL을 사용할 수 있게 한다는 의미이다.&lt;/p&gt;
&lt;p&gt;userdir을 활성화하려면 /etc/apache2/extra/ 폴더에 있는 httpd-userdir.conf 파일을 수정해야 한다.&lt;/p&gt;
&lt;p&gt;우선 해당 폴더로 가서 아래와 같은 명령으로 파일을 편집한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo vi httpd-userdir.conf
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;명령을 보면 알겠지만 서버 설정을 변경할 때는 관리자 권한으로만 파일을 편집할 수 있다. 파일의 내용은 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...생략...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# Control access to UserDir directories.  The following is an example
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;# for a site where these directories are restricted to read-only.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;#
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Include /private/etc/apache2/users/*.conf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;IfModule bonjour_module&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      RegisterUserSite customized-users
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/IfModule&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;일단 이 파일에서 &lt;code&gt;Include /private/etc/apache2/users/*.conf&lt;/code&gt; 문장의 주석(#)을 제거하고 저장한다.&lt;/p&gt;
&lt;h3 id=&#34;userdir-활성화를-위해-httpdconf-파일-수정하기&#34;&gt;userdir 활성화를 위해 httpd.conf 파일 수정하기&lt;/h3&gt;
&lt;p&gt;/etc/apache2/extra/httpd-userdir.conf에 주석으로 &lt;code&gt;mod_authz_core&lt;/code&gt;, &lt;code&gt;mod_authz_host&lt;/code&gt;, &lt;code&gt;mod_userdir&lt;/code&gt; 이렇게 3개의 모듈이 필요하다하는 내용이 아래와 같이 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Settings for user home directories
#
# Required module: mod_authz_core, mod_authz_host, mod_userdir
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이는 httpd.conf 파일에서 LoadModule하는 설정의 주석을 제거해주면 된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; 72 LoadModule authz_host_module libexec/apache2/mod_authz_host.so
 78 LoadModule authz_core_module libexec/apache2/mod_authz_core.so
166 LoadModule userdir_module libexec/apache2/mod_userdir.so
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;라인 번호는 기본으로 각각 72, 78, 166인데 다를 수도 있다.&lt;/li&gt;
&lt;li&gt;요세미티 이후로는 mod_authz_host, mod_authz_core 모듈을 이미 주석이 제거되어 있는 이미 활성화 상태로 되어 있을 것이다.&lt;/li&gt;
&lt;li&gt;따라서 mod_userdir 모듈 부분만 주석을 제거해서 활성화해 주면 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이어서, httpd-userdir.conf 파일도 Include 해주기 위해 아래와 같이 주석을 제거한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;493 Include /private/etc/apache2/extra/httpd-userdir.conf
&lt;/code&gt;&lt;/pre&gt;&lt;ul&gt;
&lt;li&gt;라인 번호는 기본으로 493인데 다를 수도 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;userdir-활성화를-위해-usernameconf-파일-생성하기&#34;&gt;userdir 활성화를 위해 {username}.conf 파일 생성하기&lt;/h3&gt;
&lt;p&gt;Sites 디렉터리에 대한 접근 방식을 지정하기 위해 /private/etc/apache2/users 폴더에 {username}.conf 파일을 만든다. 내용은 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;{username}는 사용자 계정이기에 본인 계정을 넣으면 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;Directory &amp;#34;/Users/{username}/Sites/&amp;#34;&amp;gt;
  Options Indexes MultiViews
  AllowOverride None
  Require all granted
&amp;lt;/Directory&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;권한 설정 부분은 아파치 서버 버전에 맞도록 작성해 준다. 위에는 2.4 버전에 맞게 설정되었다.&lt;/p&gt;
&lt;h3 id=&#34;홈-디렉터리에-sites-폴더-만들기&#34;&gt;홈 디렉터리에 Sites 폴더 만들기&lt;/h3&gt;
&lt;p&gt;마지막으로 홈 디렉터리로 가서 Sites 폴더를 만든다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd ~
$ mkdir Sites
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;맥의 파인더로 확인하면 자동으로 웹 사이트 폴더로 인식됨을 확인 할 수 있다.&lt;/p&gt;
&lt;p&gt;이 폴더에 자신만의 index.html 파일을 만들면 첫 화면으로 나타나게 됩니다. index.html이 없으면 아파치에서 기본 제공되는 파일 index가 열립니다.&lt;/p&gt;
&lt;h4 id=&#34;아파치-재시작하기&#34;&gt;아파치 재시작하기&lt;/h4&gt;
&lt;p&gt;아파치의 설정을 변경했다면 아파치를 재시작해야 한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ sudo apachectl restart
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이제 localhost/~{username}으로 접속하면 Sites 폴더에 있는 index.html이 나타나는 것을 볼 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;php-웹-서버-환경-설정하기&#34;&gt;PHP 웹 서버 환경 설정하기&lt;/h2&gt;
&lt;p&gt;아래 아파치 웹서버의 환경설정 파일(/etc/apache2/httpd.conf)에서 php5 모듈에 대한 주석(#)을 풀어주고, apache2를 기동하면 된다. (혹시 기동이 되어 있는 상태라면 재기동한다.)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;169 LoadModule php5_module libexec/apache2/libphp5.so
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이로써 php5 모듈을 로드하게 된다.&lt;/p&gt;
&lt;h2 id=&#34;참고&#34;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://xho95.github.io/macos/file/system/directory/2016/10/08/macOS-Directory-Structure.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Apache : 맥에서 아파치 웹서버 실행하기&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://devmac.tistory.com/11&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;맥에 웹서버(Apache, PHP) 구동하기 - 요세미티 기준&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 서버 준비 | PHP 스크립트을 움직여 보자!</title>
      <link>https://www.devkuma.com/docs/php/php-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%9D%84-%EC%9B%80%EC%A7%81%EC%97%AC-%EB%B3%B4%EC%9E%90%21/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/php-%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EC%9D%84-%EC%9B%80%EC%A7%81%EC%97%AC-%EB%B3%B4%EC%9E%90%21/</guid>
      <description>
        
        
        &lt;p&gt;그럼, 즉시 PHP를 사용해 보자. PHP 프로그램의 이용법은 Web 서버의 공개 디렉터리(여기에 둔 파일이 그대로 Web 서버에서 로드된 브라우저에 표시되도록 되어 있다)에 PHP 파일을 저장하면 된다.&lt;/p&gt;
&lt;p&gt;XAMPP 설치되어 있는 폴더 (일반적으로 C 드라이브에있는 &amp;ldquo;xampp &amp;lsquo;폴더)를 열고 그 안에 있는 &amp;ldquo;htdocs&amp;rdquo; 폴더를 열어 보자. 이 폴더가 XAMPP의 Web 서버의 공개 디렉터리이다. 여기에 HTML과 PHP 파일을 넣으면 브라우저에서 액세스하여 볼 수 있다.&lt;/p&gt;
&lt;p&gt;그럼 여기에 &amp;ldquo;sample&amp;quot;이라는 폴더를 만들고 그 안에 &amp;ldquo;index.php&amp;quot;라는 텍스트 파일을 작성해 보자. 이 파일에 작성하는 소스 코드는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;http&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;equiv&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sample&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;page&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Hello&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PHP&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;PHP으로 표시한 텍스트입니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기에서는 텍스트 인코딩은 &amp;ldquo;UTF-8&amp;quot;로 설정한다. 이후에 모든 연재에서는 모든 UTF-8을 사용한다. 또한 PHP를 사용하는 경우 파일 이름은 &amp;ldquo;.php&amp;quot;라고 확장자를 붙인다. 다른 확장자를 이용할 수 있도록 하는 경우도 있는데 &amp;ldquo;. php&amp;rdquo; 확장자를 붙이는 것이 기본이다.&lt;/p&gt;
&lt;p&gt;작성되면 Web 브라우저에서 &amp;ldquo;http://localhost/sample/index.php&amp;quot;에 접속해 보자. 또한 마지막 index.php는 생략해도 된다(기본적으로 호출되도록 되어 있기 때문에 가능). 화면에 &amp;ldquo;Hello PHP!&amp;ldquo;라고 제목이 그 아래에 &amp;ldquo;PHP으로 표시한 텍스트입니다.&amp;ldquo;라고 표시되는 것을 확인할 수 있다. 이 아래의 텍스트가 PHP 스크립트에 의해 실행된 것이다.&lt;/p&gt;
&lt;p&gt;소스 코드를 보면 알 수 있듯이, .php 확장자의 파일이라고 해도, 그 내용은 기본적으로 보통의 HTML과 다르지 않다. PHP의 가장 큰 특징은 &amp;ldquo;HTML 코드와 혼합해 쓸 수 있다&amp;quot;라는 점입니다. 즉, PHP 문장만으로 모든 것을 쓸 필요는 없을 것이다. 화면 레이아웃 등은 모두 HTML로 작성하고 필요한 곳에만 PHP 처리하도록 작성하면 된다.&lt;/p&gt;
&lt;p&gt;코드를 잘 보면 HTML 태그 안에 이런 낯선 태그가 쓰여져 있는 것을 볼 수 있을 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;PHP으로 표시한 텍스트입니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이것이 PHP 스크립트를 작성하는 부분이다. PHP 스크립트는 &lt;?PHP ?&gt;라는 태그를 사용하여 작성한다. 이 태그에 수행할 처리을 써두면 그 부분이 서버에서 로드될 때 실행되고 그 결과가 브라우저로 보내지도록 되어 있다. 즉, PHP 스크립트는 모든 서버에서 실행되므로 브라우저에는 일절 표시되지 않을 것이다. 이런 점이 JavaScript 등과 크게 다른 점이다. (JavaScript는 스크립트가 그대로 브라우저에 보내져 브라우저에서 움직입니다.)&lt;/p&gt;
&lt;p&gt;여기에서는 &amp;ldquo;echo&amp;quot;함수를 사용하고 있다. PHP에서는 주요 기능은 대부분 &amp;ldquo;함수&amp;quot;라는 것으로 준비되어 있다. echo 함수는 다음과 같이 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;출력값&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;마지막에 세미콜론(;)을 붙이는 것에 주목하자. PHP는 문장의 끝에 반드시 세미콜론을 붙인다. PHP는 개행으로 문장을 구분하지 않는다. 세미콜론으로 구분한다. 그래서 예를 들어 긴 문장을 적절한 곳에 줄 바꿈하면서 작성할 수 있다. 세미콜론를 제대로 붙여야 에러가 발생하지 않는다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 값, 변수, 배열 및 문법</title>
      <link>https://www.devkuma.com/docs/php/%EA%B0%92-%EB%B3%80%EC%88%98-%EB%B0%B0%EC%97%B4-%EB%B0%8F-%EB%AC%B8%EB%B2%95/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EA%B0%92-%EB%B3%80%EC%88%98-%EB%B0%B0%EC%97%B4-%EB%B0%8F-%EB%AC%B8%EB%B2%95/</guid>
      <description>
        
        
        &lt;p&gt;프로그래밍의 기본 중의 기본인 값, 변수, 배열 및 문법에 대해서 설명한다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 값, 변수, 배열 및 문법 | PHP 값과 변수</title>
      <link>https://www.devkuma.com/docs/php/php-%EA%B0%92%EA%B3%BC-%EB%B3%80%EC%88%98/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/php-%EA%B0%92%EA%B3%BC-%EB%B3%80%EC%88%98/</guid>
      <description>
        
        
        &lt;p&gt;그럼 이전에 예제를 더 수정하도록 하겠다. 아래와 같이 작성하여 브라우저에서 접속해 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$price&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;12300&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$total&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$price&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1.05&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;head&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;?php echo &amp;#34;금액 : &amp;#34; . $total . &amp;#34;원&amp;#34;; ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이번에는 &amp;ldquo;금액 : 12915원.&amp;ldquo;라는 텍스트가 된다. 이것은 12300원에 소비세 5%를 더한 금액을 계산하여 표시하고 있는 것이다.&lt;/p&gt;
&lt;p&gt;소스 코드가 짧지만, 여러가지 PHP의 특징이 보인다. 대충 정리해 보겠다.&lt;/p&gt;
&lt;h2 id=&#34;1-스크립트는-여러개로-나누어-쓸-수-있다&#34;&gt;1. 스크립트는 여러개로 나누어 쓸 수 있다.&lt;/h2&gt;
&lt;p&gt;여기에서는 맨 처음 부분에 계산을 하는 &lt;?php ?&gt; 태그와 HTML의 body에 결과를 표시하는 &lt;?php ?&gt; 태그가 있다. 이런 방식으로, PHP 스크립트는 하나의 페이지에 몇 군데도 쓸 수 있다.&lt;/p&gt;
&lt;p&gt;매우 흥미로는 것은 몇개를  써도 &amp;ldquo;모두 하나의 스크립트로 인식된다&amp;quot;는 점이다. 예를 들어 여기에서는 첫 번째 태그에서 계산을 하고 두 번째 태그에서 그 결과를 표시하고 있다. 즉, 첫 번째 부분의 변수가 두 번째 부분에서 그대로 사용할 수 있다. PHP 스크립트는 이렇게 몇 나눠 써도 하나의 것으로 취급된.&lt;/p&gt;
&lt;h2 id=&#34;2-변수-를-붙여서-쓴다&#34;&gt;2. 변수 &amp;ldquo;$&amp;ldquo;를 붙여서 쓴다&lt;/h2&gt;
&lt;p&gt;여기에서는 값을 &amp;lsquo;변수&amp;rsquo;에 담아 제공하고 있다. 변수라는 것은 값을 임시로 보관할 수있는 &amp;lsquo;용기&amp;rsquo;이다. PHP에서 변수는 &amp;ldquo;$변수명&amp;quot;와 같인 쓴다. 반드시 앞에 달러($) 기호를 붙이는 것을 잊지 말자.&lt;/p&gt;
&lt;p&gt;변수의 이름은 기본적으로 영숫자와 밑줄 기호의 조합해서 작성한다. 단, 첫 번째 문자는 숫자는 사용할 수 없기 때문에 주의하자.&lt;/p&gt;
&lt;h2 id=&#34;3-숫자는-그대로-텍스트는-큰-따옴표을-붙인다&#34;&gt;3. 숫자는 그대로, 텍스트는 큰 따옴표을 붙인다.&lt;/h2&gt;
&lt;p&gt;PHP에서는 다양한 값이 사용된다. 수치는 기본적으로 그대로 숫자를 적으면 된다. 또한 텍스트는 반드시 앞뒤에 따옴표( &amp;quot; 또는 &amp;lsquo;) 기호를 붙인다. 여기서는 큰 따옴표 (&amp;rdquo;) 기호를 사용하여 쓰고 있다.&lt;/p&gt;
&lt;h2 id=&#34;4-값은-등호로-변수에-할당한다&#34;&gt;4. 값은 등호로 변수에 할당한다.&lt;/h2&gt;
&lt;p&gt;값을 변수에 넣을 때는 등호를 사용한다. 등호는 &amp;ldquo;우변의 값을 좌변의 변수에 넣는 역할&amp;quot;을 한다. 등호 이외에도 대체를위한 기호는 여러 가지 있지만, 우선 등호만 기억해두록 하자.&lt;/p&gt;
&lt;h2 id=&#34;5-숫자의-사칙-연산과-텍스트의-결합한다&#34;&gt;5. 숫자의 사칙 연산과 텍스트의 결합한다.&lt;/h2&gt;
&lt;p&gt;계산을 할 시에는 숫자 키패드의 사칙 연산 기호를 그대로 사용할 수 있다. &amp;ldquo;+  - * /&amp;ldquo;와 같은 기호이다. 이것을 사용하여 &amp;ldquo;1 + 2 - 3&amp;quot;와 같은 식으로, 일반적인 식을 쓸 수 있다. 등호로 오른쪽에 식을 쓰면 그 식을 계산한 결과가 좌변의 변수에 저장된다. 그 밖에 &amp;lsquo;%&amp;lsquo;라는 기호 있다. 이것은 &amp;ldquo;나눗셈을 한 후에 나머지&amp;quot;를 계산하는 기호이다.&lt;/p&gt;
&lt;p&gt;또한 텍스트의 연산을 하는 기호도 있다. 이것은 도트(.) 기호로,이를 사용하여 텍스트를 하나에 연결할 수 있다. [&amp;ldquo;A&amp;rdquo;.&amp;ldquo;B&amp;rdquo;] 이렇게 하면, &amp;ldquo;AB&amp;quot;라는 텍스트가 된다.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;우선, &amp;ldquo;값 및 변수&amp;quot;에 관한 기본, 여기에 대충 이해해 두자. 이는 스크립트를 작성할 때의 &amp;ldquo;기본 중의 기본&amp;quot;이라고도 할 수 있다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 값, 변수, 배열 및 문법 | 배열</title>
      <link>https://www.devkuma.com/docs/php/%EB%B0%B0%EC%97%B4/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EB%B0%B0%EC%97%B4/</guid>
      <description>
        
        
        &lt;p&gt;숫자나 텍스트 같은 값을 저장 변수는 기본적으로 &amp;ldquo;하나의 변수에 하나의 값&amp;quot;밖에 저장할 수 없다. 하지만 많은 데이터를 처리해야 하는 경우에는 하나 하나의 데이터를 모두 별도의 변수에 넣는 것은 상당히 복잡하고 관리하기도 힘들다. 더 쉽게 많은 데이터를 처리할 방법을 필요하다.&lt;/p&gt;
&lt;p&gt;이러한 때에 사용되는 것이 &amp;ldquo;배열&amp;quot;과 &amp;ldquo;연관 배열&amp;quot;이다. 이는 많은 값을 한꺼번에 처리할 수 있는 특별한 변수이다. 하나의 배열에 값을 보관할 수 있는 용기가 많이 준비되어 있으며, 각각 다른 값을 넣을 수 있다.&lt;/p&gt;
&lt;p&gt;배열은 숫자(정수)를 사용하여 값을 관리하는 변수이다. 이는 다음과 같은 형태로 만든다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = array(값1, 값2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 ()에 지정한 값이 모든 배열 안에 저장된다. 이들은 0부터 순서대로 0,1,2 &amp;hellip;&amp;hellip; 식으로 번호가 매겨진다(이 번호를 인덱스라고 한다). 배열에서 값을 꺼내거나 배열의 특정 요소에 값을 설정할 때 이 인덱스 번호를 지정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = $ 배열[인덱스];
$배열[인덱스] = 값;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위와 같이 한다면 배열에서 특정 값을 꺼내거나 또는 값을 변경할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;연관-배열에-대해&#34;&gt;연관 배열에 대해&lt;/h2&gt;
&lt;p&gt;또 다른 하나인 연관 배열도 배열과 같은 다수의 값을 관리 할 수 있다. 배열과 다른 점은 각각의 값을 인덱스의 번호가 아닌 &amp;lsquo;키&amp;rsquo;라는 이름으로 관리한다. 이 연관 배열은 다음과 같이 작성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = array (키1 =&amp;gt; 값1, 키2 =&amp;gt; 값2, ...);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;보면 알 수 있듯이, 키와 거기에 설정 값을 =&amp;gt;이라는 기호로 연결하여 작성하고 있다. 이렇게 생성된 연관 배열의 값은 다음과 같은 형태로 사용할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = $연관배열[키];
$연관배열[키] = 값;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 해서 지정된 키의 값을 주고 받을 수 있다. 키는 정확히 이름과 동일하지 않으면 값을 꺼낼 수 없기 때문에 주의해야 한다.&lt;/p&gt;
&lt;p&gt;이 배열과 연관 배열은 나중에 등장하는 &amp;lsquo;반복 구문 &amp;ldquo;라는 것을 이용하게 되면 그 편리함 알게 될 것이다. 일단 지금은 &amp;ldquo;이런 것이 있다&amp;quot;라고만 기억해 두면 충분하다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 값, 변수, 배열 및 문법 | 문법</title>
      <link>https://www.devkuma.com/docs/php/%EB%AC%B8%EB%B2%95/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EB%AC%B8%EB%B2%95/</guid>
      <description>
        
        
        &lt;h2 id=&#34;html-벗어나기&#34;&gt;HTML 벗어나기&lt;/h2&gt;
&lt;p&gt;HTML 문서에서 PHP 코드라고 명시한 부분은 PHP가 해석한다. PHP 코드라고 명시하는 방법은 여러 가지가 있다.&lt;/p&gt;
&lt;h3 id=&#34;방법-1&#34;&gt;방법 1&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;?ph&lt;/code&gt;p와 &lt;code&gt;?&amp;gt;&lt;/code&gt; 사이의 내용을 PHP가 해석한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// PHP Code
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;어떤 상황에서도 사용할 수 있는 가장 일반적인 방법입니다.&lt;/p&gt;
&lt;h3 id=&#34;방법-2&#34;&gt;방법 2&lt;/h3&gt;
&lt;p&gt;스크립트 태그를 이용하는 방법입니다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;script language=&amp;#34;php&amp;#34;&amp;gt;
  // PHP Code
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;기타&#34;&gt;기타&lt;/h3&gt;
&lt;p&gt;php.ini에서 설정을 하면 다음과 같은 형식도 사용할 수 있습니다. 권장되는 방식은 아닙니다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?
  // PHP Code
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;%
  // PHP Code
%&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;명령-구분하기&#34;&gt;명령 구분하기&lt;/h2&gt;
&lt;p&gt;여러 개의 명령을 넣을 때는 세미콜론(;)으로 구분해 준다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Lorem&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Ipsum&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;마지막 명령에는 세미콜론을 넣지 않아도 됩니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Lorem&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Ipsum&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;문서의 마지막에 있는 PHP 코드라면 ?&amp;gt;를 생략할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Lorem&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Ipsum&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;주석&#34;&gt;주석&lt;/h2&gt;
&lt;h3 id=&#34;한-줄-주석&#34;&gt;한 줄 주석&lt;/h3&gt;
&lt;p&gt;한 줄 주석은 // 또는 #으로 만듭니다. // 또는 # 뒤의 내용이 주석이 됩니다. 줄바꿈이 되면 주석 효과는 사라진다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// comment
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;여러-줄-주석&#34;&gt;여러 줄 주석&lt;/h3&gt;
&lt;p&gt;여러 줄 주석은 /*와 */로 만듭니다. /*와 */ 사이의 내용이 주석이 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* comment
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;   comment */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;예제&#34;&gt;예제&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;Comment&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;      echo &amp;#39;&amp;lt;h1&amp;gt;Lorem&amp;lt;/h1&amp;gt;&amp;#39;; // 한 줄 주석
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;      echo &amp;#39;&amp;lt;h1&amp;gt;Ipsum&amp;lt;/h1&amp;gt;&amp;#39;; # 한 줄 주석
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;      /* 여러 줄 주석
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;         여러 줄 주석 */
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;      echo &amp;#39;&amp;lt;h1&amp;gt;Dolor&amp;lt;/h1&amp;gt;&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    ?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 연산자</title>
      <link>https://www.devkuma.com/docs/php/%EC%97%B0%EC%82%B0%EC%9E%90/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EC%97%B0%EC%82%B0%EC%9E%90/</guid>
      <description>
        
        
        
      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 연산자 | 산술 연산자</title>
      <link>https://www.devkuma.com/docs/php/%EC%82%B0%EC%88%A0-%EC%97%B0%EC%82%B0%EC%9E%90/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EC%82%B0%EC%88%A0-%EC%97%B0%EC%82%B0%EC%9E%90/</guid>
      <description>
        
        
        &lt;h3 id=&#34;--a&#34;&gt;- $a&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;$a&lt;/code&gt;의 부호를 반대로 바꾼다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;-10을 출력한다.&lt;/p&gt;
&lt;h2 id=&#34;a--b&#34;&gt;$a + $b&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;$a&lt;/code&gt;와 &lt;code&gt;$b&lt;/code&gt;를 더한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;14를 출력한다.&lt;/p&gt;
&lt;h2 id=&#34;a---b&#34;&gt;$a - $b&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;$a&lt;/code&gt;에서 &lt;code&gt;$b&lt;/code&gt;를 뺀다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;6을 출력한다.&lt;/p&gt;
&lt;h2 id=&#34;a--b-1&#34;&gt;$a * $b&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;$a&lt;/code&gt;와 &lt;code&gt;$b&lt;/code&gt;를 곱한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;40을 출력한다.&lt;/p&gt;
&lt;h2 id=&#34;a--b-2&#34;&gt;$a / $b&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;$a&lt;/code&gt;를 &lt;code&gt;$b&lt;/code&gt;로 나눈다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
  $a = 10;
  $b = 4;
  echo $a / $b;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;2.5을 출력한다.&lt;/p&gt;
&lt;h2 id=&#34;a--b-3&#34;&gt;$a % $b&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;$a&lt;/code&gt;를 &lt;code&gt;$b&lt;/code&gt;로 나눈 나머지이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2을 출력한다.&lt;/p&gt;
&lt;h2 id=&#34;a--b-4&#34;&gt;$a ** $b&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;$a&lt;/code&gt;의 &lt;code&gt;$b&lt;/code&gt; 제곱이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
  $a = 4;
  $b = 3;
  echo $a ** $b;
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;64를 출력한다.&lt;/p&gt;
&lt;h2 id=&#34;여러-연산자를-같이-사용할-때-우선-순위&#34;&gt;여러 연산자를 같이 사용할 때 우선 순위&lt;/h2&gt;
&lt;p&gt;괄호가 있으면 괄호 안부터 계산한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;*, /, %는 순서대로 계산한다.&lt;/li&gt;
&lt;li&gt;+, -는 순서대로 계산한다.&lt;/li&gt;
&lt;li&gt;*, /, %는 +, -보다 먼저 계산한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;$c&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 14
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;        &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 6
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;        &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 5
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$a&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$c&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;        &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 10
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 제어 구문</title>
      <link>https://www.devkuma.com/docs/php/%EC%A0%9C%EC%96%B4-%EA%B5%AC%EB%AC%B8/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EC%A0%9C%EC%96%B4-%EA%B5%AC%EB%AC%B8/</guid>
      <description>
        
        
        &lt;p&gt;프로그램의 기본은 &amp;ldquo;값&amp;quot;과 &amp;ldquo;변수&amp;quot;와 &amp;ldquo;구문&amp;quot;이라고 할 수 있다. 우선 구문 중에서도 가장 중요한 &amp;ldquo;제어 구문&amp;quot;에 대해 설명한다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 제어 구문 | if 문에 의한 조건 분기</title>
      <link>https://www.devkuma.com/docs/php/if-%EB%AC%B8%EC%97%90-%EC%9D%98%ED%95%9C-%EC%A1%B0%EA%B1%B4-%EB%B6%84%EA%B8%B0/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/if-%EB%AC%B8%EC%97%90-%EC%9D%98%ED%95%9C-%EC%A1%B0%EA%B1%B4-%EB%B6%84%EA%B8%B0/</guid>
      <description>
        
        
        &lt;p&gt;값과 변수의 기본이 알았으니, 이어서 &amp;ldquo;제어 구문&amp;quot;을 배워보자. 제어 구문은 프로그램의 흐름을 제어하기위한 구문이다.&lt;/p&gt;
&lt;p&gt;프로그램이라는 것은 단지 써져 있는 문장을 처음부터 끝까지 순서대로 실행해서 끝나는 것이 아니다. 필요에 따라 수행할 작업을 바꾸거나, 여러번 원하는 만큼 처리를 반복하여 동작하는 것이다. 그러한 &amp;ldquo;어떻게 문장을 실행해 나갈 것인가&amp;quot;를 필요에 따라 제어하기 위한 구문이 제어 구문이다.&lt;/p&gt;
&lt;p&gt;제어 구문에는 몇 가지 종류가 있다. 우선 가장 중요한 &amp;ldquo;if&amp;quot;문부터 설명하겠다.&lt;/p&gt;
&lt;p&gt;if 문은 조건에 따라 양자 택일의 형태로 작업을 수행하기위한 것이다. 이것은 다음과 같은 형태로 작성한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 조건이 맞으면 처리를 실행한다.&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (조건) {
    ...... 조건이 맞는 경우에 처리 ......
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;중괄호 대신 콜론(:)과 endif를 이용할 수도 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (조건 ):
    ...... 조건이 맞는 경우에 처리 ......
endif;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;2. 조건이 맞는지 아닌지에 다른 작업을 수행한다.&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (조건) {
    ...... 조건이 맞는 경우에 처리 ......
} else {
    ...... 조건이 잘못된 경우에 처리 ......
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;중괄호 대신 콜론(:)과 endif를 이용할 수도 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (조건 ):
    ...... 조건이 맞는 경우에 처리 ......
else:
    ...... 조건이 잘못된 경우에 처리 ......
endif;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;3. 여러 조건으로 다른 작업을 수행한다.&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (조건1) {
    ...... 조건이 맞는 경우에 처리 ......
} elseif(조건2) {
    ...... 조건2이 맞는 경우에 처리 ......

...... 필요한 만큼 elseif가 계속 ......    
    
} else {
    ...... 모든 조건이 잘못된 경우에 처리 ......
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;중괄호 대신 콜론(:)과 endif를 이용할 수도 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (조건1 ):
    ...... 조건1이 맞는 경우에 처리 ......
elseif (조건2):
    ...... 조건2이 맞는 경우에 처리 ......
    
...... 필요한 만큼 elseif가 계속 ......   
    
else:
    ...... 모든 조건이 잘못된 경우에 처리 ......
endif;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;if는 ()부분에 &amp;ldquo;조건&amp;quot;을 설정한다. 조건이라고 하면 이해하기 어려울 수 있다. 이는 &amp;ldquo;옳고 그른지?&amp;ldquo;라는 형태로 나타낼 수 있는 식이나 값이라고 생각하면 된다.&lt;/p&gt;
&lt;p&gt;컴퓨터의 세계에서는, 예를 들면 &amp;ldquo;변수 a의 값이 0인가?&amp;rdquo;, &amp;ldquo;A의 값은 B보다 큰가&amp;rdquo; 등으로 값이나 변수를 확인하여 그 수식이 옳고 그른지에 따라 다른 처리를 실행시키거나 한다. 이것이 if의 &amp;ldquo;조건&amp;quot;이다.&lt;/p&gt;
&lt;p&gt;이 조건의 () 다음에 수행할 작업을 작성한다. 한 문장 밖에 없을 때는 그대로 문장을 쓰고 되지만, 여러 문장을 작성하여 실행하고 싶을 경우에는 {}라는 기호를 둘려 쌓고 그 가운데 실행 문장을 작성한다.이렇게 함으로써 &amp;ldquo;여기에서 여기까지가 수행하는 작업&amp;quot;이라는 것을 명확히 할 수 있다. (이 {} 부분을 &amp;ldquo;블록(block)&amp;ldquo;이라고 한다.)&lt;/p&gt;
&lt;p&gt;만약 잘못된 경우에는 다른 작업을 실행시키고자 하는 할 시에는, 옳은 조건의 경우에 수행할 작업 후에 &amp;ldquo;else&amp;quot;가 오고 잘못된 경우의 처리를 작성한다. 이것도 한문장이라면 바로 작성하겠지만, 여러 문장이라면 {} 기호를 붙여 블록으로 감싸준다.&lt;/p&gt;
&lt;p&gt;여러 조건이 있이 있는 경우에는 &amp;ldquo;elseif&amp;quot;를 이용해서 다른 조건을 넣을 수도 있다. elseif는 여러 번 사용할 수 있다. else는 필수가 아니므로 사용하지 않아도 된다.&lt;/p&gt;
&lt;p&gt;아래 목록에 간단한 예제를 보도록 하자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$num&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;12345&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$namoji&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$num&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;head&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                if ($namoji == 0) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    echo &amp;#34;{$num}는 짝수입니다.&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                } else {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    echo &amp;#34;{$num}는 홀수입니다.&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기에서는 변수 $num의 값이 짝수인지 홀수인지를 판단하여 표시하고 있다. 짝수인지 홀수인지는 그 숫자를 2로 나누어, 나머지가 0인지 여부로 알 수 있다. &lt;code&gt;$namoji = $num % 2;&lt;/code&gt;와 같이 나머지를 구해서, if문에서 그것이 0인가에 여부에 따라 표시 내용을 변경하고 있다.&lt;/p&gt;
&lt;h2 id=&#34;부울과-비교&#34;&gt;부울과 비교&lt;/h2&gt;
&lt;p&gt;그런데 지금의 예제 if에서 사용된 조건식 좀 익숙치 않을 것이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if ($namoji == 0) {...... 중략 ......}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;등호가 2개 줄선 &amp;ldquo;==&amp;ldquo;라고 하는 기호가 사용되고 있다. 이것은 &amp;ldquo;비교 연산자&amp;quot;라는 것으로, 우변과 좌변의 값을 비교위한 기호이다. 이 비교 연산자에 다음과 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;수식&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A == B&lt;/td&gt;
&lt;td&gt;A와 B는 동일하다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A != B&lt;/td&gt;
&lt;td&gt;A와 B는 다르다 (A &amp;lt;&amp;gt; B로도 사용할 수 있다)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A &amp;gt; B&lt;/td&gt;
&lt;td&gt;A가 B보다 크다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A &amp;gt;= B&lt;/td&gt;
&lt;td&gt;A와 B는 A가 크거나 동일하다&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A &amp;lt; B&lt;/td&gt;
&lt;td&gt;A는 B보다 작다&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A &amp;lt;= B&lt;/td&gt;
&lt;td&gt;A와 B는 A가 작거나 동일하다&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;이러한 기호를 사용한 표현은 &amp;ldquo;그 표현이 맞는지&amp;quot;를 나타내는데 사용된다. 여기에서는 &lt;code&gt;if ($namoji == 0)&lt;/code&gt;이 있었다. 이는 $namoji가 0과 동일한지(즉, $namoji가 0인가?)를 점검하고 그것이 맞다면(즉, 0이라면), 그 후에 처리를 수행한다.&lt;/p&gt;
&lt;p&gt;컴퓨터에서는 이렇게 올바른지에 대해 나타내는 경우가 많다. 이러한 &amp;ldquo;올바른 여부를 나타내는 양자 택일의 상태&amp;quot;를 나타내는데 사용할 수 있는 것이 &amp;ldquo;부울&amp;quot;라는 값이다.&lt;/p&gt;
&lt;p&gt;이는 &amp;ldquo;true&amp;quot;또는 &amp;ldquo;false&amp;quot;라는 예약어로 표시된다. 예를 들어 &amp;ldquo;A == B가 맞다&amp;quot;라고 할 때 &amp;ldquo;true&amp;quot;이고, 아닌 경우에는 &amp;ldquo;false&amp;quot;라고 한다. 여기에 올린 비교 연산자도 두 값을 확인하고, true나 false를 반환한다.&lt;/p&gt;
&lt;p&gt;즉, if 조건은 &amp;ldquo;부울로 나타나는 것&amp;quot;이라는 것이다. () 조건식이 true라면 그 실행한다는 구조로 되어 있다.&lt;/p&gt;
&lt;p&gt;이 논리 값이라는 것은 프로그래밍에서 매우 자주 등장한다. 조건 연산자와 같은 것을 사용할 수도 있고, 일반적으로 변수 등으로 사용할 수도 있다. 이를테면 &amp;ldquo;양자 택일의 값&amp;quot;이 필요한 경우는 대부분 이 진리 값이 사용되는 것이라고 생각해도 좋을 것이다.&lt;/p&gt;
&lt;p&gt;숫자나 텍스트와 다르게 프로그래밍에 익숙하지 않은 경우, 별로 들어 본 적이 없는 값일 것이다. 지금 단계에서 꼭 기억해 두도록 하자!&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 제어 구문 | switch 문에 의한 다수의 분기</title>
      <link>https://www.devkuma.com/docs/php/switch-%EB%AC%B8%EC%97%90-%EC%9D%98%ED%95%9C-%EB%8B%A4%EC%88%98%EC%9D%98-%EB%B6%84%EA%B8%B0/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/switch-%EB%AC%B8%EC%97%90-%EC%9D%98%ED%95%9C-%EB%8B%A4%EC%88%98%EC%9D%98-%EB%B6%84%EA%B8%B0/</guid>
      <description>
        
        
        &lt;p&gt;if는 양자 택일(true, false)의 분기이었지만, 때로는 더 많은 처리가 분기 할 수 있다(물론 elseif를 사용하면 if문도 많은 분기 처리가 가능하긴 하지만 길어지면 코드가 복잡해 진다). 특히 숫자 등을 취급하는 경우, &amp;ldquo;결과가 1이면 이것, 2라면 이거, 3이라면 &amp;hellip;&amp;hellip;&amp;ldquo;라는 식으로 값에 따라 각각 다른 처리를 하고자하는 경우도 있다.&lt;/p&gt;
&lt;p&gt;이러한 경우에 사용되는 것이 &amp;lsquo;switch&amp;rsquo;이라는 구문이다. 이것은 다음과 같은 형태를 하고 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;switch&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;조건&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;값1&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;값1&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;경우의&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;처리&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    break&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;값2&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;값2&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;경우의&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;처리&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    break&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;필요한만큼&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;case가&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;계속&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;어떤&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;것도&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;아닌&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;경우에&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;처리&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;중괄호 대신 콜론과 endswitch를 사용할 수도 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;switch&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;값1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;값1&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;값1&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;경우의&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;처리&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;값2&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;값2&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;경우의&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;처리&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;break&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;필요한만큼&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;case가&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;계속&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;default&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;어떤&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;것도&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;아닌&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;경우에&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;처리&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;......&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;endswitch&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 switch 문도 ()의 조건을 체크하여 분기를 한다. 그렇다고 해도 이 조건은 if와 같은 논리 값이 없다. 평범한 숫자나 텍스트 값으로도 상관없다.&lt;/p&gt;
&lt;p&gt;이 switch는 ()의 조건 값을 확인하고, 그 값이 지정된 case로 점프하는 기능을 한다. 예를 들어, 거기에 있는 값이 &amp;lsquo;1&amp;rsquo;이라면, &amp;ldquo;case 1:&amp;ldquo;라는 것을 검색하고 거기로 점프한다는 것이다.&lt;/p&gt;
&lt;p&gt;그러나 여기서 잊지 말아야 할 것은 &amp;ldquo;switch는 case로 점프할 뿐이고, 돌아가거나 필요한 구문을 종료하는 기능은 없다.&amp;ldquo;는 것이다. 즉, 그대로 위에서 아래로 실행이 될뿐이다. 따라서 필요한 작업을 마치면 구문을 빠져 나오게 해야 한다.&lt;/p&gt;
&lt;p&gt;이를 위해 준비되어 있는 것이 &amp;ldquo;break&amp;quot;라는 예약어이다. 이는 현재 실행중인 구문을 빠져나와 다음 동작을 한다. 각 case에 준비된 처리의 마지막에는 반드시 이 break를 붙이는 것이 기본이라고 기억해 두자.&lt;/p&gt;
&lt;p&gt;만약, 값과 같은 case를 찾을 수 없는 경우, 마지막에 있는 &amp;ldquo;default:&amp;ldquo;이 선언된 처리로 이동을 한다. 이 default는 생략할 수 있다. 이 경우는 case가 발견하지 않았다면 그냥 아무것도하지 않고 구문을 빠져나와 계속 진행하게 된다.&lt;/p&gt;
&lt;p&gt;이 switch를 사용하면 매우 복잡한 분기도 만들 수 있다. 아래에 간단한 예제를 보도록 하자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$b&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;A&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 혈액형 쓰기
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;head&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                switch($b){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                case &amp;#34;A&amp;#34;:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    echo &amp;#34;당신은 꼼꼼하군요.&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    break;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                case &amp;#34;B&amp;#34;:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    echo &amp;#34;당신은 자유 분방하네요.&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    break;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                case &amp;#34;AB&amp;#34;:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    echo &amp;#34;당신은 복잡한 사람이네요.&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    break;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                case &amp;#34;O&amp;#34;:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    echo &amp;#34;당신은 거물 이군요.&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    break;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                default:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    echo&amp;#34;당신은 인간이 아니군요.&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이것은 혈액형에 의해 표시 메시지를 바꾸는 예제이다. 첫 번째 &amp;ldquo;$b&amp;quot;에 혈액형을 입력하자. 그 혈액형에 메시지가 표시된다.&lt;/p&gt;
&lt;p&gt;여기에서는 switch($b)로 분기를 준비하고 있다. 그리고 &lt;code&gt;case &amp;quot;A&amp;quot;:&lt;/code&gt; 등 각 혈액형의 텍스트의 case를 준비하고, 그걸로 echo를 실행하고 있다. 이런 분기가 많은 분기는 if로 하려고하면 많은 if 및 elseif문을 써야 한다. 이는 switch에 의해 상당히 깔끔하게 쓸 수 있게 되었다.&lt;/p&gt;
&lt;h2 id=&#34;case문에-break가-없다면&#34;&gt;case문에 break;가 없다면&lt;/h2&gt;
&lt;p&gt;예제를 하나 더 보도록 하자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$var&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;head&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;           &amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                $var = 2;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                switch ($var) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    case 1:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                      echo &amp;#34;A&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                      break;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    case 2:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                      echo &amp;#34;B&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    case 3:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                      echo &amp;#34;C&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                      break;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                    default:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                      echo &amp;#34;Z&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                 }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;             ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 예제에서 $var 값이 2이기 때문에 &amp;ldquo;A&amp;quot;와 &amp;ldquo;B&amp;quot;를 표시된다. 이는 &lt;code&gt;case 2:&lt;/code&gt; 처리 안에 &lt;code&gt;break;&lt;/code&gt;문이 없어서 &amp;ldquo;A&amp;quot;를 표시하고 이어서 &lt;code&gt;case 3:&lt;/code&gt;에 있는 &amp;ldquo;B&amp;quot;도 같이 표시를 하게 된 것이다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 제어 구문 | while과 do while 문</title>
      <link>https://www.devkuma.com/docs/php/while%EA%B3%BC-do-while-%EB%AC%B8/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/while%EA%B3%BC-do-while-%EB%AC%B8/</guid>
      <description>
        
        
        &lt;p&gt;이어서 &amp;ldquo;반복&amp;quot;하는 구문을 살펴보자. 반복은 말 그대로 동일한 작업을 여러 번 실행하는 구문이다. 반복문도 여러 종류가 있지만, 가장 쉬운 방법은 &amp;ldquo;while&amp;quot;를 사용한 구문일 것이다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 먼저 조건을 확인한다.&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;while (조건) {
    ...... 반복 처리 ......
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;중괄호 대신 콜론(:)과 endwhile을 사용할 수도 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;while (조건):
    ...... 반복 처리 ......
endwhile;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;2. 마지막으로 조건을 확인한다.&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;do {
    ...... 반복 처리 ......
} while (조건);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 구문은 조건을 확인하고 반복을 하거나, 반복 부분을 실행한 후에 조건을 검사하거나 하는 그 2가지의종류가 준비되어 있다. 조건은 if와 마찬가지로, 논리 값(true 또는 false)으로 표시되는 수식이나 값이 설정된다.&lt;/p&gt;
&lt;p&gt;아무튼, 일반적으로 &amp;ldquo;먼저 확인&amp;quot;하는 방법을 사용하는 경우가 많다. 나중에 체크하는 방식은 처음부터 조건이 false인 경우도 반복을 실행해 버리기 때문에 다소 특별한 경우에만 한정되어 사용된다.&lt;/p&gt;
&lt;p&gt;이도 간단한 예제를 보도로 하겠다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$num&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$total&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;while&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$num&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$total&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$num&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$num&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;head&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;?php echo &amp;#34;합계 : &amp;#34; . $total; ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 예제는 1~100까지의 정수를 모두 합한 결과를 표시한다. 여기에서는 &lt;code&gt;while ($num &amp;lt;= 100)&lt;/code&gt;과 같이 조건을 설정하고 $num의 값이 100이하인 동안에 반복을 계속하도록 하고 있다.&lt;/p&gt;
&lt;h2 id=&#34;대입-연산자&#34;&gt;대입 연산자&lt;/h2&gt;
&lt;p&gt;그리고 수행할 작업은 &lt;code&gt;$total += $ num;&lt;/code&gt;라는 계산을 하고 있다. 이는 &amp;ldquo;$total에 $num더한다&amp;quot;라는 의미이다. 이는 등호(=)처럼 좌변의 변수에 값을 대입하는 &amp;ldquo;대입 연산자&amp;quot;라는 것이다. 대략 다음과 같은 기호들이 있다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;수식&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;A += B&lt;/td&gt;
&lt;td&gt;A에 B를 더하고 A에 대입한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A -= B&lt;/td&gt;
&lt;td&gt;A에서 B를 빼고, A에 대입한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A*= B&lt;/td&gt;
&lt;td&gt;A에 B를 곱하고, A에 대입한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A /= B&lt;/td&gt;
&lt;td&gt;A를 B로 나누고,  A에 대입한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;A %= B&lt;/td&gt;
&lt;td&gt;A를 B로 나눈 나머지를 A에 대입한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;이 대입 연산자는 보통 등호(=)에 의한 대입식을 좀 더 쓰기 쉽게 한 것이다. 예를 들어, &lt;code&gt;$ total += $ num;&lt;/code&gt; 수식은 &lt;code&gt;$ total = $ total + $ num;&lt;/code&gt;와 같은 의미이다. 이를 비교하면 &lt;code&gt;$total += $ num;&lt;/code&gt;가 더 깔끔하고 알기 쉽다.&lt;/p&gt;
&lt;h2 id=&#34;증가-연산자&#34;&gt;증가 연산자&lt;/h2&gt;
&lt;p&gt;또한 여기에서는 &lt;code&gt;$ num++;&lt;/code&gt;을 실행하고 있다. 이 &amp;ldquo;++&amp;ldquo;라는 기호로 1만큼 증가시키는 기능을 한다. 이를 &amp;ldquo;증가 연산자&amp;quot;라고 한다.&lt;/p&gt;
&lt;p&gt;마찬가지로, &amp;lsquo;-&amp;lsquo;라는 기호로 &amp;ldquo;감소 연산자&amp;quot;라는 것도 있다. 이것은 변수의 값을 1만큼 줄이는 기능을 한다.&lt;/p&gt;
&lt;p&gt;이들은 &amp;ldquo;++&amp;ldquo;와 &amp;ldquo;&amp;ndash;&amp;ldquo;는 수식에도 포함할 수 있다. 지금의 예라면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$total += $num++;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 쓸 수도 있다. 이렇게 하면 2행이 1개의 문장으로 끝난다.&lt;/p&gt;
&lt;p&gt;또한 이러한 연산자는 변수 전에도 후에도 쓸 수 있다. 예를 들어, &amp;ldquo;++$num&amp;rdquo;, &amp;lsquo;&amp;rsquo;$num++ &amp;lsquo;와 같은 식으로 작성한다. 이 2개는 동작이 미묘하게 다르므로 주의해야 한다.&lt;/p&gt;
&lt;p&gt;변수 전에 연산자를 붙이면 변수가 수식 등에 이용되는 경우 1을 더하거나 뺀 후에 값이 식에서 사용된다. 변수 후에 연산자를 붙이면 먼저 값이 식에서 사용된 후에 1을 더하거나 뺄 수 있다. 즉, 변수를 사용할 때와 1을 더하거나 뺄 때의 타이밍이 차이가 나는 것이다.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;아무튼, 이를 실제로 여러 번 이용하게 되면 자연스럽게 기억할 수 있을 것이다. 우선은 &amp;ldquo;이런 기호가 있다&amp;quot;는 것만 머리에 넣어 두자.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 제어 구문 | for문에 의한 복잡한 반복</title>
      <link>https://www.devkuma.com/docs/php/for%EB%AC%B8%EC%97%90-%EC%9D%98%ED%95%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EB%B0%98%EB%B3%B5/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/for%EB%AC%B8%EC%97%90-%EC%9D%98%ED%95%9C-%EB%B3%B5%EC%9E%A1%ED%95%9C-%EB%B0%98%EB%B3%B5/</guid>
      <description>
        
        
        &lt;p&gt;반복 구문은 while보다 &amp;ldquo;for&amp;quot;라는 구문이 더 많이 사용된다. 이것은 단순한 조건의 설정뿐만 아니라 초기화 및 반복까지 한꺼번에 설정할 수있는 구문이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;for (초기화 처리; 조건; 반복 후 처리) {
    ...... 반복 처리 ......
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;중괄호 대신 콜론(:)과 endfor를 사용할 수도 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;for (초기화 처리; 조건; 반복 후 처리):
    ...... 반복 처리 ......
endfor;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 for 문은 다음 ()안에 3 개의 요소를 설명한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;첫 번째는 반복을 시작하기 전에 실행하는 것으로, 변수에 값을 할당하거나 반복을 위한 준비를 한다.&lt;/li&gt;
&lt;li&gt;두 번째는 반복 조건이다. 여기에 쓴 수식이나 값이 true이면 반복을 계속한다. false가되면 반복을 빠져 나온다.&lt;/li&gt;
&lt;li&gt;세 번째는 반복 부분의 처리를 실행한 후에 다음 반복으로 진행하기 전에 수행하는 처리이다. 이를테면 &amp;ldquo;반복 후 처리&amp;rsquo;라는 것이다. 반복마다 변수의 값을 증감하는데 주로 이용된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이 for 문은 작성 요소가 많기 때문에 실제로 몇번이나 써보고 하여 사용법에 익숙해지길 바란다.&lt;/p&gt;
&lt;p&gt;아래에 예제를 보도록 하겠다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
    $total = 0;
    for($i = 1;$i &amp;lt;= 100;$i++){
        $total += $i;
    }
?&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
    &amp;lt;head&amp;gt; 
        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
        &amp;lt;div&amp;gt;
            &amp;lt;?php echo &amp;#34;합계 : &amp;#34; . $total; ?&amp;gt;
        &amp;lt;/div&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이는 앞서의 while 샘플 for를 사용 형태에 다시 작성한 것이다. 여기에서는&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;for ($i = 1; $i &amp;lt;= 100; $i ++) {...... 중략 ......}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이런 식으로 for를 쓰고 있다. 먼저 반복에 들어가기 전에 &lt;code&gt;$i = 1&lt;/code&gt;을 실행하여 변수 $i에 1을 대입해 둔다. 그리고 &lt;code&gt;$i &amp;lt;= 100&lt;/code&gt;가 true인(즉 $i가 100 이하)동안 반복을 계속하도록 하고 있다. 그리고 반복되면 &lt;code&gt;$i++&lt;/code&gt;을 실행하여 $i의 값을 1 증가시킨다.&lt;/p&gt;
&lt;p&gt;이렇게 변수 $i가 1부터 순차적으로 2,3 &amp;hellip;&amp;hellip; 이런식으로 늘리면서 반복을 계속하고 100을 넘으면 반복을 빠져 나가게 되어 있다.&lt;/p&gt;
&lt;p&gt;for는 while보다 까다로운이지만, 이를 사용하면 반복을 위해 불필요한 일을 쓸 필요 없이 스크립트를 깔끔하게 작성할 수 있게 된다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 제어 구문 | foreach 문에 의한 배열의 반복</title>
      <link>https://www.devkuma.com/docs/php/foreach-%EB%AC%B8%EC%97%90-%EC%9D%98%ED%95%9C-%EB%B0%B0%EC%97%B4%EC%9D%98-%EB%B0%98%EB%B3%B5/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/foreach-%EB%AC%B8%EC%97%90-%EC%9D%98%ED%95%9C-%EB%B0%B0%EC%97%B4%EC%9D%98-%EB%B0%98%EB%B3%B5/</guid>
      <description>
        
        
        &lt;p&gt;반복은 사실 또 하나가 있다. 그것은 배열과 연관 배열의 모든 요소를 처리하기위한 전용의 반복 구문이다. 이는 다음과 같은 형태로 작성한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;배열의 경우&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;foreach ($배열 as $변수) {
    ...... 반복 처리 ......
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;연관 배열의 경우&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;foreach ($배열 as $변수1 =&amp;gt; $변수2) {
    ...... 반복 처리 ......
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;배열과 연관 배열은 구문 작성이 약간 다르다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;배열은 foreach 후에 &amp;ldquo;$배열 as $변수&amp;quot;과 같이 작성한다. 이것으로 반복마다 배열에서 값을 꺼내 as 뒤에 있는 변수에 할당하 가면서 반복 처리를 할 수 있다.&lt;/li&gt;
&lt;li&gt;연관 배열의 경우는 foreach 문에 &amp;ldquo;$변수&amp;rdquo; 대신에 &amp;ldquo;$변수 =&amp;gt; $변수&amp;quot;라는 두 가지 변수를 작성한다. 그러면 첫 번째 변수에 키, 두 번째 변수에 키값이 각각 설정된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;아래에 간단한 사용 예제를 보도록 하겠다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$arr1&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Welcome&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hi&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$result1&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;foreach&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$arr1&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$item&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$result1&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$item&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34; &amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$arr2&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;하나&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ja&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;いち&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;en&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;one&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$result2&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;foreach&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$arr2&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$key&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$val&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$result2&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$key&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$val&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;br/&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;head&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;p&amp;gt;&amp;lt;?php echo $result1; ?&amp;gt;&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;p&amp;gt;&amp;lt;?php echo $result2; ?&amp;gt;&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;배열과 연관 배열을 만들고 그 안에 모든 요소를 한꺼번에 출력하는 예제이다. 배열과 연관 배열의 모든 요소가 어떻게 해서 얻어 내는지를 보면 foreach의 동작을 알게 될 것이다.&lt;/p&gt;
&lt;p&gt;이 foreach는 배열, 연관 배열의 전용 반복 구문이다. 특히 연관 배열은 번호에서 값을 꺼낼 수 없기 때문에 보통의 for는 사용할 수 없다. foreach 있어야만 연관 배열을 반복할 수 있다는 것을 기억해 두자.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | form 전송 기본</title>
      <link>https://www.devkuma.com/docs/php/form-%EC%A0%84%EC%86%A1-%EA%B8%B0%EB%B3%B8/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/form-%EC%A0%84%EC%86%A1-%EA%B8%B0%EB%B3%B8/</guid>
      <description>
        
        
        &lt;p&gt;서버 이용의 기본은 &amp;ldquo;form(양식)&amp;ldquo;이다. 폼에서 정보를 보내고 그것을 받아 처리하는 기본 중의 기본부터 설명한다.&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;form 전송 기본
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.devkuma.com/docs/php%20%EC%9E%85%EB%AC%B8/%EC%96%91%EC%8B%9D%28form%29%20%EC%86%A1%EC%8B%A0/&#34;&gt;양식(form) 송신&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.devkuma.com/docs/php%20%EC%9E%85%EB%AC%B8/%EB%B3%B4%EC%95%88%20%EB%8C%80%EC%B1%85%EC%9D%98%20%EC%B2%AB%20%EA%B1%B8%EC%9D%8C%28XSS%20%EB%B0%A9%EC%96%B4%29/&#34;&gt;보안 대책의 첫 걸음(XSS 방어)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.devkuma.com/docs/php%20%EC%9E%85%EB%AC%B8/%EA%B8%B0%ED%83%80%20%EC%96%91%EC%8B%9D%EC%9A%A9%20%EC%9A%94%EC%86%8C%28element%29%EC%9D%84%20%EC%82%AC%EC%9A%A9/&#34;&gt;기타 양식용 요소(element)을 사용&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.devkuma.com/docs/php%20%EC%9E%85%EB%AC%B8/%EB%A6%AC%EC%8A%A4%ED%8A%B8%20select%EC%9D%98%20%EC%97%AC%EB%9F%AC%20%ED%95%AD%EB%AA%A9%20%EC%84%A0%ED%83%9D/&#34;&gt;리스트 select의 여러 항목 선택&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | form 전송 기본 | 양식(form) 송신</title>
      <link>https://www.devkuma.com/docs/php/%EC%96%91%EC%8B%9D-form-%EC%86%A1%EC%8B%A0/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EC%96%91%EC%8B%9D-form-%EC%86%A1%EC%8B%A0/</guid>
      <description>
        
        
        &lt;p&gt;서버 측 프로그램을 작성한다는 것은 &amp;ldquo;클라이언트와 서버간에 교환하기&amp;rdquo; 위한 것이다라고 해도 좋을 것이다. 여기서 클라이언트란 서버에 액세스하는 프로그램이다. 즉, Web 브라우저을 말한다. 브라우저와 서버간에 다양한 정보를 주고 받으면서 프로그램이 동작하는 것을 만드는데, 서버 측 프로그램은 필요한 것이다. 브라우저 안에서만 동작하는 경우에는 JavaScript만으로 충분하다. 서버 사이드 프로그램은 불필요하다.&lt;/p&gt;
&lt;p&gt;그런데, 클라이언트와 서버 사이에 교환할 경우, 가장 일반적으로 사용되는 것이 &amp;ldquo;양식(form)&amp;ldquo;이다. 모두에게 익숙한 HTML에서 입력 필드와 버튼 등을 표시하여 전송하는 것이다. 양식을 준비하고 이를 서버에 전송하고 전송된 값을 서버 프로그램에서 처리해서 다시 클라이언트로 결과를 반환한다. 이렇게 Web 응용 프로그램은 동작한다.&lt;/p&gt;
&lt;p&gt;그럼 PHP를 사용하여 양식에서 보내온 데이터를 처리해 보자. 아래와 같이 간단한 예제를 작성해 보겠다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$str&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$_POST&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;text1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$str&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;당신은 &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$str&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;이라고 썼습니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;아무것도 쓴 것이 없습니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;div&amp;gt;&amp;lt;?php echo $result; ?&amp;gt;&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;form method=&amp;#34;post&amp;#34; action=&amp;#34;./index.php&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;text1&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이를 Web 브라우저에서 액세스 해보자.&lt;/p&gt;
&lt;p&gt;여기에서는 다음과 같은 형태로 양식을 준비하고 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;form&amp;gt;&lt;/code&gt; 태그&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;method는 &amp;ldquo;post&amp;rdquo;, action은 &amp;ldquo;./index.php&amp;quot;이다. method라는 것은 전송의 방식을 보여준다. 이는 HTTP라는 프로토콜의 &amp;ldquo;GET&amp;rdquo; 또는 &amp;ldquo;POST&amp;quot;중 하나를 지정한다. GET이라는 것은 보통 페이지의 내용을 받기 위한 것이고, POST가 데이터를 쓰기 위한 것이다. 어떤 것으로도 보낼 수 있지만, 여기에서는 POST를 지정한다.&lt;/li&gt;
&lt;li&gt;또한 action이라는 양식의 송신처를 지정한다. 여기에서는 이 index.php 파일 자체 전송한다. 즉, 양식을 송신하면 서버에서 다른 이 파일을 읽고, 거기서 보내온 양식을 처리한다는 것이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;nput type=&amp;quot;text&amp;quot;&amp;gt;&lt;/code&gt; 태그&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;텍스트 입력하는 태그이다. 여기에서 name=&amp;ldquo;text1&amp;quot;로 지정하고 있다. 이는 중요하다. 양식을 서버로 전송했을 때, 전송된 데이터는 이 name으로 식별되기 때문이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;input type = &amp;quot;submit&amp;quot;&amp;gt;&lt;/code&gt; 태그&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;전송 버튼이다. 이는 특히 name과 id 등의 설정은 필요 없다. 전송 외에는 서버 측에 영향이 미치는 것이 없기 때문이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;송신-양식과-_get-_post&#34;&gt;송신 양식과 &lt;code&gt;$_GET&lt;/code&gt;, &lt;code&gt;$_POST&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;그럼 전송된 폼의 내용은 어디서 어떻게 받고 있는가? 받은 부분은 파일이 시작하는 부분의 &lt;?php ?&gt; 태그 내에 있다. 여기에서 다음과 같은 처리를 하고 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$str = $_POST[&amp;#39;text1&amp;#39;];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 &lt;code&gt;$_POST&lt;/code&gt;라는 것은 보낸 양식의 내용을 저장하는 배열이다. 배열, 기억하고 있는가? 많은 값을 한꺼번에 관리할 수 있는 특별한 변수이다. 배열은 인덱스에 관리되고, 연관 배열은 key라는 값으로 관리된다. 결국은 &lt;code&gt;$_POST&lt;/code&gt;는 &amp;ldquo;연관 배열&amp;quot;이라는 것이다.&lt;/p&gt;
&lt;p&gt;이번에는 POST으로 보냈기 때문에 이 &lt;code&gt;$_POST&lt;/code&gt;에 내용이 정리되었지만, 만약 GET으로 전송한 경우에는 &lt;code&gt;$_GET&lt;/code&gt; 배열에 정리된다. 이 2가지 연관 배열이 양식의 내용을 관리하기 위한 것이다.&lt;/p&gt;
&lt;p&gt;이 배열에는 폼의 내용이 name으로 지정된 이름으로 정리되고 있다. 여기에서 name=&amp;ldquo;text1&amp;quot;이라는 속성의 태그가 준비되어 있기에 &lt;code&gt;$_POST[ &#39;text1&#39;]&lt;/code&gt;와 같은 형태로 값이 저장되어 있는 것이다.&lt;/p&gt;
&lt;p&gt;주의할 점은 이 &lt;code&gt;$_GET&lt;/code&gt;, &lt;code&gt;$_POST&lt;/code&gt;와 같이 PHP의 시스템에서 제공하는 배열은 &amp;ldquo;값을 꺼낼 수 밖에 없다&amp;quot;는 점이다. 예를 들어, 이 값을 다시 작성해서 양식에 표시되는 값을 설정하려고 어떻게 생각을 하더라도 그건 무리이다. 이것은 단지 &amp;ldquo;전송된 데이터를 전달할 뿐&amp;quot;인 거라고 생각해야 한다.&lt;/p&gt;
&lt;h2 id=&#34;텍스트를-써넣는-것에-대해variable-interpolation&#34;&gt;텍스트를 써넣는 것에 대해(Variable interpolation)&lt;/h2&gt;
&lt;p&gt;여기에서는 사실 또 하나의 태크닉을 사용하고 있다. 시작 부분의 스크립트에서 $result에 텍스트를 설정하는 부분을 보도록 하자.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$result = &amp;#34;당신은 &amp;#39;{$str}&amp;#39;이라고 썼습니다.&amp;#34;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이런 식으로 적혀 있다. 이 &lt;code&gt;{$str}&lt;/code&gt;라는 것은 변수 $str 값을 텍스트에 넣고 있는 것이다. 즉, 이 부분에 $str 내용이 덧붙여지지 텍스트가 만들어 진다.&lt;/p&gt;
&lt;p&gt;큰 따옴표(&amp;quot;)로 묶인 텍스트는 이처럼 변수를 넣을 수 있다. 즉, 이렇게 하면 다양한 변수 등을 사용하여 텍스트를 생성할 있다는 것이다.&lt;/p&gt;
&lt;p&gt;그럼 반대로 $str이라는 텍스트를 출력시키고 싶은 경우에는 작은 따옴표(&amp;rsquo;)를 사용하여 텍스트를 만든다. 작은 따옴표의 텍스트에는 써 넣을 수 없다. 모두 쓴대로 텍스트를 얻을 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;echo &amp;#39;Variables do not $str&amp;#39;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;예를 들면, 위와 같이 하면 화면에 &amp;ldquo;Variables do not $str&amp;quot;이 그대로 화면에 표시된다.&lt;/p&gt;
&lt;p&gt;이 텍스트의 2가지의 작성법에 대한 차이는 확실히 기억해 두자.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | form 전송 기본 | 보안 대책의 첫 걸음(XSS 방어)</title>
      <link>https://www.devkuma.com/docs/php/%EB%B3%B4%EC%95%88-%EB%8C%80%EC%B1%85%EC%9D%98-%EC%B2%AB-%EA%B1%B8%EC%9D%8C-xss-%EB%B0%A9%EC%96%B4/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EB%B3%B4%EC%95%88-%EB%8C%80%EC%B1%85%EC%9D%98-%EC%B2%AB-%EA%B1%B8%EC%9D%8C-xss-%EB%B0%A9%EC%96%B4/</guid>
      <description>
        
        
        &lt;p&gt;양식을 송신해서 서버에 처리한다는 것은 &amp;ldquo;서버 측 프로그래밍&amp;quot;의 첫발을 내딛은 당신이 다음에 꼭 해야 하는 것이다. 무엇일까? 그것은 &amp;ldquo;지금 만든 프로그램의 &amp;lsquo;구멍&amp;rsquo; 막는 것&amp;quot;이다.&lt;/p&gt;
&lt;p&gt;서버에 프로그램을 제공하는 것은 불특정 다수의 사람이 해당 서버에 액세스하고 그 프로그램이 실행된다는 것이다. 즉, 서버에 액세스하는 모든 사람에게 &amp;ldquo;그 프로그램이 안전하게 움직인다&amp;quot;라는 것을 보장할 의무가 발생한다는 것이다. 만약에 그 프로그램에 의해 이용자에게 어떠한 피해가 발생하면 그 책임은 만든 개발자에게 있는 것이다.&lt;/p&gt;
&lt;p&gt;물론 처음부터 &amp;ldquo;모든 보안 대책을 세우라&amp;quot;라는 말은 아니다. 하지만 적어도 최소한의 &amp;ldquo;기본적인 안전 대책&amp;quot;에 대해서는, 프로그램을 만들게되면 가장 먼저 배워야 한다.&lt;/p&gt;
&lt;p&gt;그런데 지금 만든 예제 프로그램에는 커다란 &amp;lsquo;구멍&amp;rsquo;이 뚫려 있다. 그럼 그 구멍을 확인해 보자. 브라우저에서 이전의 페이지로 접근하여 다음과 같이 써보내 보자.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;script&amp;gt;alert(&amp;#34;이 구멍이다!&amp;#34;);&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;전송하면 화면에 알림 창이 나타난다(최근의 브라우저에서는 이를 자동으로 막아주고 경고 메세지가 표시한다). 입력 필드에 쓴 JavaScript 스크립트가 페이지를 로드할 때 실행되는데 이런 현상이 일어나고있는 것이다. 왜 이것이 &amp;ldquo;구멍&amp;quot;인가? 그것은 &amp;ldquo;어디의 누군지는 모르는 사람이 여기에 JavaScript 스크립트를 작성하여 페이지를 표시했을 때 그것을 실행시켜 버릴 수 있기&amp;rdquo; 때문이다.&lt;/p&gt;
&lt;p&gt;예를 들어, 이런 식으로 게시판 프로그램을 만들었다고 하자. 그러면 거기에 접근한 사람이 지금과 같이 하여 JavaScript 스크립트를 몰래 게시한다. 다음에 이 게시판에 접근한 모든 사람에게 표시가 될 때에 스크립트가 실행된다. 예를 들어 스크립트에서 &amp;ldquo;브라우저에 저장되어 있는 쿠키 정보를 얻어서 다른 사이트에 보낸다&amp;rdquo; 것과 같은 처리가 적혀 있었다고 한다면? 액세스한 사람의 쿠키 정보가 모든 낯선 사람에 도난하실 수 있다.&lt;/p&gt;
&lt;p&gt;이른바 &amp;lsquo;스푸핑(Spoofing)&amp;lsquo;라는 범죄는 이렇게 발생한다. 이 스크립트를 이용한 방법은 &amp;ldquo;크로스 사이트 스크립팅(XSS)&amp;ldquo;라고 사이트 공격의 기본 중의 기본으로 널리 알려져 있다.&lt;/p&gt;
&lt;p&gt;그럼 이 뚫린 &amp;lsquo;구멍&amp;rsquo;을 막아 보자. 먼저해야할 보안 대책은 사실 의외로 간단하다. 텍스트를 화면에 표시하는 echo 문 스크립트를 다음과 같이 다시 작성할 뿐이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
    echo htmlspecialchars($result);
?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 &amp;ldquo;htmlspecialchars&amp;quot;라는 함수는 ()에 쓰여진 값(인수라고 한다)를 체크하고 HTML 태그를 모두 이스케이프 문자로 변환한 것을 돌려준다. 즉, 이렇게 하여 값을 기록한 것으로, &amp;lt;script&amp;gt; 태그 등을 모두 무효화하고 동작하지 않도록 할 수 있다.&lt;/p&gt;
&lt;p&gt;양식을 사용하는 경우에는 보안 대책에 관한 철칙이 있다. 그것은 &amp;ldquo;사용자로부터 보내져 온 데이터는 절대로 그대로 화면에 출력하지 않는다&amp;quot;는 것이다. 거기에는 어떤 내용이 기술되어 있는지 모르기 때문에, 반드시 &amp;ldquo;표시해도 괜찮은&amp;rdquo; 형태로 처리해서 출력하는 것이 양식 사용의 기본이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$str&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$_POST&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;text1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$str&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;당신은 &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$str&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;이라고 썼습니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;아무것도 쓴 것이 없습니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;div&amp;gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            echo  htmlspecialchars($result);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        ?&amp;gt;&amp;lt;/div&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;form method=&amp;#34;post&amp;#34; action=&amp;#34;./index.php&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;text1&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | form 전송 기본 | 기타 양식용 요소(element)을 사용</title>
      <link>https://www.devkuma.com/docs/php/%EA%B8%B0%ED%83%80-%EC%96%91%EC%8B%9D%EC%9A%A9-%EC%9A%94%EC%86%8C-element%EC%9D%84-%EC%82%AC%EC%9A%A9/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EA%B8%B0%ED%83%80-%EC%96%91%EC%8B%9D%EC%9A%A9-%EC%9A%94%EC%86%8C-element%EC%9D%84-%EC%82%AC%EC%9A%A9/</guid>
      <description>
        
        
        &lt;p&gt;이제 양식 사용의 기본이 알았으니 다른 요소(element)에 대해서도 사용법을 살펴 보자.&lt;/p&gt;
&lt;p&gt;양식은 입력 필드 외에도 &amp;ldquo;체크박스&amp;rdquo;, &amp;ldquo;라디오 버튼&amp;rdquo;.  &amp;ldquo;리스트&amp;rdquo;, &amp;ldquo;텍스트 영역&amp;rdquo;, &amp;lsquo;&amp;lsquo;암호 필드&amp;quot;라는 것이 있다. 텍스트 영역 또는 암호 필드는 이전 입력 필드와 마찬가지로 &amp;ldquo;텍스트를 써 보내는&amp;rdquo; 것이므로 사용법은 알 수 있다 (단, 보내져 온 문자를 받을 뿐이기 때문에).&lt;/p&gt;
&lt;p&gt;그럼 체크 박스나 라디오 버튼 등은 일체 어떻게 값을 전달하는 것인가에 대해 실제로 시험해 보도록 하자.&lt;/p&gt;
&lt;p&gt;아래 체크 박스, 두개의 라디오 버튼, 3개의 항목이 있는 리스트를 표시한 양식 예제를 보도록 하자.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
    if ($_POST != null){
        $ck1 =$_POST[&amp;#39;check1&amp;#39;];
        $rd1 = $_POST[&amp;#39;radio1&amp;#39;];
        $sl1 = $_POST[&amp;#39;list1&amp;#39;];
        $result = &amp;#34;CHECKBOX: {$ck1}\nRADIOBUTTON: {$rd1}\nSELECT: {$sl1}&amp;#34;;
    } else {
        $result = &amp;#34;입력하십시오.&amp;#34;;
    }
?&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
    &amp;lt;head&amp;gt; 
        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34;
            content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
        &amp;lt;pre&amp;gt;&amp;lt;?php
            echo  htmlspecialchars($result);
        ?&amp;gt;&amp;lt;/pre&amp;gt;
        &amp;lt;form method=&amp;#34;post&amp;#34; action=&amp;#34;./index.php&amp;#34;&amp;gt;
            &amp;lt;input type=&amp;#34;checkbox&amp;#34; name=&amp;#34;check1&amp;#34;&amp;gt;체크 박스&amp;lt;br&amp;gt;
            &amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;radio1&amp;#34; value=&amp;#34;1번 선택&amp;#34;&amp;gt;라디오 박스1&amp;lt;br&amp;gt;
            &amp;lt;input type=&amp;#34;radio&amp;#34; name=&amp;#34;radio1&amp;#34; value=&amp;#34;2번 선택&amp;#34;&amp;gt;라디오 박스2&amp;lt;br&amp;gt;
            &amp;lt;select name=&amp;#34;list1&amp;#34;&amp;gt;
                &amp;lt;option value=&amp;#34;Windows&amp;#34;&amp;gt;Windows&amp;lt;/option&amp;gt;
                &amp;lt;option value=&amp;#34;Mac OS&amp;#34;&amp;gt;Mac OS&amp;lt;/option&amp;gt;
                &amp;lt;option value=&amp;#34;Linux&amp;#34;&amp;gt;Linux&amp;lt;/option&amp;gt;
            &amp;lt;/select&amp;gt;
            &amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt;
        &amp;lt;/form&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이것을 실제로 움직여 각각의 값이 어떻게 전달되는지를 알아 보자.&lt;/p&gt;
&lt;h2 id=&#34;체크-박스&#34;&gt;체크 박스&lt;/h2&gt;
&lt;p&gt;이것은 체크가 ON이라면 &amp;ldquo;on&amp;quot;이라는 값을 보내온다. 그럼 체크가 OFF라면? 이는 아무것도 보내지 않는다. 즉, 빈값이다.&lt;/p&gt;
&lt;h2 id=&#34;라디오-버튼&#34;&gt;라디오 버튼&lt;/h2&gt;
&lt;p&gt;이는 선택된 라디오 버튼의 value가 보내진다. value가 설정되어 있지 않으면 체크 박스와 마찬가지로, 단지 &amp;ldquo;on&amp;quot;이라는 값이 들어오는 뿐이다. 이것에는 &amp;ldquo;어떤 라디오 버튼이 선택되어 있는지&amp;quot;를 모르기 때문에 반드시 value를 작성해 하도록 한다.&lt;/p&gt;
&lt;p&gt;또한, 어떤 라디오 버튼이 선택되지 않은 경우 체크 박스처럼 아무것도 보내지 않는다.&lt;/p&gt;
&lt;h2 id=&#34;리스트&#34;&gt;리스트&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;는 콤보 박스처럼 표시하거나 일람 리스트와 같이 표시를 할 수 있지만, 송진되는 오는 값은 모두 동일한다. 선택된 &lt;code&gt;&amp;lt;option&amp;gt;&lt;/code&gt;의 value가 보내지게 된다. 만약 value가 설정되어 있지 않으면, &lt;code&gt;&amp;lt;option&amp;gt;~&amp;lt;/option&amp;gt;&lt;/code&gt; 사이에 기술된 텍스트가 전송된다.&lt;/p&gt;
&lt;p&gt;또한, 아무것도 선택되어 있지 않으면 역시 아무것도 보내지 않는다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | form 전송 기본 | 리스트 select의 여러 항목 선택</title>
      <link>https://www.devkuma.com/docs/php/%EB%A6%AC%EC%8A%A4%ED%8A%B8-select%EC%9D%98-%EC%97%AC%EB%9F%AC-%ED%95%AD%EB%AA%A9-%EC%84%A0%ED%83%9D/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EB%A6%AC%EC%8A%A4%ED%8A%B8-select%EC%9D%98-%EC%97%AC%EB%9F%AC-%ED%95%AD%EB%AA%A9-%EC%84%A0%ED%83%9D/</guid>
      <description>
        
        
        &lt;p&gt;이제 양식의 항목 요소의 기본적인 사용 방법은 알았다. 하지만 아직 설명하지 않은 것이 하나 있다. 그것은 &amp;ldquo;&amp;lt;select&amp;gt; 여러 항목 선택&amp;quot;이다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt;에 의한 리스트는 multiple이라는 속성을 설정하면, 여러 항목을 선택할 수 있게 된다. 이런 경우에 어떻게 선택된 항목을 체크하면 되는가? 보통의 방법으로는 잘되지 않는다. 약간의 태크닉를 사용해야 한다.&lt;/p&gt;
&lt;p&gt;아래에 간단한 예제를 보도록 하자.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
    if ($_POST != null){
        $arr = $_POST[&amp;#39;list1&amp;#39;];
        $result = &amp;#34;&amp;#34;;
        foreach($arr as $item){
            $result .= $item . &amp;#34;\n&amp;#34;;
        }
    } else {
        $result = &amp;#34;입력하십시오.&amp;#34;;
    }
?&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
    &amp;lt;head&amp;gt; 
        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34;
            content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
        &amp;lt;pre&amp;gt;&amp;lt;?php
            echo htmlspecialchars($result);
        ?&amp;gt;&amp;lt;/pre&amp;gt;
        &amp;lt;form method=&amp;#34;post&amp;#34; action=&amp;#34;./index.php&amp;#34;&amp;gt;
            &amp;lt;select name=&amp;#34;list1[]&amp;#34; size=&amp;#34;5&amp;#34; multiple&amp;gt;
                &amp;lt;option value=&amp;#34;Windows&amp;#34;&amp;gt;Windows&amp;lt;/option&amp;gt;
                &amp;lt;option value=&amp;#34;Mac OS&amp;#34;&amp;gt;Mac OS&amp;lt;/option&amp;gt;
                &amp;lt;option value=&amp;#34;Linux&amp;#34;&amp;gt;Linux&amp;lt;/option&amp;gt;
                &amp;lt;option value=&amp;#34;Android&amp;#34;&amp;gt;Android&amp;lt;/option&amp;gt;
                &amp;lt;option value=&amp;#34;iOS&amp;#34;&amp;gt;iOS&amp;lt;/option&amp;gt;
            &amp;lt;/select&amp;gt;
            &amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt;
        &amp;lt;/form&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;양식의 항목을 적당히 여러개를 선택하여 보내 보자. 선택된 항목이 그 위에 출력된다.&lt;/p&gt;
&lt;p&gt;여기에서는 &lt;code&gt;$arr = $_POST[ &#39;list1&#39;];&lt;/code&gt;와 같이 하여 선택한 목록의 값을 얻어 오고 있다. 그리고,
foreach ($ arr as $ item) {
    $ result = $ item. &amp;ldquo;\ n&amp;rdquo;;
}&lt;/p&gt;
&lt;p&gt;이와 같이 &lt;code&gt;foreach&lt;/code&gt;를 사용하여 &lt;code&gt;$arr&lt;/code&gt;의 값을 순서대로 꺼내 처리를 하고 있다. 즉, &lt;code&gt;$arr&lt;/code&gt;는 배열이다. 선택된 항목이 모두 배열로 전달되는 것이다.&lt;/p&gt;
&lt;p&gt;이 배열로 데이터를 받기 위해서는 양식 측에도 설정을 해두지 않으면 안된다. &lt;code&gt;&amp;lt;select&amp;gt;&lt;/code&gt; 태그 부분을 잘 보도록 하자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;select&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;list1[]&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;size&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;multiple&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여러 항목이 선택할 수 있도록 &amp;ldquo;multiple&amp;quot;라는 속성이 추가되어 있다. 이 포인트가 아니다. 이름이 &lt;code&gt;name=&amp;quot;list1[]&amp;quot;&lt;/code&gt;로 지정되어 있다. &lt;code&gt;&amp;quot;list1&amp;quot;&lt;/code&gt;대신 &lt;code&gt;&amp;quot;list1[]&amp;quot;&lt;/code&gt; 이다. 이와 같이 작성하는 것으로, 이 list1 값은 일반 텍스트가 아닌 텍스트의 배열로 전달하게 되는 것이다.&lt;/p&gt;
&lt;p&gt;이 &amp;ldquo;리스트의 여러 항목 선택&amp;quot;이라는 것은 중요하기 때문에 여기서 잘 이해하도록 하자.&lt;/p&gt;
&lt;h2 id=&#34;텍스트-대입-연산자&#34;&gt;텍스트 대입 연산자&lt;/h2&gt;
&lt;p&gt;그런데 여기에 또 다른 낯선 기호가 나오고 있다. &amp;ldquo;.=&amp;ldquo;이다. 이것은 우변의 텍스트를 왼쪽 변수의 끝에 붙이는 연산 기호이다. 즉, &amp;ldquo;A .= B&amp;quot;라는 것은 &amp;ldquo;A = A . B&amp;quot;와 같은 의미이다. 이를 더 간단하게 쓸 수 있게 한 것이다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 텍스트 파일 이용</title>
      <link>https://www.devkuma.com/docs/php/%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC-%EC%9D%B4%EC%9A%A9/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC-%EC%9D%B4%EC%9A%A9/</guid>
      <description>
        
        
        &lt;p&gt;파일에서 텍스트를 읽거나 파일에 저장을 할 수 있게 되면, 꽤 할 수 있는 것이 많아 진다. 텍스트 파일의 기본적인 사용에 대해 설명한다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 텍스트 파일 이용 | readfile을 이용한 텍스트 파일 로드</title>
      <link>https://www.devkuma.com/docs/php/readfile%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC-%EB%A1%9C%EB%93%9C/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/readfile%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%85%8D%EC%8A%A4%ED%8A%B8-%ED%8C%8C%EC%9D%BC-%EB%A1%9C%EB%93%9C/</guid>
      <description>
        
        
        &lt;p&gt;텍스트 파일의 내용을 읽어 표시하는 것은 PHP에서는 놀라울 정도로 간단하다. 그대로 &amp;ldquo;지정된 텍스트 파일을 로드하고 표시한다&amp;quot;는 것을 해주는 함수가 준비되어 있다.&lt;/p&gt;
&lt;p&gt;실제로 해보자. 먼저 텍스트 파일을 준비한다. 실행하는 PHP 파일 (여기에서는 index.php)와 같은 위치에 &amp;ldquo;data.txt&amp;quot;라는 텍스트 파일을 생성하고, 그 안에 적당히 텍스트를 써 넣는다. 이것은 PHP와 마찬가지로 UTF-8 인코딩으로 저장한다. 인코딩이 다르면 문자가 깨진다.&lt;/p&gt;
&lt;p&gt;파일이 준비 되면, 스크립트를 만들자. index.php에 아래와 같이 소스 코드를 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DOCTYPE&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;http&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;equiv&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sample&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;page&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Hello&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PHP&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;readfile&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;data.txt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그리고 페이지를 접속해 보면, 텍스트 파일의 내용이 그대로 표시될 것이다.&lt;/p&gt;
&lt;p&gt;여기에서 사용하고 있는 PHP 스크립트는 바디(body) 부분에 써 있는 단 한 줄의 함수뿐이다. 해당 함수 부분은 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php readfile(&amp;#34;data.txt&amp;#34;); ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 &amp;ldquo;readfile&amp;quot;라고 하는 것이 ()에 지정된 파일을 읽어 들여 그 자리에 내보내는 함수이다. 텍스트를 표시할 위치에 이 함수를 써두는 것만으로 거기에 파일의 내용이 출력된다. echo로 출력할 필요도 없다. 단지, readfile 함수만 있으면 된다.&lt;/p&gt;
&lt;p&gt;그러나 실제로 해보면 이것으로는 여러가지 부족함이 있을 것이다. 먼저 여러 줄의 텍스트가 써있어도 줄 바꿈되지 않고 표시된다. HTML에서 &amp;lt;br&amp;gt; 태그을 사용하여 줄 바꿈을 해주지 않으면 안되기 때문이다. readfile은 줄 바꿈을 자동으로 &amp;lt;br&amp;gt;로 변환해 주거나 하지 않는다.&lt;/p&gt;
&lt;p&gt;또한, 꺼낸 텍스트를 그대로 써 넣기 때문에 부분적으로 뭔가 처리를 하고 싶은 경우에는 이를 사용할 수 없다. 어디 까지나 내용을 통째로 거기에 단순히 꺼낼 뿐이다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 텍스트 파일 이용 | file를 사용한 파일의 텍스트를 한줄씩 처리</title>
      <link>https://www.devkuma.com/docs/php/file%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%ED%8C%8C%EC%9D%BC%EC%9D%98-%ED%85%8D%EC%8A%A4%ED%8A%B8%EB%A5%BC-%ED%95%9C%EC%A4%84%EC%94%A9-%EC%B2%98%EB%A6%AC/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/file%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%9C-%ED%8C%8C%EC%9D%BC%EC%9D%98-%ED%85%8D%EC%8A%A4%ED%8A%B8%EB%A5%BC-%ED%95%9C%EC%A4%84%EC%94%A9-%EC%B2%98%EB%A6%AC/</guid>
      <description>
        
        
        &lt;p&gt;그럼 읽어온 텍스트를 처리하기 위해서는 어떻게 해야 하는 걸까. 여기에는 &amp;ldquo;파일의 내용을 통째로 읽어 들여, 한줄씩 배열에 정리해 돌려주는&amp;rdquo; 함수가 준비되어 있기 때문에 이를 이용하면 된다. 이것은 &amp;ldquo;file&amp;quot;이라는 함수이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = file(파일 지정);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 하면 인수에 지정된 파일을 읽어 들여, 한줄씩 나누어 정리한 배열을 돌려준다. 이후에는 &amp;ldquo;$변수&amp;quot;에서 배열의 요소를 차례로 꺼내 처리해 가면 된다.&lt;/p&gt;
&lt;p&gt;그러나 일반적으로 이렇게 간단한 작성을 하는 경우는 별로 없다. 왜냐하면 이것만으로는 &amp;ldquo;파일 로드에 실패할 경우&amp;quot;를 처리할 수 없기 때문이다. 만약 파일로드에 실패하면 그 시점에서 오류가 발생하여 스크립트의 실행을 중단해 버린다. 그렇게 되면 그 이후의 처리 및 표시도 되지 않고 페이지가 도중에 잘려 버린다.&lt;/p&gt;
&lt;p&gt;그래서 file과 같이 실행에 실패할 가능성이 있는 경우&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = @file(파일 지정) or 실패 처리;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이런 식으로 쓰는 것이 일반적이다. 함수명 앞에 &amp;lsquo;@&amp;lsquo;기호를 붙이면 실행에 실패해도 스크립트를 중단하지 않고 계속 진행을 하게 된다. 또한 함수 뒤에 &amp;ldquo;or&amp;quot;를 붙이면 실행에 실패했을 때 or 이후의 처리를 수행할 수 있다.&lt;/p&gt;
&lt;p&gt;그러면 아래에 간단한 예제를 보도록 하자.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
    $result = &amp;#34;&amp;#34;;
    $lines = @file(&amp;#34;data.txt&amp;#34;) or $result = &amp;#34;파일을 읽을 수 없습니다.&amp;#34;;
    if ($lines != null){
        for($i = 0;$i &amp;lt; count($lines);$i++){
            $result .= ($i + 1) . &amp;#34;: &amp;#34; . $lines[$i] . &amp;#34;&amp;lt;br&amp;gt;&amp;#34;;
        }
    }
?&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
    &amp;lt;head&amp;gt; 
        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34;
            content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
        &amp;lt;p&amp;gt;&amp;lt;?php echo $result; ?&amp;gt;&amp;lt;/p&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이는 data.txt를 읽어 들여, 1행씩 행번호를 붙여 표시한다. 물론 각 행도 제대로 줄 바꿈되어 표시된다. 여기에서는&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$lines = @file(&amp;#34;data.txt&amp;#34;) or $result = &amp;#34;파일을 읽을 수 없습니다.&amp;#34;;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 하여 파일을 로드하고 있다. 그리고 읽어온 $lines 배열을 비울 때까지 반복하고 있다. 비었는지에 대한 여부는&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if ($ lines! = null) {......
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 체크를 하고 있다. &amp;ldquo;null&amp;quot;이라는 것은 &amp;ldquo;빈&amp;rdquo; 것을 나타내는 예약어이다. 변수에 값이 설정되지 않은 (즉, 빈) 상태를 나타내는 말이다.&lt;/p&gt;
&lt;p&gt;무사히 가져온다면, &lt;code&gt;for($i = 0; $i &amp;lt;count($lines); $i++)&lt;/code&gt; 이렇게 하여 $lines에서 한줄씩 텍스트를 읽어 와서 처리를 하고 있다. &lt;code&gt;count($lines)&lt;/code&gt;이라고 하는 것은, $lines 요소의 수를 지정하는 것이다. &amp;ldquo;count&amp;quot;라는 것은 인수에 지정된 배열의 요소 수를 반환하는 함수이다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 텍스트 파일 이용 | 텍스트를 분할하여 처리(explode, implode)</title>
      <link>https://www.devkuma.com/docs/php/%ED%85%8D%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EB%B6%84%ED%95%A0%ED%95%98%EC%97%AC-%EC%B2%98%EB%A6%AC-explode-implode/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%ED%85%8D%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EB%B6%84%ED%95%A0%ED%95%98%EC%97%AC-%EC%B2%98%EB%A6%AC-explode-implode/</guid>
      <description>
        
        
        &lt;p&gt;텍스트 파일은 다양한 데이터를 처리하는데 사용된다. 예를 들어, Excel 시트처럼 화면에 가로로 늘어 놓는 데이터를 작성하는 데에도 이용된다.&lt;/p&gt;
&lt;p&gt;이러한 &amp;ldquo;많은 데이터가 작성된 텍스트&amp;quot;를 사용하는 방법을 알면, 텍스트 파일을 사용하여 간단한 데이터베이스적인 사용이 가능하게 된다.&lt;/p&gt;
&lt;p&gt;그럼 실제로 해보자. 먼저 샘플 data.txt 텍스트 파일의 내용을 다음과 같이 내용을 변경한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;원석, won@flower.ko, 010-9999-9999
성진, sung@yamada.jp, 010-8888-8888
병호, byeong@baseball.com, 010-7777-7777
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여기에서는 개인 정보(이름, 이메일 주소, 전화 번호)를 쉼표로 구분해서 한줄씩 줄바꿈하여 데이터를 기술되어 있다. 이렇게 하면 한줄씩 데이터를 검색하여 거기에서 각 항목의 값을 꺼내 처리할 수 있을 것 같다.&lt;/p&gt;
&lt;p&gt;이것을 읽어 표시하는 예제를 보도록 하자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$lines&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;file&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;data.txt&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;or&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;파일을 읽을 수 없습니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$lines&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;lt;table border=&amp;#34;1&amp;#34;&amp;gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;tr&amp;gt;&amp;lt;th&amp;gt;NAME&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;MAIL&amp;lt;/th&amp;gt;&amp;lt;th&amp;gt;TEL&amp;lt;/th&amp;gt;&amp;lt;/tr&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$i&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$i&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;count&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$lines&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$i&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;tr&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;$arr&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;explode&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;,&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$lines&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$i&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$j&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$j&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$j&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;++&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#000&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;td&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$arr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$j&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;lt;/td&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;/tr&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;/table&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;head&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;p&amp;gt;&amp;lt;?php echo $result; ?&amp;gt;&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;액세스하면 데이터가 테이블을 사용한 테이블의 형태로 나타난다.&lt;/p&gt;
&lt;p&gt;여기에서 file에서 텍스트를 각 행마다 배열로 얻어내어, for의 반복 처리를 하고 있다. 얻어온 행 텍스트는 쉼표 기호로 3개의 텍스트로 분할되어 처리된다. 여기에서는&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$arr = explode(&amp;#34;,&amp;#34;, $lines[$i]);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이것이 &lt;code&gt;$lines[$i]&lt;/code&gt;의 텍스트를 쉼표로 분리하고 있는 부분이다. &amp;ldquo;explode&amp;quot;라고 하는 것은, 첫번째 인수로 지정한 문자를 사용하여 두 번째 인수의 텍스트를 분할하고 배열에 정리해 반환하는 함수이다. 여기에서는 쉼표(,)를 첫번째 인수로 지정하고 있다. 그러면, 두번째 인수의 텍스트를 쉼표로 분리하고 있다. 분할 된 배열의 텍스트에서 쉼표은 사라진다. 즉, explode로 분할하면 단락 문자는 없게 되므로 주의하자.&lt;/p&gt;
&lt;p&gt;이와 반대로 배열에 정리한 텍스트를 지정된 구분 기호를 사용하여 하나의 텍스트로 정리할 수도 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = implode(구분 문자, 배열);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 &amp;ldquo;implode&amp;quot;함수를 사용하면 배열의 각 요소의 텍스트를 구분 기호 사이에 두고 하나의 텍스트로 정리한다. 즉, explode으로 분해한 배열을 바탕으로 되돌릴 수 있다는 것이다. 세트로 기억하도록 하자.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 텍스트 파일 이용 | fopen 통한 파일 액세스</title>
      <link>https://www.devkuma.com/docs/php/fopen-%ED%86%B5%ED%95%9C-%ED%8C%8C%EC%9D%BC-%EC%95%A1%EC%84%B8%EC%8A%A4/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/fopen-%ED%86%B5%ED%95%9C-%ED%8C%8C%EC%9D%BC-%EC%95%A1%EC%84%B8%EC%8A%A4/</guid>
      <description>
        
        
        &lt;p&gt;&lt;code&gt;file()&lt;/code&gt;를 이용한 파일의 읽기보다도 더 유연한 대응이 필요한 경우에는, PHP에서 제공되는 가장 기본적인 파일 액세스 함수를 조합하여 사용할 수 있다. 이는 3단계의 절차로 파일에 액세스할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;1-파일-열기&#34;&gt;1. 파일 열기&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = fopen(파일 지정, 모드 지정);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;먼저 &amp;lsquo;fopen&amp;rsquo;라는 함수를 호출한다. 이는 인수에 지정된 파일을 열고 그 파일에 액세스할 수 있는 &amp;ldquo;파일 포인터&amp;quot;라는 것을 돌려준다. 파일에 액세스하는 경우는 반드시 이 fopen으로 파일을 연다.&lt;/p&gt;
&lt;p&gt;두번째 인수에 있는 &amp;ldquo;모드 지정&amp;quot;이라는 것이 &lt;code&gt;fopen&lt;/code&gt;의 포인트이다. 이는 해당 파일의 액세스 형태라는 것을 지정한다. 액세스 모드는 그 파일을 &amp;ldquo;어떤 종류의 파일를 처리할지&amp;rdquo;, &amp;ldquo;어떤 접근을 허용할지&amp;quot;에 대한 설정을 할 것이다. 이 모드는 다음과 같은 기호를 사용하여 지정한다.&lt;/p&gt;
&lt;h3 id=&#34;fopen-모드를-지정하는-기호&#34;&gt;fopen 모드를 지정하는 기호&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;인자&lt;/th&gt;
&lt;th&gt;모드&lt;/th&gt;
&lt;th&gt;포인터 위치&lt;/th&gt;
&lt;th&gt;파일이 존재 유무&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;r&lt;/td&gt;
&lt;td&gt; 읽기 전용 &lt;/td&gt;
&lt;td&gt;파일의 시작 &lt;/td&gt;
&lt;td&gt; 파일 내용 보존&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;r+&lt;/td&gt;
&lt;td&gt; 읽고 쓰기&lt;/td&gt;
&lt;td&gt;파일의 시작&lt;/td&gt;
&lt;td&gt; 파일 내용 보존&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w&lt;/td&gt;
&lt;td&gt; 쓰기 전용&lt;/td&gt;
&lt;td&gt;파일의 시작&lt;/td&gt;
&lt;td&gt; 파일 내용 삭제, 없으면 새로 생성&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;w+&lt;/td&gt;
&lt;td&gt; 읽고 쓰기&lt;/td&gt;
&lt;td&gt; 파일의 시작&lt;/td&gt;
&lt;td&gt; 파일 내용 삭제, 없으면 새로 생성&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a&lt;/td&gt;
&lt;td&gt; 쓰기 전용&lt;/td&gt;
&lt;td&gt;파일의 끝&lt;/td&gt;
&lt;td&gt; 파일 내용 보존, 없으면 새로 생성&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;a+&lt;/td&gt;
&lt;td&gt; 읽고 쓰기&lt;/td&gt;
&lt;td&gt;파일의 끝&lt;/td&gt;
&lt;td&gt; 파일 내용 보존, 없으면 새로 생성&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x&lt;/td&gt;
&lt;td&gt; 쓰기 전용&lt;/td&gt;
&lt;td&gt;새로운 파일 생성&lt;/td&gt;
&lt;td&gt;파일이 존재하면 false 리턴 그리고 에러 남&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x+&lt;/td&gt;
&lt;td&gt; 읽고 쓰기&lt;/td&gt;
&lt;td&gt;새로운 파일 생성&lt;/td&gt;
&lt;td&gt;파일이 존재하면 false 리턴 그리고 에러 남 &lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;위의 모드 인자뒤에 마지막에 b나 t를 붙일 수 있다.
&lt;ul&gt;
&lt;li&gt;b : 바이너리 모드로 열기&lt;/li&gt;
&lt;li&gt;t : 텍스트 파일의 라인 변경 태그를 Unix에서는 &lt;code&gt;\n&lt;/code&gt;를 사용하고, 맥에서는 &lt;code&gt;\r&lt;/code&gt;만 사용하는데 윈도우에서는 &lt;code&gt;\r\n&lt;/code&gt;를 사용하는데, 이러한 &lt;code&gt;\n&lt;/code&gt;을 &lt;code&gt;\r\n&lt;/code&gt;으로 변환해준다. 따라서 다른 시스템의 텍스트 파일을 윈도우 플랫폼에서 열 때 사용하면 좋다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2-데이터에-액세스하기&#34;&gt;2. 데이터에 액세스하기&lt;/h2&gt;
&lt;p&gt;파일을 열리면, 그 다음에 하는 작업은 그 파일에서 필요한 데이터를 읽거나 데이터를 쓰거나 하는 작업을 실행한다. 여기에는 &amp;ldquo;fgets&amp;rdquo;, &amp;ldquo;fputs&amp;quot;라는 함수가 준비되어 있다. (각각에 대해서는 나중에 설명하겠다)&lt;/p&gt;
&lt;h2 id=&#34;3-파일-닫기&#34;&gt;3. 파일 닫기&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fclose(파일 포인터);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;데이터 액세스가 완료되면 마지막으로 파일을 닫는다. 이는 &lt;code&gt;fclose&lt;/code&gt; 라는 함수로 실행한다. 인수는 &lt;code&gt;fopen&lt;/code&gt;으로 얻어진 파일 포인터를 지정한다.&lt;/p&gt;
&lt;p&gt;왜 &lt;code&gt;fopen&lt;/code&gt;에서 파일을 열고 &lt;code&gt;fclose&lt;/code&gt;으로 닫는 작업을 하지 않으면 안 되는가? 그것은 이것에 의해 파일 액세스 권한이 설정되기 때문이다. 일반적으로 컴퓨터의 응용 프로그램 등으로 파일을 사용하는 경우, 어느 응용 프로그램이 사용 중이라고 다른 파일로 열 수 없거나, 파일 삭제 등을 할 수 없게 된다. 그것은 &amp;ldquo;이 응용 프로그램을 사용 중이다&amp;quot;라는 것을 표시해주고 다른 프로그램에서 액세스할 수 없도록 하고 있기 때문이다.&lt;/p&gt;
&lt;p&gt;만약 여러 프로그램에서 동시에 파일 액세스할 수 된다며, 그 내용이 생각하지 못한 형태로 재작성되어 버릴 가능성이 있다. 그래서 파일에 쓰여진 데이터가 손상되지 않도록 &amp;ldquo;파일을 사용할 수 있는 것은 한번에 하나의 애플리케이션만 가능&amp;quot;하도록 되어 있다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fopen&lt;/code&gt; 및 &lt;code&gt;fclose&lt;/code&gt;도 이와 같은 일을 하고 있는 것이다. &lt;code&gt;fopen&lt;/code&gt;으로 파일을 열면 다른 프로그램이 마음대로이 파일을 열어서 내용을 다시 작성할 수 없게 된다. 그리고 모든 작업 후에 &lt;code&gt;fclose&lt;/code&gt;을 실행하여 파일을 닫아 개방하여 다른 프로그램이 파일을 사용할 수 있게 한다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 텍스트 파일 이용 | fgets를 사용하여 파일 로드</title>
      <link>https://www.devkuma.com/docs/php/fgets%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%ED%8C%8C%EC%9D%BC-%EB%A1%9C%EB%93%9C/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/fgets%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%ED%8C%8C%EC%9D%BC-%EB%A1%9C%EB%93%9C/</guid>
      <description>
        
        
        &lt;p&gt;먼저 fopen을 사용한 &amp;ldquo;파일 읽기&amp;quot;부터 보도록 하자. 여기에서는 data.txt의 내용을 fopen 이용해서 읽어서 표시해 보려고 한다. 뭐, 해려고 하는 것은 지금까지와 변함 없지만 &amp;hellip;&lt;/p&gt;
&lt;p&gt;아래에 예제 코드를 보도록 하자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    $f = @fopen(&amp;#34;data.txt&amp;#34;,&amp;#39;r&amp;#39;) or exit(&amp;#34;BREAK&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    $result = &amp;#39;&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    while(!feof($f)){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $result .= fgets($f,10);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    fclose($f);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;sample page&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;Hello PHP!&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php echo $result; ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;fopen으로 파일을 열고, fclose으로 닫는 것은 이 전에 설명한대로 이다. fopen에서 예제로 &amp;ldquo;오류시 처리&amp;quot;도 하고 있다. 여기에서 &amp;ldquo;exit&amp;quot;라는 것이 사용되고 있는데, 이것은 &amp;ldquo;처리 종료&amp;quot;위한 것이다. 즉, 여기서 조작을 중단하고 인수의 텍스트인 &amp;ldquo;BREAK&amp;quot;를 화면에 출력하고 끝낸다.&lt;/p&gt;
&lt;p&gt;파일의 데이터를 읽는 처리는 &amp;ldquo;fgets&amp;quot;라는 함수를 사용한다. 이것은&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = fgets(파일 포인터);
$변수 = fgets(파일 포인터, 바이트수);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이런 식으로 호출한다. 인수에는 읽을 파일 포인터를 지정한다. 두번째 인수가 없으면 한줄만 읽어 드린다. 두번째 인수에 정수를 지정하면 해당 바이트 수 만큼 읽는다.&lt;/p&gt;
&lt;p&gt;이 fgets는 &amp;ldquo;로드 위치&amp;quot;의 정보를 보존하고 있다. 어느 파일에서 100 바이트를 로드하면 그 만큼의 데이터를 읽어 들여, 그 자리에 &amp;ldquo;로드 위치&amp;quot;를 이동시키는 것이다. 또한 fgets를 호출하면 100 바이트씩 이동한 로드 위치에서 다시 계속 읽어들인다. 이렇게 fgets를 여러번 호출하여, 대용량 파일도 시작 부분부터 조금씩 읽어 나가는 수 있다.&lt;/p&gt;
&lt;p&gt;또한 파일을 로드 할 시에 &amp;ldquo;어디서 파일이 마지막이 될지&amp;quot;도 체크하지 않으면 안된다. 이것은 &amp;ldquo;feof&amp;quot;라는 함수를 사용한다. 인수에 파일 포인터를 설정해서 호출하면 파일의 로드 위치가 파일의 끝까지 닿아 있으면 true, 아직 남아 있다면 false를 반환한다. 예제 코드를 보면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;while(!feof($f)){......
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이런 식으로 반복을 하고 있다. 변수 이름 앞에 있는 &amp;ldquo;!&amp;ldquo;는 &amp;ldquo;부정&amp;quot;의 기호이다. 부울값(true / false)이 true이면 false, false이면 true와 같이 반대 값을 반환 연산자이다. 이것으로 &lt;code&gt;feof($f)&lt;/code&gt;이 false인 동안 (즉, 아직 남아있다)에 반복을 계속하도록 하는 것이다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 텍스트 파일 이용 | fputs를 사용하여 파일 저장</title>
      <link>https://www.devkuma.com/docs/php/fputs%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%ED%8C%8C%EC%9D%BC-%EC%A0%80%EC%9E%A5/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/fputs%EB%A5%BC-%EC%82%AC%EC%9A%A9%ED%95%98%EC%97%AC-%ED%8C%8C%EC%9D%BC-%EC%A0%80%EC%9E%A5/</guid>
      <description>
        
        
        &lt;p&gt;그럼 이제 파일을 저장해 보자. 이것은 &amp;ldquo;fputs&amp;quot;라는 함수를 사용한다. 다음과 같은 형태로 호출한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fputs (파일 포인터, 데이터);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;단지 이것만으로 파일에 데이터를 저장할 수 있다. 파일로 쓰기를 할 때에 주의해야 할 점은 액세스 모드이다. 쓰기 액세스 모드는 2종류이기 때문에 실수하지 말길 바란다.&lt;/p&gt;
&lt;p&gt;&amp;lsquo;w&amp;rsquo;를 지정한 경우는 &amp;ldquo;덮어 쓰기 모드&amp;quot;이다. 이미 파일이 있을 경우, 이를 지우고 새로운 파일을 만들어 fputs에 쓴다.&lt;/p&gt;
&lt;p&gt;&amp;lsquo;a&amp;rsquo;를 지정한 경우는 &amp;ldquo;추가 쓰기 모드&amp;quot;이다. 이미 파일이 있다면, 그 파일의 마지막에 fputs한 내용을 추가한다. 즉, &lt;code&gt;fputs&lt;/code&gt;으로 점점 데이터를 추가하는 것이다.&lt;/p&gt;
&lt;p&gt;용도에 따라, 이 두가지 모드를 구사할 수 있도록 하자. 그럼 아래에 간단한 예제를 보도록 하자.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
    // 데이터 추가
    if ($_POST != null){
        $f = @fopen(&amp;#34;data.txt&amp;#34;,&amp;#39;a&amp;#39;) or exit(&amp;#34;파일을 읽을 수 없습니다.&amp;#34;);
        if ($f != null){
            $s = $_POST[&amp;#39;text1&amp;#39;];
            fputs($f,$s . &amp;#34;\n&amp;#34;);
            fclose($f);
        }
    }
    // 파일 읽기
    $f2 = @fopen(&amp;#34;data.txt&amp;#34;,&amp;#39;r&amp;#39;) or exit(&amp;#34;파일을 읽을 수 없습니다.&amp;#34;);
    $result = &amp;#39;&amp;#39;;
    $i = 1;
    while(!feof($f2)){
        $s2 = htmlspecialchars(fgets($f2));
        if ($s2 != &amp;#34;&amp;#34;){
            $result = $i++ . &amp;#34;: &amp;#34; .$s2 . &amp;#34;&amp;lt;br&amp;gt;&amp;#34; . $result;
        }
    }
    fclose($f2);
?&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
    &amp;lt;head&amp;gt; 
        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
        &amp;lt;form method=&amp;#34;post&amp;#34; action=&amp;#34;./index.php&amp;#34;&amp;gt;
            &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;text1&amp;#34;&amp;gt;
            &amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt;
        &amp;lt;/form&amp;gt;
        &amp;lt;hr&amp;gt;
        &amp;lt;p&amp;gt;&amp;lt;?php echo $result; ?&amp;gt;&amp;lt;/p&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이것은 간단한 메모를 쓸 수 있는 어플리케이션이다. 입력 필드에서 텍스트를 써 보내면, 그 내용이 파일에 추가가 된다. 입력 양식의 아래에 저장된 메모가 새로운 것부터 순서대로 번호를 부여하여 표시된다.&lt;/p&gt;
&lt;p&gt;여기에서는 &amp;ldquo;파일 저장&amp;rdquo;, &amp;ldquo;파일 가져 오기&amp;quot;를 모두 사용하고 있다. 어떻게 움직이고 있는지 각자 자세히 보도록 하자. 파일 액세스를 할 수 있게 되면 이런 식으로 좀 더 실용적인 것을 서서히 만들 수 있게 될 거다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linux 혹은 Mac OS 환경에서 파일 권한 오류&lt;/strong&gt;&lt;br&gt;
혹시 Linux 혹은 Mac OS에서 파일에 추가가 되지 않는다면 파일의 쓰기 권한이 있는지 확인 해보자. 만약에 없다면 아래와 같이 명령어로 쓰기 권한을 주면 된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ chmod 666 data.txt 
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;파일 권한에 대한 자세한 내용은 리눅스 명령어에 대해 찾아보길 바란다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 텍스트 파일 이용 | 인터넷 상에 파일도 읽을 수 있다(?)</title>
      <link>https://www.devkuma.com/docs/php/%EC%9D%B8%ED%84%B0%EB%84%B7-%EC%83%81%EC%97%90-%ED%8C%8C%EC%9D%BC%EB%8F%84-%EC%9D%BD%EC%9D%84-%EC%88%98-%EC%9E%88%EB%8B%A4-/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EC%9D%B8%ED%84%B0%EB%84%B7-%EC%83%81%EC%97%90-%ED%8C%8C%EC%9D%BC%EB%8F%84-%EC%9D%BD%EC%9D%84-%EC%88%98-%EC%9E%88%EB%8B%A4-/</guid>
      <description>
        
        
        &lt;p&gt;지금까지 PHP 파일 액세스 함수에 대해 간략히 정리해 왔지만, 마지막에 중대한 비밀(?)을 알려 주겠다.&lt;/p&gt;
&lt;p&gt;사실 PHP 파일 관련 함수는 로컬 볼륨에 저장되어 있는 파일뿐 아니라, 인터넷에 있는 파일도 동일하게 액세스할 수 있다!&lt;/p&gt;
&lt;p&gt;단, 파일의 쓰기 변경은 할 수 없다. 기본적으로 데이터를 읽을 수 있을 뿐이다. 그래도 여전히 &amp;ldquo;Web 사이트의 데이터를 자유롭게 읽을 수 있다&amp;quot;라면, 이것은 대단하다고 생각되지 않는가?&lt;/p&gt;
&lt;p&gt;사용법은 간단하다. 각각의 함수로 파일을 지정할 인수에 파일 이름이나 파일 경로 대신에 URL을 적으면 된다. 예를 들어,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$lines = file(&amp;#34;http://www.google.com/&amp;#34;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이런 식으로 하면 Google의 톱 페이지의 HTML 코드가 모두를 가져올 수 있다.&lt;/p&gt;
&lt;p&gt;아래에 실제 간단한 사용 예를 보도록 하자.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
    if ($_POST != null){
        $url = $_POST[&amp;#39;text1&amp;#39;];
        $lines = file($url);
        $result = implode($lines);
    }
?&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
    &amp;lt;head&amp;gt; 
        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
        &amp;lt;form method=&amp;#34;post&amp;#34; action=&amp;#34;./index.php&amp;#34;&amp;gt;
            &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;text1&amp;#34; size=&amp;#34;40&amp;#34;
                value=&amp;#34;&amp;lt;?php echo htmlspecialchars($url); ?&amp;gt;&amp;#34;&amp;gt;&amp;lt;br&amp;gt;
            &amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt;
        &amp;lt;/form&amp;gt;
        &amp;lt;hr&amp;gt;
        &amp;lt;?php echo htmlspecialchars($result); ?&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;입력 필드에 URL을 써서 송신하면, 그 페이지의 내용을 다운로드하고 아래로 쓰기를 한다. 실제로 해보자. 간단히 다른 사이트의 데이터를 꺼낼 올 수 있다는 것을 알 수 있다.&lt;/p&gt;
&lt;p&gt;어쨌든 네트워크에 있는 파일을 로드할 때에는 로드에 실패하거나 매우 시간이 걸리거나 하는 것도 많기 때문에, 그러한 경우의 대응도 생각해 두지 않으면 안된다. 아무튼 이렇게 쉽게 Web 데이터를 꺼낼 얻어 올 수 있다면 여러가지에 응용할 수 있을 것이 있지 않을까 싶다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 텍스트 및 날짜 조작</title>
      <link>https://www.devkuma.com/docs/php/%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%B0%8F-%EB%82%A0%EC%A7%9C-%EC%A1%B0%EC%9E%91/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%ED%85%8D%EC%8A%A4%ED%8A%B8-%EB%B0%8F-%EB%82%A0%EC%A7%9C-%EC%A1%B0%EC%9E%91/</guid>
      <description>
        
        
        &lt;p&gt;PHP는 다양한 값을 조작하기 위한 함수가 준비되어 있다. 그 중에 가장 많이 사용되는 &amp;lsquo;텍스트&amp;rsquo;와 &amp;lsquo;시간&amp;rsquo;에 관한 내용 정리하여 설명하겠다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 텍스트 및 날짜 조작 | 텍스트를 다루는 주요 함수</title>
      <link>https://www.devkuma.com/docs/php/%ED%85%8D%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EB%8B%A4%EB%A3%A8%EB%8A%94-%EC%A3%BC%EC%9A%94-%ED%95%A8%EC%88%98/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%ED%85%8D%EC%8A%A4%ED%8A%B8%EB%A5%BC-%EB%8B%A4%EB%A3%A8%EB%8A%94-%EC%A3%BC%EC%9A%94-%ED%95%A8%EC%88%98/</guid>
      <description>
        
        
        &lt;p&gt;프로그램을 만들 때, 의외로 중요한 것이 &amp;ldquo;다양한 값을 조작하는 방법&amp;quot;이다. 이것이 알 수 없으면 이런 저런 고민이 많아 진다. 우선은 텍스트를 조작하는 주요 기능에서 소개해 보겠다.&lt;/p&gt;
&lt;h2 id=&#34;텍스트의-길이를-얻는다&#34;&gt;텍스트의 길이를 얻는다.&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = strlen(텍스트);
$변수 = mb_strlen(텍스트);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;텍스트가 몇 문자인지 알아낸다. strlen은 일반적인 영어 텍스트(영숫자) 문자를 mb_strlen는 한국어 등 1바이트 문자가 아닌 것에 대해 문자를 확인하여 정수 값으로 반환한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$n = strlen(&amp;#39;hello&amp;#39;); // $n는 5가 된다.
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;텍스트의-위치를-조회한다&#34;&gt;텍스트의 위치를 조회한다.&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = strpos(대상 텍스트, 검색 문자, 시작 위치);
$변수 = mb_strpos(대상 텍스트, 검색 문자, 시작 위치, 인코딩);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;어느 텍스트 안에 조회하려는 텍스트가 있는 위치를 알아내는 것이다. 이것도 1바이트 문자용 strpos와 그외에 다른 문자용의 mb_strpos의 2종류가 준비되어 있다.&lt;/p&gt;
&lt;p&gt;첫번째 인수는 조회하려는 대상의 텍스트를, 두번째는 조회할 텍스트를 각각 지정한다. 이 2개는 필수이다. 세번째는 몇번째 문자부터 조회할지 숫자로 지정한다. 네번째는 텍스트 인코딩을 지정한다.&lt;/p&gt;
&lt;p&gt;아무튼, 영숫자 조회(strpos)는 처음에 2개만 호출하면 보통은 될 것이다. 하지만, 한국어 등을 조회할 mb_strpos의 경우 4개 모두를 지정하는 것이 기본 생각해 두자. 특히, 4번째 인코딩을 제대로 지정하지 않으면 잘 찾아지지 않을 수도 있다.&lt;/p&gt;
&lt;p&gt;반환값은 몇번째 문자인지 (최초는 0이 된다)을 나타내는 정수이다. 발견되지 않는 경우는 false가 반환된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$n&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;strpos&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;e&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// $n는 1이 된다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;텍스트의-일부를-추출한다&#34;&gt;텍스트의 일부를 추출한다.&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = substr(텍스트, 시작 위치, 길이);
$변수 = mb_substr(텍스트, 시작 위치, 길이, 인코딩);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;텍스트 중에서 지정한 부분의 텍스트를 반환한다. 예를 들어 &amp;ldquo;Hello PHP World&amp;quot;라는 텍스트 중에서 &amp;ldquo;PHP&amp;quot;만 추출하려고 할 경우에 사용한다.&lt;/p&gt;
&lt;p&gt;첫 번째 인수는 추출하려는 원래 텍스트를 지정하고 두번째, 세 번째 추출하려는 위치와 문자(길이)를 각각 지정한다. 위치는 가장 최초가 0부터 시작된다. 또한 한국어 등의 경우 mb_substr는 반드시 인코딩을 지정하도록 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$s&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;substr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// $s는 &amp;#34;ll&amp;#34;가 된다.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;텍스트를-치환한다&#34;&gt;텍스트를 치환한다.&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = str_replace(검색 문자, 대체 문자, 텍스트);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;텍스트 치환은 str_replace라는 편리한 함수가 준비되어 있다. 검색 문자와 치환하려는 문자, 그리고 대상이 되는 텍스트를 지정해주는 것만으로 대체된 텍스트가 반환된다. 이것은 한국어용의 함수라는 것은 준비되어 있지 않는다. 모든 이 하나에서 실행한다.&lt;/p&gt;
&lt;p&gt;이 함수는 세번째의 텍스트에 포함된 검색 문자를 모두 치환 문자로 대체한 것을 돌려준다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$s&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;str_replace&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;java&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;PHP&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Hello java!&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// $s는 &amp;#34;Hello PHP!&amp;#34;가 된다
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 텍스트 및 날짜 조작 | 정규 표현식</title>
      <link>https://www.devkuma.com/docs/php/%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EC%A0%95%EA%B7%9C-%ED%91%9C%ED%98%84%EC%8B%9D/</guid>
      <description>
        
        
        &lt;p&gt;텍스트를 다룰 때, 피할 수 없는 것이 &amp;ldquo;정규식&amp;quot;라는 것이 있다. 이것은 &amp;ldquo;패턴&amp;quot;이라는 텍스트의 정렬의 법칙 같은 것을 준비하고 그에 따라 텍스트를 찾아 내거나 대체 할 수 있는 기능이다.&lt;/p&gt;
&lt;p&gt;일반 검색 치환은 정해진 텍스트를 찾을 수 밖에 없다. 예를 들어 &amp;ldquo;PHP&amp;quot;라는 단어를 찾아라는 방식이다. 이에 비해 정규 표현식은 &amp;ldquo;어떤 법칙에 늘어선 텍스트인가&amp;quot;을 확인할 수 있다. 예를 들어 &amp;ldquo;3자리 숫자를 검색&amp;quot;이라든지, &amp;ldquo;a로 시작 s로 끝나는 텍스트 찾기&amp;rdquo; 같은 것을 할 수 있다.&lt;/p&gt;
&lt;p&gt;정규식의 패턴은 &amp;ldquo;메타 문자(meta character)&amp;ldquo;라는 특수 기호를 사용하여 조합한다. 여기에는 다양한 기호와 규칙이 준비되어 있다. 아래의 목록에 목록을 올려 두었습니다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;※ 기본 메타 문자&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;기호&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\&lt;/td&gt;
&lt;td&gt;일반적인 회피 문자&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;^&lt;/td&gt;
&lt;td&gt;검색대상 (멀티 라인 모드에서는 행)의 처음)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;$&lt;/td&gt;
&lt;td&gt;검색대상 (멀티 라인 모드에서는 행)의 끝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;.&lt;/td&gt;
&lt;td&gt;개행(줄바꿈)을 제외한 모든 문자와 일치&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;[]&lt;/td&gt;
&lt;td&gt;문자 클래스&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;|&lt;/td&gt;
&lt;td&gt;선택지의 시작&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;()&lt;/td&gt;
&lt;td&gt;서브 패턴&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;?&lt;/td&gt;
&lt;td&gt;(의미 확장, 0 또는 1 회 반복, 반복을 최소화&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;*&lt;/td&gt;
&lt;td&gt;0 이상의 반복&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;+&lt;/td&gt;
&lt;td&gt;1 이상의 반복&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;{}&lt;/td&gt;
&lt;td&gt;최소 / 최대 반복 지정&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;※ 문자 클래스에서 사용할 수있는 특수 문자&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;메타 문자&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\&lt;/td&gt;
&lt;td&gt;이스케이프 문자&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\b&lt;/td&gt;
&lt;td&gt;백 스페이스&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\f&lt;/td&gt;
&lt;td&gt;페이지 넘김 (form feed)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\n&lt;/td&gt;
&lt;td&gt;줄 바꿈 (new line)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\r&lt;/td&gt;
&lt;td&gt;줄 바꿈 (carriage return)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\t&lt;/td&gt;
&lt;td&gt;탭(tab) 문자&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\d&lt;/td&gt;
&lt;td&gt;숫자 하나 ([0-9]와 같다)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\s&lt;/td&gt;
&lt;td&gt;공백 처리 문자 (공백, 줄 바꿈, 줄 바꿈, 탭 문자)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\w&lt;/td&gt;
&lt;td&gt;숫자 + 알파벳 + 밑줄, 대소문자와 밑줄을 포함하는 모든 영숫자([a-zA-Z0-9_]와 같다&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;^&lt;/td&gt;
&lt;td&gt;부정&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;-&lt;/td&gt;
&lt;td&gt;범위&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;이 중 ^ - 이외는 문자 클래스 밖에서도 사용 가능하다.
 
&lt;strong&gt;※ 문자 클래스 외부에서 사용하는 특수 문자&lt;/strong&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;메타 문자&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\a&lt;/td&gt;
&lt;td&gt;경보&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\c&lt;/td&gt;
&lt;td&gt;컨트롤 기호 (이 후에 문자를 지정)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\e&lt;/td&gt;
&lt;td&gt;이스케이프&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\D&lt;/td&gt;
&lt;td&gt;숫자를 제외한 문자 하나 ([^0-9]와 같다)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\S&lt;/td&gt;
&lt;td&gt;공백 문자가 아닌 모든 문자 ([^\f\n\r\t\v]와 같다)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\W&lt;/td&gt;
&lt;td&gt;&amp;lsquo;숫자 + 알파벳 + 밑줄」이외 모든&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\b&lt;/td&gt;
&lt;td&gt;단어의 구분&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\B&lt;/td&gt;
&lt;td&gt;단어 경계 이외&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\A&lt;/td&gt;
&lt;td&gt;텍스트의 시작&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\Z&lt;/td&gt;
&lt;td&gt;텍스트의 종료 또는 개행&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\z&lt;/td&gt;
&lt;td&gt;텍스트의 끝&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\ddd&lt;/td&gt;
&lt;td&gt;8 진수로 ddd 문자&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;\xhh&lt;/td&gt;
&lt;td&gt;16 진수 hh 문자&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt; &lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;※ 패턴 변경자&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;메타 문자&lt;/td&gt;
&lt;td&gt;설명&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;:&amp;ndash;:&lt;/td&gt;
&lt;td&gt;&amp;ndash;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;i&lt;/td&gt;
&lt;td&gt;패턴 중의 문자는 대문자와 소문자를 매치&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;m&lt;/td&gt;
&lt;td&gt;검색 대상 문자열을 단일 행으로 구성된 처리&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;s&lt;/td&gt;
&lt;td&gt;.를 줄바꿈을 포함한 모든 문자와 매치&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;x&lt;/td&gt;
&lt;td&gt;공백 문자을 무시&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;e&lt;/td&gt;
&lt;td&gt;preg_replace()는 PHP 코드로 평가&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;A&lt;/td&gt;
&lt;td&gt;선두에서만 매치&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;D&lt;/td&gt;
&lt;td&gt;$를 마지막에만 매치&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;S&lt;/td&gt;
&lt;td&gt;보다 시간이 걸렸다 분석을 실시&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;U&lt;/td&gt;
&lt;td&gt;매치 최단, 최장의 방식을 반대로 한다&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;X&lt;/td&gt;
&lt;td&gt;Perl비 호환 기능의 이용&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;u&lt;/td&gt;
&lt;td&gt;패턴을 UTF-8로 한다&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/li&gt;
&lt;li&gt;이 문자들은 패턴의 성격을 규정하는 것으로, 패턴에 포함되지 않는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이를 &amp;ldquo;모두 기억해야 한다&amp;quot;라고는 말하지 않았다. 실제로 전부 기억 사용하고 있는 사람은 그리 많지 않을 것이다. 자주 사용할 것 같은 기호를 몇 가지 기억하는 것만으로도 정규식의 대단함은 실감할 수있을 것이다.&lt;/p&gt;
&lt;p&gt;이 정규 표현식을 사용하기 위해 함수에는 몇 가지가 준비되어 있다. 우선은 &amp;ldquo;패턴 매치&amp;quot;와 &amp;ldquo;대체&amp;quot;에 대한 의미를 기억해두면 좋을 것이다.&lt;/p&gt;
&lt;h2 id=&#34;패턴-매치용-함수&#34;&gt;패턴 매치용 함수&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = preg_match(패턴, 텍스트, $변수);
$변수 = preg_match_all(패턴, 텍스트, $변수);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;첫번째 인수의 패턴을 사용하여, 두번째 텍스트를 조사해, 패턴과 일치하는 (패턴에 부합하는 텍스트가 발견) 건수를 반환한다. preg_match는 처음 패턴 매치만, preg_match_all 모든 패턴 일치를 확인한다.&lt;/p&gt;
&lt;p&gt;매우 흥미로운 것은 세번째 인수 준비하는 변수이다. 이것은 어떤 값을 지정하는 것은 아니다. 패턴 일치 한 결과를 이 변수에 얻을 것이다. 이는 다차원 배열의 형태로 되어 있고, 각각의 매치한 텍스트 정보를 모은다.&lt;/p&gt;
&lt;p&gt;또한 네번째 인수로 패턴 매치에 대한 섬세한 플래그를 지정할 수도 있다. 이것은 본격적으로 정규 표현식을 사용하게 되었을 알아보도록 한다.&lt;/p&gt;
&lt;h2 id=&#34;치환용-함수&#34;&gt;치환용 함수&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = preg_replace(패턴, 대체 문자, 텍스트);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;정규식을 사용하여 치환할 함수이다. 첫번째 인수는 패턴, 두번째 인수에는 대체 문자, 그리고 세번째로 조사의 대상이 되는 텍스트를 각각 전달한다. 반환값은 대체된 텍스트가 전달된다.&lt;/p&gt;
&lt;p&gt;우선,이 3개를 알면 여러가지를 할 수 있게 될 것이다. 패턴 매치는 텍스트 데이터 중에서 특정 요소를 선택하고 (예를 들어, HTML 소스 코드에서 &amp;lt;a&amp;gt; 태그 링크 및 이메일 주소만 찾아 다닐수 있다), 치환할 수 있다면 절대로 정상적인 치환으로는 할 수 없는 복잡한 치환 처리를 할 수 있게 된다.&lt;/p&gt;
&lt;h2 id=&#34;정규식-사용-예제&#34;&gt;정규식 사용 예제&lt;/h2&gt;
&lt;p&gt;그럼 정규식 사용 예제를 작성해 보고 실행을 시켜 보자.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
    if ($_POST != null){
        $url = $_POST[&amp;#39;text1&amp;#39;];
        $lines = file($url);
        $data = implode($lines);
        // 패턴 매치
        $pattern = &amp;#34;/([\w-]+)@([\w\.-]+)\b/&amp;#34;;
        $flg = preg_match_all($pattern, $data, $matchs);
        if ($flg != false){
            $result = &amp;#34;&amp;#34;;
            foreach($matchs[0] as $key =&amp;gt; $val){
                $result .= $val . &amp;#34;\n&amp;#34;;
            }
        } else {
            $result = &amp;#34;없다.&amp;#34;;
        }
    }
?&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
    &amp;lt;head&amp;gt; 
        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
        &amp;lt;form method=&amp;#34;post&amp;#34; action=&amp;#34;./index.php&amp;#34;&amp;gt;
            &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;text1&amp;#34; size=&amp;#34;40&amp;#34; value=&amp;#34;&amp;lt;?php echo htmlspecialchars($url); ?&amp;gt;&amp;#34;&amp;gt;&amp;lt;br&amp;gt;
            &amp;lt;textarea name=&amp;#34;area1&amp;#34; cols=&amp;#34;30&amp;#34; rows=&amp;#34;5&amp;#34;&amp;gt;&amp;lt;?php echo $result; ?&amp;gt;&amp;lt;/textarea&amp;gt;&amp;lt;br&amp;gt;
            &amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt;
        &amp;lt;/form&amp;gt;
        &amp;lt;hr&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여기에는 URL을 입력하면 해당 페이지의 텍스트를 얻어서 거기에서 이메일 주소만 찾아 표시시켜 보자.&lt;/p&gt;
&lt;p&gt;위에 입력 필드에 &lt;code&gt;http://~&lt;/code&gt;와 같은 식으로 조사하고 싶은 페이지의 URL을 입력하여 전송을 해보자. 그 페이지에 적혀있는 이메일 주소를 찾아서 아래의 텍스트 영역에 표시될 것이다.&lt;/p&gt;
&lt;p&gt;여기에서는 먼저 file 함수를 사용하여 URL의 텍스트를 읽어 들여, 그것을 implode으로 하나의 텍스트로 정리한다. 그리고, 패턴을 사용하여 패턴 매칭을 실행하고 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$pattern&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/([\w-]+)@([\w\.-]+)\b/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이것이 준비한 패턴이다. 대체로, 여기에서 &amp;ldquo;헉, 정규식 어렵다. 무리야&amp;quot;라고 포기해 버리는 사람들이 많지만, 솔직히 그럴 필요는 없다. 정규식 패턴으로 인터넷으로 검색해 보면 이메일 주소 라든지, URL 든가, 비교적 자주 사용되는 패턴을 공개주는 사람이 많다. 그러한 패턴을 복사하여 사용하면 우선 패턴을 만들 수없어도 정규 표현식을 사용할 수 있다. 그리고 조금씩 스스로 공부하고 가면 나중에 도움이 될 때가 있을 거다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$flg = preg_match_all($pattern, $ data, $ matchs);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여기가 패턴 매치를 실행하는 부분이다. 이 자체는 별로 어려운 것은 없다. 실행을 하면 이 &lt;code&gt;$matchs&lt;/code&gt;라는 변수에 패턴 일치한 결과가 담긴다.&lt;/p&gt;
&lt;p&gt;이 변수는 꽤 복잡한 구조로 되어 있다. 일치하는 텍스트를 얻으려면 인덱스가 0인 값을 꺼낸다. 여기에 연관 배열이 들어 있고, 그 값 부분에 찾아낸 텍스트(즉, 찾아낸 이메일 주소)가 저장되어 있다.&lt;/p&gt;
&lt;p&gt;정리하면, 패턴 매치는 &amp;ldquo;결과의 배열 인덱스가 0인 연관 배열에서 값을 꺼낸다&amp;quot;라는 작업에서 찾아낸 모든 텍스트를 얻을 수 있다. 이것만 염두에 두면, 패턴 매치를 어느정도는 사용할 있을 것이다.&lt;/p&gt;
&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;p&gt;이보다 더 자세한 내용을 알고 싶다면 아래 싸이트를 참고 바란다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://php.net/manual/kr/function.preg-match.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;preg_match&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://php.net/manual/kr/function.preg-match-all.php&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;preg_match_all&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 텍스트 및 날짜 조작 | 시간에 대한 주요 기능</title>
      <link>https://www.devkuma.com/docs/php/%EC%8B%9C%EA%B0%84%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EB%8A%A5/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EC%8B%9C%EA%B0%84%EC%97%90-%EB%8C%80%ED%95%9C-%EC%A3%BC%EC%9A%94-%EA%B8%B0%EB%8A%A5/</guid>
      <description>
        
        
        &lt;p&gt;이어서 일시 설명하겠다. 시간이라는 것은 컴퓨터의 내부와 일반 세계에서 확실히 취급 방법이 다르다. 컴퓨터에서 시간은 &amp;ldquo;어느 기준이 되는 날짜로부터 경과&amp;quot;에 의해 표현된다.&lt;/p&gt;
&lt;p&gt;PHP에서 일시는 &amp;ldquo;타임 스탬프(timestamp)&amp;ldquo;라는 값으로 표현된다. 이는 1970년 1월 1일 오전 0시 정각부터 경과된 초 단위로 표시한 것이다. 이 정수의 값은 시간을 나타내는데 가장 기본이 된다.&lt;/p&gt;
&lt;p&gt;그러나 그런 수치는 사람이 바로 알 수 없기 때문에, 그것을 바탕으로 하여 &amp;ldquo;년, 월, 일, 시, 분, 초&amp;quot;의 값으로 일시를 얻을 수 있도록 하는 함수가 준비되어 있다.&lt;/p&gt;
&lt;h2 id=&#34;현재의-타임-스탬프를-얻기&#34;&gt;현재의 타임 스탬프를 얻기&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = time();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;우선 기본으로 타임 스탬프를 얻는 함수이다. 이것으로 지금 현재의 타임 스탬프 값을 얻을 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;일시의-요소를-배열로-얻기&#34;&gt;일시의 요소를 배열로 얻기&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = getdate(타임 스탬프);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 함수는 일시 사용의 기본이 된다. 이것은 인수에 타임 스탬프 값을 넣으면 &amp;ldquo;년,월,일,시,분 초&amp;rdquo; 각각의 값을 연관 배열로 반환한다. 인수를 생략하면 현재 시간 값을 돌려준다. 반환되는 연관 배열에 포함되는 주요 요소는 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;year : 년&lt;/li&gt;
&lt;li&gt;mon : 월&lt;/li&gt;
&lt;li&gt;mday : 일&lt;/li&gt;
&lt;li&gt;hours : 시&lt;/li&gt;
&lt;li&gt;minutes : 분&lt;/li&gt;
&lt;li&gt;seconds : 초&lt;/li&gt;
&lt;li&gt;wday :  요일 (0 ~ 6의 정수)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;일시-값에서-타임-스탬프를-얻기&#34;&gt;일시 값에서 타임 스탬프를 얻기&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = mktime(시, 분, 초, 월, 일, 년);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이번에는 반대이다. &amp;ldquo;년, 월, 일, 시, 분, 초&amp;rdquo; 숫자를 바탕으로, 그 시간의 타임 스탬프 값을 검사하는 함수이다. 일단 인수가 6개나 있지만, 실은 필수적인 것은 첫번째 뿐이다. 이후에는 생략하면 현재 날짜와 시간 값이 자동으로 적용시킬 수 있다.&lt;/p&gt;
&lt;p&gt;그럼 간단한 사용 예제를 보도록 하자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$_POST&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$num&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$_POST&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;text1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$t&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$num&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$d&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;getdate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$t&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$result&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;오늘 부터 &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$num&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;일 후는、&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;$d&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;year&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;년&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$d&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;mon&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;월&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;$d&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;mday&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;일 입니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;head&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;p&amp;gt;&amp;lt;?php echo $result; ?&amp;gt;&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;hr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;form method=&amp;#34;post&amp;#34; action=&amp;#34;./index.php&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;text1&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;hr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위에 예제는 입력 필드에 날짜를 적어 제출하면 오늘부터 그 기간 이후의 날짜를 계산하고 표시를 한다.&lt;/p&gt;
&lt;p&gt;우선 time에서 현재의 타임 스탬프를 취득하여, 그에 지정된 날짜의 초(60 × 60 × 24 × 일수)을 더해 지정된 기간 후에 타임 스탬프를 계산하고 마지막으로 getdate에서 타임 스탬프 년월일을 얻으면 끝이다. 중간에 타임 스탬프는 단순한 정수로 변환하여 계산하면 의외로 간단하다.&lt;/p&gt;
&lt;h2 id=&#34;날짜-계산을-수행&#34;&gt;날짜 계산을 수행&lt;/h2&gt;
&lt;p&gt;날짜를 사용한 계산을 수행해 보자. 여기에서는 날짜 값을 입력 받아, 오늘부터 그 날까지 며칠인지 알아 보겠다.&lt;/p&gt;
&lt;p&gt;우선 예제 코드부터 보도록 하겠다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    if ($_POST != null){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $str = $_POST[&amp;#39;text1&amp;#39;];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $d = explode(&amp;#34;/&amp;#34;, $str);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $t1 = time();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $t2 = mktime(0, 0, 0, $d[1], $d[2], $d[0]);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $n = ceil(($t2 - $t1) / (60 * 60 * 24));
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $result = $str . &amp;#34;은、오늘부터 {$n} 일 후입니다.&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#c4a000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;sample page&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;Hello PHP!&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php echo $result; ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;./index.php&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;입력 필드에 &amp;ldquo;2020/1/13&amp;quot;과 같이 년월일을 슬래시(/)로 구분하여 작성하여 전송하면, 오늘부터 그 날까지의 일수를 계산하여 표시한다.&lt;/p&gt;
&lt;p&gt;이전에는 오늘부터 며칠 후 날짜를 계산했지만, 여기에서는 계산의 기본은 &amp;ldquo;타임 스탬프 변경한다&amp;quot;이다. 두 날짜를 각각 타임 스탬프를 변경하여, 그 차이를 계산하여 1일의 초로 나누면 일수 알 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$str&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;_POST&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;text1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$d&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;explode&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;str&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;먼저 전송된 텍스트를 explode으로 슬래쉬(/) 기호로 분해하여 날짜를 배열로 만든다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$t1&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$t2&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mktime&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;],&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;$&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;d&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이어서 현재 날짜와 준비한 배열 값의 날짜 및 시간 스탬프를 각각 준비한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$n&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ceil&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;((&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$t2&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$t1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;));&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2개의 타임 스탬프의 차이를 60 × 60 × 24로 나누면 일수가 나온다. 그러나 이번에는 시분초는 지정을 하지 않았기 때문에, 소수점 이하가 표시될 것이다. 그래서 소수점 이하를 잘라내기 위해, &amp;ldquo;ceil&amp;quot;라는 함수를 사용하고 있다. 이는 소수점 이하를 반올림한 값을 반환하는 함수이다.&lt;/p&gt;
&lt;p&gt;이와 같이, 일시 관계는 &amp;ldquo;년, 월, 일, 시, 분, 초&amp;rdquo; 값과 타임 스탬프를 교대로 교환할 수있는 방법만 알면 간단한 계산 등은 쉽게 수행할 수 있다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 페이지 전환, 쿠키, 세션</title>
      <link>https://www.devkuma.com/docs/php/%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%A0%84%ED%99%98-%EC%BF%A0%ED%82%A4-%EC%84%B8%EC%85%98/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%A0%84%ED%99%98-%EC%BF%A0%ED%82%A4-%EC%84%B8%EC%85%98/</guid>
      <description>
        
        
        &lt;p&gt;Web 응용 프로그램에서 사용되는 중요한 기술인 &amp;ldquo;페이지 전환&amp;rdquo;, &amp;ldquo;쿠키 사용&amp;rdquo;, &amp;ldquo;세션에서 계속 정보의 유지&amp;quot;라는 것에 대해서, 여기서 정리하고 설명하겠다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 페이지 전환, 쿠키, 세션 | HTTP 헤더 및 페이지 이동</title>
      <link>https://www.devkuma.com/docs/php/http-%ED%97%A4%EB%8D%94-%EB%B0%8F-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%9D%B4%EB%8F%99/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/http-%ED%97%A4%EB%8D%94-%EB%B0%8F-%ED%8E%98%EC%9D%B4%EC%A7%80-%EC%9D%B4%EB%8F%99/</guid>
      <description>
        
        
        &lt;p&gt;Web 응용 프로그램이라는 것은 일반적인 PC의 응용 프로그램 등과는 많이 다른 기술이 사용되고 있다. 그러한 &amp;lsquo;Web 특유의 기술&amp;rsquo;에 대해 PHP에서의 사용을 설명하고 가겠다. 우선 &amp;ldquo;페이지 이동&amp;quot;에 대해 설명하겠다.&lt;/p&gt;
&lt;p&gt;Web에서는 화면의 표시는 각각 다른 Web 페이지로 구성되어 있다. 그리고 필요에 따라 다른 페이지로 이동하면서 표시를 변경해 간다. 이것이 &amp;ldquo;페이지 이동&amp;quot;이다.&lt;/p&gt;
&lt;p&gt;중요한 것은 &amp;ldquo;페이지 이동되면 그 이전까지의 정보는 깨끗이 제거된다&amp;quot;라는 점이다 (물론, 정보를 유지하는 방법도 있다. 이는 나중에 설명하겠다). 먼저 폼(form)의 송신을 했었는데, 양식이 송신되면 대상 페이지가 처음부터 읽어서 변경되고 모든 새로 만들어 진다.&lt;/p&gt;
&lt;p&gt;따라서 Web 응용 프로그램에서 페이지 이동할 경우에는 이 &amp;ldquo;페이지 이동시 이전 정보는 단절된다&amp;quot;라는 것을 생각해 두어야 한다. 그래서 필요한 정보를 유지하는 방법 등을 고려하면서 Web 응용 프로그램을 설계해 나가야 된다.&lt;/p&gt;
&lt;p&gt;그럼 서두는 여기까지 하고,  페이지 이동에 대해 설명하겠다. 페이지 이동은 &amp;ldquo;header&amp;quot;라는 함수를 이용하여 수행한다. 이것은 다음과 같이 실행한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;header(헤더에 출력할 내용);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;왠지 잘 모르겠는가? 이 header 함수라는 것은 HTTP 프로토콜의 &amp;ldquo;헤더&amp;quot;에 텍스트를 출력하는 함수이다. 왜 그것이 페이지 이동과 관계 있을까? 그것은 헤더에 페이지 이동 정보를 제공함으로써, 그것을 받은 브라우저에서 리다이렉트(redirect)을 수행하기 때문이다.&lt;/p&gt;
&lt;p&gt;원래 Web 페이지는 &amp;ldquo;HTTP&amp;quot;라는 프로토콜을 사용하여 전송되고 있다는 것은 알고 있을 것이다. HTTP는 Web 서버와 클라이언트(Web 브라우저) 사이에서 어떤 절차로 교환할 것인지에 대한 결정된 규칙과 같은 것이다. 이 HTTP라는 약속 및 규칙에 따라 서버와 브라우저 사이에서 필요한 정보를 주고 받으면서 Web 페이지 액세스를 실시한다.&lt;/p&gt;
&lt;p&gt;서버에서 Web 페이지를 보내올 때, 먼저 서버에서 브라우저에 알려주고 싶은 다양한 정보를 헤더에 담고, 그 다음에 Web 페이지 본체에 해당하는 바디(body)를 이어서 붙여 보내도록 되어 있다. 즉, 헤더는 &amp;ldquo;페이지로 표시되지 않는 정보&amp;quot;이다. 이 헤더 부분에 필요한 정보를 내보내는 것이 header 함수이다.&lt;/p&gt;
&lt;p&gt;페이지 이동을 할 경우에는 헤더에 &amp;ldquo;Location:대상 주소&amp;quot;라고 텍스트를 써도 전달한다. 이 Location라는 헤더를 수신한 브라우저는 전달된 주소로 리다이렉트(페이지 이동)을 시킨다. 이 헤더를 제공함으로써 그것을 받은 브라우저는 지정된 페이지에 다시 액세스하여 페이지를 변경한다.&lt;/p&gt;
&lt;h2 id=&#34;header-함수로-페이지-이동&#34;&gt;header 함수로 페이지 이동&lt;/h2&gt;
&lt;p&gt;그럼 페이지 이동의 간단한 예제를 만들어 보도록 하겠다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;index.php의 내용&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$_POST&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$url&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$_POST&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;text1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;header&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Location:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$url&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;p&amp;gt;&amp;lt;?php echo $url; ?&amp;gt;&amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;hr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;form method=&amp;#34;post&amp;#34; action=&amp;#34;./index.php&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;text1&amp;#34; value=&amp;#34;./index2.php&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;이동&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;hr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;index2.php의 내용&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#c4a000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;sample page&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;Index2.php!&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;새로운 준비한 페이지입니다.&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기에 index.php와 index2.php라는 2개의 파일을 같은 위치에 생성한다. index.php에서 버튼을 누르면 index2.php로 이동하는 것을 볼수 있을 거다.&lt;/p&gt;
&lt;p&gt;실제로 해보면, &amp;ldquo;이것이 &amp;lt;a&amp;gt; 태그로 이동하는 것과 무엇이 다른가?&amp;ldquo;라고 생각할지도 모른다. 하지만 분명히 다르다! &amp;lt;a&amp;gt; 태그는 단지 지정한 페이지로 이동하면 되지만, 이것은 먼저 페이지에 쓰여져 있는 PHP 스크립트를 실행하고, 그 안에서 이동을 지정할 수 있다는 점이다. 즉, 서버에서 스크립트가 처리되는 단계에서 그것을 받은 클라이언트에 &amp;ldquo;이 페이지로 이동하라&amp;quot;고 지정할 수 있다. 따라서 필요한 작업 및 페이지 이동을 결합할 수 있다.&lt;/p&gt;
&lt;p&gt;이 header에 의한 페이지 이동에 주의해야 할 점은 &amp;ldquo;header를 실행하면, 이후 처리는 취소된다&amp;quot;는 것이다. 이는 header을 브라우저가 가져온 단계에서 해당 페이지로 이동해 버리기 때문에, 그 이후에 무엇이 적혀 있어도 의미가 없게 된다. Location을 header로 쓰기 전에 모든 처리를 해야 한다.&lt;/p&gt;
&lt;p&gt;또 하나의 주의 점은 header는 뭔가를 출력하기 전에 실행하지 않으면 안된다. 이는 자주 발생하는 문제이다. 헤더는 본문 전에 전송되기에 echo와 HTML 태그 등이 써서 무언가가 출력하려고 하면 자동으로 그 시점에서 헤더를 먼저 보내 버린다. 일단 헤더가 보내지면 다른 헤더는 재전송 할 수 없다.&lt;/p&gt;
&lt;p&gt;따라서 header 함수는 반드시 뭔가를 출력하기 전에 실행을 해야 한다. PHP는 HTML 태그안에 스크립트를 작성하기 때문에, &lt;?php ?&gt; 태그 이외에 어떤 무엇이라도 뭔가 쓰여지게 되면 그대로 바로 출력되도록 되어 있다. 그러기 때문에 예를 들어 &lt;?php ?&gt; 태그 전에 비록 줄바꿈일지라도 있다면, 이미 header 함수는 사용할 없게 된다 (그 전에 개행 코드가 전송되어 있으므로 이미 헤더가 보내지는 거다). 이 점은 잘 이해하도록 하자.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 페이지 전환, 쿠키, 세션 | 쿠키 사용의 기본</title>
      <link>https://www.devkuma.com/docs/php/%EC%BF%A0%ED%82%A4-%EC%82%AC%EC%9A%A9%EC%9D%98-%EA%B8%B0%EB%B3%B8/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EC%BF%A0%ED%82%A4-%EC%82%AC%EC%9A%A9%EC%9D%98-%EA%B8%B0%EB%B3%B8/</guid>
      <description>
        
        
        &lt;p&gt;Web 응용 프로그램은 지속적으로 어떤 정보를 보존해야 하는 경우가 있다. 예를 들어, 로그인 정보를 계속 유지하지 않으면 페이지 어떤 누구인지 알 수 없게 되어 버린다. 그래서 사용자의 정보를 유지하도록 하는 것이 Web 응용 프로그램을 작성하는데 매우 중요하다.&lt;/p&gt;
&lt;p&gt;그러기 위해 몇가지가 방법은 있는데, &amp;ldquo;Web 브라우저 측에 정보를 저장&amp;quot;하는 방법으로 이용되는 것이 &amp;ldquo;쿠키&amp;quot;이다. 쿠키란, 브라우저에 저장할 수 있는 매우 작은 데이터이다. 쿠키는 Web 사이트마다 세세한 정보를 브라우저에 저장할 수 있다. 여기에 데이터를 보관해두면 필요에 따라 데이터를 꺼내 사용할 수 있는 것이다.&lt;/p&gt;
&lt;p&gt;이 쿠키는 그렇게 큰 데이터는 저장할 수 없다. 주의할 점은 &amp;ldquo;저장할 수 있는 쿠키의 수와 최대 크기는 브라우저마다 다르다&amp;quot;라는 점이다. 대체로 최저 라인으로 &amp;ldquo;1개의 사이트에 대하여 최대 20 개, 4096 바이트까지&amp;quot;라는 조건은 현재 어떤 브라우저에서도 분명한 것이므로, 이것 이하의 분량이라면 문제 없을 것이다. 쿠키에는 큰 데이터를 저장하는 것은 권장되지 않는다. 브라우저에 저장이 되지 않는 경우가 있다는 것을 잊지 말도록 하자.&lt;/p&gt;
&lt;p&gt;이 쿠키를 이용하는 경우, &amp;ldquo;읽기&amp;rdquo; 및 &amp;ldquo;쓰기&amp;quot;로 접근(approach)이 다르므로 주의하자. 우선 쿠키 쓰기(저장)는 이 &amp;ldquo;setcookie&amp;quot;라는 함수를 이용한다. 이는&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;setcookie (이름, 값, 폐기 일자);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이런 식으로 지정한다. 첫번째 인자인 이름은 저장하는 쿠키의 이름이다. 이는 적당히 아무거나 붙일 수 있다. 그리고 두번째 인자는 실제 저장되는 값이다. 세 번째 인자는 &amp;ldquo;그 쿠키를 언제 파기한건지&amp;quot;에 대해 지정한다. 이는 파괴하는 시간을 나타내는 타임 스탬프 (기억 하는가? 1970년 1월 1일부터 계산한 경과 시간 (초)의 값이었다)을 지정한다.&lt;/p&gt;
&lt;p&gt;이 파기 일시의 지정은 생략할 수 있다. 생략하거나 0을 지정하면 그 쿠키는 브라우저 종료시 자동으로 삭제된다.&lt;/p&gt;
&lt;p&gt;이어서 쿠키 로드이다. 이것은 &lt;code&gt;$_COOKIE&lt;/code&gt;라는 PHP의 시스템이 제공하는 연관 배열로 부터 읽어 올 수 있다. 이는&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ 변수 = $ _COOKIE[쿠키 이름];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이런식으로 이름을 지정하고 쿠키를 꺼낼 수 있다. 주의할 것은 &lt;code&gt;$_COOKIE&lt;/code&gt; 값을 변경해도 쿠키를 변경할 수 없다 &amp;lsquo;는 점이다. 즉, 값을 읽기 오는 것만 가능하다. 이전에 &lt;code&gt;$_POST&lt;/code&gt; 등과 동일하다.&lt;/p&gt;
&lt;h2 id=&#34;쿠키를-이용해-보자&#34;&gt;쿠키를 이용해 보자&lt;/h2&gt;
&lt;p&gt;그럼 쿠키를 이용한 예제를 보도록 하겠다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$_POST&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$str&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$_POST&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;text1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;setcookie&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;mycookie&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;htmlspecialchars&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$str&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;time&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;60&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;header&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Location: ./index.php&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;head&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/head&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;h1&amp;gt;Hello PHP!&amp;lt;/h1&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                $cookie = $_COOKIE[&amp;#39;mycookie&amp;#39;];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;                echo &amp;#34;쿠키 정보 : {$cookie}&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            ?&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;/p&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;hr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;form method=&amp;#34;post&amp;#34; action=&amp;#34;./index.php&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;text1&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;            &amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;전송&amp;#34;&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;/form&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;        &amp;lt;hr&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;    &amp;lt;/body&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;lt;/html&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 예제는 입력 필드에 쓴 텍스트를 쿠키에 저장하는 예이다. 아무거나 써서 보내 보자. 쿠키 정보에 저장된 쿠키의 내용이 표시된다.&lt;/p&gt;
&lt;p&gt;여기에서는 쿠키의 저장 및 로드를 각각 다른 &lt;?php ?&gt; 태그에 작성되어 있다. 다음 부분이 쿠키 조작을 하고 있는 곳이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;setcookie(&amp;#34;mycookie&amp;#34;,htmlspecialchars($str),time() + 60 * 10);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;세번째 인수는 time 함수로 현재의 타임 스탬프를 얻어와서, 거기 10분의 초를 더하고 있다. 즉, &amp;ldquo;10분 후에 파기&amp;quot;하는 설정하였다. 그리고 쿠키 로드는&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$cookie = $_COOKIE[&amp;#39;mycookie&amp;#39;];
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이런식으로 하고 있다. 이것으로 쿠키 값이 로드된다. 만약 그 쿠키가 이미 삭제된 경우에는 값은 null이 된다.&lt;/p&gt;
&lt;p&gt;그런데, 쿠키를 이용하는 경우에는 한 가지 주의해야 할 점이 있다. 그것은 &amp;ldquo;setcookie한 단계에서는 쿠키는 아직 저장되지 않는다&amp;quot;라는 점이다.&lt;/p&gt;
&lt;p&gt;쿠키는 HTTP 헤더를 사용하여 주고 받는다. setcookie은 사실 헤더에 쿠키가 저장 추가된다. 그래서 이도 header 함수와 마찬가지로 아직 헤더가 출력되지 않을 때 호출해 주지 않으면 안된다. 헤더가 전송된 후에는 setcookie을 실행해도 쿠키에 저장할 수 없다.&lt;/p&gt;
&lt;p&gt;setcookie에서 헤더에 쿠키 정보가 추가되면 그것이 브라우저로 전송되고 브라우저 측에서 읽었을 때 쿠키가 생성 저장된다. 그리고 이후에 해당 사이트의 페이지에 액세스하면 그 때 브라우저의 쿠키 정보를 Web 서버에 보내져 &lt;code&gt;$_COOKIE&lt;/code&gt;에 저장된 값을 얻을 수 있게 되는 것이다.&lt;/p&gt;
&lt;p&gt;즉, secookie을 수행할 때 쿠키가 아직 존재하지 않고, 다음에 방문했을 때부터 얻을 수 있다. 쿠키의 값을 변경하는 경우에도 마찬가지로 이후에 방문했을 때 변경이 적용된다.&lt;/p&gt;
&lt;p&gt;위에 예제 코드를 보면 setcookie한 후에 header 함수를 사용하여 자신에게 페이지 이동하고 있다는 것을 알 수 있을 것이다. 이렇게 하면 쿠키를 저장한 후에 페이지를 다시 방문하여 쿠키를 즉시 사용할 수 있도록하고 있다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 페이지 전환, 쿠키, 세션 | 세션이란?</title>
      <link>https://www.devkuma.com/docs/php/%EC%84%B8%EC%85%98%EC%9D%B4%EB%9E%80/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EC%84%B8%EC%85%98%EC%9D%B4%EB%9E%80/</guid>
      <description>
        
        
        &lt;p&gt;쿠키는 사용자 고유의 정보를 유지하는데 도움이 되지만, &amp;ldquo;아주 작은 텍스트 밖에 저장할 수 없다&amp;quot;는 단점이 있다. 더 많은 데이터를 저장하기 위해서는 쿠키 부적합하다. 이러한 경우에 사용되는 것이 &amp;ldquo;세션&amp;quot;이라는 기능이다.&lt;/p&gt;
&lt;p&gt;세션은 서버와 클라이언트(Web 브라우저)사이에 연결을 지속적으로 유지할 수 있도록 처리하는 기술이다. 지금까지 설명한 바와 같이, Web이라는 매체는 항상 &amp;ldquo;1개의 페이지마다 독립된 것&amp;quot;이었다. 서버와 브라우저는 페이지에 액세스를 할 때마다 통신할뿐 상대가 누군가 Web 사이트의 어떤 페이지에서 어떤 페이지로 이동하고 있는지에 대한 지속적인 정보는 얻을 수 없는 구조로 되어있다.&lt;/p&gt;
&lt;p&gt;세션은 액세스한 클라이언트에 고유한 ID(이를 세션 ID라고 한다)를 발급하고 이를 쿠키에 저장하거나 URL에 붙이거나 하여 서버와 통신할 때 항상 이 ID가 송수신되는 있도록 한다. 그리고 이 ID에 의해, 현재 액세스를 하고 있는 사용자를 식별한다.&lt;/p&gt;
&lt;p&gt;이 세션을 이용하여 사용자 고유의 정보를 저장할 수 있게 되었다. 서버는 서버 안에서 특정 세션 ID 정보를 보관해 두었다가 클라이언트가 액세스되면 해당 세션 ID가 저장되어 있는 정보를 꺼내 사용한다.&lt;/p&gt;
&lt;p&gt;PHP에는 세션 사용은 매우 간단다. 세션을 시작하기 위해 먼저&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;session_start();
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 함수를 수행한다. 이것으로 세션은 사용할 수 있게 되었다. 주의해야 할 것은, 이 session_start 함수도 뭔가 출력되기 전에 실행되어야 한다는 점이다.&lt;/p&gt;
&lt;p&gt;세션은 지금 설명한 것처럼 쿠키에 세션 ID를 저장하여 동작하기 때문에, 헤더에 필요한 정보를 추가하고 이동한다. 따라서 헤더가 전송된 후에 session_start를 호출해도 세션은 사용할 수 없다.&lt;/p&gt;
&lt;p&gt;세션에 저장하는 정보는 &lt;code&gt;$_SESSION&lt;/code&gt;라는 PHP의 시스템에서 제공하는 연관 배열에 정리된다. 이는 &lt;code&gt;$_COOKIE&lt;/code&gt; 등과 달리 값을 읽고 쓸 수 있다. 즉, 필요에 따라 &lt;code&gt;$_SESSION&lt;/code&gt;에 값을 저장하거나 꺼내거나 할 수 있다. 그래서 쿠키처럼 사용에 시간적인 차이(저장된 때 값이 아직 존재하지 않고, 그 후에 액세스에서 제공되는 것)를 둘 필요는 없다. 평범한 연관 배열과 똑같이 사용할 수 있다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 페이지 전환, 쿠키, 세션 | 세션을 사용한 로그인</title>
      <link>https://www.devkuma.com/docs/php/%EC%84%B8%EC%85%98%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EC%84%B8%EC%85%98%EC%9D%84-%EC%82%AC%EC%9A%A9%ED%95%9C-%EB%A1%9C%EA%B7%B8%EC%9D%B8/</guid>
      <description>
        
        
        &lt;p&gt;그러면 실제로 세션을 사용해 보자. 여기에서는 세션 이용의 기본 중의 기본이라 할 수 있는 로그인 기능을 구현하여 보기로 한다. 정식으로 사용자 이름과 암호를 데이터베이스에 저장하고 &amp;hellip;&amp;hellip;라는 것은 아직 버겁 때문에 우선 PHP 스크립트 안에서 이러한 변수로 준비하고, 그것을 통해 확인만해 보는 것으로 해보자.&lt;/p&gt;
&lt;p&gt;여기에서는 로그인 페이지 index.php와 로그인했을 때 표시되는 index2.php 두 페이지를 만들어 보기로 한다. 우선 로그인 페이지 (index.php)부터, 아래와 같이 코드를 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    @session_start();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    if ($_POST != null){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $account = $_POST[&amp;#39;account&amp;#39;];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $pass = $_POST[&amp;#39;pass&amp;#39;];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $_SESSION[&amp;#39;account&amp;#39;] = $account;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $_SESSION[&amp;#39;pass&amp;#39;] = $pass;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        header(&amp;#34;Location: ./index2.php&amp;#34;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;sample page&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;Hello PHP!&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;            if (isset($_SESSION[&amp;#39;account&amp;#39;])) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;                echo &amp;#34;your account:&amp;#34; . htmlspecialchars($_SESSION[&amp;#39;account&amp;#39;]);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;            }   
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;            ?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;./index.php&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ACCOUNT :&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;account&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;br&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            PASSWORD:&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;pass&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;br&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;이동&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기에서 폼을 전송하면, 맨 위의 스크립트에서 그 내용을 확인하고 세션에 저장하고 있다. 이것 자체로는 로그인 체크하고 있지는 않는다. 단순히 전송된 계정과 암호를 저장하고 있을 뿐이다.&lt;/p&gt;
&lt;p&gt;처음에 먼저 session_start를 수행하고 있고, 그 앞에 @가 붙여 있다. 이는 이전에 파일 액세스할 때에 등장했었던, &amp;ldquo;오류가 발생해도 무시하고 계속하기&amp;quot;위한 것이다. 서버에 기본적으로 세션 기능이 ON으로 되어 있는 경우도 있기에, 그러한 경우에 다시 세션을 시작하려고 하면 &amp;ldquo;벌써 시작하고 있다&amp;quot;라고 오류가 발생할 수 있다. 따라서 이에 대한 예방 조치이다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$account = $_POST[&amp;#39;account&amp;#39;];
$pass = $_POST[&amp;#39;pass&amp;#39;];
$_SESSION[&amp;#39;account&amp;#39;] = $account;
$_SESSION[&amp;#39;pass&amp;#39;] = $pass;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;세션 관계의 처리는 아주 간단하다. &lt;code&gt;$_SESSION&lt;/code&gt;에 보관하면 모두 저장된다. 다른 설명 필요가 없을 정도로 간단하다. 그리고 또 하나를 언급한다면, 현재 계정을 표시하고 있는 body의 스크립트 부분이다. 여기에서는&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;if (isset($_SESSION[&amp;#39;account&amp;#39;])) {...중략...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이와 같이 작성되어 있다. &amp;ldquo;isset&amp;quot;라는 함수는 인수에 지정된 변수가 존재하는지 여부를 확인한다. 즉, 이는 &lt;code&gt;$_SESSION[ &#39;account&#39;]&lt;/code&gt;가 있는지를 확인해 보는 거다.&lt;/p&gt;
&lt;h2 id=&#34;로그인-했을-때만-페이지를-표시하기&#34;&gt;로그인 했을 때만 페이지를 표시하기&lt;/h2&gt;
&lt;p&gt;이어서 index2.php을 작성해 보자. 여기서는 로그인되어 있는지 체크하고, 로그인이 되었을 때만 페이지를 표시시켜 보도록 하자. 아래와 같이 예제 코드는 작성하면 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    @session_start();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    // ACCOUNT와 PASS
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    $ok_account = &amp;#34;admin&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    $ok_pass = &amp;#34;kanri&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    // 로그인 체크
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    $flg = false;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    $account = $_SESSION[&amp;#39;account&amp;#39;];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    $pass = $_SESSION[&amp;#39;pass&amp;#39;];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    if ($account == $ok_account and $pass == $ok_pass){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $flg = true;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    // 로그인이 되어 있지 않았을 때 처리
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    if (!$flg){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        echo &amp;#34;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;NOT LOGIN!!!&amp;lt;/h1&amp;gt;&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        echo &amp;#39;&amp;lt;a href=&amp;#34;./index.php&amp;#34;&amp;gt;back to login page.&amp;lt;/a&amp;gt;&amp;#39;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        echo &amp;#34;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        exit;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;sample page&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;Index2.php!&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;[Account: &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php echo htmlspecialchars($account); ?&amp;gt;&lt;/span&gt;]&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;새로 준비된 페이지입니다.&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기에서는 먼저 @session_start한 후에, 등록 사용자의 계정과 암호를 &lt;code&gt;$ok_account&lt;/code&gt;와 &lt;code&gt;$ok_pass&lt;/code&gt; 에 준비해 둔다. 그리고 &lt;code&gt;$_SESSION&lt;/code&gt;에서 account와 pass 값을 각각 얻어내어, 값을 확인하고 계정과 암호가 맞으면 &lt;code&gt;$flg&lt;/code&gt;라는 변수에 true를 대입하고 있다. 이는 로그인 성공 여부를 나타내는 변수로, 이것이 true이면 로그인된 것이고, false라면 되지 않은 것이다.&lt;/p&gt;
&lt;p&gt;로그인이 되지 않은 경우는 echo으로 오류 메시지와 index.php로 돌아가기 링크를 표시하고, 마지막에 &amp;ldquo;exit&amp;quot;를 하고 있다. 이는 &amp;ldquo;여기에서 스크립트의 실행을 종료한다&amp;rsquo;는 것이다. exit 실행하면, 이후에 있는 코드는 모두 실행되지 않는다. PHP 스크립트뿐만 아니라 작성하는 HTML 코드도 모두 출력되지 않을 것이다. 즉, 로그인하지 않으면 여기에 포함된 페이지 자체가 표시되지 않는다.&lt;/p&gt;
&lt;p&gt;여기에서는 echo로 오류를 쓰고 exit실행하는 것으로 대응을 했지만, 하는 방법은 다양하다. 오류 페이지로 리디렉션하거나 로그인 페이지로 되돌리거나 하는 것도 좋을 것이다. 이 외에 다양한 방법에 대해 생각해 보길 바란다.&lt;/p&gt;
&lt;h2 id=&#34;로그인-체크-일반화&#34;&gt;로그인 체크 일반화&lt;/h2&gt;
&lt;p&gt;일단 이것으로 로그인했을 때만 페이지를 표시하도록 처리가 되었지만, 모든 페이지에 여기에 써 있는 것처럼 처리를 해야 한다면 로그인 체크하는 것은 비효율적이다. 이러한 경우에는 로그인 체크 페이지를 준비하여 이를 각 페이지에서 로드하고 실행하도록 할 수 있다.&lt;/p&gt;
&lt;p&gt;아래와 같이 간단한 예제를 보도록 하자.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;check.php 코드&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;session_start&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// ACCOUNTとPASS
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$ok_account&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$ok_pass&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kanri&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 로그인 체크
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$flg&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$account&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$_SESSION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;account&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;$pass&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$_SESSION&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;pass&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$account&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$ok_account&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;and&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;$pass&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;$ok_pass&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;$flg&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 로그인이 되어 있지 않았을 때 처리
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$flg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;){&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;html&amp;gt;&amp;lt;body&amp;gt;&amp;lt;h1&amp;gt;NOT LOGIN!!!&amp;lt;/h1&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;&amp;lt;a href=&amp;#34;./index.php&amp;#34;&amp;gt;back to login page.&amp;lt;/a&amp;gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;/body&amp;gt;&amp;lt;/html&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;exit&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;check.php을 이용한 페이지 예제&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php include_once(&amp;#39;./check.php&amp;#39;); ?&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
    &amp;lt;head&amp;gt; 
        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34;  content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;h1&amp;gt;Index2.php!&amp;lt;/h1&amp;gt;
        &amp;lt;p&amp;gt;[Account: &amp;lt;?php echo htmlspecialchars($account); ?&amp;gt;]&amp;lt;/p&amp;gt;
        &amp;lt;p&amp;gt;새로 준비된 페이지입니다.&amp;lt;/p&amp;gt;
        &amp;lt;hr&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여기에서는 &amp;ldquo;check.php&amp;quot;라는 파일을 index.php 등과 같은 위치에 생성하고, 거기에 로그인 체크 처리를 준비한다. 그리고, 로그인 체크를 필요로 하는 페이지(index2.php)에는 아래의 한 문장을 시작 부분에 작성해 두도록 한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php include_once(&amp;#39;./check.php&amp;#39;); ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;단지 이것만으로 그 페이지는 로그인하지 않으면 볼 수 없게 된다. 여기에서는 &amp;ldquo;include_once&amp;quot;라는 함수를 이용하고 있다. 이는 인수에 지정된 스크립트 파일을 한번만 로드하는 기능을 가지고 있다. check.php을 가져 오면, 그 자리에서 스크립트가 실행되므로 여기에서 로그인하지 않으면 오류가 표시되고 exit가 실행된다. 당연히 이 페이지의 include_once 이후의 내용들도 표시되지 않는다.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;로그인 시스템의 기본은 이것으로 대략 알게 되었다. 이 후에는 계정과 암호를 더 확고하게 관리하는 구조를 구상해 본다면, 그럭저럭 쓸만한 로그인 시스템을 만들 수 있을 것이다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 구조와 객체 지향</title>
      <link>https://www.devkuma.com/docs/php/%EA%B5%AC%EC%A1%B0%EC%99%80-%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EA%B5%AC%EC%A1%B0%EC%99%80-%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5/</guid>
      <description>
        
        
        &lt;p&gt;보다 복잡한 프로그램을 작성하기 위해서는 프로그램을 구조화하여 객체 지향 기술을 사용하는 것이 중요해지고 있다. 더욱 진보한 프로그래밍을 위해 이에 대해 이해해 두어야 한다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 구조와 객체 지향 | 함수로 구조화하기</title>
      <link>https://www.devkuma.com/docs/php/%ED%95%A8%EC%88%98%EB%A1%9C-%EA%B5%AC%EC%A1%B0%ED%99%94%ED%95%98%EA%B8%B0/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%ED%95%A8%EC%88%98%EB%A1%9C-%EA%B5%AC%EC%A1%B0%ED%99%94%ED%95%98%EA%B8%B0/</guid>
      <description>
        
        
        &lt;p&gt;프로그래밍 수준이라는 것은 무엇으로 결정할까? 이는 사실은 &amp;lsquo;분량&amp;rsquo;이라고 말할 수 있다. 전부해서 100 라인 정도의 프로그램이라면 아마추어도 작성할 수 있지만, 1000 라인의 프로그램은 초보자는 작성할 수가 없다. 1만 라인의 프로그램은 프로가 아니면 어렵다. 이는 사용하는 함수가 어렵거나 알고리즘이 복잡하거나 하는 것은 이전의 문제이다. 즉, &amp;ldquo;얼마나 큰 프로그램을 깔끔하게 정리해서 파악할 수 있도록 설계할 수 있는가&amp;quot;라는 문제이다.&lt;/p&gt;
&lt;p&gt;100 라인 프로그램은 단지 줄줄이 쓰는 것만으로도 만들 수 있다. PHP으로 여러 폼을 송신하거나 하는 것만으로도 순식간에 작성할 수 있을 것이지만, 1000 라인 프로그램은 그런 식으로는 만들 수 없다. 프로그램을 그 역할에 띠라 정리하고 필요에 따라 필요한 처리를 호출하는 구조를 제대로 생각해서 설계해야 한다. 이것이 &amp;ldquo;구조화&amp;quot;라는 개념이다.&lt;/p&gt;
&lt;p&gt;PHP에서 구조화의 첫 걸음은 &amp;ldquo;함수&amp;quot;이다. 그냥 줄줄이 쓰고 있었던 스크립트를 정리하고 부분 부분을 분리하여 &amp;ldquo;함수&amp;quot;로 정의해 나가는 것으로, 전체적으로 깨끗하게 알기 쉽게 설계하는 것이 더 큰 프로그램을 쓸 수 있게 되는  첫 걸음이라고 할 수 있다.&lt;/p&gt;
&lt;p&gt;함수라고 하면, 지금까지 echo 라든지 implode/explode이나 fopen/fclose 이라든지, 여러 가지가 등장 했었다. PHP에서는 기본적인 기능은 모두 함수로 정의되어 있다. 이 함수라는 것은 이렇듯 &amp;lsquo;PHP 본체에 준비되어 있는 것&amp;rsquo;만 아니다. 개발자가 직접 스크립트를 작성하여 정의할 수도 있는 것이다. 이 함수는 다음과 같이 정의한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;function 함수명(가인수1, 가인수2, ...) {
    ...... 여기에 수행할 처리을 쓴다 ......
    ...... 결과를 반환한다면, 마지막에 return한다 ......
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;함수를 만들 때, 생각해야 할 것은 &amp;ldquo;인수&amp;quot;와 &amp;ldquo;반환 값&amp;quot;이다. 인수라는 것은 함수를 호출할 때 전달되는 값이다. 예를 들면, &lt;code&gt;fopen( &amp;quot;data.txt&amp;quot;);&lt;/code&gt;와 같은 식으로 함수를 호출 할 때는 ()에 필요한 값을 넣어 지금까지도 호출했던 것이다. 이것이 인수이다.&lt;/p&gt;
&lt;p&gt;자신의 함수를 정의할 때도 그 함수로 어떤 값이 필요할 것인가를 생각하고 그것을 인수로 지정한다. 이것은 함수의 () 내에 전달되는 값을 담을 변수를 기술해야 한다. 이것이 &amp;ldquo;가인수&amp;quot;라는 것이다. 함수를 호출하면 인수에 지정된 값이 이 가인수의 변수에 할당된다. 그리고 이후는 이 변수를 사용하여 전달된 인수의 값을 사용할 수 있다는 것이다.&lt;/p&gt;
&lt;p&gt;반환 값은 그 함수를 호출 측에 결과 값을 반환하는 것이다. 이것은 반환하기 원하는 값을 &amp;ldquo;return 값;&amp;ldquo;와 같은 형식으로 작성한다. 이 return은 함수를 빠져나가서, 지정된 값을 호출한 측에 돌려준다. 이는 처리를 벗어나는 것이기 때문에, return 후에 처리가 있어도 그것은 실행되지 않는다.&lt;/p&gt;
&lt;p&gt;그럼 함수를 실제로 사용해 보자. 우선, 함수를 이용하기 전에 소스 코드를 적어 보겠다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    if ($_POST != null) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $str = $_POST[&amp;#39;text1&amp;#39;];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $str = htmlspecialchars(strtoupper($str));
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;         
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $result = str_replace(&amp;#39;PHP&amp;#39;, &amp;#39;&amp;lt;b&amp;gt;PHP&amp;lt;/b&amp;gt;&amp;#39;, $str);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;sample page&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;Hello PHP!&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php echo $result; ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;여기에 PHP라는 문자를 포함한 문장을 써주세요.&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;./index.php&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;textarea&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text1&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#c4a000&#34;&gt;cols&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;40&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php echo $str; ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;textarea&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;br&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기에는 텍스트를 써서 보내면, &amp;ldquo;PHP&amp;quot;라는 텍스트를 모두 볼드(bold)로 표시한다. 전송된 텍스트를 str_replace 함수로 치환하는 간단한 예제이다. 또한 여기에서 보내 온 텍스트를 &amp;ldquo;strtoupper&amp;quot;라는 함수로 처리하고 있다. 이는 알파벳을 대문자로 텍스트를 변환하여 반환하는 함수이다.&lt;/p&gt;
&lt;h2 id=&#34;함수의-장점&#34;&gt;함수의 장점&lt;/h2&gt;
&lt;p&gt;그럼 먼저 예제를 함수로 구조화(라고 할만큼 과장하지 않지만 &amp;hellip;)하여 작성해 보겠다. 아래에 소스 코드가 작성된 코드이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    function getBoldStr($str) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $str = htmlspecialchars(strtoupper($str));
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $res = str_replace(&amp;#39;PHP&amp;#39;,  &amp;#39;&amp;lt;span style=&amp;#34;font-weight:bold;color:red&amp;#34;&amp;gt;PHP&amp;lt;/span&amp;gt;&amp;#39;, $str);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        return $res;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    if ($_POST != null) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $str = $_POST[&amp;#39;text1&amp;#39;];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;sample page&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php echo getBoldStr(&amp;#34;Hello PHP!&amp;#34;); ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php echo getBoldStr($str); ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php echo getBoldStr(&amp;#34;여기에 PHP라는 문자를 포함한 문장을 써주세요.&amp;#34;); ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;./index.php&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;textarea&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text1&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#c4a000&#34;&gt;cols&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;40&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php echo $str; ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;textarea&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;br&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이번에는 더욱 변환되는 곳을 알 수 있도록 볼드(bold) 및 빨간색으로 PHP를 표시해 보았다. 차이점을 살펴 보자.&lt;/p&gt;
&lt;p&gt;여기에서는 최초에 &lt;code&gt;function getBoldStr($str)&lt;/code&gt;라는 함수를 정의하고 있다. 인수는 &lt;code&gt;$str&lt;/code&gt;는 가인수를 하나 준비했다. 이 &lt;code&gt;$str&lt;/code&gt;의 텍스트를 치환하고 완성된 것을 return으로 반환한다. 호출하는 곳을 보면,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php echo getBoldStr($str); ?&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이런 식으로 작성되어 있다. getBoldStr 후에 필요한 값을 ()로 전달한다. 평범한 PHP에서 제공되는 함수와 사용법이 전혀 다르지 않다는 것을 알 수 있다.&lt;/p&gt;
&lt;p&gt;이와 같이 함수화하는 것으로 이 처리는 프로그램의 어디서나 호출 할 수 있게 되었다. 여기에서는 전송된 텍스트 표시뿐만 아니라, 제목과 설명 텍스트 등도 모두 이 함수에서 처리하여 출력시키고 있다. 함수화를 하였기에 동일한 처리를 여러 번 쓸 필요가 없게 되었다. 언제든지 필요할 때 호출하면 필요한 작업을 수행하는 것이다. 이것이 함수화를 했을 때의 장점이다.&lt;/p&gt;
&lt;h2 id=&#34;변수의-사용-범위-scope&#34;&gt;변수의 사용 범위 (scope)&lt;/h2&gt;
&lt;p&gt;이 스크립트를 잘 보면, 변수에 대해 좀 재미있는 것을 알게 될 것이다. 함수의 가인수에도, 그것 이외의 곳에서도, &lt;code&gt;$str&lt;/code&gt;이라는 변수가 사용되고 있다. 같은 변수를 이렇게 사용하더라도 도중에 값이 쓰여져 변경되거나 하는 걱정은 없는 것인가? 사실은 함수에서 &lt;code&gt;$str&lt;/code&gt;와 외부 &lt;code&gt;$str&lt;/code&gt;는 다른 변수이다.&lt;/p&gt;
&lt;p&gt;변수에는 그것을 사용할 수 있는 범위라는 것이 정해져 있다. 이는 &amp;ldquo;스코프(scope)&amp;ldquo;라고 한다. 함수의 안에서 변수를 사용하는 경우, 그 변수는 함수 내에서만 사용할 있도록 되어 있다. 그 함수에서 빠져나온 시점에서 그 변수는 소멸하는 것이다. 또한 다시 그 함수를 호출해도, 전에 호출 했을 때의 변수는 깨끗하게 없어져 있으며, 모든 새로 만들어 진다.&lt;/p&gt;
&lt;p&gt;따라서 함수의 내부에서 만들어진 내부에서만 사용되는 변수를 &amp;ldquo;로컬(local) 변수&amp;quot;라고 한다. 이에 대해 함수 외부에서 만들어진 스크립트 전체에서 사용할 수 있게하는 변수를 &amp;ldquo;전역(global) 변수&amp;quot;라고 한다. 함수를 이용하는 경우에는 이 &amp;ldquo;변수의 범위(scope)&amp;ldquo;라는 것에 대해 잘 이해하고 있어야 한다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 구조와 객체 지향 | 객체 지향이란?</title>
      <link>https://www.devkuma.com/docs/php/%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5%EC%9D%B4%EB%9E%80/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5%EC%9D%B4%EB%9E%80/</guid>
      <description>
        
        
        &lt;p&gt;함수에 의한 구조는 긴 작업을 여러 개의 작은 덩어리로 구성할 수 있다. 하지만 더 큰 프로그램이 되면 이것만으로는 부족하다. 예를 들어, 소스 코드에서 1000개의 함수가 줄지어 있는 상태를 상상해 보자. 이것은 과연 &amp;lsquo;정리되어 있다&amp;quot;라고 할 수 있는가?&lt;/p&gt;
&lt;p&gt;1000 개의 메소드를 더 정리하려면 어떻게 해야 좋은가? 먼저 생각할 있는 것은 &amp;ldquo;관련 것을 한곳에 모아 처리하도록 한다&amp;quot;는 것이다. 이렇게 하면, 예를 들어 &amp;ldquo;관련 있는 함수를 20개씩 정리한 것이 50개 늘어놓는다&amp;quot;라고 한다면 전체를 파악할 수 있을 것이다. 적어도 1000개가 늘어선 것보다 많이 좋아질 것이다.&lt;/p&gt;
&lt;p&gt;함수는 그것으로 좋다고 해도, 이번에는 또 다른 문제가 발생하는 것이다. 그것은 &amp;lsquo;1000개의 전역 변수를 어떻게 할 것인가&amp;quot;이다. 긴 프로그램이 되면 사용하는 변수도 엄청날 것이다. 이것은 또한 관련된 변수를 한곳에 모아 정리할 수 있으면 대단히 다르다.&lt;/p&gt;
&lt;p&gt;즉, 구조화의 다음 단계에서 누구나 생각할 수 있는 것은 &amp;ldquo;관련된 기능이나 값을 한곳에 모아 취급 방법&amp;quot;이라고 해도 좋을 것이다.&lt;/p&gt;
&lt;p&gt;예를 들어 &amp;ldquo;데이터 액세스&amp;quot;라는 카테고리를 준비하여, 그 안에 데이터를 읽거나 검색하거나 일부를 대체 할 여러가지 기능을 밀어 넣는다. 동시에 액세스하는 데이터 파일의 이름이나 데이터의 구조 라든지 등 필요한 모든 정보를 그 안에 준비해 둔다. 그리고 필요에 따라 거기에 값을 설정하고, 거기에 있는 기능을 호출하기도 한다. &amp;ldquo;데이터 액세스에 대한 모든 데이터와 기능은 모두 이 안에 있다&amp;quot;라는 것과 같은 카테고리를 만들 수 있다면, 대단히 편하다.&lt;/p&gt;
&lt;p&gt;이런 것을 다양한 용도마다 만들어 함께 간다. 이렇게 하면 아무리 프로그램이 커져도 대응할 수 있다.&lt;/p&gt;
&lt;p&gt;이것이 &amp;lsquo;객체(object)&amp;lsquo;의 개념이다. 객체는 &amp;ldquo;자체적으로 필요한 데이터와 기능이 모두 자신 안에 준비되어 있으며, 독립적인 프로그램으로 어디서나 사용할 수 있는 카테고리&amp;quot;이다.&lt;/p&gt;
&lt;h2 id=&#34;객체의-설계도-클래스&#34;&gt;객체의 설계도 &amp;ldquo;클래스&amp;rdquo;&lt;/h2&gt;
&lt;p&gt;이 객체라는 것은 PHP에서는 &amp;lsquo;설계도&amp;rsquo;과 &amp;lsquo;만든 부품&amp;rsquo;으로 구성되어 있다. 우선 최초에 객체의 내용을 정의하는 설계도를 만들고, 그 설계도를 기초로 하여 실제로 작동하는 부품을 만드는 셈이다.&lt;/p&gt;
&lt;p&gt;이 설계도를 &amp;ldquo;클래스(class)&amp;rdquo;, 클래스로 부터 만들어진 부품을 &amp;ldquo;인스턴스(instance)&amp;ldquo;라고 한다. 클래스는 다음과 같은 형태로 설계한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class 클래스 {
    필드1;
    필드2;
    ...... 필요한 만큼 기술 ......
    
    function 메소드1 (가인수) {
        ...... 수행 할 처리
    }

    function 메소드2 (가인수) {
        ...... 수행할 처리
    }

    ...... 필요한 만큼 기술 ......

}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;클래스는 &amp;lsquo;필드&amp;rsquo;와 &amp;lsquo;방법&amp;rsquo;으로 구성된다. &amp;ldquo;필드&amp;quot;라는 것은 클래스에 값을 저장하는 변수이다. 그리고 &amp;ldquo;메소드&amp;quot;는 클래스 안에 준비된 처리를 작성한 함수이다. 이 2가지 요소를 필요에 따라 작성하고 클래스는 만들어진다.&lt;/p&gt;
&lt;p&gt;그리고 만든 클래스에서 인스턴스(실제로 조작하는 부품)를 만들어, 그 안에 있는 필드나 메소드에 액세스하려면 다음과 같이 한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$변수 = new 클래스(인수);
$변수-&amp;gt;필드;
$변수-&amp;gt;메소드(인수);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;인스턴스는 &amp;ldquo;new 클래스()&amp;ldquo;와 같은 형태로 만든다. 클래스에 따라 이 때에 인수가 필요한 경우도 있다. 이것으로 인스턴스가 생성된 변수로 설정된다. 인스턴스에 메소드나 필드를 조작하는 경우, &amp;ldquo;$변수-&amp;gt;필드&amp;rdquo;,  &amp;ldquo;$변수-&amp;gt;메소드()&amp;ldquo;와 같은 식으로 인스턴스가 할당된 변수 뒤에&amp;rdquo;-&amp;gt;&amp;ldquo;라는 기호를 붙이고 그 필드명이나 메소드명을 작성한다.&lt;/p&gt;
&lt;p&gt;클래스에 대해서는 설명하지 않으면 안되는 것은 아직도 산더미처럼 있지만, 우선은 &amp;ldquo;클래스 정의 방법&amp;rdquo;, &amp;ldquo;클래스에서 인스턴스를 만드는 방법&amp;rdquo;, &amp;ldquo;인스턴스의 필드나 메소드를 이용하는 방법&amp;quot;을 알면, 당장이라도 클래스를 이용할 수 있게 될 것이다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 구조와 객체 지향 | 클래스를 만들어 보자!</title>
      <link>https://www.devkuma.com/docs/php/%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EC%9E%90%21/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%ED%81%B4%EB%9E%98%EC%8A%A4%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%96%B4-%EB%B3%B4%EC%9E%90%21/</guid>
      <description>
        
        
        &lt;p&gt;그러면 실제로 클래스를 만들고, 그것을 이용하여 보자. 이전에 &amp;ldquo;텍스트 속에서 PHP라는 텍스트만 표시를 변경&amp;quot;하는 예제를 더 수정하고, 좀 더 범용적인 클래스를 만들어 그것을 이용하기로 해보자.&lt;/p&gt;
&lt;p&gt;아래와 같이 예제 코드를 작성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;?php
class TextModify {
    private $header = &amp;#34;&amp;lt;b&amp;gt;&amp;#34;;
    private $footer = &amp;#34;&amp;lt;/b&amp;gt;&amp;#34;;
    private $body = &amp;#34;&amp;#34;;
    private $find = &amp;#34;PHP&amp;#34;;
     
    public function __construct($h,$f){
        $this-&amp;gt;setHeader($h);
        $this-&amp;gt;setFooter($f);
    }
     
    function setHeader($s){
        $this-&amp;gt;header = $s;
    }
     
    function setFooter($s){
        $this-&amp;gt;footer = $s;
    }
     
    function setBody($s){
        $this-&amp;gt;body = htmlspecialchars(strtoupper($s));
    }
    function setFind($s){
        $this-&amp;gt;find = $s;
    }
     
    function getRenderText(){
        $res = str_replace($this-&amp;gt;find, $this-&amp;gt;header . $this-&amp;gt;find . $this-&amp;gt;footer, $this-&amp;gt;body);
        return $res;
    }
     
    function writeRenderText(){
        echo $this-&amp;gt;getRenderText();
    }
}
 
// 인스턴스 준비
$title_obj = new TextModify(&amp;#39;&amp;lt;span style=&amp;#34;color:red;&amp;#34;&amp;gt;&amp;#39;, &amp;#39;&amp;lt;/span&amp;gt;&amp;#39;);
$title_obj-&amp;gt;setFind(&amp;#34;PHP&amp;#34;);
$title_obj-&amp;gt;setBody(&amp;#39;Hello PHP!&amp;#39;);
$msg_obj = new TextModify(&amp;#39;&amp;lt;span style=&amp;#34;color:blue;&amp;#34;&amp;gt;&amp;#39;, &amp;#39;&amp;lt;/span&amp;gt;&amp;#39;);
$msg_obj-&amp;gt;setBody(&amp;#39;여기에 PHP라는 문자를 포함한 문장을 써주세요.&amp;#39;);
$rep_obj =  new TextModify(&amp;#34;&amp;lt;b&amp;gt;&amp;#34;,&amp;#34;&amp;lt;/b&amp;gt;&amp;#34;);
if ($_POST != null){
    $str = $_POST[&amp;#39;text1&amp;#39;];
    $rep_obj-&amp;gt;setBody($str);
}
?&amp;gt;
&amp;lt;!DOCTYPE html&amp;gt;
&amp;lt;html lang=&amp;#34;ko&amp;#34;&amp;gt;
    &amp;lt;head&amp;gt; 
        &amp;lt;meta http-equiv=&amp;#34;Content-Type&amp;#34; content=&amp;#34;text/html; charset=UTF-8&amp;#34; /&amp;gt; 
        &amp;lt;title&amp;gt;sample page&amp;lt;/title&amp;gt;
    &amp;lt;/head&amp;gt;
    &amp;lt;body&amp;gt;
        &amp;lt;h1&amp;gt;&amp;lt;?php $title_obj-&amp;gt;writeRenderText(); ?&amp;gt;&amp;lt;/h1&amp;gt;
        &amp;lt;p&amp;gt;&amp;lt;?php $msg_obj-&amp;gt;writeRenderText(); ?&amp;gt;&amp;lt;/p&amp;gt;
        &amp;lt;hr&amp;gt;
        &amp;lt;p&amp;gt;&amp;lt;?php $rep_obj-&amp;gt;writeRenderText(); ?&amp;gt;&amp;lt;/p&amp;gt;
        &amp;lt;form method=&amp;#34;post&amp;#34; action=&amp;#34;./index.php&amp;#34;&amp;gt;
            &amp;lt;textarea name=&amp;#34;text1&amp;#34; cols=&amp;#34;40&amp;#34; rows=&amp;#34;5&amp;#34;&amp;gt;&amp;lt;?php echo $str; ?&amp;gt;&amp;lt;/textarea&amp;gt;
            &amp;lt;br&amp;gt;&amp;lt;input type=&amp;#34;submit&amp;#34;&amp;gt;
        &amp;lt;/form&amp;gt;
        &amp;lt;hr&amp;gt;
    &amp;lt;/body&amp;gt;
&amp;lt;/html&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;여기에서는 &amp;ldquo;TextModify&amp;quot;라는 클래스를 만들고 이를 이용하여 헤더용, 메시지용, 그리고 텍스트의 대체용의 인스턴스를 준비하고 각각의 기능을 호출하여 표시를 작성한다.&lt;/p&gt;
&lt;p&gt;만든 TextModify 클래스를 보면 새롭게 등장한 것이 몇개가 등장하고 있다. 그들을 보충 설명하여 보겠다.&lt;/p&gt;
&lt;h2 id=&#34;1-접근자-키워드access-keywords&#34;&gt;1. 접근자 키워드(access keywords)&lt;/h2&gt;
&lt;p&gt;여기에서는 $header, $footer, $body, $find라는 4개의 필드를 제공하고 있다. 각각 대체 텍스트 헤더(전에 붙이는 텍스트), 풋터(뒤에 붙이는 텍스트), 바디(대상이 되는 텍스트 본체), 그리고 검색 문자를 저장하는 용도이다.&lt;/p&gt;
&lt;p&gt;이 필드들을 보면, 앞에 &amp;ldquo;private&amp;quot;이라는 것이 붙어 있다. 이것은 이 필드를 어디까지 사용할 수 있는가 하는 이용 범위를 지정하는 것으로, &amp;ldquo;접근자 키워드&amp;quot;라는 것이다. 여기에는 다음과 같은 것이 준비되어 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;private : 해당 클래스 중에서만 사용할 수 있다. 외부에서는 절대 사용할 수 없다.&lt;/li&gt;
&lt;li&gt;protected : 해당 클래스 및 그 서브 클래스에서 사용할 수 있다.&lt;/li&gt;
&lt;li&gt;public : 클래스 밖에서도 사용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이 중에 &amp;ldquo;서브 클래스&amp;quot;라는 것은 객체 지향의 &amp;ldquo;상속&amp;quot;이라는 기능을 이용한 것이다. 이것에 대해서는 나중에 다시 설명하겠다. 우선 여기에서는 &amp;ldquo;private으로 하면 클래스 안에서만 사용할 수 있고, public으로 하면 외부에서도 자유롭게 사용할 수 있다&amp;quot;라고만 기억해 두도록 하자.&lt;/p&gt;
&lt;p&gt;이러한 필드는 객체의 성질 등을 나타내는 값이 저장되어 있기 때문에, 외부에서 마음대로 변경해 버리면 안된다. 그래서 필드 자체는 private으로 두고, 변경용 메소드를 별도로 준비하여 외부에서 그 메소드를 호출하여 값을 조작할 수 있도록 하는 것이 일반적이다.&lt;/p&gt;
&lt;h2 id=&#34;2-생성자-construct&#34;&gt;2. 생성자 (construct)&lt;/h2&gt;
&lt;p&gt;여기에서는 &lt;code&gt;__construct&lt;/code&gt;라는 특이한 이름의 public(즉, 외부에서 자유롭게 사용할 수 있는) 메소드가 작성되어 있다. 이 메소드는 &amp;ldquo;생성자&amp;quot;라고 하는 것이다. 이는 new로 인스턴스를 생성할 때, 자동으로 호출되는 메소드에서 인스턴스의 초기화 처리 등을 실행하며, 필요 없으면 생략해도 된다.&lt;/p&gt;
&lt;p&gt;이 생성자에는 2개의 인수를 준비하고 있기에 new 할 때도 2개의 인수를 넣게 된다. 실제로 new하고 있는 부분을 보면,&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;$rep_obj&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;TextModify&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;b&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;lt;/b&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이런 상태에 헤더와 풋터를 인수로 지정해 new한다.&lt;/p&gt;
&lt;h2 id=&#34;3-접근-메소드-access-method&#34;&gt;3. 접근 메소드 (access method)&lt;/h2&gt;
&lt;p&gt;클래스에서 제공되는 메소드 중에는 필드를 조작하는 것이 몇 가지가 준비되어 있다. setHeader, setFooter, setBody, setFind가 있다.&lt;/p&gt;
&lt;p&gt;앞서 언급한 바와 같이, 필드는 private으로 해두고, 그 값을 얻거나 변경하는 메소드를 별도로 준비해 두는 것이 일반적이다. 이러한 방법을 &amp;lsquo;접근자&amp;rsquo;라고 한다.&lt;/p&gt;
&lt;p&gt;접근자는 일반적으로 &amp;ldquo;get필드명&amp;rdquo;, &amp;ldquo;set필드명&amp;quot;라는 이름으로 선언한다. 이는 그렇지 않으면 안되는 것은 아니지만, 이러한 규칙에 따라 이름을 붙이는 편이 알기 쉽게 된다.&lt;/p&gt;
&lt;h2 id=&#34;4-this-대해&#34;&gt;4. &lt;code&gt;$this&lt;/code&gt; 대해&lt;/h2&gt;
&lt;p&gt;메소드는 &amp;ldquo;자기 자신&amp;quot;에 대해 작업을 수행하는 경우가 많다. 일반적으로 클래스는 인스턴스를 만들어 사용하지만, 이 &amp;ldquo;지금 사용하고 있는 이 인스턴스 자신안에 있는 필드나 메소드&amp;quot;를 이용하는 경우 어떻게 해야할까?&lt;/p&gt;
&lt;p&gt;이러한 경우에 사용되는 것이 &amp;ldquo;$this&amp;quot;라는 변수이다. 이것은 &amp;ldquo;이 인스턴스 자신&amp;quot;을 나타내는 변수이다. 이를 이용하여 자기 자신의 기능을 호출 할 수 있다.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;우선, 이러한 내용을 생각하면 코드를 보도록 해보자. 어떤 식으로 클래스와 인스턴스가 동작하고 있는지  알게 될 것이다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 구조와 객체 지향 | 상속에 의한 기능 확장</title>
      <link>https://www.devkuma.com/docs/php/%EC%83%81%EC%86%8D%EC%97%90-%EC%9D%98%ED%95%9C-%EA%B8%B0%EB%8A%A5-%ED%99%95%EC%9E%A5/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EC%83%81%EC%86%8D%EC%97%90-%EC%9D%98%ED%95%9C-%EA%B8%B0%EB%8A%A5-%ED%99%95%EC%9E%A5/</guid>
      <description>
        
        
        &lt;p&gt;객체 지향에는 작성한 클래스는 여러 곳에서 재사용할 수 있다. 하지만 실제로 사용하려고 하면 &amp;ldquo;여기를 이렇게 재작업하여 사용하고 싶다&amp;quot;라든지 &amp;ldquo;이것은 기능으로 좀 부족 하니까 더 확장하고 싶다&amp;quot;는 것도 나올 것이다.&lt;/p&gt;
&lt;p&gt;이런 경우에 클래스의 코드를 재작성하여 변경하는 것도 하나의 방법이지만, 만약 큰 프로젝트에서 많은 곳에 이미 사용되고 있거나 했을 때, 마음대로 클래스의 내용을 변경해서는 안될 것이다. 그렇다고 해서 클래스의 코드를 복사하고 또한 새로운 클래스를 만드는 것은 바보 같은 짓이다. 거의 같고 일부만 조금 다른 클래스를 여러 만드는 것은 코드의 낭비이다.&lt;/p&gt;
&lt;p&gt;아래의 클래스는 건드리지 않고, 최소한의 수정만으로 클래스를 재사용 할 수 있게 한다는 생각을 바탕으로 만들어진 것이 &amp;lsquo;상속&amp;rsquo;이라는 개념이다.&lt;/p&gt;
&lt;p&gt;상속은 이미있는 클래스의 기능을 그대로 모두 계승하고 새로운 클래스를 만드는 것이다. 이것은 다음과 같이 클래스를 정의하여 사용할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class 클래스명 extends 상속하는 클래스 {...}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이 상속하는 근원이 되는 클래스를 &amp;ldquo;슈퍼 클래스&amp;rdquo;, 상속하고 새로 만든 클래스를 &amp;ldquo;서브 클래스&amp;quot;라고 한다. 서브 클래스는 슈퍼 클래스의 모든 필드, 메소드를 이어 받아 그대로 사용할 수 있다 (그러나, 액세스 키워드가 private으로 된 것은 감춰져 있기 때문에 사용할 수 없다).&lt;/p&gt;
&lt;p&gt;아래는 이전에 예제를 더 수정 한 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;class TextModify {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    private $header = &amp;#34;&amp;lt;b&amp;gt;&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    private $footer = &amp;#34;&amp;lt;/b&amp;gt;&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    private $body = &amp;#34;&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    private $find = &amp;#34;PHP&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    public function __construct($h,$f){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setHeader($h);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setFooter($f);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    function setHeader($s){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;header = $s;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    function setFooter($s){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;footer = $s;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    function setBody($s){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;body = htmlspecialchars(strtoupper($s));
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    function setFind($s){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;find = $s;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    function getRenderText(){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;            $res = str_replace($this-&amp;gt;find, $this-&amp;gt;header . $this-&amp;gt;find . $this-&amp;gt;footer, $this-&amp;gt;body);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        return $res;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    function writeRenderText(){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        echo $this-&amp;gt;getRenderText();
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;class TitleModify extends TextModify {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    public function __construct($s){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setHeader(&amp;#39;&amp;lt;span style=&amp;#34;color:red;&amp;#34;&amp;gt;&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setFooter(&amp;#39;&amp;lt;/span&amp;gt;&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setFind(&amp;#39;PHP&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setBody($s);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;class MsgModify extends TextModify {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    public function __construct($s){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setHeader(&amp;#39;&amp;lt;span style=&amp;#34;color:blue;&amp;#34;&amp;gt;&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setFooter(&amp;#39;&amp;lt;/span&amp;gt;&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setFind(&amp;#39;PHP&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setBody($s);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;class RepModify extends TextModify {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    public function __construct($s){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setHeader(&amp;#39;&amp;lt;b&amp;gt;&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setFooter(&amp;#39;&amp;lt;/b&amp;gt;&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setFind(&amp;#39;PHP&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $this-&amp;gt;setBody($s);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 인스턴스 준비
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;$title_obj = new TitleModify(&amp;#39;Hello PHP!&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;$msg_obj = new MsgModify(&amp;#39;여기에 PHP라는 문자를 포함한 문장을 써주세요.&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;if ($_POST != null){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    $str = $_POST[&amp;#39;text1&amp;#39;];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    $rep_obj = new RepModify($str);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;sample page&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php $title_obj-&amp;gt;writeRenderText(); ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php $msg_obj-&amp;gt;writeRenderText(); ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php if (isset($rep_obj)) $rep_obj-&amp;gt;writeRenderText(); ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;./index.php&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;textarea&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;cols&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;40&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php echo $str; ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;textarea&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;br&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기에서는 TextModify 클래스를 상속하여 &amp;ldquo;TitleModify&amp;rdquo;, &amp;ldquo;MsgModify&amp;rdquo;, &amp;ldquo;RepModify&amp;quot;라는 서브 클래스를 만들었다. 각 클래스에서는 각각 &lt;code&gt;__construct&lt;/code&gt;을 준비하여 필요한 설정을 할 수 있도록 하고 있다.&lt;/p&gt;
&lt;p&gt;이 서브 클래스들에는 생성자 밖에 없지만, 그 안에 각 필드의 값을 접근 메소드로 설정하고 있으며, 실제 이용은 writeRenderText로 출력을 하고 있다. 슈퍼 클래스 TextModify의 기능을 그대로 사용할 수 있다는 것을 알 수 있다.&lt;/p&gt;
&lt;p&gt;이렇게하여 클래스를 상속해서 기능을 더 확장하여 재사용하는 것으로, 보다 유연하게 클래스 작성을 할 수 있게 되는 것이다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 구조와 객체 지향 | 클래스 메소드와 클래스 필드</title>
      <link>https://www.devkuma.com/docs/php/%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A9%94%EC%86%8C%EB%93%9C%EC%99%80-%ED%81%B4%EB%9E%98%EC%8A%A4-%ED%95%84%EB%93%9C/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%A9%94%EC%86%8C%EB%93%9C%EC%99%80-%ED%81%B4%EB%9E%98%EC%8A%A4-%ED%95%84%EB%93%9C/</guid>
      <description>
        
        
        &lt;p&gt;지금까지는 &amp;ldquo;클래스는 인스턴스를 만들고 조작한다&amp;quot;것이 기본이라고 설명했었다. 그러나 실은 꼭 그래야만 하는 것인 아니다. 클래스를 클래스 그대로 사용할 수도 있다. 다만, 그러기 위해서는 메소드나 필드를 다른 형태로 작성을 해야 한다.&lt;/p&gt;
&lt;p&gt;인스턴스가 아닌 클래스에서 직접 사용할 수 있는 메소드나 필드는 &amp;ldquo;클래스 메소드&amp;rdquo;, &amp;ldquo;클래스 필드 &amp;lsquo;라고 한다. 클래스를 단순한 설계도라고 생각하면,  어떻게 클래스 안에 값을 저장하거나 메소드를 실행하거나 할 수 있는지 조금 이상한 느낌이 있지만, &amp;ldquo;클래스도 객체에서 클래스라는 객체를 바탕으로 인스턴스라는 객체를 만들고 있다&amp;quot;고 상상하면 좋을 것이다.&lt;/p&gt;
&lt;p&gt;클래스에서 제공하는 메소드나 필드는 앞에 &amp;ldquo;static&amp;quot;라는 키워드를 붙인다. 이는 &amp;lsquo;정적&amp;rsquo;이라는 의미로, 클래스 메소드나 클래스 필드는 &amp;ldquo;static 메소드&amp;rdquo;,  &amp;ldquo;static 필드&amp;quot;라고도 한다.&lt;/p&gt;
&lt;p&gt;그럼 이러한 기본적인 사용법을 간단하게 정리해 보자. 우선 이러한 정의는&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;static $변수;
static function 메소드(가인수) {...}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이렇게 앞에 static을 넣기 만하면 된다. 액세스 키워드를 넣는 경우는 static 후에 &amp;ldquo;static private $hoge;&amp;ldquo;와 같은 식으로 쓴다. 이러한 필드나 메소드의 호출은&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;클래스::$변수;
클래스::메소드(인수);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이와 같이 작성한다. 클래스명 후에는 ::라는 기호를 붙이고 작성한다. 주의할 점은 필드이다. 인스턴스 필드는 &amp;ldquo;클래스-&amp;gt;변수&amp;quot;과 같이 작성하지만, 클래스 필드의 경우 &amp;ldquo;클래스::$변수&amp;quot;과 같이, $를 붙여 작성한다.&lt;/p&gt;
&lt;p&gt;그럼 이도 실제 예제를 보도록 하자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;class TextModify {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    static private $header = &amp;#34;&amp;lt;b&amp;gt;&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    static private $footer = &amp;#34;&amp;lt;/b&amp;gt;&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    static private $find = &amp;#34;PHP&amp;#34;;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    static function setTagData($h,$f) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        self::$header = $h;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        self::$footer = $f;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    static function setFind($f) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        self::$find = $f;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    static function writeRenderText($s) {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        $res = str_replace(self::$find, self::$header . self::$find . self::$footer, $s);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        echo $res;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;     
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 클래스 준비
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;TextModify::setTagData(&amp;#39;&amp;lt;span style=&amp;#34;font-size:200%;&amp;#34;&amp;gt;&amp;#39;, &amp;#39;&amp;lt;/span&amp;gt;&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;TextModify::setFInd(&amp;#39;PHP&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;if ($_POST != null){
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    $str = $_POST[&amp;#39;text1&amp;#39;];
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;http-equiv&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text/html; charset=UTF-8&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;sample page&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        TextModify::writeRenderText(&amp;#39;Hello PHP!&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;        ?&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php TextModify::writeRenderText(&amp;#39;여기에 PHP라는 문자를 포함한 문장을 써주세요.&amp;#39;); ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php TextModify::writeRenderText($str); ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;form&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;method&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;post&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;action&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;./index.php&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;textarea&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;text1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;cols&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;40&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;?php echo $str; ?&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;textarea&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;br&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;submit&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;form&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hr&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 예제는 먼저번 예제인 TextModify 클래스를 클래스 메소드와 클래스 필드를 이용하는 형태로 다시 작성한 것이다. 여기에서는 PHP라는 텍스트를 2배의 글꼴 크기로 표시하고 있다.&lt;/p&gt;
&lt;p&gt;이 예에서는 setTagData에 끼워 넣는 전후의 태그를 설정하고, setFind으로 검색 문자를 설정한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TextModify::setTagData(&amp;#39;&amp;lt;span style=&amp;#34;font-size:200%;&amp;#34;&amp;gt;&amp;#39;, &amp;#39;&amp;lt;/span&amp;gt;&amp;#39;);
TextModify::setFInd(&amp;#39;PHP&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;new로 인스턴스를 만들지도 않고, 바로 클래스에 값을 설정하고 있다. 그리고 텍스트를 출력할 때,&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;TextModify::writeRenderText(&amp;#39;Hello PHP!&amp;#39;);
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;이런 식으로 그냥 메소드를 호출할 뿐이다. 매우 간단하게 사용하고 있다.&lt;/p&gt;
&lt;p&gt;클래스 메소드와 클래스 필드를 사용하면, 인스턴스를 만들지 않고도 이처럼 매우 간단하게 기능을 호출 할 수 있다. 반면 다양한 데이터를 보유하고 그것에 따라 동작하는 경우는 사용할 때마다 많은 데이터를 다시 설정해야 않기 때문에 매우 복잡하다.&lt;/p&gt;
&lt;p&gt;많은 데이터를 보유하고 그에 따라 처리를 실시하는 것은 인스턴스를 만들어 사용하는 것이 훨씬 편리 하다. 클래스 메소드는 변경하는 일이 거의 없는 데이터 밖에 없는 경우, 단순히 정해진 기능을 호출만 하는 경우에 사용하면 좋다.&lt;/p&gt;
&lt;p&gt;예를 들어, 수치 계산(인수로 숫자를 전달해서 결과를 반환 받는 일) 등을 클래스로 정리해서 사용하는 경우에는 일일이 인스턴스를 만드는 것보다, 클래스 메소드로 손쉽게 호출하는 것이 편리하다. 용도에 따라 구분하여 사용하는 것이 좋다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
    <item>
      <title>php 입문 | 구조와 객체 지향 | 객체 지향은 무엇이 필요한가?</title>
      <link>https://www.devkuma.com/docs/php/%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%9C%EA%B0%80/</link>
      <pubDate>Wed, 05 Jul 2017 16:06:24 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/php/%EA%B0%9D%EC%B2%B4-%EC%A7%80%ED%96%A5%EC%9D%80-%EB%AC%B4%EC%97%87%EC%9D%B4-%ED%95%84%EC%9A%94%ED%95%9C%EA%B0%80/</guid>
      <description>
        
        
        &lt;p&gt;그런데, 객체 지향의 기본, 특히 &amp;ldquo;클래스&amp;quot;를 만드는 방법 및 사용법에 대해 대충 설명을 했지만, 읽어보고 어떻게 느꼈는가?&lt;/p&gt;
&lt;p&gt;&amp;ldquo;편리하겠지만, 귀찮다. 실제로 사용할 수 없잖아?&amp;rdquo;&lt;/p&gt;
&lt;p&gt;이렇게 생각한 사람도 많을 것이다. 분명한 것은 방대한 코드를 작성하게 되면 필요한 것이다. 하지만 그렇게 거대한 프로그램 따위 만들지 않는다. 자신이 만드는 사이트의 규모는 일일이 클래스는 필요로 하지 않는 것이다. 그렇게 생각하는 사람도 분명 많을 것으로 생각된다.&lt;/p&gt;
&lt;p&gt;하지만 그런 사람도 객체 지향을 이해할 수 없는 곤란한 것이 여러가지 있는 것이다. 그것은 무엇을 의미하나?&lt;/p&gt;
&lt;h2 id=&#34;1-표준-기능이-클래스로-대체되고-있다&#34;&gt;1. 표준 기능이 클래스로 대체되고 있다.&lt;/h2&gt;
&lt;p&gt;먼저, 무엇보다 큰 것은 &amp;ldquo;최근의 PHP에는 표준으로 제공되는 기능이 함수가 아닌 클래스로 대체되고 있다&amp;quot;는 점이다.&lt;/p&gt;
&lt;p&gt;예를 들어 XML을 이용하기 위한 기능이라고 한다. 이는 옛날에는 모든 함수로 준비되어 있었지만, 지금은 SimpleXMLElement라는 클래스의 인스턴스를 생성하고 이용하는 것이 일반적으로 되어 가고 있다.&lt;/p&gt;
&lt;p&gt;또한, 데이터베이스 액세스도 이전에 각 데이터베이스마다 함수가 많이 준비되어 있었지만, 지금은 PDO(PHP Data Objects)라는 클래스의 인스턴스를 사용할 수 있게 하고 있다.&lt;/p&gt;
&lt;p&gt;따라서 표준으로 제공되는 기능이 점차 함수에서 클래스로 대체되고 있다. 향후 이용을 감안할 때, 객체 지향에 익숙해야 한다.&lt;/p&gt;
&lt;h2 id=&#34;2-프레임워크는-대부분-클래스&#34;&gt;2. 프레임워크는 대부분 클래스&lt;/h2&gt;
&lt;p&gt;최근에는 어느 정도 규모의 사이트가 되면 &amp;ldquo;프레임워크(framework)&amp;ldquo;를 이용하는 경우가 많아지고 있다. 특히 &amp;ldquo;CakePHP&amp;quot;는 간단하게 이해하기 쉬운 프레임 워크로 널리 사용되고 있다.&lt;/p&gt;
&lt;p&gt;이러한 프레임워크는 거의 모두가 &amp;ldquo;클래스&amp;quot;로 구성되어 있다. 프레임워크는 방대한 소스 코드로 구성되어 있으며, 모든 함수로 구축하려고 하면 무척 어려운 코드가 될 것이다. 또, 클래스로 정리하지 않으면 엄청 복잡하게 되어 버릴 것이다.&lt;/p&gt;
&lt;p&gt;이러한 프레임워크를 사용하려면 객체 지향의 지식은 필수라고 할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;3-유지-보수를-생각하면-클래스로-해야-한다&#34;&gt;3. 유지 보수를 생각하면 클래스로 해야 한다.&lt;/h2&gt;
&lt;p&gt;지금 사이트를 만든 사람은 &amp;ldquo;일단 동작하다면 괜찮아&amp;quot;라고 생각하고 있을지도 모른다. 하지만, 만약 &amp;ldquo;오랫동안 사이트를 운영하고 싶다&amp;quot;고 생각한다면, 앞으로의 유지 보수를 생각하지 않으면 안된다.&lt;/p&gt;
&lt;p&gt;유지 보수를 생각했을 때 무엇보다 중요한 것은 &amp;ldquo;비록 자신이 작성한 코드도 반년 지나면 잊어버린다&amp;quot;라는 것이다. 점차 사이트가 정교해지고 있고, 이에 따라 함수도 점점 늘어나게 되면, 언젠가 본인도 버거울 질지도 모른다.&lt;/p&gt;
&lt;p&gt;처음부터 클래스의 형태로 정비해두면 어느 정도 깔끔하게 정리해 둘 수 있다. 또한 기능을 강화하는 데에도 이미 있는 클래스를 상속하고 확장하는 등 해나가면 쉽게 대응할 수 있다. 무엇보다 여차하면 원래의 클래스에 되돌릴 수도 있기 때문에 문제되도 안심이다.&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;이런 것을 생각한다면, PHP에도 이제 객체 지향의 지식은 필수가 되고 있다고 해도 좋을 것이다. &amp;ldquo;자신은 클래스 따윈 필요 없어&amp;quot;라고 생각하고, 우선 지식만으로도 몸에 익혀두면 만일의 경우 불편없이 끝날지도 모른다.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;우선, 객체 지향에 의한 사이트 구축이 무엇인지 공부하고 싶다&amp;quot;고 생각한다면, &amp;ldquo;CakePHP&amp;rdquo; 프레임워크를 사용해 보는 것을 추천한다. 이것을 사용해 보면 객체 지향에 의한 사이트 구축의 세계가 어떤 것인지 잘 알 수 있다.&lt;/p&gt;

      </description>
      
      <category>php</category>
      
      <category>WEB</category>
      
    </item>
    
  </channel>
</rss>
