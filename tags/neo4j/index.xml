<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devkuma – Neo4j</title>
    <link>https://www.devkuma.com/tags/neo4j/</link>
    <image>
      <url>https://www.devkuma.com/tags/neo4j/logo/180x180.jpg</url>
      <title>Neo4j</title>
      <link>https://www.devkuma.com/tags/neo4j/</link>
    </image>
    <description>Recent content in Neo4j on devkuma</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <managingEditor>kc@example.com (kc kim)</managingEditor>
    <webMaster>kc@example.com (kc kim)</webMaster>
    <copyright>The devkuma</copyright>
    
	  <atom:link href="https://www.devkuma.com/tags/neo4j/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Neo4j</title>
      <link>https://www.devkuma.com/docs/neo4j/</link>
      <pubDate>Fri, 28 Oct 2022 01:02:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/neo4j/</guid>
      <description>
        
        
        
      </description>
      
      <category>Neo4j</category>
      
      <category>Graph Database</category>
      
    </item>
    
    <item>
      <title>Neo4j 개요 - 주요 특징, 운영 환경 등 소개</title>
      <link>https://www.devkuma.com/docs/neo4j/overview/</link>
      <pubDate>Fri, 28 Oct 2022 01:02:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/neo4j/overview/</guid>
      <description>
        
        
        &lt;h2 id=&#34;neo4j-개요&#34;&gt;Neo4j 개요&lt;/h2&gt;
&lt;p&gt;Neo4j(네오포제이)란, 그래프 구조의 데이터 모델(&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;)을 다루는 데이터베이스 관리 시스템(DBMS)이며, 그래프 데이터베이스(&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;)로 분류된다.&lt;/p&gt;
&lt;p&gt;Neo4j는 그래프 데이터베이스 중에서 가장 많이 사용되고 있는 제품 중 하나로 미국의 Neo Technology사에 의해 개발되고 있다. 개발 언어는 Java이다.&lt;br&gt;
Neo4j는 RDBMS의 성능 문제를 해결하기 위해 2000년부터 개발이 시작되었으며, 2002년에 초기 버전이 출시되고, 2007년에 오픈 소스화, 2010년에 버전 1.0이 출시되었다.&lt;/p&gt;
&lt;p&gt;Neo4j는 스키마없는 데이터 구조, 개발의 용이성, 노드별 ACID 트랜잭션 등이 평가되고 있으며, 그래프 데이터에 적합한 데이터베이스 아키텍처로서 전세계에서 주목을 받고 있다.&lt;/p&gt;
&lt;p&gt;미국 IDG 산하의 IT 정보 사이트 InfoWorld가 주최하는 뛰어난 하드웨어, 소프트웨어, 개발 툴, 클라우드 서비스를 표창하는 &amp;ldquo;InfoWorld&amp;rsquo;s 2014 Technology of the Year Award&amp;quot;에서 선출되는 등, 이미 럽과 미국에서는 높은 평가를 얻고 있는 Neo4j이다. 향후 한국에서도 본격적인 도입이 진행될 것으로 기대되고 있다.&lt;/p&gt;
&lt;h2 id=&#34;neo4j의-주요-특징&#34;&gt;Neo4j의 주요 특징&lt;/h2&gt;
&lt;p&gt;Neo4j의 주요 특징은 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;강력한 트랜잭션
&lt;ul&gt;
&lt;li&gt;Neo4j는 ACID 준수(원자성, 일관성, 독립성, 지속성) 트랜잭션을 지원하며 항상 데이터 무결성을 보장한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;유연한 스키마
&lt;ul&gt;
&lt;li&gt;인 Neo4j는 속성 그래프 모델이라고 불리는 모델링 기법을 기반으로 하며 자연에 가까운 형태로 데이터를 모델링할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;고성능 검색
&lt;ul&gt;
&lt;li&gt;Neo4j는 초당 수백만 단위의 데이터를 검색하는 데 가장 빠른 index-free adjacency (그래프와 같이 서로 점과 선으로 연결된 데이터의 특성) 따라서 데이터 세트의 볼륨이나 복잡성에 관계없이 일정한 성능을 유지할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;쿼리 언어
&lt;ul&gt;
&lt;li&gt;Neo4j는 Cypher라는 선언형 그래프 쿼리 언어를 사용한다. Cypher는 직관적으로 이해하고 습득할 수 있으며 SQL보다 코드 양을 줄일 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;주요 언어와 프레임워크에 대응
&lt;ul&gt;
&lt;li&gt;Neo4j는 Java, C#, Python, JavaScript 등의 주요 언어용 드라이버를 공식적으로 지원하고 있다. 또한 Neo4j 커뮤니티는 Spring Data, Django ORM, Laravel, JDBC 등의 주요 프레임 워크를 지원한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;클라우드 환경 지원
&lt;ul&gt;
&lt;li&gt;Neo4j는 Amazon Web Services(AWS), Microsoft Azure, Google Cloud Platform 등의 클라우드 환경에서도 사용할 수 있다. 또한 공식 Docker 이미지를 사용하면 쉽게 도입할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;멀티 데이터베이스
&lt;ul&gt;
&lt;li&gt;Neo4j 4.0부터는 클러스터별로 여러 데이터베이스를 처리 할 수 있는 멀티 데이터베이스를 지원한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;리액티브 아키텍처
&lt;ul&gt;
&lt;li&gt;Neo4j 4.0부터는 리액티브 아키텍처를 도입하여 응답성, 탄력성, 견고성을 높였다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;관계형-데이터베이스와-비교&#34;&gt;관계형 데이터베이스와 비교&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;&lt;/th&gt;
          &lt;th&gt;관계형 데이터베이스&lt;/th&gt;
          &lt;th&gt;Neo4j&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;데이터 스토리지&lt;/td&gt;
          &lt;td&gt;데이터는 미리 정의된 행과 열이 있는 테이블로 분할되므로 쿼리 효율성을 저하시킨다.&lt;/td&gt;
          &lt;td&gt;index-free adjacency가 있는 그래프 스토리지 구조는 트랜잭션 및 관계 처리를 보다 빠르다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;데이터 모델&lt;/td&gt;
          &lt;td&gt;데이터 모델은 논리 모델에서 물리적 모델로 변환되어야 한다. 데이터 유형과 소스를 미리 알아야 하므로 변경하는 데 비용이 많이 든다.&lt;/td&gt;
          &lt;td&gt;데이터 모델은 논리 모델과 물리적 모델이 일치하고 유연성이 있다. 데이터 유형과 소스는 언제든지 추가 및 변경할 수 있으며 개발 기간이 크게 단축된다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;쿼리 성능&lt;/td&gt;
          &lt;td&gt;데이터 처리 성능은 조인(또는 관계)의 수와 깊이에 영향을 받는다.&lt;/td&gt;
          &lt;td&gt;그래프 처리는 관계의 수와 깊이에 관계없이 대기 시간이 낮고 실시간 성능을 보장한다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;쿼리 언어&lt;/td&gt;
          &lt;td&gt;SQL: 조인 수가 많을수록 복잡해지는 쿼리 언어.&lt;/td&gt;
          &lt;td&gt;Cypher: 관계 쿼리를 설명하는 가장 효율적이고 표현력 있는 방법을 제공하는 그래프 쿼리 언어.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;트랜잭션 지원&lt;/td&gt;
          &lt;td&gt;ACID 트랜잭션 지원.&lt;/td&gt;
          &lt;td&gt;ACID 트랜잭션 지원.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;데이터 센터 효율&lt;/td&gt;
          &lt;td&gt;서버 통합은 가능하지만 스케일 업에는 비용이 많이 듭니다. 또한 스케일 아웃은 구매, 에너지 사용 및 관리 시간 측면에서 비용이 많이 든다.&lt;/td&gt;
          &lt;td&gt;데이터와 관계는 함께 저장되어 복잡성과 규모가 커짐에 따라 성능이 향상된다. 이렇게하면 서버 통합과 하드웨어의 매우 효율적인 사용이 가능하다.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;neo4j-사용-사례&#34;&gt;Neo4j 사용 사례&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;보안 강화
&lt;ul&gt;
&lt;li&gt;기존의 무단 액세스 검출은 사용자 계정, IP 주소, 이용 장치 등 개별 데이터 포인트에 대해 검출을 실시하고 있다. Neo4j는 개별 데이터 포인트의 관계에 대한 탐지를 수행 할 수 있기 때문에 기존의 탐지 방법은 탐지 할 수 없었던 무단 액세스를 탐지 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;향상된 검색 기능
&lt;ul&gt;
&lt;li&gt;그래프 기반 검색 기능을 활용하면 키워드 검색의 경우 추가 키워드를 입력하지 않고 관련 정보를 볼 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;neo4j의-운영-환경&#34;&gt;Neo4j의 운영 환경&lt;/h2&gt;
&lt;p&gt;Neo4j는 다음 환경에서 작동한다.&lt;/p&gt;
&lt;p&gt;Neo4j 4.x의 경우에는 아래와 같다.&lt;/p&gt;
&lt;h3 id=&#34;지원되는-플랫폼&#34;&gt;지원되는 플랫폼&lt;/h3&gt;
&lt;p&gt;물리적, 가상 및 컨테이너에 관계없이 x86_64 아키텍처 시스템에서 지원된다.&lt;/p&gt;
&lt;h3 id=&#34;하드웨어&#34;&gt;하드웨어&lt;/h3&gt;
&lt;p&gt;개인용 및 소프트웨어 개발의 경우&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;구분&lt;/th&gt;
          &lt;th&gt;사양&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;CPU&lt;/td&gt;
          &lt;td&gt;최소 Intel Core i3. Intel Core i7 권장&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;메모리&lt;/td&gt;
          &lt;td&gt;최소 2GB. 16GB 이상 권장&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;스토리지&lt;/td&gt;
          &lt;td&gt;최소 10GB SATA. SATAExpress 또는 NVMe를 탑재한 SSD를 추천.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;클라우드 환경의 경우&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;구분&lt;/th&gt;
          &lt;th&gt;사양&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;CPU&lt;/td&gt;
          &lt;td&gt;최소 2vCPU. 16개 이상 권장(가능하면 Xeon processor)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;메모리&lt;/td&gt;
          &lt;td&gt;최소 2GB. 크기는 워크로드에 따라 다릅니다. 경우에 따라 사용하는 그래프의 크기에 맞는 메모리를 갖춘 인스턴스를 사용하는 것이 좋다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;스토리지&lt;/td&gt;
          &lt;td&gt;최소 10GB 블록 스토리지. NVMe SSD 권장. 스토리지 크기는 데이터베이스의 크기에 따라 다르다.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;온프레미스 환경 서버의 경우&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;구분&lt;/th&gt;
          &lt;th&gt;사양&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;CPU&lt;/td&gt;
          &lt;td&gt;Intel Xeon processor&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;메모리&lt;/td&gt;
          &lt;td&gt;최소 8GB. 크기는 워크로드에 따라 다르다. 경우에 따라 사용하는 그래프의 크기에 맞는 메모리를 갖춘 인스턴스를 사용하는 것이 좋다.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;스토리지&lt;/td&gt;
          &lt;td&gt;최소 SATA 7.2K RPM 6Gbps 하드 드라이브. NVMe SSD 권장. 스토리지 크기는 데이터베이스의 크기에 따라 다르다.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;소프트웨어&#34;&gt;소프트웨어&lt;/h3&gt;
&lt;p&gt;Neo4j 인스턴스를 실행하려면 호환되는 Java 가상 머신(JVM)이 설치되어 있어야 한다. Neo4j 3.x는 Java 8이 필요하며, Neo4j 4.x에서는 Java 11이 필요하다.&lt;/p&gt;
&lt;p&gt;개인 사용 및 소프트웨어 개발의 경우&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;OS 종류&lt;/th&gt;
          &lt;th&gt;지원되는 JDK&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;MacOS&lt;/td&gt;
          &lt;td&gt;10.14 이상&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;우분투 데스크톱&lt;/td&gt;
          &lt;td&gt;16.04 이상&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;데비안 9 이상&lt;/td&gt;
          &lt;td&gt;OpenJDK11, OracleJDK11, ZuluJDK11&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;SuSE 15 이상&lt;/td&gt;
          &lt;td&gt;OracleJDK11&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Windows10&lt;/td&gt;
          &lt;td&gt;OracleJDK11, ZuluJDK11&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;클라우드 환경의 경우&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;OS 종류&lt;/th&gt;
          &lt;th&gt;지원되는 JDK&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Ubuntu Server 16.04 이상&lt;/td&gt;
          &lt;td&gt;OpenJDK11, OracleJDK11, ZuluJDK11&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Red Hat Enterprise Linux Server 7.5 이상&lt;/td&gt;
          &lt;td&gt;Red Hat OpenJDK11, OracleJDK11, ZuluJDK11&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;CentOS Server 7.7&lt;/td&gt;
          &lt;td&gt;OpenJDK11&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Amazon Linux 2 AMI&lt;/td&gt;
          &lt;td&gt;Amazon Corretto 11, OpenJDK11, OracleJDK11&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Windows Server 2016 이상&lt;/td&gt;
          &lt;td&gt;OracleJDK11, ZuluJDK11&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;neo4j-라이센스&#34;&gt;Neo4j 라이센스&lt;/h2&gt;
&lt;p&gt;Neo4j의 커뮤니티 버전 라이센스는 GNU General Public License(GPLv3.0) 이다.
소프트웨어의 복사나 배포, 소스 코드의 공개를 원칙적으로 소스 코드의 자유로운 변경도 인정되고 있다.&lt;/p&gt;
&lt;h2 id=&#34;neo4j의-참고-정보&#34;&gt;Neo4j의 참고 정보&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://neo4j.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Neo4j 제품 페이지&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://neo4j.com/download/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Neo4j 다운로드&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/neo4j/neo4j&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Neo4j 소스 코드 (GitHub)&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;그래프 구조의 데이터 모델이란, 최소 단위인 &amp;ldquo;노드&amp;quot;와, 노드간의 &amp;ldquo;관계성&amp;quot;을 가지는 데이터 구조를 말한다.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;그래프 데이터베이스는 NoSQL의 일종이며, 그래프 이론을 기초로 노드 및 노드간의 관계성을 다룰 수 있다. 그래프 데이터베이스는 데이터를 테이블 형식으로 저장하는 관계형 데이터베이스와 달리 복잡한 관계를 기반으로 데이터 처리가 가능한 것이 큰 특징이다. 또한 스키마(테이블 정의)가 필요하지 않은 것도 특징이다. 노드의 속성을 복잡한 계층에서도 관리할 수 있고, 쿼리의 작성이 용이하여 GUI  도구 사용이 좋다는 점 등이 있어서 최근 주목을 받고 있다.&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

      </description>
      
      <category>Neo4j</category>
      
      <category>Graph Database</category>
      
    </item>
    
    <item>
      <title>Neo4j 용어</title>
      <link>https://www.devkuma.com/docs/neo4j/terms/</link>
      <pubDate>Fri, 12 May 2023 14:40:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/neo4j/terms/</guid>
      <description>
        
        
        &lt;h2 id=&#34;관련-정보&#34;&gt;관련 정보&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://localhost:1313/docs/graph-database/overview/#%EA%B7%B8%EB%9E%98%ED%94%84-%EC%9D%B4%EB%A1%A0-%EC%9A%A9%EC%96%B4&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;그래프 이론에 관한 용어&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;software&#34;&gt;Software&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;용어&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Neo4j&lt;/td&gt;
          &lt;td&gt;Graph database 중 하나&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Bolt&lt;/td&gt;
          &lt;td&gt;Neo4j의 공식 언어 드라이버&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;web-tools&#34;&gt;Web Tools&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;용어&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Neo4j Browser&lt;/td&gt;
          &lt;td&gt;Neo4j를 조작하는 웹 도구. 데이터를 쿼리하고 시각화할 수 있는 인터페이스.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Sandbox&lt;/td&gt;
          &lt;td&gt;Neo4j Browser를 사용한 테스트 DB (며칠 만에 사용하고 사라지는 무료 DB)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;language&#34;&gt;Language&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;용어&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Cypher Query&lt;/td&gt;
          &lt;td&gt;Neo4j의 쿼리 언어&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Clause&lt;/td&gt;
          &lt;td&gt;Cypher 쿼리(ex: &lt;code&gt;MATCH&lt;/code&gt;, &lt;code&gt;CREATE&lt;/code&gt;, &lt;code&gt;WHERE&lt;/code&gt; 등)&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;resources&#34;&gt;Resources&lt;/h2&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;용어&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Node&lt;/td&gt;
          &lt;td&gt;그래프 데이터 레코드&lt;br&gt;Entities or Objects in the graph&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Relationship&lt;/td&gt;
          &lt;td&gt;노드를 연결하는 것&lt;br&gt;Node 간에 연결하는 정보(Edge)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Property&lt;/td&gt;
          &lt;td&gt;데이터 값의 속성값&lt;br&gt;Node와 Relationship과 함께 제공되는 정보.&lt;br&gt;Key-Value 쌍.&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Label&lt;/td&gt;
          &lt;td&gt;Node의 역할을 나타내는 레이블. Ontology에서 말하는 Role&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Type&lt;/td&gt;
          &lt;td&gt;Relationship의 종류를 나타낸다.&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;그래프-데이터-모델링&#34;&gt;그래프 데이터 모델링&lt;/h2&gt;
&lt;h3 id=&#34;그래프-데이터-모델링-1&#34;&gt;그래프 데이터 모델링&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;노드와 관계를 이용하여 연결(connected graph)로 기술하는 과정이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;노드-node&#34;&gt;노드 (Node)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;그래프를 이루는 가장 기초적인 단위이다.&lt;/li&gt;
&lt;li&gt;개념적으로 유일한 대상(unique conceptual identity)이 된다.&lt;/li&gt;
&lt;li&gt;관계(Relationship)를 통해 다른 노드와 연결되며, 하나 이상의 레이블(Label)과 속성(Properties)을 가질 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;관계-relationship&#34;&gt;관계 (Relationship)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;노드 사이의 관계를 의미하며, 상호작용이다.&lt;/li&gt;
&lt;li&gt;노드는 항상 단방향(One direction)의 방향성을 가지고 있으며, 다른 노드와의 관계 뿐만 아니라 자기 자신과의 재귀 관계도 가질 수 있다.&lt;/li&gt;
&lt;li&gt;관계는 하나 이상의 속성을 가질 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;레이블-label&#34;&gt;레이블 (Label)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;비슷한 노드를 묶어 카테고리화 하기 위해 사용된다.&lt;/li&gt;
&lt;li&gt;즉, 쿼리 최적화를 위해 사용된다. 레이블이 없는 경우 모든 노드가 한번에 조회되며, 레이블에는 속성이 존재하지 않는다.&lt;/li&gt;
&lt;li&gt;여러 노드를 하나의 집합(set)으로 묶기 위해서 사용하는 이름을 가지는 그래프 구조체(named graph construct)이다.&lt;/li&gt;
&lt;li&gt;동일한 레이블을 가지는 노드는 동일한 집합에 속한다.&lt;/li&gt;
&lt;li&gt;도메인 객체의 역할(role)을 식별함으로써, 레이블을 식별할 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;속성-property&#34;&gt;속성 (Property)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;노드나 관계에 저장하고 싶은 데이터를 Key-Value 형태로 저장할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;일반-용어와-비교&#34;&gt;일반 용어와 비교&lt;/h2&gt;
&lt;p&gt;Neo4j, Graph theory, Ontology 각각에서 거의 같은 의미로 사용되는 용어를 비교해 보면 아래와 같다.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;Neo4j&lt;/th&gt;
          &lt;th&gt;Graph theory&lt;/th&gt;
          &lt;th&gt;Ontology&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;Node&lt;/td&gt;
          &lt;td&gt;Node&lt;/td&gt;
          &lt;td&gt;Entity&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Relationship&lt;/td&gt;
          &lt;td&gt;Edge&lt;/td&gt;
          &lt;td&gt;Relation&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;Label&lt;/td&gt;
          &lt;td&gt;Label&lt;/td&gt;
          &lt;td&gt;Role&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>Neo4j</category>
      
      <category>Graph Database</category>
      
    </item>
    
    <item>
      <title>Neo4j macOS 환경에서 다운로드 받아 설치</title>
      <link>https://www.devkuma.com/docs/neo4j/installation-macos/</link>
      <pubDate>Fri, 12 May 2023 16:03:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/neo4j/installation-macos/</guid>
      <description>
        
        
        &lt;h2 id=&#34;macos-설치&#34;&gt;macOS 설치&lt;/h2&gt;
&lt;p&gt;macOS에 Neo4j를 설치하기 전에 시스템 요구 사항을 확인하여 설정이 적합한지 확인한다.&lt;/p&gt;
&lt;h2 id=&#34;유닉스-콘솔-애플리케이션&#34;&gt;유닉스 콘솔 애플리케이션&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;OpenJDK 17 또는 Oracle Java 17가 아직 설치되지 않은 경우 설치를 해야 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://neo4j.com/download-center&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Neo4j 다운로드 센터&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에서 최신 릴리스를 다운로드한다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;플랫폼에 적합한 tar.gz 배포판을 선택한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;&lt;a href=&#34;https://neo4j.com/download-center&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Neo4j 다운로드 센터&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에서 Neo4j를 다운로드하고, 다운로드한 파일의 SHA 해시가 올바른지 항상 확인한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;SHA-256&lt;/code&gt;가 올바른 SHA 해시를 조회하려면, Neo4j 다운로드 센터로 이동하여 다운로드한 파일 아래에 있는 것을 클릭한다.&lt;/li&gt;
&lt;li&gt;플랫폼에 적합한 명령을 사용하여 &lt;code&gt;SHA-256&lt;/code&gt; 다운로드한 파일의 해시를 표시된다.&lt;/li&gt;
&lt;li&gt;2개가 동일한지 확인한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;4&#34;&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;filename&amp;gt;&lt;/code&gt;을 사용하여 아카이브의 파일의 압축(&lt;code&gt;tar -xf&lt;/code&gt;)을 해제한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;예를 들어, &lt;code&gt;tar -xf neo4j-community-5.7.0-unix.tar.gz&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;추출된 파일을 서버의 적당한 위치에 배치한다. 최상위 디렉터리는 &lt;code&gt;NEO4J_HOME&lt;/code&gt;이라고 하겠다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Neo4j v5.4부터는 Neo4j Enterprise Edition을 실행하기 전에 라이선스 계약에 동의해야 한다. Community Edition을 사용하는 경우 이 단계를 건너뛸 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;상용 라이센스 계약에 동의하려면, 다음 옵션 중 하나를 사용한다. 자세한 내용은 &lt;a href=&#34;https://neo4j.com/terms/licensing/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://neo4j.com/terms/licensing/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;을 참조한다.
&lt;ul&gt;
&lt;li&gt;환경 변수에 &lt;code&gt;NEO4J_ACCEPT_LICENSE_AGREEMENT=yes&lt;/code&gt;을 설정한다 .&lt;/li&gt;
&lt;li&gt;명령 &lt;code&gt;&amp;lt;NEO4J_HOME&amp;gt;/bin/neo4j-admin server license --accept-commercial&lt;/code&gt;을 실행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;다음 옵션 중 하나를 사용하여 평가판 라이센스 계약에 동의한다. 자세한 내용은 &lt;a href=&#34;https://neo4j.com/terms/enterprise_us/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://neo4j.com/terms/enterprise_us/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 참조한다.
&lt;ul&gt;
&lt;li&gt;환경 변수에 &lt;code&gt;NEO4J_ACCEPT_LICENSE_AGREEMENT=eval.&lt;/code&gt;을 설정한다.&lt;/li&gt;
&lt;li&gt;명령 &lt;code&gt;&amp;lt;NEO4J_HOME&amp;gt;/bin/neo4j-admin server license --accept-evaluation&lt;/code&gt;을 실행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;7&#34;&gt;
&lt;li&gt;Neo4j를 실행한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;Neo4j를 콘솔 애플리케이션으로 콘솔 모드로 실행하려면, 다음 명령을 실행한다.
-&lt;code&gt;&amp;lt;NEO4J_HOME&amp;gt;/bin/neo4j console.&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;백그라운드 프로세스에서 Neo4j를 실행하려면, 다음 명령을 실행한다.
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;&amp;lt;NEO4J_HOME&amp;gt;/bin/neo4j start.&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;8&#34;&gt;
&lt;li&gt;
&lt;p&gt;웹 브라우저에서 &lt;code&gt;http://localhost:7474&lt;/code&gt;에 접속한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;사용자 이름 &amp;rsquo;neo4j&amp;rsquo;와 기본 비밀번호 &amp;rsquo;neo4j&amp;rsquo;를 사용하여 연결한다. 그런 다음 암호를 변경하라는 메시지가 표시된다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;콘솔 모드로 실행이 되었다면 &lt;code&gt;Ctrl-C&lt;/code&gt; 입력하면 서버가 중지된다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Neo4j가 콘솔 모드에서 실행되면 로그가 터미널에 출력된다.&lt;/p&gt;
&lt;h2 id=&#34;macos-서비스&#34;&gt;macOS 서비스&lt;/h2&gt;
&lt;p&gt;표준 macOS 시스템 도구를 사용하여 &lt;code&gt;neo4j&lt;/code&gt; 명령을 기반으로 서비스를 만든다.&lt;/p&gt;
&lt;h2 id=&#34;macos-파일-설명자-제한&#34;&gt;macOS 파일 설명자 제한&lt;/h2&gt;
&lt;p&gt;데이터베이스에 인덱스가 많거나 데이터베이스에 대한 연결이 많은 경우 **열린 파일 설명자의 제한(The limit of open file descriptors)**을 늘려야 할 수도 있다. macOS 시스템에서 현재 구성된 열린 파일 설명자 제한은 &lt;code&gt;launchctl limit maxfiles&lt;/code&gt; 명령으로 검사할 수 있다. 제한 변경 방법은 macOS 버전에 따라 다를 수 있다. 적절한 명령을 찾으려면 운영 체제 설명서를 참조한다.&lt;/p&gt;
&lt;p&gt;제한을 10240 이상으로 올리면 &lt;a href=&#34;https://neo4j.com/docs/operations-manual/current/configuration/file-locations/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;neo4j.conf&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; 파일에 다음 설정도 추가해야 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;server.jvm.additional&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;-XX:-MaxFDLimit&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 설정이 없으면 JVM에 대한 파일 설명자 제한이 10240 이상으로 증가하지 않는다. 이는 macOS에만 적용된다. 다른 모든 운영 체제에서는 항상 &lt;code&gt;MaxFDLimit.&lt;/code&gt; JVM 설정을 활성화된 상태로 두어야 한다.&lt;/p&gt;
&lt;h2 id=&#34;원문&#34;&gt;원문&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://neo4j.com/docs/operations-manual/current/installation/osx/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;macOS installation - Operations Manual&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Neo4j</category>
      
      <category>Graph Database</category>
      
    </item>
    
    <item>
      <title>Neo4j macOS 환경에서 homebrew로 설치</title>
      <link>https://www.devkuma.com/docs/neo4j/installation-homebrew/</link>
      <pubDate>Fri, 12 May 2023 14:40:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/neo4j/installation-homebrew/</guid>
      <description>
        
        
        &lt;h2 id=&#34;neo4j-설치&#34;&gt;Neo4j 설치&lt;/h2&gt;
&lt;p&gt;homebrew에서 설치하는 명령은 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% brew install neo4j
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설치후 버전을 확인해 본다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% neo4j --version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5.7.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;제대로 나온다면 설치가 완료되었다.&lt;/p&gt;
&lt;h3 id=&#34;이용-포트&#34;&gt;이용 포트&lt;/h3&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;포트&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;7687&lt;/td&gt;
          &lt;td&gt;Neo4j 본체&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;7474&lt;/td&gt;
          &lt;td&gt;관리 콘솔 (Neo4j Browser) 호스팅 용&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;초기-비밀번호&#34;&gt;초기 비밀번호&lt;/h3&gt;
&lt;p&gt;기본적으로 Neo4j의 사용자 이름과 비밀번호는 아래와 같다.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;ID&lt;/th&gt;
          &lt;th&gt;비밀번호&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;neo4j&lt;/td&gt;
          &lt;td&gt;neo4j&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;이 초기 비밀번호는 변경을 해줘야 한다. 웹으로 접속해서 변경할 수도 있고, 아래와 같은 명령으로 변경할 수도 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ neo4j-admin dbms set-initial-password &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;password&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;neo4j-시작&#34;&gt;Neo4j 시작&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ neo4j start
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;시작-에러-발생&#34;&gt;시작 에러 발생&lt;/h3&gt;
&lt;p&gt;설치하고 시작을 하려고 하면, 아래와 같은 에러 메세지가 나오면서 시작이 되지 않을 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ neo4j start
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Failed to &lt;span style=&#34;color:#204a87&#34;&gt;read&lt;/span&gt; config /opt/homebrew/Cellar/neo4j/5.7.0/libexec/conf/neo4j.conf: Unrecognized setting. No declared setting with name: wrapper.java.additional.4. Cleanup the config or disable &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;server.config.strict_validation.enabled&amp;#39;&lt;/span&gt; to &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;continue&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Run with &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;--verbose&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; a more detailed error message.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;메세지에서 알려준 대로, 설정 파일(&lt;code&gt;/opt/homebrew/Cellar/neo4j/5.7.0/libexec/conf/neo4j.conf&lt;/code&gt;)에 아래 설정을 추가해 주면 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-properties&#34; data-lang=&#34;properties&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#c4a000&#34;&gt;server.config.strict_validation.enabled&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;neo4j-중지&#34;&gt;Neo4j 중지&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ neo4j stop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;neo4j-상태-확인&#34;&gt;Neo4j 상태 확인&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ neo4j status
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;neo4j-browser-관리-콘솔-열기&#34;&gt;Neo4j Browser 관리 콘솔 열기&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ open http://localhost:7474
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설치 후 처음 시작하면 비밀번호 변경 요청이 나올 것이다.
새 계정은 따로 비밀번호를 변경하지 않았다면, 비밀번호는 변경해야 한다.&lt;/p&gt;
&lt;h2 id=&#34;연결-정보&#34;&gt;연결 정보&lt;/h2&gt;
&lt;p&gt;프로그램에서 접속하는 경우에는 http/https 또는 bolt이라는 프로토콜로 연결할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;http base&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://localhost:7474/db/data
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;bolt base&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bolt://localhost:7687
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;디렉터리-및-파일-경로&#34;&gt;디렉터리 및 파일 경로&lt;/h2&gt;
&lt;h3 id=&#34;base-directory&#34;&gt;Base Directory&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/opt/homebrew/Cellar/neo4j/5.7.0/libexec/import/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;config-file&#34;&gt;config File&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/opt/homebrew/Cellar/neo4j/5.7.0/libexec/conf/neo4j.conf
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;plugin-directory&#34;&gt;plugin Directory&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/opt/homebrew/Cellar/neo4j/5.7.0/libexec/plugins/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;data-directory&#34;&gt;Data Directory&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/opt/homebrew/var/neo4j/data/databases/neo4j/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;log-file&#34;&gt;Log File&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/opt/homebrew/var/log/neo4j/neo4j.log
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>Neo4j</category>
      
      <category>Graph Database</category>
      
    </item>
    
    <item>
      <title>Neo4j Docker 설치</title>
      <link>https://www.devkuma.com/docs/neo4j/installation-docker/</link>
      <pubDate>Sat, 13 May 2023 22:33:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/neo4j/installation-docker/</guid>
      <description>
        
        
        &lt;h2 id=&#34;docker-이미지&#34;&gt;Docker 이미지&lt;/h2&gt;
&lt;p&gt;아래 도커 이미지를 이용해서 도커 환경에 Neo4j를 설치해 보도록 하겠다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Neo4j 공식 이미지
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://hub.docker.com/_/neo4j&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://hub.docker.com/_/neo4j&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;neo4j-docker-image로-실행&#34;&gt;Neo4j Docker image로 실행&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --publish&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;7474:7474 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --publish&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;7687:7687 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --volume&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$HOME&lt;/span&gt;/neo4j/data:/data &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  --env &lt;span style=&#34;color:#000&#34;&gt;NEO4J_AUTH&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;neo4j/password &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;  neo4j
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;기동이 되었다면, 아래 URL로 접속해 본다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;http://localhost:7474/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;그러면 web 화면이 표시될것이다. 이때 명령에서 설정한 &lt;code&gt;neo4j/password&lt;/code&gt;로 인증을 진행하면 된다.&lt;/p&gt;
&lt;h2 id=&#34;docker-compose로-실행&#34;&gt;docker-compose로 실행&lt;/h2&gt;
&lt;h3 id=&#34;작업-디렉터리-생성&#34;&gt;작업 디렉터리 생성&lt;/h3&gt;
&lt;p&gt;적당한 위에 작업 디렉터리를 생성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mkdir neo4j
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; neo4j
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;docker-compose-작성한다&#34;&gt;docker-compose 작성한다.&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;docker-compose.yml&lt;/code&gt; 생성 후 아래 내용을 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;version&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;3.1&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;services&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;neo4j&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;container_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;neo4j-server&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;image&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;neo4j&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ports&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7474&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7474&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7687&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7687&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;volumes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;- &lt;span style=&#34;color:#000&#34;&gt;data:/data&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;environment&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NEO4J_AUTH&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;neo4j/password&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;volumes&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;driver&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;local&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;docker-compose-실행&#34;&gt;docker-compose 실행&lt;/h3&gt;
&lt;p&gt;컨테이너를 생성하고 시작한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker-compose up -d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;옵션 &lt;code&gt;-d&lt;/code&gt;(&lt;code&gt;--detach&lt;/code&gt;) 옵션이 있으면 Detached mode 즉, 백그라운드로 실행하게 된다.&lt;/p&gt;
&lt;h3 id=&#34;docker-컨테이너-실행-확인&#34;&gt;docker 컨테이너 실행 확인&lt;/h3&gt;
&lt;p&gt;위 명령어를 실행해보면 Kafka와 Zookeeper 두대가 실행되고 있는 것을 확인할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker ps -a
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker ps -a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CONTAINER ID   IMAGE     COMMAND                  CREATED          STATUS          PORTS                                                      NAMES
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bf181e1623d3   neo4j     &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;tini -g -- /startup…&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;19&lt;/span&gt; seconds ago   Up &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;18&lt;/span&gt; seconds   0.0.0.0:7474-&amp;gt;7474/tcp, 7473/tcp, 0.0.0.0:7687-&amp;gt;7687/tcp   neo4j-server
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>Neo4j</category>
      
      <category>Graph Database</category>
      
      <category>Docker</category>
      
    </item>
    
    <item>
      <title>Neo4j Cypher 소개</title>
      <link>https://www.devkuma.com/docs/neo4j/intro-cypher/</link>
      <pubDate>Sun, 14 May 2023 02:30:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/neo4j/intro-cypher/</guid>
      <description>
        
        
        &lt;h2 id=&#34;cypher란-무엇인가&#34;&gt;Cypher란 무엇인가?&lt;/h2&gt;
&lt;p&gt;Cypher(사이퍼)란? Neo4j사에서 개발 데이터베이스 쿼리에 사용되는 그래프 쿼리 언어이다. Cypher 쿼리는 SQL과 같은 형식이므로 강력하고 다양한 데이터 표현을 할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/neo4j/sample-cypher.png&#34; alt=&#34;Sample cypher&#34;&gt;&lt;/p&gt;
&lt;p&gt;Cypher는 Neo4j의 기본 인터페이스로 패턴과 관계를 시각적으로 일치시키는 방법을 제공한다.&lt;/p&gt;
&lt;p&gt;Cypher는 &lt;code&gt;(nodes)-[:ARE_CONNECTED_TO]-&amp;gt;(otherNodes)&lt;/code&gt;와 같은 패턴이 사용된다. 소괄호&lt;code&gt;()&lt;/code&gt;는 &lt;strong&gt;노드&lt;/strong&gt;를 대괄호&lt;code&gt;[]&lt;/code&gt;는 &lt;strong&gt;관계&lt;/strong&gt;를 의미하며, &lt;code&gt;-&lt;/code&gt;와 &lt;code&gt;-&amp;gt;&lt;/code&gt;는 노드와 노드 사의 &lt;strong&gt;관계 반향&lt;/strong&gt;을 나타낸다.&lt;/p&gt;
&lt;p&gt;Cypher를 사용하여 표현적이고 효율적인 쿼리를 구성하여 그래프에서 모든 종류의 생성, 읽기, 업데이트, 삭제(CRUD)를 수행할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;cypher-syntax&#34;&gt;Cypher Syntax&lt;/h2&gt;
&lt;p&gt;Cypher는 사람이 읽을 수 있도록 설계되었기 때문에, 구문을 시각적이고 쉽게 이해할 수 있도록 영어와 형상(또는 인물)을 기반으로 구성된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/neo4j/cypher_graph_v1.jpg&#34; alt=&#34;cypher graph v1&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Jennifer는 기술로 그래프를 좋아한다.&lt;/li&gt;
&lt;li&gt;Jennifer는 2018년 이후로 Michael과 친구이다.&lt;/li&gt;
&lt;li&gt;제니퍼는 Neo4j 회사에 일한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;사이퍼-주석&#34;&gt;사이퍼 주석&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;//&lt;/code&gt; 로 시작되며 뒤에 원하는 문구를 입력&lt;/p&gt;
&lt;p&gt;Cypher의 주석은 많은 프로그래밍 언어와 동일하다. &lt;code&gt;//&lt;/code&gt;로 시작하여 이어서 텍스트를 작성하여 주석을 주가한다. 다른 언어와 마찬가지로 두 개의 슬래시로 줄을 시작하면 해당 줄의 모든 내용이 주석이 된다.&lt;/p&gt;
&lt;h2 id=&#34;cypher에서-노드-표현&#34;&gt;Cypher에서 노드 표현&lt;/h2&gt;
&lt;p&gt;Cypher는 패턴에 ASCII-Art&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;를 사용하므로, 위 패턴의 각 구성 요소를 시각적으로 표현할 수 있는 방법이 필요하다. 속성 그래프 모델의 주요 구성 요소는 노드와 관계이며, 노드는 그래프의 데이터 엔터티이며 데이터 모델에서 명사 또는 개체를 찾아 노드를 식별할 수 있다. 이 예제에서 Jennifer, Michael, Graphs는 Neo4j 노드이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/neo4j/cypher_graph_nodes.jpg&#34; alt=&#34;Cypher graph nodes&#34;&gt;&lt;/p&gt;
&lt;p&gt;Cypher에서 노드를 나타내기 위해 &lt;code&gt;(node)&lt;/code&gt; 이렇게 노드를 소괄호로 묶는다. 시각적 표현이 데이터 모델의 노드에 사용하는 원과 소괄호가 유사하게 느껴진다.&lt;/p&gt;
&lt;h3 id=&#34;노드-변수&#34;&gt;노드 변수&lt;/h3&gt;
&lt;p&gt;나중에 노드를 참조하기 위해 &lt;code&gt;(p)&lt;/code&gt;:person 또는 &lt;code&gt;(t)&lt;/code&gt;:thing과 같이 변수를 지정할 수 있다. 실제 쿼리에서는 &lt;code&gt;(person)&lt;/code&gt; 또는 &lt;code&gt;(thing)&lt;/code&gt;와 같이 더 길고 표현력이 풍부한 변수 이름을 사용할 수 있다. 프로그래밍 언어 변수와 마찬가지로 원하는 대로 변수 이름을 지정하고, 이후레 쿼리에서 동일한 이름으로 변수를 참조할 수 있다.&lt;/p&gt;
&lt;p&gt;이뿐 아니라, 빈 소괄호를 입력하여 익명의 노드를 지정할 수도 있다.&lt;/p&gt;
&lt;p&gt;노드가 반환 결과와 관련이 없는 경우, 빈 소괄호(&lt;code&gt;()&lt;/code&gt;)를 사용하여 익명 노드를 지정할 수 있다. 이는 나중에 쿼리에서 이 노드를 반환할 수 없음을 의미한다.&lt;/p&gt;
&lt;h3 id=&#34;노드-레이블node-labels&#34;&gt;노드 레이블(Node Labels)&lt;/h3&gt;
&lt;p&gt;속성 그래프 데이터 모델에 노드 레이블을 지정하여, 유사한 노드를 함께 그룹화할 수도 있다. 레이블은 일종의 태그와 같으며, 이를 통해 찾거나 생성할 특정 유형의 엔터티를 지정할 수 있다. 이 예제에서는 &lt;code&gt;Person&lt;/code&gt;, &lt;code&gt;Technology&lt;/code&gt;는 &lt;code&gt;Company&lt;/code&gt; 레이블이다.&lt;/p&gt;
&lt;p&gt;레이블은 SQL에 특정 행을 검색할 테이블을 지정하는 것과 같이 생각할 수 있다. &lt;code&gt;Person&lt;/code&gt;, &lt;code&gt;Employee&lt;/code&gt;, &lt;code&gt;Customer&lt;/code&gt; 테이블에서 사람의 정보를 쿼리하도록 SQL에 지시하는 것과 마찬가지로 Cypher에게 해당 정보에 대한 레이블만 확인하도록 지시할 수도 있다. 이를 통해 Cypher는 엔터티를 구별하고 쿼리 실행을 최적화할 수 있다. 가능한 경우 쿼리에 노드 레이블을 사용하는 것을 권장한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cypher에 레이블을 지정하지 않으면, 일치하지 않는 노드 범주를 필터링하기 위해, 쿼리가 데이터베이스의 모든 노드를 확인하게 된다. 그러므로, 매우 큰 그래프를 조회하는 쿼리는 오래 걸리게 된다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h3 id=&#34;예-cypher의-노드&#34;&gt;예: Cypher의 노드&lt;/h3&gt;
&lt;p&gt;위의 그래프 예제를 사용하여 노드를 지정하는 방법을 살펴보겠다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-cypher&#34; data-lang=&#34;cypher&#34;&gt;()                  // 익명 노드(레이블 또는 변수 없음)는 데이터베이스의 모든 노드를 참조할 수 있다.
(p:Person)          // 변수는 p이고, 레이블 Person이다.
(:Technology)       // 변수는 없고, 레이블은 Technology 이다.
(work:Company)      // 변수는 work이고, 레이블은 Company 이다.
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;cypher의-관계-표현&#34;&gt;Cypher의 관계 표현&lt;/h2&gt;
&lt;p&gt;그래프 데이터베이스의 기능을 최대한 활용하려면 노드 간의 관계도 표현해야 한다. 관계는 화살표 &lt;code&gt;--&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;&amp;lt;--&lt;/code&gt;두 노드 사이를 사용하여 Cypher에서 표시된다. 구문이 시각적 표현에서 노드를 연결하는 화살표와 선(line)처럼 어떻게 보이는지 확인한다. 노드 연결 방법(관계 유형) 및 관계와 관련된 모든 속성과 같은 추가 정보는 화살표 내부의 대괄호(&lt;code&gt;[]&lt;/code&gt;) 안에 배치할 수 있다.&lt;/p&gt;
&lt;p&gt;이 예제에서 노드 사이에 &lt;code&gt;LIKES&lt;/code&gt;,&lt;code&gt;WORKS_FOR&lt;/code&gt;, &lt;code&gt;IS_FRIENDS_WITH&lt;/code&gt; 선은 노드간의 관계이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/neo4j/cypher_graph_rels.jpg&#34; alt=&#34;사이퍼 그래프 관계&#34;&gt;&lt;/p&gt;
&lt;p&gt;방향이 지정되지 않은 관계는 화살표 없이 두 개의 대시(&lt;code&gt;--&lt;/code&gt;)만으로 표시된다. 이는 관계가 어느 방향으로든 향할 수 있다는 것을 의미한다. 데이터베이스에 방향을 등록해야 하지만, 물리적 방향에 관계없이 Cypher가 특정 방향을 무시하고, 관계 및 연결된 노드를 검색하는 무방향 관계와 일치시킬 수 있다. 이를 통해 쿼리가 유연해지고 사용자가 데이터베이스에 저장된 관계의 물리적 방향을 몰라도 된다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;데이터가 하나의 관계 방향으로 저장되고, 쿼리가 잘못된 방향을 지정하게 되면 Cypher는 결과를 반환하지 않는다. 방향이 확실하지 않을 수 있는 이러한 경우 무방향 관계를 사용하고 일부 결과를 검색하는 것이 좋다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 데이터가 아래와 같은 방향으로 저장되어 있다.
CREATE (p:Person)-[:LIKES]-&amp;gt;(t:Technology)

// 쿼리에 관계는 반대로 조회하면, 결과를 반환하지 않는다.
MATCH (p:Person)&amp;lt;-[:LIKES]-(t:Technology)

// 방향이 확실하지 않으면, 무방향 관계로 쿼리하는 것이 좋다.
MATCH (p:Person)-[:LIKES]-(t:Technology)
&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;관계-유형&#34;&gt;관계 유형&lt;/h2&gt;
&lt;p&gt;관계 유형은 레이블이 노드를 그룹화하는 방식과 유사하게 관계를 분류하고 관계에 의미를 추가한다. 그래프 데이터 모델에서 관계는 노드가 연결되고, 서로 관련되는 방식을 보여준다. 일반적으로 동작이나 동사를 찾아 데이터 모델에서 관계를 식별할 수 있다.&lt;/p&gt;
&lt;p&gt;노드 간에 원하는 모든 유형의 관계를 지정할 수 있는데, 동사와 행위 등으로 좋은 명명 규칙을 사용하는 것이 좋다. 잘못된 관계 유형 이름은 Cypher를 읽고 쓰는 것을 더 어렵게 만든다(잘 작성하게 되면, 영어처럼 보일 것이다!).&lt;/p&gt;
&lt;p&gt;예를 들어, 예제 그래프에서 관계 유형을 살펴보겠다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;[:LIKES]&lt;/code&gt; - 노드를 관계의 양쪽에 배치할 때 의미가 있다(Jennifer LIKES Graphs).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[:IS_FRIENDS_WITH]&lt;/code&gt; - 노드를 배치할 때 의미가 있다(Jennifer IS_FRIENDS_WITH Michael).&lt;/li&gt;
&lt;li&gt;&lt;code&gt;[:WORKS_FOR]&lt;/code&gt; - 노드에 적합하다(Jennifer WORKS_FOR Neo4j).&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;관계-변수&#34;&gt;관계 변수&lt;/h3&gt;
&lt;p&gt;노드에서 했던 것처럼 나중에 쿼리에서 관계를 참조하려면, &lt;code&gt;[r]&lt;/code&gt; 또는 &lt;code&gt;[rel]&lt;/code&gt;와 같은 변수를 지정할 수 있다. &lt;code&gt;[likes]&lt;/code&gt; 또는 &lt;code&gt;[knows]&lt;/code&gt;와 같이 더 길고 표현력이 풍부한 변수 이름을 사용할 수도 있다. 나중에 관계를 참조할 필요가 없으면 두 개의 대시 &lt;code&gt;--&lt;/code&gt;, &lt;code&gt;--&amp;gt;&lt;/code&gt;,&lt;code&gt;&amp;lt;--&lt;/code&gt;를 사용하여 익명 관계를 지정할 수 있다.&lt;/p&gt;
&lt;p&gt;예를 들어, 관계 및 해당 세부 정보를 참조하기 위해 나중에 쿼리에서 &lt;code&gt;rel&lt;/code&gt; 변수를 사용하여 &lt;code&gt;-[rel]-&amp;gt;&lt;/code&gt; 또는 &lt;code&gt;-[rel:LIKES]-&amp;gt;&lt;/code&gt;으로 호출 할 수 있다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;-[LIKES]-&amp;gt;&lt;/code&gt;와 같은 관계 유형 앞에 콜론(&lt;code&gt;:&lt;/code&gt;)이 빠지게 되면, 변수를 나타낸다. 이는 관계 유형이 아니게 된 것이고, 관계 유형이 선언되지 않았기 때문에 Cypher는 모든 유형의 관계를 검색하게 된다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;노드-또는-관계-속성&#34;&gt;노드 또는 관계 속성&lt;/h2&gt;
&lt;p&gt;여기서는 노드, 관계 및 레이블에 대해 Cypher를 작성하는 방법에 대해 설명하였다. 속성 그래프 데이터 모델의 마지막 부분은 속성에 대한 것이다. 속성은 노드 및 관계에 추가 세부 정보를 제공하는 이름-값 쌍이라는 점을 기억하자.&lt;/p&gt;
&lt;p&gt;Cypher에서 이를 나타내기 위해 노드의 괄호 또는 관계의 괄호 안에 중괄호를 사용할 수 있다. 속성의 이름과 값은 중괄호 안에 들어간다. 예제 그래프에는 노드 속성(&lt;code&gt;name&lt;/code&gt;)과 관계 속성(&lt;code&gt;since&lt;/code&gt;)이 모두 존재한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;노드 속성: &lt;code&gt;(p:Person {name: &#39;Jennifer&#39;})&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;관계 속성: &lt;code&gt;-[rel:IS_FRIENDS_WITH {since: 2018}]-&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/neo4j/cypher_graph_props.jpg&#34; alt=&#34;사이퍼 그래프 속성&#34;&gt;&lt;/p&gt;
&lt;p&gt;속성은 다양한 데이터 유형의 값을 가질 수 있다. Cypher가 제공하는 전체 목록을 보려면 값 및 유형 에 대한 매뉴얼 섹션을 참조한다.&lt;/p&gt;
&lt;h2 id=&#34;사이퍼의-패턴&#34;&gt;사이퍼의 패턴&lt;/h2&gt;
&lt;p&gt;노드와 관계는 그래프 패턴의 구조를 구성한다. 이러한 구조를 함께 사용하여, 단순하거나 복잡한 패턴을 표현할 수 있다. 패턴은 그래프의 가장 강력한 기능이다. Cypher에서는 연속 경로로 작성하거나 더 작은 패턴으로 분리하고 쉼표로 묶을 수 있다.&lt;/p&gt;
&lt;p&gt;Cypher에서 패턴을 나타내기 위해서는 지금까지 배운 노드 구문과 관계 구문을 결합해야 한다.&lt;/p&gt;
&lt;p&gt;예를 들어, &lt;code&gt;Jennifer likes Graphs&lt;/code&gt;을 Cypher에서 표현하면, 아래 코드와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-cypher&#34; data-lang=&#34;cypher&#34;&gt;(p:Person {name: &amp;#34;Jennifer&amp;#34;})-[rel:LIKES]-&amp;gt;(g:Technology {type: &amp;#34;Graphs&amp;#34;})
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Cypher의 이 부분은 우리가 원하는 패턴을 알려주지만, 기존 패턴을 찾을 것인지, 새 패턴으로 삽입할 것인지는 알려주지 않는다. Cypher에게 패턴으로 무엇을 하려는지 알려주려면 몇 가지 키워드를 추가해야 한다.&lt;/p&gt;
&lt;h2 id=&#34;원문&#34;&gt;원문&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://neo4j.com/developer/cypher/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Cypher Query Language - Developer Guides&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://neo4j.com/developer/cypher/intro-cypher/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Getting Started with Cypher - Developer Guides&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;오로지 텍스트와 특수문자만을 조합하여 사진이나 그림을 흉내내는 것을 말한다.&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;

      </description>
      
      <category>Neo4j</category>
      
      <category>Graph Database</category>
      
    </item>
    
    <item>
      <title>Neo4j Cypher 쿼리</title>
      <link>https://www.devkuma.com/docs/neo4j/cypher-querying/</link>
      <pubDate>Sun, 14 May 2023 03:20:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/neo4j/cypher-querying/</guid>
      <description>
        
        
        &lt;h2 id=&#34;cypher-키워드&#34;&gt;Cypher 키워드&lt;/h2&gt;
&lt;p&gt;대부분의 프로그래밍 언어와 마찬가지로 Cypher에는 쿼리 부분의 특정 작업을 위해 예약된 몇 개의 단어가 있다. Neo4j에서 데이터를 생성, 읽기, 업데이트 또는 삭제할 수 있어야 하며 키워드는 이러한 기능을 수행하는데 도움이 된다. 두 가지 일반적인 키워드에 대해 자세히 살펴보겠다(자세한 내용은 이후에 가이드에서 다룰 예정이다).&lt;/p&gt;
&lt;h3 id=&#34;match&#34;&gt;MATCH&lt;/h3&gt;
&lt;p&gt;Cypher의 &lt;code&gt;MATCH&lt;/code&gt; 키워드는 데이터베이스에서 기존 노드, 관계, 레이블, 속성 또는 패턴을 검색하는 것이다. SQL에 익숙하다면 SQL에서의 &lt;code&gt;SELECT&lt;/code&gt;와 &lt;code&gt;MATCH&lt;/code&gt;는 거의 비슷하게 동작한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;MATCH&lt;/code&gt;를 사용하여 데이터베이스에서 모든 노드 레이블을 찾고, 특정 노드를 검색하고, 특정 관계가 있는 모든 노드를 찾아 내며, 노드 및 관계의 패턴을 찾는 등의 작업을 수행할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;return&#34;&gt;RETURN&lt;/h3&gt;
&lt;p&gt;Cypher의 &lt;code&gt;RETURN&lt;/code&gt; 키워드는 Cypher 쿼리에서 반환할 수 있는 값 또는 결과를 지정한다. 쿼리 결과에서 노드, 관계, 노드 및 관계 속성 또는 패턴을 반환하도록 Cypher에 지시할 수 있고, 데이터 저장을 수행할 때는 필요하지 않지만, 읽기에는 필요하다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;RETURN&lt;/code&gt;는 노드 및 관계 변수를 사용할 때 중요해진다. 노드, 관계, 속성 또는 패턴을 다시 가져오려면 반환하려는 데이터에 대해 &lt;code&gt;MATCH&lt;/code&gt; 절에 변수를 지정해야 한다.&lt;/p&gt;
&lt;h2 id=&#34;사이퍼-예제&#34;&gt;사이퍼 예제&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;MATCH&lt;/code&gt;, &lt;code&gt;RETURN&lt;/code&gt; 키워드를 사용하여 지금까지 배운 구문의 몇 가지 예를 살펴보겠다. 각 예제는 우리가 하고자 하는 것에 대한 설명으로 시작하고 Neo4j 브라우저에서 실행된 쿼리 결과 아래에 이미지를 보여준다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;예제 1&lt;/strong&gt;: Person 그래프에서 레이블이 지정된 노드를 찾는다. &lt;code&gt;RETURN&lt;/code&gt;에서 &lt;code&gt;Person&lt;/code&gt; 노드를 검색하려면, 노드에 대해 &lt;code&gt;p&lt;/code&gt;와 같은 변수를 사용해야 한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MATCH (p:Person)
RETURN p
LIMIT 1
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;예제 2&lt;/strong&gt;: &lt;code&gt;Person&lt;/code&gt; 그래프에서 이름이 &amp;lsquo;Tom Hanks&amp;rsquo;인 노드를 찾는다. 나중에 같은 이름을 참조하는 한 변수 이름을 원하는 대로 지정할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MATCH (tom:Person {name: &amp;#39;Tom Hanks&amp;#39;})
RETURN tom
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;예제 3&lt;/strong&gt;: Tom Hanks가 감독한 &lt;code&gt;Movie&lt;/code&gt;를 찾는다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MATCH (:Person {name: &amp;#39;Tom Hanks&amp;#39;})-[:DIRECTED]-&amp;gt;(movie:Movie)
RETURN movie
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;예제 4&lt;/strong&gt;: Tom Hanks가 감독한 것을 찾지만 이번에는 영화 제목만 반환한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;MATCH (:Person {name: &amp;#39;Tom Hanks&amp;#39;})-[:DIRECTED]-&amp;gt;(movie:Movie)
RETURN movie.title
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;별칭-반환-값&#34;&gt;별칭 반환 값&lt;/h2&gt;
&lt;p&gt;모든 속성이 &lt;code&gt;movie.title&lt;/code&gt; 위의 예와 같이 단순하지는 않다. 일부 속성은 속성 길이, 여러 단어로 된 설명, 개발자 전문 용어 및 기타 단축키로 인해 이름이 잘못되었다. 이러한 명명 규칙은 특히 보고서 및 기타 사용자 대면 인터페이스에서 끝나는 경우 읽기 어려울 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;// 이름이 좋지 않은 속성
MATCH (tom:Person {name:&amp;#39;Tom Hanks&amp;#39;})-[rel:DIRECTED]-(movie:Movie)
RETURN tom.name, tom.born, movie.title, movie.released
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;SQL과 마찬가지로 &lt;code&gt;AS&lt;/code&gt; 키워드를 사용하고 더 간단한 이름으로 속성의 별칭을 지정하여, 반환 결과의 이름을 바꿀 수 있다. 고객의 주문과 주문 항목 수를 나열하는 목업 예제를 볼 수 있다.&lt;/p&gt;
&lt;p&gt;SQL과 마찬가지로 &lt;code&gt;AS&lt;/code&gt; 키워드를 사용하고 속성에 더 간편한 이름으로 별칭을 지정하여 결과의 변수명을 바꿀 수 있음&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;고객의 주문과 주문의 항목 수를 나열하기 위한 예제&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;//cleaner printed results with aliasing
MATCH (tom:Person {name:&amp;#39;Tom Hanks&amp;#39;})-[rel:DIRECTED]-(movie:Movie)
RETURN tom.name AS name, tom.born AS `Year Born`, movie.title AS title, movie.released AS `Year Released`
&lt;/code&gt;&lt;/pre&gt;&lt;blockquote&gt;
&lt;p&gt;별칭 앞뒤에 백틱(`) 문자를 사용하여 공백이 있는 반환 별칭을 지정할 수 있다(&lt;code&gt;movie.released AS `Year Released` &lt;/code&gt;). 공백이 포함된 별칭이 없으면 백틱을 사용할 필요가 없다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://neo4j.com/developer/cypher/querying/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Querying with Cypher - Developer Guides&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Neo4j</category>
      
      <category>Graph Database</category>
      
    </item>
    
    <item>
      <title>Spring Data Neo4j - Neo4j 데이터 추가 및 조회</title>
      <link>https://www.devkuma.com/docs/spring-data-neo4j/accessing-data-neo4j/</link>
      <pubDate>Fri, 12 May 2023 16:03:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/spring-data-neo4j/accessing-data-neo4j/</guid>
      <description>
        
        
        &lt;h2 id=&#34;개요&#34;&gt;개요&lt;/h2&gt;
&lt;p&gt;Neo4j는 그래프 데이터베이스 중에 하나이며, Spring Data에서는 Neo4j를 다를 수 있는 인테페이스를 제공하는 프레임워크를 제공한다.&lt;/p&gt;
&lt;p&gt;Kotlin 언어를 이용하여 간단한 Spring Data Neo4j 활용한 프로젝트를 만들어 보겠다.&lt;/p&gt;
&lt;h2 id=&#34;neo4j-서버-준비&#34;&gt;Neo4j 서버 준비&lt;/h2&gt;
&lt;p&gt;Neo4j는 오픈 소스 서버이기에 무료로 설치하거나, Docker로 실행할 수 있다.&lt;/p&gt;
&lt;p&gt;Neo4j macOS 환경에서는 3가지 설치 방법이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.devkuma.com/docs/neo4j/installation-macos/&#34;&gt;macOS 환경에서 다운로드 받아 설치&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.devkuma.com/docs/neo4j/installation-homebrew/&#34;&gt;macOS 환경에서 homebrew로 설치&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.devkuma.com/docs/neo4j/installation-docker/&#34;&gt;macOS 환경에서 Docker 설치&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;본인에 원하는 방식으로 설치를 해도 상관 없다.&lt;/p&gt;
&lt;h2 id=&#34;neo4j-프로젝트-생성&#34;&gt;Neo4j 프로젝트 생성&lt;/h2&gt;
&lt;p&gt;아래와 같이 &lt;code&gt;curl&lt;/code&gt; 명령어를 사용하여 Spring Boot 초기 프로젝트를 생성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl https://start.spring.io/starter.tgz &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;-d &lt;span style=&#34;color:#000&#34;&gt;bootVersion&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;3.0.6 &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;-d &lt;span style=&#34;color:#000&#34;&gt;dependencies&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;data-neo4j &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;-d &lt;span style=&#34;color:#000&#34;&gt;baseDir&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;spring-data-neo4j &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;-d &lt;span style=&#34;color:#000&#34;&gt;groupId&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;com.devkuma &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;-d &lt;span style=&#34;color:#000&#34;&gt;artifactId&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;spring-data-neo4j &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;-d &lt;span style=&#34;color:#000&#34;&gt;packageName&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;com.devkuma.neo4j &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;-d &lt;span style=&#34;color:#000&#34;&gt;applicationName&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;Neo4jApplication &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;-d &lt;span style=&#34;color:#000&#34;&gt;packaging&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;jar &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;-d &lt;span style=&#34;color:#000&#34;&gt;language&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;kotlin &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;-d &lt;span style=&#34;color:#000&#34;&gt;javaVersion&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;17&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&lt;/span&gt;-d &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;gradle-project-kotlin &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; tar -xzvf -
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 명령어를 실행하게 되면 Java 17, Spring Boot 버전은 3.0.6으로 프로젝트가 생성된다.&lt;/p&gt;
&lt;h3 id=&#34;빌드-스크립트&#34;&gt;빌드 스크립트&lt;/h3&gt;
&lt;p&gt;빌드 스크립트에  Neo4j을 동작시키기 위한 라이브러리를 아래와 같이 추가한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/build.gradle.kts&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;dependencies&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#000&#34;&gt;implementation&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;org.springframework.boot:spring-boot-starter-data-neo4j&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#000&#34;&gt;implementation&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;org.jetbrains.kotlin:kotlin-reflect&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#000&#34;&gt;testImplementation&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;org.springframework.boot:spring-boot-starter-test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;의존성 라이브러리에 Spring Data Neo4j 라이브러리(&lt;code&gt;spring-boot-starter-data-neo4j&lt;/code&gt;)가 포함된 것을 볼 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;entity-정의&#34;&gt;Entity 정의&lt;/h2&gt;
&lt;p&gt;Neo4j는 엔터티와 엔터티의 관계를 연결되며, 두 방향 모두 똑같이 중요한다. 각 사람에 대한 레코드를 저장하는 시스템을 모델링한다고 생각해 보자. 여기서 특정 사람의 동료도 추적하려고 한다. 예를 들어, 아래 엔티티에서 &lt;code&gt;teammates&lt;/code&gt;에 해당된다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;src/main/java/com/devkuma/neo4j/entity/Person.java&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;com.devkuma.neo4j.entity&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.data.neo4j.core.schema.GeneratedValue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.data.neo4j.core.schema.Id&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.data.neo4j.core.schema.Node&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.data.neo4j.core.schema.Relationship&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;java.util.*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;java.util.stream.Collectors&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Node&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Id&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@GeneratedValue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Long&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Relationship&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;TEAMMATE&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;teammates&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;MutableSet&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;?&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;worksWith&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;teammates&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;teammates&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;HashSet&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;teammates&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!!&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;add&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;override&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;toString&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;():&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;$name&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;s teammates =&amp;gt; &amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;+&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#000&#34;&gt;Optional&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ofNullable&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;teammates&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;orElse&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mutableSetOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()).&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;stream&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;map&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;obj&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;obj&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;collect&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Collectors&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;toList&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;쿼리-repository-생성&#34;&gt;쿼리 Repository 생성&lt;/h2&gt;
&lt;p&gt;Spring Data Neo4j는 Neo4j에 데이터를 저장하는데 중점을 둔다. 그러나 조회 쿼리 파생 기능을 포함하여 Spring Data Commons 프로젝트의 기능을 상속받는다. 기본적으로 Neo4j의 쿼리 언어를 배울 필요가 없다. 대신 몇 가지 메서드를 작성해야 쿼리가 자동으로 작성되도록 할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;src/main/java/com/devkuma/neo4j/repository/PersonRepository.java&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;com.devkuma.neo4j.repository&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;com.devkuma.neo4j.entity.Person&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.data.neo4j.repository.Neo4jRepository&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PersonRepository&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Neo4jRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Long&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;findByName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;):&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;?&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;findByTeammatesName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;):&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;List&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;PersonRepository&lt;/code&gt; 인터페이스는 &lt;code&gt;Neo4jRepository&lt;/code&gt; 확장하고, 작동하려는 유형(&lt;code&gt;Person&lt;/code&gt;)을 연결한다. 이 인터페이스는 표준 CRUD(만들기, 읽기, 업데이트 및 삭제) 작업을 비롯한 많은 작업과 함께 제공된다.&lt;/p&gt;
&lt;h2 id=&#34;neo4j-접근-권한&#34;&gt;Neo4j 접근 권한&lt;/h2&gt;
&lt;p&gt;Neo4j Community Edition에 접근하려면 자격 증명 설정이 필요하다.
spring 기본 설정 파일인 &lt;code&gt;application.properties&lt;/code&gt;를 &lt;code&gt;application.yml&lt;/code&gt;로 변경하고 아래와 같이 설정을 넣는다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;/src/main/resources/application.yml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;spring&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;neo4j&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;uri&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bolt://localhost:7687&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;authentication&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;username&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;neo4j&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;      &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;password&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;secret123&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;로그-설정&#34;&gt;로그 설정&lt;/h2&gt;
&lt;p&gt;로그를 표시하기 위해 의존성으로 &lt;code&gt;kotlin-logging&lt;/code&gt; 라이브러리를 추가한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;dependencies&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// .. 생략 ..
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#000&#34;&gt;implementation&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;io.github.microutils:kotlin-logging:3.0.5&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그리고, Spring 설정 파일에 로그 Level를 설정한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yml&#34; data-lang=&#34;yml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;logging&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;org.springframework.data.neo4j.cypher&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ERROR&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 설정이 없으면 cypher 관련 WARN이 발생한다. (&lt;em&gt;아무래도, Spring Data Neo4j 업데이트가 필요해 보인다.&lt;/em&gt;)&lt;/p&gt;
&lt;h2 id=&#34;애플리케이션-클래스-생성&#34;&gt;애플리케이션 클래스 생성&lt;/h2&gt;
&lt;p&gt;Spring Initializr는 애플리케이션을 위한 간단한 클래스를 생성해준다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;src/main/java/com/devkuma/neo4j/entity/Person.java&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;com.devkuma.neo4j&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.boot.runApplication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@SpringBootApplication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Neo4Ajpplication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;	&lt;span style=&#34;color:#000&#34;&gt;runApplication&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Neo4Ajpplication&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;(*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 생성된 애플리케이션 클래스를 아래와 같이 변경한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;package&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;com.devkuma.neo4j&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;com.devkuma.neo4j.entity.Person&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;com.devkuma.neo4j.repository.PersonRepository&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;mu.KotlinLogging&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.beans.factory.annotation.Autowired&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.boot.CommandLineRunner&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.boot.autoconfigure.SpringBootApplication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.boot.runApplication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.context.annotation.Bean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;org.springframework.data.neo4j.repository.config.EnableNeo4jRepositories&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;kotlin.system.exitProcess&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;log&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;KotlinLogging&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;logger&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@SpringBootApplication&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@EnableNeo4jRepositories&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Neo4jApplication&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Bean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;demo&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Autowired&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;personRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PersonRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;):&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CommandLineRunner&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;CommandLineRunner&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;personRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;deleteAll&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;greg&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;greg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Greg&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;roy&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;roy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Roy&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;craig&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;craig&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Craig&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;team&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;List&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;listOf&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;greg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;roy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;craig&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;info&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Before linking up with Neo4j...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;team&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;stream&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;forEach&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#000&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;info&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${person}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;personRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;save&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;greg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;personRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;save&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;roy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;personRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;save&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;craig&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;greg&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;personRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;findByName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;greg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;greg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;worksWith&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;roy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;greg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;worksWith&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;craig&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;personRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;save&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;greg&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;roy&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;personRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;findByName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;roy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;!!&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;roy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;worksWith&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;craig&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;personRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;save&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;roy&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;info&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Lookup each person by name...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;team&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;stream&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;().&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;forEach&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#000&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;info&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${personRepository.findByName(person.name)}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;teammates&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;personRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;findByTeammatesName&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;craig&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;info&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;The following have &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${craig.name}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt; as a teammate...&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;teammates&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;stream&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;forEach&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Person&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;log&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;info&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;\t&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${person.name}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;fun&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Array&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;runApplication&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Neo4jApplication&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;(*&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;args&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;exitProcess&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;@EnableNeo4jRepositories&lt;/code&gt;
&lt;ul&gt;
&lt;li&gt;이 어노테이션이 있으므써, Neo4j 설정이 활성화 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;초기에는 모두 데이터를 삭제하고, &amp;ldquo;Greg&amp;rdquo;, &amp;ldquo;Roy&amp;rdquo;, &amp;ldquo;Craing&amp;quot;을 넣고, &lt;code&gt;TEAMMATE&lt;/code&gt;를 &lt;code&gt;workWith(..)&lt;/code&gt; 함수로 추가하고 있는 코드를 확인할 수 있다.&lt;/li&gt;
&lt;li&gt;결과로는 각 사람의 teammates를 표시해주고, 반대로 &amp;ldquo;Craig&amp;quot;를 teammate로 지정한 사람을 표시해주고 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;애플리케이션-실행&#34;&gt;애플리케이션 실행&lt;/h2&gt;
&lt;p&gt;그럼 실행을 해보면, 결과가 로그로 표시되는 것을 볼 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-log&#34; data-lang=&#34;log&#34;&gt;2023-05-13T01:53:34.640+09:00  INFO 36427 --- [           main] com.devkuma.neo4j.Neo4jApplication       : Before linking up with Neo4j...
2023-05-13T01:53:34.640+09:00  INFO 36427 --- [           main] com.devkuma.neo4j.Neo4jApplication       : 	Greg&amp;#39;s teammates =&amp;gt; []
2023-05-13T01:53:34.640+09:00  INFO 36427 --- [           main] com.devkuma.neo4j.Neo4jApplication       : 	Roy&amp;#39;s teammates =&amp;gt; []
2023-05-13T01:53:34.640+09:00  INFO 36427 --- [           main] com.devkuma.neo4j.Neo4jApplication       : 	Craig&amp;#39;s teammates =&amp;gt; []
2023-05-13T01:53:34.852+09:00  INFO 36427 --- [           main] com.devkuma.neo4j.Neo4jApplication       : Lookup each person by name...
2023-05-13T01:53:34.865+09:00  INFO 36427 --- [           main] com.devkuma.neo4j.Neo4jApplication       : 	Greg&amp;#39;s teammates =&amp;gt; [Craig, Roy]
2023-05-13T01:53:34.874+09:00  INFO 36427 --- [           main] com.devkuma.neo4j.Neo4jApplication       : 	Roy&amp;#39;s teammates =&amp;gt; [Craig]
2023-05-13T01:53:34.881+09:00  INFO 36427 --- [           main] com.devkuma.neo4j.Neo4jApplication       : 	Craig&amp;#39;s teammates =&amp;gt; []
2023-05-13T01:53:34.893+09:00  INFO 36427 --- [           main] com.devkuma.neo4j.Neo4jApplication       : The following have Craig as a teammate...
2023-05-13T01:53:34.894+09:00  INFO 36427 --- [           main] com.devkuma.neo4j.Neo4jApplication       : 	Greg
2023-05-13T01:53:34.894+09:00  INFO 36427 --- [           main] com.devkuma.neo4j.Neo4jApplication       : 	Roy
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Neo4j Browser(&lt;code&gt;http://localhost:7474/browser/&lt;/code&gt;)에 접속해 보면 Node List를 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/spring-data-neo4j/spring-data-neo4j-accessing-data-neo4j.png&#34; alt=&#34;Accessing Data Neo4j&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://spring.io/guides/gs/accessing-data-neo4j/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Getting Started | Accessing Data with Neo4j&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;공식 문서에도 불구하고 내용하고 코드가 안맞는 부분이 많았다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;위에 예제 코드는 &lt;a href=&#34;https://github.com/devkuma/spring-tutorial/tree/main/spring-data-neo4j&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에서 확인해 볼 수 있다.&lt;/p&gt;

      </description>
      
      <category>Kotlin</category>
      
      <category>Spring</category>
      
      <category>Spring Data</category>
      
      <category>Neo4j</category>
      
    </item>
    
  </channel>
</rss>
