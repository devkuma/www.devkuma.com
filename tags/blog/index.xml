<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devkuma – Blog</title>
    <link>https://www.devkuma.com/tags/blog/</link>
    <image>
      <url>https://www.devkuma.com/tags/blog/logo/180x180.jpg</url>
      <title>Blog</title>
      <link>https://www.devkuma.com/tags/blog/</link>
    </image>
    <description>Recent content in Blog on devkuma</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <managingEditor>kc@example.com (kc kim)</managingEditor>
    <webMaster>kc@example.com (kc kim)</webMaster>
    <copyright>The devkuma</copyright>
    
	  <atom:link href="https://www.devkuma.com/tags/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Docusaurus 문서 생성 도구</title>
      <link>https://www.devkuma.com/docs/docusaurus/getting-started/</link>
      <pubDate>Mon, 11 Mar 2024 01:03:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/docusaurus/getting-started/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/docusaurus/docusaurus-eyecatch-960x504.png&#34; alt=&#34;docusaurus&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;docusaurus란&#34;&gt;Docusaurus란?&lt;/h2&gt;
&lt;p&gt;Docusaurus는 Facebook에서 만든 &lt;a href=&#34;https://github.com/facebook/docusaurus&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;오픈 소스 프로젝트&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;로, 정적 웹사이트를 만들기 위한 도구이다. 특히 개발자들이 기술 문서를 작성하고 호스팅하는 데 사용되고 있다. Docusaurus는 React를 기반으로 한 사용자 친화적인 문서화 도구이며, Markdown을 사용하여 쉽게 문서를 작성할 수 있다.&lt;/p&gt;
&lt;p&gt;Docusaurus의 주요 특징은 다음과 같다:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;사용자 친화적인 문서화
&lt;ul&gt;
&lt;li&gt;Markdown을 사용하여 쉽게 문서를 작성할 수 있다.&lt;/li&gt;
&lt;li&gt;또한 사용자 정의 가능한 레이아웃과 테마를 제공하여 문서의 시각적인 디자인을 개선할 수 있다.&lt;/li&gt;
&lt;li&gt;Markdown 뿐만 아니라 JSX를 포함한 &lt;a href=&#34;https://mdxjs.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MDX&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; ​​문서도 작성할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;검색 기능
&lt;ul&gt;
&lt;li&gt;Docusaurus는 강력한 검색 기능을 제공하여 사용자가 쉽게 원하는 정보를 찾을 수 있도록 돕습니다.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.algolia.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Algolia&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;와 협력하여 쉽게 검색 기능을 추가할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;반응형 디자인
&lt;ul&gt;
&lt;li&gt;모바일 및 데스크톱 디바이스에서도 잘 작동하도록 반응형 디자인이 구현되어 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;다국어 지원
&lt;ul&gt;
&lt;li&gt;다국어 문서 작성을 위한 지원이 내장되어 있어 글로벌 사용자들에게 다양한 언어로 문서를 제공할 수 있다.&lt;/li&gt;
&lt;li&gt;다국어 대응(현지화)도 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;플러그인 시스템
&lt;ul&gt;
&lt;li&gt;Docusaurus는 확장성을 높이기 위한 플러그인 시스템을 제공하여 필요에 맞게 기능을 추가하고 확장할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;그밖에
&lt;ul&gt;
&lt;li&gt;생성된 문서(사이트)는 React에서 작동하며 커스터마이징 할 수 있다.&lt;/li&gt;
&lt;li&gt;문서 버전 관리가 가능하며 제품 버전에 맞는 문서를 제공할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Docusaurus는 많은 개발자들이 자신의 프로젝트나 제품의 문서화에 사용하고 있으며, 커뮤니티에서 활발하게 유지보수되고 있다.&lt;/p&gt;
&lt;h2 id=&#34;환경&#34;&gt;환경&lt;/h2&gt;
&lt;p&gt;다음과 같은 환경에서 검증하고 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% sw_vers
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ProductName:		macOS
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ProductVersion:		14.2.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;BuildVersion:		23C71
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% node -v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;v21.6.2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% npx -v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;10.2.4
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;npx-설치-하기&#34;&gt;npx 설치 하기&lt;/h3&gt;
&lt;p&gt;Docusaurus는 npx로 설치를 해야 한다. 혹시 없다면 설치를 하자.&lt;/p&gt;
&lt;p&gt;설치 방법은 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;npm install npx -g
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;npx는 npm 레지스트리에 있는 패키지를 더 쉽게 설치하고 관리하도록 도와주는 CLI(Command-line interface) 도구이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;npm: Package Manager (관리)&lt;/li&gt;
&lt;li&gt;npx: Package Runner (실행)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;프로젝트-만들기&#34;&gt;프로젝트 만들기&lt;/h2&gt;
&lt;p&gt;Docusaurus에 대한 프로젝트 생성에는 Scaffold 명령이 제공되므로 이를 사용하기 쉽다. 명령은 다음 형식으로 실행된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npx @docusaurus/init@latest init &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;siteName&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;template&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;rootDir&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;template은 classic과 facebook을 선택할 수 있다. 기본적으로 classic으로 괜찮고, facebook을 선택하면 Facebook open source project용 로고가 설정되어 있다.&lt;/p&gt;
&lt;p&gt;그럼 실행해 보겠다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; /path/to/working
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npx @docusaurus/init@latest init devkuma-mysite classic
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설치가 완료하면 아래와 같이 표시 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Successfully created &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;devkuma-mysite&amp;#34;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Inside that directory, you can run several commands:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  npm start
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Starts the development server.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  npm run build
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Bundles your website into static files &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; production.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  npm run serve
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Serves the built website locally.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  npm deploy
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Publishes the website to GitHub pages.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;We recommend that you begin by typing:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; devkuma-mysite
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  npm start
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Happy building awesome websites!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;디렉터리-구조&#34;&gt;디렉터리 구조&lt;/h2&gt;
&lt;p&gt;설치가 완료되고, 설치된 경로로 이동해서, 기본 명령어로 생성된 파일을 확인해 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; devkuma-mysite
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;생성되는 Docusaurus의 디렉터리 구조는 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% tree -I node_modules -L &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── README.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── babel.config.js
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── blog
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── 2019-05-28-first-blog-post.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── 2019-05-29-long-blog-post.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── 2021-08-01-mdx-blog-post.mdx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── 2021-08-26-welcome
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── authors.yml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── docs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── intro.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── tutorial-basics
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── tutorial-extras
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── docusaurus.config.js
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── package-lock.json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── package.json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── sidebars.js
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── src
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── components
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── css
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── pages
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── static
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    └── img
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt; directories, &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt; files
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;blog/
&lt;ul&gt;
&lt;li&gt;블로그용 Markdown 문서가 저장되는 디렉터리이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;docs/
&lt;ul&gt;
&lt;li&gt;문서용 Markdown 문서가 저장되는 디렉터리이다.&lt;/li&gt;
&lt;li&gt;사이드바에 나타나는 문서의 순서는 sidebar.js 에서 설정할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;src/
&lt;ul&gt;
&lt;li&gt;페이지 설정이나 React 컴포넌트의 기능 및 스타일링을 커스터마이징할 수 있는 소스 디렉터리이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;src/pages/
&lt;ul&gt;
&lt;li&gt;웹페이지로 변환되는 콘텐츠이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;static/&lt;/li&gt;
&lt;li&gt;정적인 파일이 위치되는 곳으로, 이곳에 있는 파일들은 빌드시에 build 디렉토리로 복사된다.&lt;/li&gt;
&lt;li&gt;즉, 배포 후에는 /img/some-image.jpg 등으로 static 파일에 접근할 수 있다.&lt;/li&gt;
&lt;li&gt;docusaurus.config.js
&lt;ul&gt;
&lt;li&gt;docusaurus 사이트의 설정 파일이다. 테마 설정, preset, plugin 등등을 모두 설정할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;sidebars.js
&lt;ul&gt;
&lt;li&gt;문서 페이지에 나타나는 사이드 바의 순서를 명시하는 파일이다.&lt;/li&gt;
&lt;li&gt;이를 docusaurus.config.js 에서 불러와서 presets 또는 plugin 에 설정하는 방식으로 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;문서 용도라면, &lt;code&gt;docs/&lt;/code&gt;, &lt;code&gt;docusaurus.config.js&lt;/code&gt;, &lt;code&gt;sidebar.js&lt;/code&gt;에 주로 수정하게 되는 파일이라고 할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;브라우저에서-확인하면서-커스터마이징-해보기&#34;&gt;브라우저에서 확인하면서 커스터마이징 해보기&lt;/h2&gt;
&lt;p&gt;프로젝트가 생성되면 바로 사이트를 실행하여 확인할 수 있다. 다음 명령어를 실행하면 자동으로 브라우저도 열린다. 또한, 파일을 수정하면 자동으로 브라우저를 다시 불러오기 때문에 수정한 부분을 쉽게 확인할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ npm start
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;또는 아래 명령어 실행된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ npx docusaurus start
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/docusaurus/docusaurus-my-site.png&#34; alt=&#34;docusaurus My Site&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;첫-페이지-변경하기&#34;&gt;첫 페이지 변경하기&lt;/h2&gt;
&lt;p&gt;연습을 위해 첫 페이지에 헤더 부분을 지워보자. &lt;code&gt;src/pages/index.js&lt;/code&gt;가 해당 파일인데, React 컴포넌트로 만들어졌기 때문에 커스터마이징을 위해서는 약간의 지식이 필요할 것 같다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;src/pages/index.js&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;default&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Home&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;siteConfig&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;useDocusaurusContext&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Layout&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;`Hello from &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;siteConfig&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000&#34;&gt;description&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Description will go into a meta tag in &amp;lt;head /&amp;gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/* &amp;lt;HomepageHeader /&amp;gt; */&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;main&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;HomepageFeatures&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;/main&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;/Layout&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;&amp;lt;HomepageHeader /&amp;gt;&lt;/code&gt; 여기를 코멘트 처리를 하였다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/docusaurus/ducusaurus-my-site-2.png&#34; alt=&#34;docusaurus My Site&#34;&gt;&lt;/p&gt;
&lt;p&gt;사라졌다!&lt;/p&gt;
&lt;h2 id=&#34;사이트-헤더에서-blog로의-링크-변경하기&#34;&gt;사이트 헤더에서 Blog로의 링크 변경하기&lt;/h2&gt;
&lt;p&gt;그런 다음 사이트 헤더에 설치된 블로그에 대한 링크를 지워보겠다. 헤더는 개별 페이지가 아닌 테마로 취급하는 부분다. 테마 설정이 docusaurus.config.js되어 있기 때문에 이 파일을 수정합니다.&lt;/p&gt;
&lt;p&gt;이어서 사이트 헤더에 설치된 블로그 링크를 삭제해보겠다. 헤더는 개별 페이지가 아닌 테마에서 다루는 부분이다. 테마 설정은 &lt;code&gt;docusaurus.config.js&lt;/code&gt;에서 이루어지므로 이 파일을 수정하겠다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;docusaurus.config.js&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#000&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;doc&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;docId&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;intro&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;position&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;left&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Tutorial&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// {to: &amp;#39;/blog&amp;#39;, label: &amp;#39;Blog&amp;#39;, position: &amp;#39;left&amp;#39;},
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;https://github.com/facebook/docusaurus&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;GitHub&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#000&#34;&gt;position&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;right&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;themeConfig.navbar.items[]&lt;/code&gt;에서 Blog로 이동하는 네비게이션을 코멘트를 하니까 헤더 메뉴에서 사라진 것을 볼 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/docusaurus/ducusaurus-my-site-3.png&#34; alt=&#34;docusaurus My Site&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;사이드-바-메뉴-확인&#34;&gt;사이드 바 메뉴 확인&lt;/h2&gt;
&lt;p&gt;사이드 바 메뉴 파일을 확인 하자.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;sidebar.js&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;module&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exports&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// By default, Docusaurus generates a sidebar from the docs folder structure
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;tutorialSidebar&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;autogenerated&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;dirName&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}],&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// But you can create a sidebar manually
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;/*
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;  tutorialSidebar: [
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;      type: &amp;#39;category&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;      label: &amp;#39;Tutorial&amp;#39;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;      items: [&amp;#39;hello&amp;#39;],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;  ],
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;   */&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;};&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&amp;ldquo;기본적으로 다큐사우루스는 문서 폴더 구조에서 사이드바를 생성한다고 적혀 있다.&amp;rdquo; 코멘트가 적혀 있고, 그 아래에 &amp;ldquo;하지만 수동으로 사이드바를 만들 수 있다.&amp;ldquo;라고 적혀 있다. 현재 설정은 자동으로 되어 있는거 같다.&lt;/p&gt;
&lt;h2 id=&#34;마무리&#34;&gt;마무리&lt;/h2&gt;
&lt;p&gt;비교적 사용 방법은 어렵지 않은거 같다. 데모 페이지에서 튜토리얼 내용이 있는데, 다음에는 이 내용에 대해서 살펴보도록 하겠다.&lt;/p&gt;

      </description>
      
      <category>Docusaurus</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 블로그</title>
      <link>https://www.devkuma.com/docs/hugo/</link>
      <pubDate>Tue, 29 Nov 2022 21:42:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/</guid>
      <description>
        
        
        
      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Docusaurus 문서 생성 도구</title>
      <link>https://www.devkuma.com/docs/docusaurus/</link>
      <pubDate>Tue, 29 Nov 2022 21:42:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/docusaurus/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/docusaurus/docusaurus-eyecatch-960x504.png&#34; alt=&#34;docusaurus&#34;&gt;&lt;/p&gt;

      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 페이지 요약 시에 한글에 대한 단어 카운트를 제대로 하도록 변경. (hasCJKLanguage, isCJKLanguage)</title>
      <link>https://www.devkuma.com/docs/hugo/cjklanguage/</link>
      <pubDate>Sun, 14 May 2023 16:06:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/cjklanguage/</guid>
      <description>
        
        
        &lt;p&gt;Hugo 포스트 목록 페이지에서는 기사의 시작 부분을 특정 단어 수(70 단어)만 요약 표시한다. 그런데, 이 단어 카운트는 디폴트에서는 영어 등의 단어수를 베이스로 계산되고 있으므로, 한글 등은 올바르게 카운트되지 않고, 요약의 내용이 길게 표시되어 버린다.&lt;/p&gt;
&lt;h2 id=&#34;설정-파일에-설정&#34;&gt;설정 파일에 설정&lt;/h2&gt;
&lt;p&gt;한글 문자 수를 올바르게 계산하여, 짧은 요약을 표시할 수 있도록 설정 파일에서 아래와 같이 &lt;code&gt;hasCJKLanguage&lt;/code&gt;를 &lt;code&gt;true&lt;/code&gt;로 설정 한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;config.toml의 경우&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;hasCJKLanguage&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;config.yaml의 경우&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;hasCJKLanguage&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이것으로 Hugo 내부의 &lt;code&gt;.Summary&lt;/code&gt;, &lt;code&gt;.WordCount&lt;/code&gt;이 한글로 올바르게 작동하게 되고, 짧은 요약 문장이 표시된다.&lt;/p&gt;
&lt;h2 id=&#34;각-페이지별로-설정&#34;&gt;각 페이지별로 설정&lt;/h2&gt;
&lt;p&gt;각 페이지마다 설정을 하고 싶은 경우는 아래와 같이 프론트마터에서 &lt;code&gt;isCJKLanguage&lt;/code&gt;를 &lt;code&gt;true&lt;/code&gt;로 설정한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: 포스트 제목
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: &amp;#34;2023-05-14&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;isCJKLanguage: true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;포스트 본문
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설정 파일에서 &lt;code&gt;hasCJKLanguage&lt;/code&gt;으로 설정하고, Markdown 파일의 머릿말(Front matter)에서 &lt;code&gt;isCJKLanguage&lt;/code&gt;으로 설정한다.&lt;/p&gt;

      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 시작하기</title>
      <link>https://www.devkuma.com/docs/hugo/intro/</link>
      <pubDate>Sun, 14 May 2023 15:36:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/intro/</guid>
      <description>
        
        
        
      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 소스 디렉터리 경로 지정 - 명령 옵션 (hugo server --source)</title>
      <link>https://www.devkuma.com/docs/hugo/source-option/</link>
      <pubDate>Sat, 13 May 2023 02:25:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/source-option/</guid>
      <description>
        
        
        &lt;h2 id=&#34;소스-디렉터리-경로-지정&#34;&gt;소스 디렉터리 경로 지정&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;hugo&lt;/code&gt; 명령을 실행할 때 &lt;code&gt;-s&lt;/code&gt;(&lt;code&gt;--source&lt;/code&gt;)옵션을 사용하여, 소스 디렉터리의 경로를 지정하여 시작할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;예: ~/mysite 다음 소스 코드를 사용하여 Hugo 서버 시작&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo server -s ~/mysite
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;예: ~/mysite 다음 기사 새로 만들기&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo new sample.md -s ~/mysite
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;커멘드-앨리어스-설정&#34;&gt;커멘드 앨리어스 설정&lt;/h2&gt;
&lt;p&gt;위의 예에서는 &lt;code&gt;-s ~/mysite&lt;/code&gt;라는 옵션으로 소스 디렉터리의 지정을 뒷에 하였지만, 앞에 지정해도 hugo 동작한다.&lt;/p&gt;
&lt;p&gt;이를 이용하여 아래와 같은 커멘드 앨리어스(&lt;code&gt;alias&lt;/code&gt;)를 설정해 두면, 어느 디렉터리에서라도 바로 명령을 실행할 수 있어서 편리하다.
&lt;strong&gt;~/.bash_profile&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;alias&lt;/span&gt; hugo-mysite&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;hugo -s ~/mysite
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;예를 들어, 다음과 같이 사용할 수 있습니다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo-mysite new sample.md  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 포스트 만들기&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo-mysite server         &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Hugo 서비 기동&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo-mysite                &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 사이트 빌드(~/mysite/public으로 출력)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 포스트 생성 방법</title>
      <link>https://www.devkuma.com/docs/hugo/new-post/</link>
      <pubDate>Fri, 05 May 2023 23:34:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/new-post/</guid>
      <description>
        
        
        &lt;h2 id=&#34;새-포스트-파일-생성&#34;&gt;새 포스트 파일 생성&lt;/h2&gt;
&lt;p&gt;Hugo에서 게시하는 웹 사이트 포스트는 &lt;code&gt;content&lt;/code&gt; 디렉터리에 Markdown 파일로 만든다(예: &lt;code&gt;sample.md&lt;/code&gt;). 포스트 파일은 비어있는 텍스트 파일에서 만들 수 있지만 &lt;code&gt;hugo new&lt;/code&gt; 명령을 사용하여 포스트 형태 파일(archetypes/default.md)을 기반으로 Markdown 파일을 자동으로 생성할 수 있다.&lt;/p&gt;
&lt;p&gt;포스트 파일(Markdown 파일) 만들기&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo new sample.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/Users/user/my-site/content/sample.md&amp;#34;&lt;/span&gt; created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같이 실행하면 &lt;code&gt;content&lt;/code&gt;디렉터리에 &lt;code&gt;sample.md&lt;/code&gt; 파일이 생성된다. 작성된 파일의 앞 부분에는, 아래와 같은 머리말(Front matter) 라고 하는 헤더가 작성되어 있다. 이 헤더가 &lt;code&gt;archetypes/default.md&lt;/code&gt;에 기반으로 자동 생성된 것이다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;content/sample.md&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: &amp;#34;Sample&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: 2023-05-05T23:50:09+09:00
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;draft: true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그러고 제목(&lt;code&gt;title&lt;/code&gt;)을 원하는대로 다시 작성하고, Front matter 헤더 이후에 기사의 본문을 작성해 가면 된다. 게시할 수 있는 수준까지 작성이 되었다면, 헤더 부분의 &lt;code&gt;draft: true&lt;/code&gt; 행을 삭제한다.&lt;/p&gt;
&lt;h2 id=&#34;archetypes&#34;&gt;Archetypes&lt;/h2&gt;
&lt;p&gt;여기서 기반이 되는 &lt;code&gt;archetypes/default.md&lt;/code&gt; 파일을 살펴보도록 하자.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;archetypes/default.md&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: {{ replace .TranslationBaseName &amp;#34;-&amp;#34; &amp;#34; &amp;#34; | title }}&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: {{ .Date }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;draft: true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;title&lt;/code&gt; 필드에는 &lt;code&gt;hugo new&lt;/code&gt; 명령으로 지정한 이름이 자동으로 들어가고, &lt;code&gt;date&lt;/code&gt; 필드에는 현재의 시각이 자동으로 들어가게 되어 있다. 이 파일의 내용을 바탕으로 포스트 파일이 작성되고 있는 것을 알 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;포스트-작성과-동시에-편집기에서-편집-시작&#34;&gt;포스트 작성과 동시에 편집기에서 편집 시작&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;hugo new&lt;/code&gt; 명령으로 포스트 파일을 만들 때 &lt;code&gt;--editor&lt;/code&gt; 옵션을 지정하면, 포스트 파일 생성과 동시에 지정된 편집기에서 파일을 열 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;예: 기사 파일을 만들고 vim에서 열기&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo new sample.md --editor vim
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;처음에 실행하면 아래와 에러가 나올 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo new sample.md --editor vi
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Content &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/Users/user/hugo-tutorial/my-site/content/sample.md&amp;#34;&lt;/span&gt; created
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Editing &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/Users/user/hugo-tutorial/my-site/content/sample.md&amp;#34;&lt;/span&gt; with &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;vi&amp;#34;&lt;/span&gt; ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Error: access denied: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;vi&amp;#34;&lt;/span&gt; is not whitelisted in policy &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;security.exec.allow&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; the current security configuration is:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;security&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;enableInlineShortcodes&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;security.exec&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;allow&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;^dart-sass-embedded$&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;^go$&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;^npx$&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;^postcss$&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;osEnv&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;(?i)^((HTTPS?|NO)_PROXY|PATH(EXT)?|APPDATA|TE?MP|TERM)$&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;security.funcs&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;getenv&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;^HUGO_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;security.http&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;methods&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;(?i)GET|POST&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;urls&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;.*&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;알려준 메세지 대로 기본 정책을 그래도 복사해서 &lt;code&gt;config.toml&lt;/code&gt; 내용에 넣고, &lt;code&gt;allow&lt;/code&gt; 배열 항목에 &lt;code&gt;&#39;^vim$&#39;&lt;/code&gt;를 추가한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;security&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;enableInlineShortcodes&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;security&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;exec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;allow&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;^dart-sass-embedded$&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;^go$&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;^npx$&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;^postcss$&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;^vim$&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;osEnv&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;(?i)^((HTTPS?|NO)_PROXY|PATH(EXT)?|APPDATA|TE?MP|TERM)$&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;security&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;funcs&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;getenv&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;^HUGO_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;security&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;http&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;methods&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;(?i)GET|POST&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;urls&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;.*&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그러고 다시 시도하면 실행이 될 것이다. 단, 포스트 파일이 먼저 생기고, 에디터를 여는 거라서 기존에 파일이 이미 있다는 메세지가 나올수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo new sample.md --editor vim
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Error: /Users/user/hugo-tutorial/my-site/content/sample.md already exists
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그러면 기존은 지우고 다시 실행하면 된다.&lt;/p&gt;

      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 개요 / 설치하기</title>
      <link>https://www.devkuma.com/docs/hugo/overview/</link>
      <pubDate>Wed, 19 Oct 2022 08:22:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/overview/</guid>
      <description>
        
        
        &lt;h2 id=&#34;static-site-generator-란&#34;&gt;Static Site Generator 란?&lt;/h2&gt;
&lt;p&gt;Static Site Generator(SSG, 정적 사이트 생성기)란? 정적 페이지 기반 웹사이트를 만들어주는 도구로써 콘텐츠와 파일을 읽고 이를 html로 적절히 변환해 주는 기술이다.&lt;/p&gt;
&lt;p&gt;SSG 종류는 &lt;a href=&#34;https://jamstack.org/generators/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;여기&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에서 확인 할 수 있다. 그 중에 GitHub와 함께 많이 사용하는 주요 SSG는 아래와 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Jekyll&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ruby 기반&lt;/li&gt;
&lt;li&gt;현재 가장 인기 있다(GitHub에서 수 제일 많음)&lt;/li&gt;
&lt;li&gt;한글 레퍼런스 문서가 제일 많다.&lt;/li&gt;
&lt;li&gt;빌드가 느린 편이다.&lt;/li&gt;
&lt;li&gt;윈도우 공식 지원 안된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hexo&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Node.js 기반&lt;/li&gt;
&lt;li&gt;중국어 문서가 많다.&lt;/li&gt;
&lt;li&gt;한글 레퍼런스 문서가 많다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Hugo&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Golang 기반&lt;/li&gt;
&lt;li&gt;빌드가 빠르다.&lt;/li&gt;
&lt;li&gt;문서화 잘되어 있다.&lt;/li&gt;
&lt;li&gt;한글 레퍼런스 문서가 많이 없다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;hugo란&#34;&gt;Hugo란?&lt;/h2&gt;
&lt;p&gt;Hugo는 Jekyll, Hexo 등과 같이 웹사이트를 쉽게 만들 수 있게 해주는 Static site generator 중 하나이다. 일종에 블로그 엔진이라 할 수 있다.&lt;br&gt;
페이지 작성은 Markdown으로 할 수 있으며, 다양한 블로그 테마가 제공되고 있어서 원하는 테마를 골라서 쓸 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;hugo-설치&#34;&gt;Hugo 설치&lt;/h2&gt;
&lt;p&gt;아래 사이트에서 OS에 맞게 다운로드 받아 설치한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://github.com/gohugoio/hugo/releases&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;혹은, 아래 사이트 참고 하여 설치한다&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://gohugo.io/getting-started/installing/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;macos에서-homebrew으로-설치&#34;&gt;macOS에서 Homebrew으로 설치&lt;/h3&gt;
&lt;p&gt;macOS용 패키지 관리자인 Homebrew 으로 아래 명령어 한 줄로 쉽게 설치가 가능하다.&lt;/p&gt;
&lt;p&gt;Homebrew으로 설치하는 명령어는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실제 명령을 실행 시켜 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% brew install &lt;span style=&#34;color:#000&#34;&gt;hugo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Downloading https://ghcr.io/v2/homebrew/core/hugo/manifests/0.104.3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Downloading https://ghcr.io/v2/homebrew/core/hugo/blobs/sha256:3b355290c70c54cf0637a9ed70342d289c9f022e4d085e18cb0e4651e3bbe21b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Downloading from https://pkg-containers.githubusercontent.com/ghcr1/blobs/sha256:3b355290c70c54cf0637a9ed70342d289c9f022e4d085e18cb0e4651e3bbe21b?se&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;2022-10-18T23%3A
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;######################################################################## 100.0%&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Pouring hugo--0.104.3.arm64_monterey.bottle.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Caveats
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zsh completions have been installed to:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  /opt/homebrew/share/zsh/site-functions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Summary
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;🍺  /opt/homebrew/Cellar/hugo/0.104.3: &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;48&lt;/span&gt; files, 55.8MB
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;==&lt;/span&gt;&amp;gt; Running &lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;brew cleanup hugo&lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Disable this behaviour by setting HOMEBREW_NO_INSTALL_CLEANUP.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hide these hints with HOMEBREW_NO_ENV_HINTS &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;see &lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;man brew&lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이미 Hugo를 설치한 상태에서 Hugo를 최신 버전으로 업데이트 하려면, 다음 명령을 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% brew upgrade hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설치 후에 버전 확인이 되면, 설치가 제대로 된거다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo v0.104.3+extended darwin/arm64 &lt;span style=&#34;color:#000&#34;&gt;BuildDate&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;unknown
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;windows에서-설치&#34;&gt;Windows에서 설치&lt;/h3&gt;
&lt;p&gt;Windows에서 Hugo를 설치 하려면 &lt;a href=&#34;https://github.com/gohugoio/hugo/releases&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo의 Releases 페이지&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에서 zip 아카이브(hugo_extendedx0.xxx.x_windows-amd64.zip)를 다운로드 받아서 설치하며 된다.&lt;br&gt;
Sass 등의 기능을 사용하는 경우는, &lt;code&gt;hugo_extended&lt;/code&gt;로 시작되는 파일을 사용하지 않으면 안되니 주의가 필요하다.&lt;/p&gt;
&lt;p&gt;배포된 &lt;code&gt;hugo.exe&lt;/code&gt; 적절한 디렉터리에 넣고, 경로를 통과하면 설치가 완료된다.&lt;/p&gt;

      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo에서 구성 파일(config.yml)에 설정된 정보 참조하는 방법</title>
      <link>https://www.devkuma.com/docs/hugo/configuration/</link>
      <pubDate>Sun, 14 May 2023 16:33:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/configuration/</guid>
      <description>
        
        
        &lt;h2 id=&#34;구성-파일-기본&#34;&gt;구성 파일 기본&lt;/h2&gt;
&lt;p&gt;Hugo 사이트의 일반 설정은 루트 디렉터리에 넣고, 다음 구성 파일 중 하나를 사용한다. 파일이 여러개가 있으면 처음에 발견 된 내용이 선택된다.&lt;/p&gt;
&lt;table&gt;
  &lt;thead&gt;
      &lt;tr&gt;
          &lt;th&gt;파일명&lt;/th&gt;
          &lt;th&gt;설명&lt;/th&gt;
      &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;config.toml&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;TOML 형식으로 작성(디폴트)&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;config.yaml&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;YAML 포맷으로 기술&lt;/td&gt;
      &lt;/tr&gt;
      &lt;tr&gt;
          &lt;td&gt;&lt;code&gt;config.json&lt;/code&gt;&lt;/td&gt;
          &lt;td&gt;JSON 형식으로 작성&lt;/td&gt;
      &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;config.toml 설명 예제&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;baseURL&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://www.devkuam.com/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;languageCode&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko-kr&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;내 블로그&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;themesDir&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;../hugo_themes&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;theme&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;devkuma&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설정 가능한 파라미터나, 각각의 디폴트치는 아래에 목록이 있다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/getting-started/configuration/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Configure Hugo｜Hugo&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;설정값-참조&#34;&gt;설정값 참조&lt;/h2&gt;
&lt;h3 id=&#34;hugo가-정의한-매개-변수-참조&#34;&gt;Hugo가 정의한 매개 변수 참조&lt;/h3&gt;
&lt;p&gt;구성 파일에서 설정한 매개 변수는 템플릿 파일 내에서 &lt;code&gt;.Site&lt;/code&gt; 변수를 사용하여 참조할 수 있다. 예를 들어, &lt;code&gt;config.toml&lt;/code&gt;파일에서 설정하거나 title 파라미터 baseURL의 값은 다음과 같이 참조할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;이 사이트 제목은 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;{{ $.Site.Title }}&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;이다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;이 사이트의 기본 URL은 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;{{ $.Site.BaseURL }}&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;이다.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;매개변수 이름의 시작은 대문자로 되어 .Site.title있습니다 .Site.Title. 각각의 설정치가, 어떠한 프로퍼티명으로 참조할 수 있게 되어 있는지는, 아래의 Site 변수의 일람을 보면 알 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://gohugo.io/variables/site/&#34; alt=&#34;Site Variables｜Hugo&#34;&gt;&lt;/p&gt;
&lt;p&gt;파라미터가 설정되어 있는지 여부에 따라 처리를 분기시키려면, 다음과 같은 방식으로 작성하면 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-markdown&#34; data-lang=&#34;markdown&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ with $.Site.GoogleAnalytics }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Google Analytics의 Tracking ID는 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;{{ . }}&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; 이다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ else }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Google Analytics 의 Tracking ID가 설정되어 않되어 있다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 예제는 googleAnalytics 매개 변수를 사용하여, Google 애널리틱스에 대한 추적 ID가 설정되어 있는지 확인한다.&lt;/p&gt;
&lt;h3 id=&#34;사용자-정의-매개변수-참조&#34;&gt;사용자 정의 매개변수 참조&lt;/h3&gt;
&lt;p&gt;구성 파일에서 사용자 정의 매개 변수를 설정하려면, &lt;code&gt;params&lt;/code&gt; 섹션 아래에 매개 변수를 추가한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;config.toml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;baseURL&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://www.devkuam.com/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;languageCode&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko-kr&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;내 블로그&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;params&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;GitHubUser&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;redfreek2c&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;Twitter&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;kimkc&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;Subtitle&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;기술 공유&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;Description&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;여기에서는 사이트 상세 정보를 기록한다&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;SidebarRecentLimit&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;ListOfFoo&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;foo1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;foo2&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;사용자 정의의 파라미터는 템플릿 파일내로부터의 &lt;code&gt;$.Site.Params.이름&lt;/code&gt; 형태로 참조할 수 있다.&lt;/p&gt;
&lt;p&gt;아래 예제에서는 사용자 정의 페라미터 변수의 &lt;code&gt;Description&lt;/code&gt;값을 참조한다.&lt;br&gt;
&lt;strong&gt;layouts/partials/head.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;description&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;content&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{{ if .IsHome }}{{ $.Site.Params.description }}{{ else }}{{ .Description }}{{ end }}&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기에서는 기본 첫 페이지(홈페이지)에서는 구성 파일의 설정(&lt;code&gt;$.Site.Params.Description&lt;/code&gt;)을 참조하고, 그외에 페이지에서는, 각 페이지의 머릿말에 설정된 &lt;code&gt;description&lt;/code&gt;의 값을 참조하도록 되어 있다.&lt;/p&gt;

      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 포스트 생성</title>
      <link>https://www.devkuma.com/docs/hugo/create-post/</link>
      <pubDate>Sun, 14 May 2023 15:36:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/create-post/</guid>
      <description>
        
        
        
      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 서버 시작시 포트 지정 - 명령 옵션 (hugo server --port)</title>
      <link>https://www.devkuma.com/docs/hugo/server-port/</link>
      <pubDate>Sat, 13 May 2023 02:32:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/server-port/</guid>
      <description>
        
        
        &lt;p&gt;Hugo 서버를 hugo server 명령으로 시작하면, 기본적으로 &lt;strong&gt;1313&lt;/strong&gt; 포트를 사용하는 웹 서버가 시작된다.&lt;/p&gt;
&lt;p&gt;그러나, 여러 Hugo 서버를 동시에 시작하려고 하면, 이 후에 Hugo 서버에는 임의의 포트 번호가 할당된다(Private ports인 49152에서 65535까지의 포트 번호가 사용된다).&lt;/p&gt;
&lt;h2 id=&#34;포트-지정&#34;&gt;포트 지정&lt;/h2&gt;
&lt;p&gt;임의의 포트 번호를 사용하도록 지정하려면 아래와 같이 &lt;code&gt;-p&lt;/code&gt;(&lt;code&gt;--port&lt;/code&gt;) 옵션을 사용한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;예: 포트 번호 51234로 Hugo 서버 시작&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo server -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;51234&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;여러-hugo-서버를-동시에-기동&#34;&gt;여러 Hugo 서버를 동시에 기동&lt;/h2&gt;
&lt;p&gt;여러 Hugo 서버를 동시에 시작하는 경우에는 각 사이트에서 사용할 포트 번호를 결정하는 것이 좋다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;예: 3개의 Hugo 서버를 동시에 시작&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo server -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50001&lt;/span&gt; -s ~/mysite1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo server -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50002&lt;/span&gt; -s ~/mysite2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo server -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50003&lt;/span&gt; -s ~/mysite3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같이 시작한 웹 사이트는 각각 아래와 같은 주소로 액세스할 수 있게 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;http://localhost:50001/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://localhost:50002/&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;http://localhost:50003/&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 초안 포스트 생성 방법 - Draft Page</title>
      <link>https://www.devkuma.com/docs/hugo/draft-page/</link>
      <pubDate>Sat, 06 May 2023 00:07:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/draft-page/</guid>
      <description>
        
        
        &lt;h2 id=&#34;초안-포스트&#34;&gt;초안 포스트&lt;/h2&gt;
&lt;p&gt;Hugo의 초안(draft) 기능은 미완성 기사 파일을 일시적으로 다른 기사와 같은 위치에 저장하는 기능이다. 페이지의 머릿말(Front matter) 부분에 &lt;code&gt;draft: true&lt;/code&gt;라고 하는 기입되어 있으면, 그 페이지는 드래프트로서 다루어진다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;YAML 형식의 경우&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;draft&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;---&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;본문&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;TOML 형식의 경우&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;+++&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;draft&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;+++&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;본문&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;초안으로 작성된 포스트는 기본적으로 HTML 파일로 출력되지 않는다. 초안 포스트도 출력하도록 하려면, &lt;code&gt;hugo&lt;/code&gt; 명령에 &lt;code&gt;-D&lt;/code&gt;(&lt;code&gt;--buildDrafts&lt;/code&gt;) 옵션을 지정한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;초안 포스트 출력&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo -D         &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 사이트를 생성하는 경우&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo server -D  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 서버를 기동하는 경우&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;public-디렉터리에-출력되는-초안-포스트에-주의&#34;&gt;public 디렉터리에 출력되는 초안 포스트에 주의&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;hugo&lt;/code&gt; 명령은 디폴트로 &lt;code&gt;public&lt;/code&gt; 디렉터리에 HTML 파일 등을 출력하지만, 이 때, &lt;code&gt;public&lt;/code&gt; 디렉터리내에 이미 존재하는 초안 포스트를 삭제하지는 않는다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo -D  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 이것으로 draft 포스트를 토함해서 생성된다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo     &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 다음에 draft 모드 OFF로 생성해도 기존 초안 포스트가 삭제되지 않는다.&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;웹 사이트를 게시할 때는 초안 기사가 잘못 업로드되지 않도록 주의가 필요하다. 포스트를 업로드하기 전에 &lt;code&gt;public&lt;/code&gt; 디렉터리를 삭제한 다음에 &lt;code&gt;hugo&lt;/code&gt; 명령으로 다시 생성하는 것이 안전하다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Linux / macOS의 경우&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% rm -Rf public &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Windows의 경우&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;gt; rmdir /s /q public &amp;amp; hugo&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;초안-포스트-목록-확인&#34;&gt;초안 포스트 목록 확인&lt;/h2&gt;
&lt;h3 id=&#34;커멘트-라인에서-확인&#34;&gt;커멘트 라인에서 확인&lt;/h3&gt;
&lt;p&gt;커멘드 라인에서 &lt;code&gt;hugo list drafts&lt;/code&gt; 실행하면, &lt;code&gt;contents&lt;/code&gt; 디렉터리의 포스트 중에 초안으로 체크되어 (머릿말에 &lt;code&gt;draft: true&lt;/code&gt;로 되어) 있는 목록을 볼 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo list drafts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;content/draft.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;content/post/sample2.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;참고: &lt;a href=&#34;https://gohugo.io/commands/hugo_list_drafts/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;hugo list drafts｜Hugo&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;템플릿에서-확인&#34;&gt;템플릿에서 확인&lt;/h2&gt;
&lt;p&gt;템플릿 파일에서 초안 포스트에 링크를 열거하려면, 먼저 다음과 같이 작성을 한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;layouts/index.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;Draft Pages&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ul&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {{ range (where .Site.Pages &amp;#34;.Draft&amp;#34; true) }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;li&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{{ .RelPermalink }}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Title }}&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;li&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ul&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;where .Site.Page &amp;quot;.Draft&amp;quot; true&lt;/code&gt;라고 되어 있는 부분은 초안 포스트를를 추출하기 위한 검색 조건을 지정하고 있다.&lt;/li&gt;
&lt;li&gt;사이트의 모든 페이지(&lt;code&gt;.Site.Pages&lt;/code&gt;)에서 페이지 변수 &lt;code&gt;.Draft&lt;/code&gt;의 값이 &lt;code&gt;true&lt;/code&gt;로 되어 있는(&lt;code&gt;&amp;quot;.Draft&amp;quot; true&lt;/code&gt;)을 열거하도록 지정되어 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그러고, 기동 명령에 &lt;code&gt;-D&lt;/code&gt; 옵션을 주고 실행을 시킨다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo server -D
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;포스트에서-초안-포스트인지-판별&#34;&gt;포스트에서 초안 포스트인지 판별&lt;/h2&gt;
&lt;p&gt;템플릿 파일에서 현재 렌더링중인 기사가 초안인지(머릿말에 &lt;code&gt;draft: true&lt;/code&gt;으로 작성되어 있음) 여부를 확인하려면, Page 변수인 &lt;code&gt;.Draft&lt;/code&gt;를 참조한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;layouts/_default/single.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Title }}&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ if .Draft }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;주의: 이 포스트는 아직 초안입니다.&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;b&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;물론 기동은 명령에 &lt;code&gt;-D&lt;/code&gt; 옵션을 주고 실행을 시켜야 보인다.&lt;/p&gt;

      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 신규 웹 사이트 만들기</title>
      <link>https://www.devkuma.com/docs/hugo/new-site/</link>
      <pubDate>Fri, 05 May 2023 18:17:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/new-site/</guid>
      <description>
        
        
        &lt;h2 id=&#34;사이트의-골격-생성&#34;&gt;사이트의 골격 생성&lt;/h2&gt;
&lt;p&gt;먼저 &lt;a href=&#34;https://www.devkuma.com/docs/hugo/overview/#hugo-%EC%84%A4%EC%B9%98&#34;&gt;Hugo를 설치&lt;/a&gt;하여, &lt;code&gt;hugo&lt;/code&gt; 명령을 사용할 수 있는 홤경을 만든다.
그러고, 다음과 같이 &lt;code&gt;hugo new site&lt;/code&gt; 명령을 사용하면, 웹 사이트의 초기 파일 구성 디렉터리 골격을 만들 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;새 웹 사이트(my-site) 만들기&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo new site my-site
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Congratulations! Your new Hugo site is created in /Users/user/hugo-tutorial/my-site.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Just a few more steps and you&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;re ready to go:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1. Download a theme into the same-named folder.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Choose a theme from https://themes.gohugo.io/ or
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   create your own with the &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;hugo new theme &amp;lt;THEMENAME&amp;gt;&amp;#34;&lt;/span&gt; command.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2. Perhaps you want to add some content. You can add single files
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   with &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;hugo new &amp;lt;SECTIONNAME&amp;gt;/&amp;lt;FILENAME&amp;gt;.&amp;lt;FORMAT&amp;gt;&amp;#34;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3. Start the built-in live server via &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;hugo server&amp;#34;&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Visit https://gohugo.io/ &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; quickstart guide and full documentation.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;생성되는 파일들은 매주 간단하고, 아래와 같이 파일 2개와 몇개의 디렉터리뿐이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── my-site
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── archetypes     : 새 페이지를 만들 때 탬플릿 파일
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    │   └── default.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── config.toml    : 사이트 전체 설정 파일
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── content        : 컨텐츠를 저장 위치. 사이트 내용이 되는 Markdown 형식의 파일을 넣는다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── data           : 사이트 생성시 이용하는 데이터
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── layouts        : 레이아웃 템플릿 위치
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── public         : 배포된 html, css, image 등이 파일 위치
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ├── static         : 이미지 파일 등, 사이트 생성시 그대로 복사되어 파일을 넣는다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    └── themes         : 테마 디렉터리를 위치. 실제로 어떤 테마를 사용할지는 config.toml에서 지정한다.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 상태로 서버를 시작해 보면, &amp;ldquo;Page Not Found&amp;rdquo;&lt;/p&gt;
&lt;h2 id=&#34;사이트-테마-설치-및-설정&#34;&gt;사이트 테마 설치 및 설정&lt;/h2&gt;
&lt;p&gt;Hugo에서 신규 웹 사이트를 생성하고 나서는, 외형을 정의하기 위한 하나의 테마를 설정한다. &lt;code&gt;hugo new site&lt;/code&gt;으로 생성한 사이트는 테마까지는 생성되지 않기 때문에, &lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;사이트에서 공개되고 있는 테마&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 다운로드해 와야 한다.&lt;/p&gt;
&lt;p&gt;여기에서는 &lt;a href=&#34;https://themes.gohugo.io/themes/mainroad/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;mainroad&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;라는 테마를 적용을 해보겠다.&lt;/p&gt;
&lt;p&gt;Hugo 테마는 &lt;code&gt;themes&lt;/code&gt; 디렉터리에 테마 디렉터리를 만들어 저장하면 된다. 테마별로 디렉터리를 나누어 저장하므로 여러 테마를 미리 다운로드해 둘 수 있으며, 사용하는 테마는 간단하게 바꿀 수도 있다.&lt;br&gt;
그리고, 테마들은 주로 GitHub에서 배포되므로 Git이 설치되어 있으면, 아래와 같이 루트 경로에서 &lt;code&gt;git clone&lt;/code&gt;으로 쉽게 적용할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; themes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% git clone https://github.com/vimux/mainroad
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;또는, 아래와 같이 명령어를 한번에 할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% git clone https://github.com/vimux/mainroad themes/mainroad
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 명령으로 &lt;code&gt;themes/mainroad&lt;/code&gt; 디렉터리가 생성되었다면, 다음으로 이 테마를 사용하도록 Hugo 설정 파일(&lt;code&gt;config.toml&lt;/code&gt;)에 다음 내용을 추가한다.&lt;br&gt;
&lt;strong&gt;config.toml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;theme&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;mainroad&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이것으로 테마 설정은 완료되었다.&lt;/p&gt;
&lt;h2 id=&#34;사이트의-제목과-언어-설정&#34;&gt;사이트의 제목과 언어 설정&lt;/h2&gt;
&lt;p&gt;사이트의 설정 파일에서는 테마 설정 이외에도, 사이트 타이틀(&lt;code&gt;title&lt;/code&gt;)이나, 전체로 사용하는 언어(&lt;code&gt;languageCode&lt;/code&gt;)의 설정을 해야 한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;config.toml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;baseURL&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://devkuma.com/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;languageCode&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko-kr&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;My New Hugo Site&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;theme&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;mainroad&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;&lt;div class=&#34;h4 alert-heading&#34; role=&#34;heading&#34;&gt;Info&lt;/div&gt;


여기에서 설정한 값은 템플릿 파일에서 `{{ .Site.Title }}`, `{{ .Site.BaseURL }}`, `{{ .Site.LanguageCode }}`와 같이 참조 할 수 있다.
&lt;/div&gt;

&lt;h2 id=&#34;포스트-작성&#34;&gt;포스트 작성&lt;/h2&gt;
&lt;p&gt;여기에서는 예제 포스트를 하나만 작성해 보자. 다음과 같이 &lt;code&gt;hugo new&lt;/code&gt; 명령을 실행하면, &lt;code&gt;content&lt;/code&gt; 디렉터리 아래에 포스트 파일(Markdown 파일)이 자동으로 생성된다. 명령은 프로젝트의 최상위 디렉터리에서 실행해야 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo new post/sample.md
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이것으로 &lt;code&gt;content/post/sample.md&lt;/code&gt; 파일이 생성되는데, 아래와 형식으로 수정한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;content/post/sample.md&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: &amp;#34;포스트 제목&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: 2023-05-05T23:19:43+09:00
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;#draft: true
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000080;font-weight:bold&#34;&gt;&lt;/span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;포스트 본문  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;포스트 본문  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;포스트 본문  
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;헤더 부분에 &lt;code&gt;draft: true&lt;/code&gt;라고 행은 삭제 혹은 주석으로 하지 않으면, 페이지가 출력되지 않으므로 그 행은 없애야 한다.&lt;/p&gt;
&lt;h2 id=&#34;hugo-웹-서버-시작&#34;&gt;Hugo 웹 서버 시작&lt;/h2&gt;
&lt;p&gt;웹 사이트 테마 설정 및 기사 작성이 끝나면, 명령을 &lt;code&gt;hugo server&lt;/code&gt;실행하여 웹 서버를 시작한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo server
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Start building sites …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo v0.104.3+extended darwin/arm64 &lt;span style=&#34;color:#000&#34;&gt;BuildDate&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;unknown
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; EN
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-------------------+-----
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Pages            &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Paginator pages  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Non-page files   &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Static files     &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Processed images &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Aliases          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Sitemaps         &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Cleaned          &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Built in &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;7&lt;/span&gt; ms
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Watching &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; changes in /Users/user/hugo-tutorial/my-site/&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;archetypes,content,data,layouts,static,themes&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Watching &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; config changes in /Users/user/hugo-tutorial/my-site/config.toml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Environment: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;development&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Serving pages from memory
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Running in Fast Render Mode. For full rebuilds on change: hugo server --disableFastRender
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Web Server is available at http://localhost:1313/ &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;bind&lt;/span&gt; address 127.0.0.1&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Press Ctrl+C to stop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Hugo 서버를 시작하는데 걸리는 시간은 단 7ms이다. 엄첨 빠르다.&lt;/p&gt;
&lt;p&gt;Hugo 서버가 기동된 상태에서 웹 브라우저에서 &lt;code&gt;http://localhost:1313/&lt;/code&gt; 접속하면 사이트의 첫번째 페이지가 표시된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/hugo/hugo-mainroad-main.png&#34; alt=&#34;Hugo 서버 첫 페이지&#34;&gt;&lt;/p&gt;
&lt;p&gt;이후로는 &lt;code&gt;hugo new&lt;/code&gt; 명령을 사용해 포스트를 계속해서 작성해 가면 된다. Hugo 서버는 &lt;code&gt;content&lt;/code&gt; 디렉터리의 변경 사항을 모니터링하고 포스트가 작성되거나 수정되었을 때, 자동으로 다시 새로 고침이 되므로, Hugo 서버는 한 번 시작하면 재시작하지 않아도 된다.&lt;/p&gt;
&lt;p&gt;포스트의 사용자 정의하는 방법은 테마마다 조금씩 다르므로, 자세한 내용은 각 테마의 사이트를 참조해야 한다.&lt;/p&gt;

      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo에 Google 애널리틱스에 대한 트래킹 코드 삽입 (googleAnalytics)</title>
      <link>https://www.devkuma.com/docs/hugo/google-analytics/</link>
      <pubDate>Sun, 14 May 2023 16:33:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/google-analytics/</guid>
      <description>
        
        
        &lt;p&gt;Google 웹로그 분석을 사용하면, 웹사이트 액세스 정보를 다각적으로 분석할 수 있다. 여기에서는 Hugo에서 만든 웹 사이트에 Google Analytics용 코드를 쉽게 삽입할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;추적-id를-구성-파일에-설정&#34;&gt;추적 ID를 구성 파일에 설정&lt;/h2&gt;
&lt;p&gt;먼저 &lt;a href=&#34;https://analytics.google.com/analytics/web&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Google 애널리틱스&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; 관리 화면에서 &amp;lsquo;속성 추가&amp;rsquo;를 실행하고, 분석하려는 웹 사이트의 주소를 추가한다(Google 애널리틱스 계정이 없다면 먼저 계정에서 생성해야 한다). 이 때 발행되는 트래킹 ID(&lt;code&gt;G-AB1CD2EFGH&lt;/code&gt;와 같은 ID)는 해당 웹 사이트에 대한 액세스를 판별하기 위한 식별 정보이다. 이 ID는 웹 사이트마다 다른 것을 사용하므로 Hugo 구성 파일에서 설정하는 것이 좋다.&lt;/p&gt;
&lt;p&gt;Hugo는 구성 파일의 매개 변수로 미리 매개 변수를 googleAnalytics 제공한다. 아래와 같이 Google Analytics 사이트에서 발행한 추적 ID를 설정한다.&lt;br&gt;
&lt;strong&gt;config.toml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;baseURL&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://www.devkuam.com/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;languageCode&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ko-kr&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;title&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;내 블로그&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;theme&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;devkuma&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;googleAnalytics&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;G-AB1CD2EFGH&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# 예시 코드&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같이 설정하면 템플릿 파일에서 &lt;code&gt;.Site.GoogleAnalytics&lt;/code&gt;으로 트래킹 ID를 확인할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;트래킹-코드js를-자동으로-삽입하도록-설정&#34;&gt;트래킹 코드(JS)를 자동으로 삽입하도록 설정&lt;/h2&gt;
&lt;p&gt;Google 웹로그 분석을 사용하려면, 각 페이지의 요소 head앞에 다음과 같은 추적 코드를 포함해야 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!--&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Global&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;site&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;tag&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;gtag&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;js&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Google&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Analytics&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;--&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://www.googletagmanager.com/gtag/js?id=G-AB1CD2EFGH&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87&#34;&gt;window&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dataLayer&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;window&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dataLayer&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;gtag&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(){&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dataLayer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;push&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;arguments&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;gtag&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;gtag&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;config&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;G-AB1CD2EFGH&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;/script&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기에서는 Hugo의 부분 템플릿을 사용하여 위의 HTML 코드를 각 페이지에 포함시킨다. &lt;code&gt;G-AB1CD2EFGH&lt;/code&gt;와 같은 트래킹 ID 를 지정하는 부분은, 구성 파일의 &lt;code&gt;googleAnalytics&lt;/code&gt; 파라미터로 지정한 값으로 치환하도록 한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;layouts/partials/analytics.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ if not .Site.IsServer }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ with .Site.GoogleAnalytics }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!-- Google tag (gtag.js) --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;script&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;async&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;src&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;https://www.googletagmanager.com/gtag/js?id={{ . }}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87&#34;&gt;window&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dataLayer&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;window&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dataLayer&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[];&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;gtag&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(){&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dataLayer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;push&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;arguments&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;gtag&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;js&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;new&lt;/span&gt; &lt;span style=&#34;color:#204a87&#34;&gt;Date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;());&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;gtag&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;config&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;{{ &amp;#34;{{&amp;#34; }} . }}&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;script&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;위 템플릿의 1, 2행에서는 로컬의 Hugo 서버에서 테스트하고 있거나 &lt;code&gt;googleAnalytics&lt;/code&gt;가 설정되어 있지 않은 경우에 트래킹 코드를 출력하지 않도록 제어하고 있다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;작성한 부분 템플릿은 아래와 같이 템플릿 파일에서 포함된다 (여기서는 기본 템플릿 (baseof) 에서 포함되어 있다).&lt;br&gt;
&lt;strong&gt;layouts/_default/baseof.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;lang&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ja&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {{- partial &amp;#34;analytics&amp;#34; . -}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;meta&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;charset&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;UTF-8&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...생략...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;head&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...생략...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;body&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;html&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이제 모든 페이지에 Google 애널리틱스 트래킹 코드가 포함된다.&lt;/p&gt;
&lt;h2 id=&#34;부록-hugo-내장-템플릿&#34;&gt;(부록) Hugo 내장 템플릿&lt;/h2&gt;
&lt;p&gt;사실 Hugo는 내장 Internal Template로 Google 웹 로그 분석 추적 코드를 포함하는 템플릿을 제공한다.&lt;/p&gt;
&lt;p&gt;모든 템플릿 파일 중에서 아래 처럼 쓰는 것만으로 쉽게 추적 코드를 삽입 할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{{ template &amp;#34;_internal/google_analytics.html&amp;#34; . }}  &amp;lt;!-- 동기 버전 --&amp;gt;
{{ template &amp;#34;_internal/google_analytics_async.html&amp;#34; . }}  &amp;lt;!-- 비동기 버전 --&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;단, 내장 템플릿은 로컬 서버 동작시의 코드 출력 억제에는 대응하지 않고, Google의 변경에 유연하게 대응할 수도 없기 때문에, 가능하면 부분 템플릿은 만들어 놓는 것이 좋다.&lt;/p&gt;

      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 명령어</title>
      <link>https://www.devkuma.com/docs/hugo/command/</link>
      <pubDate>Sun, 14 May 2023 15:36:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/command/</guid>
      <description>
        
        
        
      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 서버에서 페이지 변경 내용이 반영되지 않는 경우 (hugo server --ignoreCache)</title>
      <link>https://www.devkuma.com/docs/hugo/ignore-cache/</link>
      <pubDate>Sun, 14 May 2023 14:30:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/ignore-cache/</guid>
      <description>
        
        
        &lt;h2 id=&#34;캐시-무시-옵션&#34;&gt;캐시 무시 옵션&lt;/h2&gt;
&lt;p&gt;Hugo 서버를 시작하여 페이지가 업데이트가 되어도 웹 브라우저를 다시 로드해도 변경 내용이 반영되지 않을 수 있다(특히 &lt;code&gt;layouts&lt;/code&gt;, &lt;code&gt;partials&lt;/code&gt; 등 공유하고 사용하는 부분 등).&lt;/p&gt;
&lt;p&gt;페이지 빌드에 성공했지만 변경 내용이 반영되지 않으면, Hugo 서버 캐시를 의심해 보는 것이 좋다. &lt;code&gt;hugo server&lt;/code&gt; 명령을 실행할 때 &lt;code&gt;--ignoreCache&lt;/code&gt; 옵션을 사용하면 캐시를 사용하지 않고 렌더링된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo server --ignoreCache
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 테마 설정 방법 - Themes</title>
      <link>https://www.devkuma.com/docs/hugo/themes/</link>
      <pubDate>Tue, 09 May 2023 00:40:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/themes/</guid>
      <description>
        
        
        &lt;h2 id=&#34;테마-다운로드&#34;&gt;테마 다운로드&lt;/h2&gt;
&lt;p&gt;Hugo에서 웹 사이트를 생성할 때 모양의 기본 테마를 설정해야 한다. 테마를 설정하지 않고, &lt;code&gt;hugo&lt;/code&gt; 명령으로 웹 사이트를 출력해도 새하얀 페이지가 표시된다. 테마는 직접 작성할 수도 있지만, &lt;a href=&#34;https://themes.gohugo.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo Themes&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;라는 페이지에 다른 사람들에 의해 이미 만들어진 테마가 공개되고 있으므로, 우선은 여기에서 다운로드하여 사용하면 좋다. 사용법은 테마마다 조금씩 달라서, 자세한 내용은 각 테마의 설명(&lt;code&gt;README.md&lt;/code&gt;)을 읽어 보길 바란다.&lt;/p&gt;
&lt;h3 id=&#34;테마-zip-파일을-다운로드하는-방법&#34;&gt;테마 ZIP 파일을 다운로드하는 방법&lt;/h3&gt;
&lt;p&gt;예를 들어, 아래의 &lt;a href=&#34;https://themes.gohugo.io/themes/beautifulhugo/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;Beautiful Hugo&amp;rdquo;&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;라는 테마가 마음에 든다면, 아래 &lt;strong&gt;Download&lt;/strong&gt; 버튼을 누른다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/hugo/hugo-beautifulhug.png&#34; alt=&#34;Hugo 테마 다운로드 버튼&#34;&gt;&lt;/p&gt;
&lt;p&gt;일반적으로 GitHub 사이트로 이동하므로, &amp;ldquo;Code&amp;quot;을 눌려고 &amp;ldquo;Download zip&amp;rdquo; 버튼을 눌러 테마를 다운로드한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/hugo/hugo-beautifulhugo-github-1.png&#34; alt=&#34;Hugo 테마 GitHub 화면&#34;&gt;&lt;/p&gt;
&lt;p&gt;다운로드한 테마는 프로젝트의 themes 디렉터리에 넣는다. 여기서는 경우에는 themes/beautifulhugo 디렉터리로 넣으면 된다.&lt;/p&gt;
&lt;h2 id=&#34;테마를-git에서-받는-방법&#34;&gt;테마를 Git에서 받는 방법&lt;/h2&gt;
&lt;p&gt;테마는 GitHub상에서 관리되고 있으므로, Git 커멘드를 사용할 수 있는 환경이라면, 아래와 같이 &lt;code&gt;git clone&lt;/code&gt;으로 받는 것이 간단하다. 물론, 먼저 리포지토리의 URL는 알아야 한다. URL은 아래 GitHub에서 Code 버튼을 눌려서 표시되는 URL을 복사하면 된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/hugo/hugo-beautifulhugo-github-2.png&#34; alt=&#34;Hugo 테마 서버 첫 페이지&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git clone https://github.com/halogenica/beautifulhugo.git beautifulhugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;혹시 자신의 사이트를 Git 관리하는 경우라면, 다음과 같이 테마를 Git 서브 모듈로 가져 오는 것이 좋다. Git 서브 모듈의 명령(&lt;code&gt;git submodule&lt;/code&gt;)은 조금 어렵지만, 테마를 서브 모듈로 관리하면 테마 측 업데이트를 적절하게 반영 할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;테마를 서브 모듈로 받아오기&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git submodule add https://github.com/halogenica/beautifulhugo.git beautifulhugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;테마의 업데이트를 가져올 때&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ git submodule update --remote --recursive
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;필요한-경우-테마별-설정&#34;&gt;(필요한 경우) 테마별 설정&lt;/h2&gt;
&lt;p&gt;테마에 따라서는 외부 컴퍼넌트에 의존하고 있어 초기 설정이 필요한 것도 있다. 테마에서는 아래와 같이 관련 모듈을 설치해 달라는 경우 있으면, 아래 명령을 그대로 실행해 둔다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm install
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ npm run build
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;참고로 &lt;code&gt;npm&lt;/code&gt;는 Node.js용 패키지 관리자로 Node.js를 설치하면 함께 설치된다.&lt;/p&gt;
&lt;h2 id=&#34;사용할-테마-지정&#34;&gt;사용할 테마 지정&lt;/h2&gt;
&lt;p&gt;테마는 themes 디렉터리에 여러 개를 다운로드할 수 있다. 그 중에서 현재 사용하려는 테마는 Hugo 설정 파일에서 다음과 같이 설정힌다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;config.toml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;theme&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;beautifulhugo&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;테마를 설정한 후 &lt;code&gt;hugo&lt;/code&gt;명령으로 웹 사이트를 생성해 본다. 설정한 테마를 기반으로 &lt;code&gt;public&lt;/code&gt; 디렉터리에 업로드용의 html, css, js 등파의 일이 출력될 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;hugo server&lt;/code&gt; 명령은 웹 서버를 시작할 때 &lt;code&gt;config.toml&lt;/code&gt;에서 설정한 테마를 사용한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;hugo&lt;/code&gt; 명령을 실행할 때 &lt;code&gt;-t&lt;/code&gt; 옵셥으로 사용할 테마를 지정할 수도 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo -t theme_name         // 사이트를 출력하는 경우
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo server -t theme_name  // 웹 서버를 시작하는 경우
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 설정</title>
      <link>https://www.devkuma.com/docs/hugo/config/</link>
      <pubDate>Sun, 14 May 2023 15:36:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/config/</guid>
      <description>
        
        
        
      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 새로운 나의 테마 만들기 - new theme</title>
      <link>https://www.devkuma.com/docs/hugo/new-themes/</link>
      <pubDate>Tue, 09 May 2023 00:40:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/new-themes/</guid>
      <description>
        
        
        &lt;h2 id=&#34;나의-테마-새로-만들기&#34;&gt;나의 테마 새로 만들기&lt;/h2&gt;
&lt;p&gt;Hugo에서는 이미 공개된 템플릿이 많이 있지만, 직접 원하는 대로 디자인하여 테마를 만들 수 있다. 테마를 만들려면, 먼저 다음 명령으로 기본 양식을 만든다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo new theme &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;테마 이름&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;예를 들어, 다음과 같이 실행하면 &lt;code&gt;themes/my-theme&lt;/code&gt; 디렉터리가 생성된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo new theme my-theme
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;생성되는 파일들을 아래와 같이 되어 있고, 디렉터리 구성은 되어 있지만, 파일의 내용은 거의 비어 있다. 이 파일을 기반으로 템플릿을 만든다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;새로 만든 테마의 양식&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;themes/my-theme
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── LICENSE   (MIT 라이선스)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── archetypes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── default.md
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── layouts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── 404.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── _default
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   ├── baseof.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   ├── list.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   │   └── single.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── index.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── partials
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│       ├── footer.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│       ├── head.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│       └── header.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── static
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   ├── css
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── js
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── theme.toml (기본 설정 파일)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;첫-페이지-레이아웃-layoutsindexhtml-만들기&#34;&gt;첫 페이지 레이아웃 (layouts/index.html) 만들기&lt;/h2&gt;
&lt;p&gt;테마 디렉터리 내의 &lt;code&gt;layouts/index.html&lt;/code&gt; 파일은 사이트의 첫 페이지에 대한 템플릿 파일이다. 하나의 HTML 파일만으로 구성된 사이트(SPA: Single Page Application)를 작성하는 경우, 이 파일만 작성하면 된다. 초기 상태에서는 아무것도 기술되어 있지 않으므로, 우선은 시작에 사이트명만을 표시하도록 수정해 본다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;themes/my-theme/layouts/index.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Site.Title }}&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같이 사이트 정보를 보유하는 &lt;code&gt;.Site&lt;/code&gt; 변수의 &lt;code&gt;Title&lt;/code&gt; 필드 값을 출력할 수 있다. 여기에는 사이트의 설정 파일(&lt;code&gt;config.toml&lt;/code&gt;) &lt;code&gt;title&lt;/code&gt;에 설정한 문장이 표시된다.&lt;/p&gt;
&lt;p&gt;지금까지 만든 후에는 이 테마를 사용하여 사이트를 확인해 본다. &lt;code&gt;hugo&lt;/code&gt; 명령과 함께 사용할 테마를 지정하려면 &lt;code&gt;-t {태마명}&lt;/code&gt; 옵션을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo server -t my-theme
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같이 Hugo 서버를 시작한 후 에 http://localhost:1313/액세스하여 보기를 확인할 수 있습니다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/hugo/hugo-my-theme-1.png&#34; alt=&#34;나의 테마를 사용한 첫 페이지&#34;&gt;
&lt;em&gt;그림 : 나의 테마를 사용한 첫 페이지&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;첫-페이지에-모든-페이지의-목록-표시&#34;&gt;첫 페이지에 모든 페이지의 목록 표시&lt;/h2&gt;
&lt;p&gt;첫 페이지의 템플릿(&lt;code&gt;layouts/index.html&lt;/code&gt;) 내에서 &lt;code&gt;.Data.Pages&lt;/code&gt; 변수를 참조하여, 모든 페이지의 정보(Page 변수)를 얻을 수 있다. 이 정보를 &lt;code&gt;range&lt;/code&gt; 사용하여 루프 처리하면 모든 페이지에 대한 링크를 출력할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;themes/my-theme/layouts/index.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Site.Title }}&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ul&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {{ range .Data.Pages }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;li&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;a&lt;/span&gt; &lt;span style=&#34;color:#c4a000&#34;&gt;href&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;{{ .RelPermalink }}&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Title }}&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;a&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; ({{ .Date.Format &amp;#34;2006-01-02&amp;#34; }})&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;li&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  {{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ul&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/hugo/hugo-my-theme-2.png&#34; alt=&#34;나의 테마를 사용한 목록 페이지&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;각-페이지에-대한-레이아웃-만들기layouts_defaultsinglehtml&#34;&gt;각 페이지에 대한 레이아웃 만들기(layouts/_default/single.html)&lt;/h2&gt;
&lt;p&gt;링크된 각 페이지는 &lt;code&gt;layouts/_default/single.html&lt;/code&gt; 템플릿 파일을 기반으로 생성되므로, 이 파일을 미리 만들어야 한다. 이 템플릿 내에서 Page 변수의 필드를 참조할 수 있다. 예를 들어, &lt;code&gt;.Title&lt;/code&gt;에 페이지 제목, &lt;code&gt;.Content&lt;/code&gt;에 페이지 본문을 참조할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;themes/my-theme/layouts/_default/single.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Title }}&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ .Content }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;각 페이지의 내용은 &lt;code&gt;content/&lt;/code&gt;디렉터리 내에 아래와 같은 느낌으로 작성해 둔다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;content/page1.md&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-md&#34; data-lang=&#34;md&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;title: &amp;#34;Page1 Title&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;date: &amp;#34;2017-09-10&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;---
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Page1 Content
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같이 레이아웃 파일과 컨텐츠를 작성해 두면, 각 페이지의 내용이 아래와 같이 표시될 것이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/hugo/hugo-my-theme-3.png&#34; alt=&#34;나의 테마를 사용한 페이지 템플릿으로 출력&#34;&gt;
&lt;em&gt;그림 : 단일 페이지 템플릿으로 출력&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;이후로는, 마찬가지로 &lt;code&gt;layouts&lt;/code&gt;디렉터리 내의 템플릿 코드를 만들어가면 나의 테마가 완성된다. Markdown 파일에서 사용할 수 있는 단축 코드(short codes)도 독자적인 테마 부속품(layouts/shortcodes)으로 제공할 수 있다.&lt;/p&gt;

      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>여러 Hugo 사이트에서 동일한 테마 디렉터리 설정하기 (themesDir)</title>
      <link>https://www.devkuma.com/docs/hugo/themes-directory/</link>
      <pubDate>Sun, 14 May 2023 14:23:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/themes-directory/</guid>
      <description>
        
        
        &lt;p&gt;여러 Hugo 프로젝트에서 동일한 테마를 참조하게 하는 방법은 다음과 같다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;GitHub 등에 테마용 리포지토리를 작성하고, 그 리포지토리를 여러 Hugo 프로젝트에 &lt;code&gt;clone&lt;/code&gt;을 한다.&lt;/li&gt;
&lt;li&gt;각 Hugo 프로젝트의 &lt;code&gt;themes&lt;/code&gt; 디렉터리를 공통 테마 디렉터리에 대한 심볼릭 링크로 바꾼다.&lt;/li&gt;
&lt;li&gt;설정 파일(&lt;code&gt;config.toml&lt;/code&gt;)에서 공통 테마 디렉터리를 참조하도록 설정한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;첫 번째 방법이 제일 일반적인 방법이기 하지만, Git으로 각 사이트의 테마를 동일하게 적용 하는 경우에는 개발 단계에서는 조금 번거로울 수 있다. 그럴 때 추천하는 것은 두 번째와 세 번째 방법이다.&lt;/p&gt;
&lt;h2 id=&#34;심볼릭-링크에서-공통-테마-디렉터리-지정&#34;&gt;심볼릭 링크에서 공통 테마 디렉터리 지정&lt;/h2&gt;
&lt;p&gt;Linux나 macOS 등과 같이 심볼릭 링크를 만들 수 있는 OS에서는 공통 테마 디렉터리를 심볼릭 링크로 참조하는 것이 쉽다. 예를 들어, 아래와 같이 공통으로 사용하는 테마 디렉터리(&lt;code&gt;hugo_themes&lt;/code&gt;)와 참조되는 3개의 Hugo 프로젝트( site1, site2, site3)가 있다고 하자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── hugo_themes (공통 테마 디렉터리)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│   └── mytheme
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│       ├── archetypes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│       ├── layouts
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│       ├── static
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│       └── ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── site1  （Hugo 사이트 1）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;├── site2  （Hugo 사이트 2）
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└── site3  （Hugo 사이트 3）
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;각 Hugo 프로젝트의 &lt;code&gt;themes&lt;/code&gt; 디렉터리를 &lt;code&gt;hugo_themes&lt;/code&gt; 심볼릭 링크로 바꾸면, 모든 사이트에서 동일한 테마 디렉터리를 바라 볼 수 있게 할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; site1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rmdir themes
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ln -s ../hugo_themes themes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;사용할 테마 이름을 설정하는 것은 반듯이 필요하므로, 각 Hugo 프로젝트의 설정 파일(&lt;code&gt;config.toml&lt;/code&gt;)에 테마 이름을 설정을 해야 한다.
&lt;strong&gt;site1/config.toml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;theme&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;mytheme&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;설정-파일에서-공통-테마-디렉터리-설정&#34;&gt;설정 파일에서 공통 테마 디렉터리 설정&lt;/h2&gt;
&lt;p&gt;Hugo 설정 파일(&lt;code&gt;config.toml&lt;/code&gt;)에 공통 테마 디렉터리를 설정하는 방법도 있다. 테마 디렉터리의 설정은 &lt;code&gt;themesDir&lt;/code&gt; 라는 변수로 설정하는데, 이 디렉터리 경로에 Hugo 프로젝트보다 상위의 디렉터리의 경로를 설정할 수가 있다.&lt;br&gt;
&lt;strong&gt;config.toml&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;themesDir&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;../hugo_themes&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;theme&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;mytheme&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;예를 들어, 각 Hugo 프로젝트의 설정 파일에서 위와 같이 설정하면 상위 디렉터리에 있는 공통 테마 디렉터리(&lt;code&gt;hugo_themes/mytheme/&lt;/code&gt;)를 사용할 수 있다.&lt;/p&gt;
&lt;p&gt;설정 파일을 사용하지 않고, 명령 hugo 옵션 &lt;code&gt;--themesDir&lt;/code&gt;에서 테마 디렉터리를 지정할 수도 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo server --themesDir ~/gitwork/hugo_themes
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;설정 파일의 &lt;code&gt;themesDir&lt;/code&gt; 변수와 커멘드 라인 인자가 &lt;code&gt;--themesDir&lt;/code&gt; 모두 지정되면, 커멘드 라인에 인수가 우선시 한다.&lt;/p&gt;

      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo에서 사용하지 않는 템플릿이나 Shotcode 조회 (hugo --printUnusedTemplates)</title>
      <link>https://www.devkuma.com/docs/hugo/print-unused-templates/</link>
      <pubDate>Sun, 14 May 2023 15:32:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/print-unused-templates/</guid>
      <description>
        
        
        &lt;p&gt;Hugo 사이트를 빌드할 때 사용하지 않는 템플릿을 검색하려면 ,다음과 같이 &lt;code&gt;--printUnusedTemplates&lt;/code&gt; 옵션을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% hugo --printUnusedTemplates
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Start building sites …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hugo v0.111.3+extended darwin/arm64 &lt;span style=&#34;color:#000&#34;&gt;BuildDate&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;unknown
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...생략...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WARN 2023/05/14 15:25:46 Template _default/list.rss.xml is unused, &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; file /Users/user/...생략.../mysite/layouts/_default/list.rss.xml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WARN 2023/05/14 15:25:46 Template _default/single.html is unused, &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; file /Users/user/...생략.../mysite/themes/docsy/layouts/_default/single.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WARN 2023/05/14 15:25:46 Template blog/baseof.html is unused, &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; file /Users/user/...생략.../mysite/docsy/layouts/blog/baseof.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...생략...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WARN 2023/05/14 15:25:46 Template swagger/single.html is unused, &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; file /Users/user/user/...생략.../mysite/themes/mytheme/layouts/swagger/single.html
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Total in &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3146&lt;/span&gt; ms
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위의 예에서는 여러개의 템플릿이나 짧은 코드가 사용되지 않는다는 것을 알 수 있다.&lt;/p&gt;

      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Blog</title>
      <link>https://www.devkuma.com/docs/blog/</link>
      <pubDate>Wed, 23 Nov 2022 07:54:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/blog/</guid>
      <description>
        
        
        &lt;h2 id=&#34;블로그&#34;&gt;블로그&lt;/h2&gt;
&lt;p&gt;블로그(Blog 또는 Weblog)는 정보 공유나 의견 교환을 목적으로 글을 올리는 웹 사이트를 말한다. 즉, 일반 대중들이 볼 수 있도록 공개하는 것을 목적으로 내용이 자주 갱신되는 일종의 개인 일지를 말한다.&lt;/p&gt;
&lt;p&gt;원래는 Web과 log(로그: 기록된 데이터)를 합성한 Weblog라는 용어가 1997년 미국에서 처음 등장하였고, 이를 줄여서 &amp;lsquo;Blog&amp;rsquo;라는 말이 정책하게 되었다. 여기서 말하는 &amp;rsquo;log(로그)&amp;lsquo;가 일기로서 축철되는 데이터 그 자체를 나타내는, 즉, &amp;lsquo;웹에 게시되는 일기가 날마다 출적되어 가는 것&amp;rsquo;이라는 의미이다.&lt;/p&gt;
&lt;p&gt;블로그는 일반적으로 저자의 개성이나, 웹사이트의 목적성 등이 강하게 표현된다. 블로그에서 다루어지는 토픽들로는 대개 간단한 철학적 묵상이나 인터넷상에서의 논평, 그 밖에 많은 사회적 이슈들로 구성되며, 여기에 저자가 선호하는 사이트들로 향하는 링크 등이 추가될 수 있다. 블로그의 가장 중요한 특성은, 그것이 잡지의 형태를 띠고 있다는 것인데 대개 매일 새로운 정보의 입력이 이루어지며, 스타일에 있어서도 격식을 크게 중시하지 않는 특징이 있다.&lt;/p&gt;
&lt;p&gt;블로그의 저자를 대개 &amp;ldquo;블로거&amp;quot;라고 지칭하기도 한다.&lt;/p&gt;
&lt;h2 id=&#34;블로그의-역사&#34;&gt;블로그의 역사&lt;/h2&gt;
&lt;p&gt;블로그는 저스틴 홀(Justin Hall, 1974년 12월 16일~)이라는 사람이 1994년에 시작한 일기형식의 웹사이트가 역사상 첫 블로그로서 뉴욕타임즈를 비롯한 일간지에 소개되었다.&lt;/p&gt;
&lt;p&gt;초기 블로그는 HTML 등으로 간단하게 만들었지만 곧 워드프레스, 라이브 저널 등의 블로그 소프트웨어가 등장하였다. 2003년에 블로그가 대중화되는 계기가 있었는데, 미-영 연합군의 바그다드 폭격에 한 이라크인이 블로그를 통해 평화를 주장한 일이 그것이다.&lt;/p&gt;
&lt;p&gt;한국에서는 2001년 12월에 블로그 사용자 모임인 웹로그인 코리아가 생겼고, 네이버와 다음 등이 블로그 서비스를 열었다. 그후 블로그는 지금의 모습을 가지게 되었다.&lt;/p&gt;
&lt;h2 id=&#34;블로그의-종류&#34;&gt;블로그의 종류&lt;/h2&gt;
&lt;p&gt;블로그는 두가지로 나눈다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;가입형 블로그
&lt;ul&gt;
&lt;li&gt;대형 포털사이트에서 제공하는 서비스이다.&lt;/li&gt;
&lt;li&gt;네이버, Tistory, 브런치 등이 여기에 속한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;설치형 블로그
&lt;ul&gt;
&lt;li&gt;홈페이지를 만들고 비용을 지불하여 온라인상에 업로드를 하는 것 처럼 웹 호스팅을 하고, 직접 제작하는 형태 블로그이다.&lt;/li&gt;
&lt;li&gt;워드프레스가 여기에 속한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;참고&#34;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://search.shopping.naver.com/book/catalog/32483278307&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;그림으로 이해하는 네트워크 용어&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ko.wikipedia.org/wiki/%EB%B8%94%EB%A1%9C%EA%B7%B8&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;블로그 | Wiki&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.terms.co.kr/blog.htm&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;블로그 | 텀즈 &lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 템플릿 기본 문법</title>
      <link>https://www.devkuma.com/docs/hugo/templates/introduction/</link>
      <pubDate>Tue, 29 Nov 2022 11:59:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/templates/introduction/</guid>
      <description>
        
        
        &lt;p&gt;Hugo는 Go의 &lt;code&gt;html/template&lt;/code&gt;와 &lt;code&gt;text/template&lt;/code&gt; 라이브러리를 템플릿 기반으로 사용한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;다음은 Go 템플릿에 대한 입문서일 뿐이다. Go 템플릿에 대한 자세한 내용은 공식 &lt;a href=&#34;https://pkg.go.dev/text/template&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Go 문서&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 확인하기 바란다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;Go 템플릿은 가장 기본적인 로직만 템플릿 또는 뷰 레이어에 반영한다는 신념으로 매우 간단한 템플릿 언어를 제공한다.&lt;/p&gt;
&lt;h2 id=&#34;basic-syntax&#34;&gt;Basic Syntax&lt;/h2&gt;
&lt;p&gt;Go의 템플릿은 &lt;a href=&#34;https://gohugo.io/variables/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;변수&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;와 &lt;a href=&#34;https://gohugo.io/functions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;함수&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;로 이루어진 HTML이다. GO의 템플릿에서 변수와 함수를 사용하기 위해서는 다음의 &lt;code&gt;{{ }}&lt;/code&gt;를 사용 한다.&lt;/p&gt;
&lt;h3 id=&#34;사전-정의된-변수predefined-variabl에-접근&#34;&gt;사전 정의된 변수(Predefined Variabl)에 접근&lt;/h3&gt;
&lt;p&gt;현재 스코프에 존재하는 사전 정의된 변수를 사용하거나, 변경된 변수를 사용 할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ .Title }} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $address }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;code&gt;.Title&lt;/code&gt;는 사전 정의된 변수(Predifend Variable)이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$address&lt;/code&gt;는 사용자 정의 변수(Custom Variable)이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;함수의 매개변수는 공백을 사용하여 구분된다. 일반적인 구문은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ FUNCTION ARG1 ARG2 }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;아래의 함수는 &lt;code&gt;add&lt;/code&gt; 함수를 이용하여, &lt;code&gt;1&lt;/code&gt;과 &lt;code&gt;2&lt;/code&gt;의 결과를 반환하는 예제이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ add 1 2 }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;메소드와-필드-접근하는-방법은-점을-사용&#34;&gt;메소드와 필드 접근하는 방법은 점(.)을 사용&lt;/h3&gt;
&lt;p&gt;콘텐츠의 &lt;a href=&#34;https://gohugo.io/content-management/front-matter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;설정(front matter)&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에 페이지 매개변수로 정의된 &lt;code&gt;bar&lt;/code&gt;에 접근한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ .Params.bar }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;괄호를-이용하여-그룹-아이템을-같이-사용-할-수-있다&#34;&gt;괄호를 이용하여, 그룹 아이템을 같이 사용 할 수 있다.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ if or (isset .Params &amp;#34;alt&amp;#34;) (isset .params &amp;#34;caption&amp;#34;) }} Caption {{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;한줄의-구문을-여러줄로-나누는-것도-가능하다&#34;&gt;한줄의 구문을 여러줄로 나누는 것도 가능하다.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ if or 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (isset .Params &amp;#34;alt&amp;#34;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    (isset .params &amp;#34;caption&amp;#34;) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;문자열을-작성할-때-개행하여-사용하는-것도-가능하다&#34;&gt;문자열을 작성할 때 개행하여, 사용하는 것도 가능하다.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $msg := `Line one.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Line two.` }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;변수--variables&#34;&gt;변수 : Variables&lt;/h2&gt;
&lt;p&gt;각각의 Go의 템플릿은 데이터 객체를 전달 받는다. Hugo에서 각각의 템플릿에 &lt;code&gt;Page&lt;/code&gt;가 전달된다. 아래의 예제에서는 &lt;code&gt;.Title&lt;/code&gt;에서 접근할 수 있는 요소 중에 하나는 &lt;a href=&#34;https://gohugo.io/variables/page/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;.Page&lt;/code&gt;&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;이다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Page&lt;/code&gt;가 템플릿의 디폴트 범위(scope)이므로 현재 범위에 &lt;code&gt;Title&lt;/code&gt; 요소는 &lt;code&gt;.&lt;/code&gt; 접두사를 이용하여, 간단히 접근 할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Title }}&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;변수는 커스텀 변수에 저장하고, 나중에 참조할 수도 수 있다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;사용자 정의 변수는 &lt;code&gt;$&lt;/code&gt; 접두사를 붙여야 한다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $address := &amp;#34;123 main st.&amp;#34; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $address }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;=&lt;/code&gt; 연산자를 사용하여 변수에 할당할 수 있다.&lt;/p&gt;
&lt;p&gt;아래의 예제에서는 홈페이지에서는 &amp;ldquo;Var is Hugo Home&amp;quot;이 출력될 것이며, 모든 다른 페이지에는 &amp;ldquo;Var is Hugo Page&amp;quot;로 보이게 될 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ $var := &amp;#34;Hugo Page&amp;#34; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ if .IsHome }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ $var = &amp;#34;Hugo Home&amp;#34; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Var is {{ $var }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;함수--functions&#34;&gt;함수 : Functions&lt;/h2&gt;
&lt;p&gt;Go 템플릿은 몇 가지의 기본 함수만 제공되지만, 어플리케이션을 확장 할 수 있게 메카니즘을 제공해준다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/functions/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Hugo template funciotn&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;은 웹사이트에 추가적인 기능을 제공한다.&lt;br&gt;
함수는 함수명으로 호출 되며, 필요한 매개변수는 공백으로 구분한다. Hugo의 템플릿 함수는 Hugo가 새로 컴파일을 하지 않으면 사용할 수 없다.&lt;/p&gt;
&lt;h3 id=&#34;예제-1-숫자-더하기&#34;&gt;예제 1: 숫자 더하기&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ add 1 2 }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!-- prints 3 --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;예제-2-숫자-비교하기&#34;&gt;예제 2: 숫자 비교하기&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ lt 1 2 }} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!-- prints true (i.e., since 1 is less than 2) --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;두 예제 모두 Go 템플릿 &lt;a href=&#34;https://gohugo.io/functions/math/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;수학 함수(Math functions)&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 사용한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://pkg.go.dev/text/template#hdr-Functions&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Go 템플릿 문서&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;의 Hugo 문서에 있는 것보다 더 많은 부울 연산자가 있다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;h2 id=&#34;포함--includes&#34;&gt;포함 : Includes&lt;/h2&gt;
&lt;p&gt;다른 템플릿을 포함할 때, 접근해야 하는 데이터를 전달해야 한다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;현재의 컨텍스트를 전달하려면 뒤에 점(&lt;code&gt;.&lt;/code&gt;)을 이용해야 한다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;템플릿 위치는 항상 Hugo 안에 &lt;code&gt;layouts/&lt;/code&gt; 디렉터리에서 부터 시작된다.&lt;/p&gt;
&lt;h3 id=&#34;partial&#34;&gt;Partial&lt;/h3&gt;
&lt;p&gt;Partial는 분리된 템플릿을 메인 템플릿에서 사용하기 위해 사용되는 함수이다.&lt;br&gt;
구문은 &lt;code&gt;{{ partial &amp;quot;&amp;lt;Path&amp;gt;/&amp;lt;PARTIAL&amp;gt;.&amp;lt;EXTENSION&amp;gt; .&amp;quot;&lt;/code&gt;이다.&lt;/p&gt;
&lt;p&gt;예를 들어, 아래의 코드는 &lt;code&gt;layouts/partials/header.html&lt;/code&gt;을 포함한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ partial &amp;#34;header.html&amp;#34; . }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;template&#34;&gt;Template&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;template&lt;/code&gt; 함수는 Hugo의 예전 버전에서 &lt;code&gt;partial&lt;/code&gt; 템플릿을 포함하기 위해 존재하던 함수였다. 이제는 &lt;a href=&#34;https://gohugo.io/templates/internal/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;내부 템플릿&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;을 불러오기 위해 사용 된다.&lt;br&gt;
구문은 &lt;code&gt;{{ template &amp;quot;_internal/&amp;lt;TEMPLATE&amp;gt;.&amp;lt;EXTENSION&amp;gt;&amp;quot; . }}&lt;/code&gt;이다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;사용 가능한 내부 템플릿은 &lt;a href=&#34;https://github.com/gohugoio/hugo/tree/master/tpl/tplimpl/embedded/templates&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;여기&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에서 찾을 수 있다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;예를 들어, 아래 코드는 &lt;code&gt;opengraph.html&lt;/code&gt; 내부 템플릿을 포함한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ template &amp;#34;_internal/opengraph.html&amp;#34; . }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;로직--logic&#34;&gt;로직 : Logic&lt;/h2&gt;
&lt;p&gt;GO 템플릿은 기본적인 반복문과 조건문을 제공한다.&lt;/p&gt;
&lt;h3 id=&#34;반복iteration&#34;&gt;반복(Iteration)&lt;/h3&gt;
&lt;p&gt;Go 템플릿은 강력한 &lt;code&gt;range&lt;/code&gt; 함수를 통해 &lt;code&gt;map&lt;/code&gt;, &lt;code&gt;array&lt;/code&gt;를 반복하고, 자르기도 한다. 아래의 예제는 다양한 &lt;code&gt;range&lt;/code&gt; 함수의 다양한 활용 방법이다.&lt;/p&gt;
&lt;h3 id=&#34;예제-1-using-context&#34;&gt;예제 1: Using Context(.)&lt;/h3&gt;
&lt;p&gt;아래의 예제에서는 &lt;code&gt;.&lt;/code&gt;을 사용하여, &lt;code&gt;$array&lt;/code&gt; 변수 내부에 있는 요소를 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ range $array }} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ . }} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;예제-2-배열-요소의-값에-대한-변수-이름-선언&#34;&gt;예제 2: 배열 요소의 값에 대한 변수 이름 선언&lt;/h3&gt;
&lt;p&gt;아래의 예제에서는 요소를 반복할 때, 해당 요소에 이름을 지정하여 출력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ range $elem_val := $array }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ $elem_val }} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;예제-3-배열-요소의-인덱스-및-값에-대한-변수-이름-선언&#34;&gt;예제 3: 배열 요소의 인덱스 및 값에 대한 변수 이름 선언&lt;/h3&gt;
&lt;p&gt;배열을 순회하며, 해당 요소의 index를 변수로써 사용 가능하다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ range $elem_index, $elem_val := $array }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   {{ $elem_index }} -- {{ $elem_val }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;예제-4-map의-키와-값에-대한-변수-이름-선언&#34;&gt;예제 4: map의 키와 값에 대한 변수 이름 선언&lt;/h3&gt;
&lt;p&gt;아래의 예제에서는 map의 key와 value를 변수명으로 지정하여 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ range $elem_key, $elem_val := $map }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   {{ $elem_key }} -- {{ $elem_val }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;예제-5-비어-있는-map-array-slice의-조건&#34;&gt;예제 5: 비어 있는 map, array, slice의 조건&lt;/h3&gt;
&lt;p&gt;만약 Range 에 전달되는 반복 가능한 요소의 길이가 0 이면, else문에 있는 다른 로직을 실행 할 수도 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ range $array }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ . }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{else}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&amp;lt;!-- This is only evaluated if $array is empty --&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;조건문--conditionals&#34;&gt;조건문 : Conditionals&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;if&lt;/code&gt;, &lt;code&gt;else&lt;/code&gt;, &lt;code&gt;with&lt;/code&gt;, &lt;code&gt;or&lt;/code&gt;, &lt;code&gt;and&lt;/code&gt;, &lt;code&gt;not&lt;/code&gt;은 Go의 템플릿에서 조건 논리를 처리하기 위한 프레임워크를 제공한다.
&lt;code&gt;range&lt;/code&gt;와 동일하게 &lt;code&gt;if&lt;/code&gt;와 &lt;code&gt;with&lt;/code&gt; 구문은 &lt;code&gt;{{ end }}&lt;/code&gt;로 닫는다.&lt;/p&gt;
&lt;p&gt;Go의 템플릿은 다음의 값들을 false로 처리한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;false (boolean)&lt;/li&gt;
&lt;li&gt;0 (integer)&lt;/li&gt;
&lt;li&gt;any zero-length array, slice, map, or string&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;예제-1--with&#34;&gt;예제 1 : &lt;code&gt;with&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;with&lt;/code&gt; 구문은 &amp;ldquo;어떤 값이 존재한다면, 이를 실행하라&amp;quot;라는 의미이다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;with&lt;/code&gt; 구문은 &lt;code&gt;range&lt;/code&gt;와 동일하게, &lt;code&gt;.&lt;/code&gt;으로 현재 컨텍스트를 바인딩 할 수 있다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;변수가 없거나 위에서 설명한 대로 &amp;ldquo;false&amp;quot;으로 판단되면 블록을 건너뛴다.&lt;/p&gt;
&lt;p&gt;다음의 예제에서는 &lt;code&gt;.title&lt;/code&gt;가 존재할 때만 실행이 될 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ with .Params.title }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;{{ . }}&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;예제-2--withelse&#34;&gt;예제 2 : &lt;code&gt;with&lt;/code&gt;&amp;hellip;&lt;code&gt;else&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;아래의 예제에서는 설정에 Param로 &amp;ldquo;description&amp;quot;이 지정되어 있다면 해당 값를 출력하고, 없다면 &lt;code&gt;.Summary&lt;/code&gt;를 출력 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ with .Param &amp;#34;description&amp;#34; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ . }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ else }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ .Summary }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://gohugo.io/functions/param/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;.Param&lt;/code&gt; function.&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; 참조.&lt;/p&gt;
&lt;h3 id=&#34;예제-3--if&#34;&gt;예제 3 : &lt;code&gt;if&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;if&lt;/code&gt; 구문은 &lt;code&gt;with&lt;/code&gt;과 거의 동일하지만, &lt;code&gt;with&lt;/code&gt; 구문과 달리 컨텍스트가 &lt;code&gt;.&lt;/code&gt;으로 바인딩 되지 않는다.&lt;/p&gt;
&lt;p&gt;아래 예제는 &amp;ldquo;예제 1 : &lt;code&gt;with&lt;/code&gt;&amp;ldquo;을 &lt;code&gt;if&lt;/code&gt; 구문으로 다시 작성한 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ if isset .Params &amp;#34;title&amp;#34; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;{{ index .Params &amp;#34;title&amp;#34; }}&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;h4&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;예제-4--if--else&#34;&gt;예제 4 : &lt;code&gt;if&lt;/code&gt; &amp;hellip; &lt;code&gt;else&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;아래의 예제는 &amp;ldquo;예제 2 : &lt;code&gt;with&lt;/code&gt;&amp;hellip;&lt;code&gt;else&lt;/code&gt;&amp;ldquo;를 &lt;code&gt;if&lt;/code&gt; &amp;hellip; &lt;code&gt;else&lt;/code&gt;으로 다시 작성한 것이다. &lt;a href=&#34;https://gohugo.io/functions/isset/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;code&gt;isset&lt;/code&gt;&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; 함수는 &amp;ldquo;(Map || Array , Key || Index) =&amp;gt; Boolean&amp;quot;의 함수이며, 콜렉션에 key에 해당되는 값이 있지는 판별하는 함수이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ if (isset .Params &amp;#34;description&amp;#34;) }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ index .Params &amp;#34;description&amp;#34; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ else }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ .Summary }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;예제-5--if--else--else&#34;&gt;예제 5 : &lt;code&gt;if&lt;/code&gt; &amp;hellip; &lt;code&gt;else&lt;/code&gt; &amp;hellip; &lt;code&gt;else&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;with&lt;/code&gt; 구문과 다르게, &lt;code&gt;if&lt;/code&gt;는 &lt;code&gt;else if&lt;/code&gt; 구문을 사용할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ if (isset .Params &amp;#34;description&amp;#34;) }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ index .Params &amp;#34;description&amp;#34; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ else if (isset .Params &amp;#34;summary&amp;#34;) }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ index .Params &amp;#34;summary&amp;#34; }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ else }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{ .Summary }}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ end }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;예제-4--and--or&#34;&gt;예제 4 : &lt;code&gt;and&lt;/code&gt; &amp;amp; &lt;code&gt;or&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;and&lt;/code&gt;와 &lt;code&gt;or&lt;/code&gt;의 사용법은 &lt;code&gt;or (state, state)&lt;/code&gt;, &lt;code&gt;and (state, state)&lt;/code&gt;이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{ if (and (or (isset .Params &amp;#34;title&amp;#34;) (isset .Params &amp;#34;caption&amp;#34;)) (isset .Params &amp;#34;attr&amp;#34;)) }}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;원본&#34;&gt;원본&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/templates/introduction/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Introduction to Hugo Templating&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;

      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
    <item>
      <title>Hugo 여러 서버 한번에 시작 및 및 종료하는 방법 설명</title>
      <link>https://www.devkuma.com/docs/hugo/multi-server/</link>
      <pubDate>Sun, 14 May 2023 14:52:00 +0900</pubDate>
      <author>kc@example.com (kc kim)</author>
      <guid>https://www.devkuma.com/docs/hugo/multi-server/</guid>
      <description>
        
        
        &lt;h2 id=&#34;hugo-서버-다중-시작-정보&#34;&gt;Hugo 서버 다중 시작 정보&lt;/h2&gt;
&lt;p&gt;Hugo로 여러 사이트의 실행해야 하는 경우에 하나의 명령 프롬프트에서 동시에 서버를 시작하는 방법에 대해서 설명한다.&lt;/p&gt;
&lt;p&gt;여기서는 다음과 같이 홈 디렉터리 아래에 여러 개의 Hugo 프로젝트가 있다고 가정한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~/website/site1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~/website/site2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;~/website/site3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;각 Hugo 프로젝트에 대해 Hugo 서버를 시작하려면 다음과 같이, 포트 번호를 다르게 지정하여 여러 Hugo 서버를 시작할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo server -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50001&lt;/span&gt; -s ~/website/site1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo server -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50002&lt;/span&gt; -s ~/website/site2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hugo server -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50003&lt;/span&gt; -s ~/website/site3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그러나, 위에서 설명한 것처럼 하나의 서버 프로세스가 하나의 명령 프롬프트를 차지하게 되므로, 여러 Hugo 서버를 시작할 때 여러 명령 프롬프트를 열어 두어야 한다.&lt;/p&gt;
&lt;h2 id=&#34;1개-프롬프트에서-여러-hugo-서버-시작&#34;&gt;1개 프롬프트에서 여러 Hugo 서버 시작&lt;/h2&gt;
&lt;h3 id=&#34;windows의-경우&#34;&gt;Windows의 경우&lt;/h3&gt;
&lt;p&gt;Windows &lt;code&gt;start&lt;/code&gt;명령을 사용하면, 백그라운드로 hugo 명령을 실행할 수 있으므로, 추가 명령 프롬프트를 열지 않고도 여러 Hugo 서버를 시작할 수 있다.&lt;/p&gt;
&lt;p&gt;예를 들어, 다음 배치 파일은 백그라운드으로 3개의 Hugo 서버를 시작한다.&lt;br&gt;
&lt;strong&gt;start-servers.bat&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; off
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;start&lt;/span&gt; /b hugo server -p 50001 -s C:/website/site1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;start&lt;/span&gt; /b hugo server -p 50002 -s C:/website/site2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;start&lt;/span&gt; /b hugo server -p 50003 -s C:/website/site3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;title&lt;/span&gt; Hugo Servers
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;마지막 라인에 &lt;code&gt;title Hugo Servers&lt;/code&gt;라는 명령으로 명령 프롬프트의 창 제목을 &amp;ldquo;Hugo Servers&amp;quot;으로 변경한다. 윈도우 타이틀을 변경해 두면, 태스크 바를 본 것만으로 무엇을 위한 윈도우인지를 판별하기 쉬워지므로 추천한다.&lt;/p&gt;&lt;/blockquote&gt;
&lt;p&gt;백그라운드로 실행되는 Hugo 서버를 함께 종료하려면, &lt;code&gt;taskkill&lt;/code&gt; 명령을 사용하여 &lt;code&gt;hugo.exe&lt;/code&gt; 프로세스를 모두 종료한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;stop-servers.bat&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bat&#34; data-lang=&#34;bat&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;echo&lt;/span&gt; off
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;taskkill /f /im hugo.exe
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;linux-macos의-경우&#34;&gt;Linux, macOS의 경우&lt;/h3&gt;
&lt;p&gt;Linux, macOS의 경우에는 아래와 같이 마지막에 &lt;code&gt;&amp;amp;&lt;/code&gt;를 붙여서, hugo 명령 실행하면 간단하게 여러 서버를 백그라운드러 시작할 수가 있다.&lt;br&gt;
&lt;strong&gt;start-servers.sh&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;hugo server -p 50001 -s ~/website/site1 &amp;amp;
hugo server -p 50002 -s ~/website/site2 &amp;amp;
hugo server -p 50003 -s ~/website/site3 &amp;amp;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Hugo 서버 프로세스를 함께 종료하려면 &lt;code&gt;killall&lt;/code&gt; 명령으로 쉽게 종료할 수 있다.&lt;br&gt;
&lt;strong&gt;stop-servers.sh&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;killall hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;아니면 쉘 스크립트가 아니라, 함수나 별칭으로 정의하여 사용하면 빠를 것이다.&lt;br&gt;
&lt;strong&gt;~/.bash_profile&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; hugo-start &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hugo server -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50001&lt;/span&gt; -s ~/website/site1 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hugo server -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50002&lt;/span&gt; -s ~/website/site2 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hugo server -p &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;50003&lt;/span&gt; -s ~/website/site3 &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;amp;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;function&lt;/span&gt; hugo-stop &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    killall hugo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>Hugo</category>
      
      <category>Blog</category>
      
    </item>
    
  </channel>
</rss>
