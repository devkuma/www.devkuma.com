<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devkuma – Database</title>
    <link>https://www.devkuma.com/tags/database/</link>
    <image>
      <url>https://www.devkuma.com/tags/database/logo/180x180.jpg</url>
      <title>Database</title>
      <link>https://www.devkuma.com/tags/database/</link>
    </image>
    <description>Recent content in Database on devkuma</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <managingEditor>redfreek2c@gmail.com (kimkc)</managingEditor>
    <webMaster>redfreek2c@gmail.com (kimkc)</webMaster>
    <copyright>The devkuma</copyright>
    
	  <atom:link href="https://www.devkuma.com/tags/database/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>SQLite | SQLite 설치</title>
      <link>https://www.devkuma.com/docs/sqlite/sqlite-install/</link>
      <pubDate>Mon, 14 Oct 2019 23:19:51 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sqlite/sqlite-install/</guid>
      <description>
        
        
        &lt;p&gt;SQLite는 데이터베이스 서버를 사용하지 않고 데이터베이스마다 하나의 파일을 사용하여 관리한다. 데이터베이스 서버를 사용하지 않기에 서버로 상시 가동시키는 어플리케이션이 따로 없다. 명령어로 사용하기 위해서는 커멘드 라인(CLI, Command line interface) 프로그램을 따로 사용하고, PHP와 Ruby on Rails 등에서 사용하려면 DLL이 있어야 한다. 여기에서는 SQLite 커멘드 라인 프로그램과 DLL을 다운로드하는 방법 및 설치 방법에 대해 설명한다.&lt;/p&gt;

      </description>
      
      <category>SQLite</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>PostgreSQL | PostgreSQL 설치</title>
      <link>https://www.devkuma.com/docs/postgresql/postgresql-%EC%84%A4%EC%B9%98/</link>
      <pubDate>Thu, 17 Aug 2017 10:31:25 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/postgresql/postgresql-%EC%84%A4%EC%B9%98/</guid>
      <description>
        
        
        &lt;p&gt;PostgreSQL의 다운로드 방법과 Windows 환경에서의 설치에 대해 설명한다.&lt;/p&gt;
&lt;p&gt;아래 사이트에서 각 OS에 맞게 다운로드 받아서 설치한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/download/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.postgresql.org/download/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>PostgreSQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>MySQL | MySQL 설치</title>
      <link>https://www.devkuma.com/docs/mysql/install/</link>
      <pubDate>Mon, 07 Aug 2017 21:01:44 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/mysql/install/</guid>
      <description>
        
        
        &lt;p&gt;현재 MySQL은 MySQL Enterprise Edition과 MySQL Community Server의 두 가지 버전이 있다. MySQL Enterprise는 상용 버전의 MySQL으로 공식 지원의 제공과 관리 도구를 포함되어 있다. 이에 반해 MySQL Community Server는 무료 데이터베이스이다. 여기에서는 MySQL Community Server를 Docker에서 설치 방법에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;docker-버전-확인&#34;&gt;Docker 버전 확인&lt;/h2&gt;
&lt;p&gt;당연한 말이겠지만 먼저 도커가 설치가 되어 있는지 확인을 해야 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행하면 아래와 같이 버전이 확인이 도커가 잘 설치된 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; % docker --version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Docker version 20.10.8, build 3967b7d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mysql-docker-이미지-다운로드&#34;&gt;MySQL Docker 이미지 다운로드&lt;/h2&gt;
&lt;p&gt;아래 명령어를 실행하여 Elasticsearch Docker 이미지를 다운로드 받는다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull mysql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행하면 아래와 출력될 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker pull mysql
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Using default tag: latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;latest: Pulling from library/mysql
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;07aded7c29c6: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f68b8cbd22de: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;30c1754a28c4: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1b7cb4d6fe05: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;79a41dc56b9a: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00a75e3842fb: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b36a6919c217: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;635b0b84d686: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;6d24c7242d02: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5be6c5edf16f: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cb35eac1242c: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a573d4e1c407: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Digest: sha256:4fcf5df6c46c80db19675a5c067e737c1bc8b0e78e94e816a778ae2c6577213d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status: Downloaded newer image &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; mysql:latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker.io/library/mysql:latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같이 버전을 입력하지 않고 실행하게 되면 최신 버전의 MySQL Docker 이미지를 다운받게 된다. 특정 version을 설치하기 원한다면 아래와 같이 버전을 기입하면 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull mysql:&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;version&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mysql-docker-컨테이너-실행&#34;&gt;MySQL Docker 컨테이너 실행&lt;/h2&gt;
&lt;p&gt;아래 명령어를 실행하여 컨테이너의 실행을 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --name mysql -e &lt;span style=&#34;color:#000&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1234&lt;/span&gt; -d -p 3306:3306 mysql:latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기서 도커 컨테이너명은 &lt;code&gt;--name&lt;/code&gt; 옵션으로 &lt;code&gt;mysql&lt;/code&gt; 이라고 지정하였다. 다른 이름으로 해도 상관 없다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker run --name mysql -e &lt;span style=&#34;color:#000&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1234&lt;/span&gt; -d -p 3306:3306 mysql:latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;79c4333a40db5621a9cb7051fac2a8702c09d0f2706223cf65a5c448b08cb061
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mysql-docker-컨테이너-실행-확인&#34;&gt;MySQL Docker 컨테이너 실행 확인&lt;/h2&gt;
&lt;p&gt;아래 명령어를 실행하여 컨테이너의 실행을 확인한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker ps
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행되면 MySQL가 아래와 같이 실행되고 있는 것을 확인 할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker ps
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                                                  NAMES
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;79c4333a40db   mysql:latest   &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;docker-entrypoint.s...&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;40&lt;/span&gt; seconds ago   Up &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;39&lt;/span&gt; seconds   0.0.0.0:3306-&amp;gt;3306/tcp, :::3306-&amp;gt;3306/tcp, 33060/tcp   mysql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mysql-docker-컨테이너-시작중지재시작&#34;&gt;MySQL Docker 컨테이너 시작/중지/재시작&lt;/h2&gt;
&lt;p&gt;MySQL Docker 컨테이너 중지&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker stop mysql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MySQL Docker 컨테이너 시작&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker start mysql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MySQL Docker 컨테이너 재시작&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker restart mysql
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;mysql-docker-컨테이너-접속&#34;&gt;MySQL Docker 컨테이너 접속&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#204a87&#34;&gt;exec&lt;/span&gt; -it mysql bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker &lt;span style=&#34;color:#204a87&#34;&gt;exec&lt;/span&gt; -it mysql bash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@79c4333a40db:/# mysql -u root -p
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Enter password:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Welcome to the MySQL monitor.  Commands end with &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; or &lt;span style=&#34;color:#4e9a06&#34;&gt;\g&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Your MySQL connection id is &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server version: 8.0.26 MySQL Community Server - GPL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Copyright &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; 2000, 2021, Oracle and/or its affiliates.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Oracle is a registered trademark of Oracle Corporation and/or its
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;affiliates. Other names may be trademarks of their respective
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;owners.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Type &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;help;&amp;#39;&lt;/span&gt; or &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;\h&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; help. Type &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;\c&amp;#39;&lt;/span&gt; to clear the current input statement.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql&amp;gt; show databases&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+--------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Database           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+--------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; information_schema &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; mysql              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; performance_schema &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; sys                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+--------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; rows in &lt;span style=&#34;color:#204a87&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0.01 sec&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql&amp;gt; ^C
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>MySQL</category>
      
      <category>Database</category>
      
      <category>RDBMS</category>
      
      <category>Docker</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | SQL</title>
      <link>https://www.devkuma.com/docs/sql/sql/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/sql/</guid>
      <description>
        
        
        &lt;p&gt;SQL(Structured Query Language)은 관계형 데이터베이스 관리 시스템(RDBMS)의 데이터를 관리하기 위해 설계된 특수 목적의 프로그래밍 언어이다. 관계형 데이터베이스 관리 시스템에서 자료의 검색과 관리, 데이터베이스 스키마 생성과 수정, 데이터베이스 객체 접근 조정 관리를 위해 고안되었다. 많은 수의 데이터베이스 관련 프로그램들이 SQL을 표준으로 채택하고 있다.&lt;/p&gt;
&lt;h2 id=&#34;명령어-종류&#34;&gt;명령어 종류&lt;/h2&gt;
&lt;p&gt;데이터 정의(DDL), 데이터 조작(DML), 데이터 제어(DCL)를 나눈다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터 정의 언어 (DDL : Data Definition Language)&lt;/li&gt;
&lt;li&gt;데이터 조작 언어 (DML : Data Manipulation Language)&lt;/li&gt;
&lt;li&gt;데이터 제어 언어 (DCL : Data Control Language)&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>그래프 데이터베이스 개요</title>
      <link>https://www.devkuma.com/docs/graph-database/overview/</link>
      <pubDate>Fri, 12 May 2023 14:40:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/graph-database/overview/</guid>
      <description>
        
        
        &lt;h2 id=&#34;데이터베이스-기술-변화&#34;&gt;데이터베이스 기술 변화&lt;/h2&gt;
&lt;p&gt;그래프 씽킹의 등장 과정을 보여주는 역사적 괌점의 데이터베이스 기술 변화&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1960년대 : 계층형&lt;/li&gt;
&lt;li&gt;1980년대 : 관계형&lt;/li&gt;
&lt;li&gt;2000년대 : NoSQL&lt;/li&gt;
&lt;li&gt;2020년대 : 그래프 씽킹&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;그래프-db-소개&#34;&gt;그래프 DB 소개&lt;/h2&gt;
&lt;p&gt;그래프 데이터는 수학적 그래프 이론을 토대를 두고 있으며, 개별 객체의 데이터를 나타내는 &lt;strong&gt;점(Node/Vertex)&lt;/strong&gt;, 성질이 비슷한 객체들의 &lt;strong&gt;묶음(Label)&lt;/strong&gt;, 객체 간의 관계를 표시하는 &lt;strong&gt;선(Edge)&lt;/strong&gt; 으로 이루어져 있다&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/graph-database/vertex-edge-graph.png&#34; alt=&#34;graph-database&#34;&gt;&lt;br&gt;
&lt;em&gt;점과 선으로 인간관계를 보여주는 그래프의 개념&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;그래프-이론-용어&#34;&gt;그래프 이론 용어&lt;/h2&gt;
&lt;p&gt;그래프 이론(graph theory)에 대한 용어에 대해 알아보자.&lt;/p&gt;
&lt;h3 id=&#34;그래프-종류&#34;&gt;그래프 종류&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;용어&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Graph&lt;/td&gt;
&lt;td&gt;물건의 관계를 Node와 Edge로 나누어 정리하는 데이터 구조&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Directed Graph&lt;/td&gt;
&lt;td&gt;Node 간 Edge에 지향성을 갖는 그래프&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Undirected Graph&lt;/td&gt;
&lt;td&gt;Node 간 Edge에 지향성이 없고, 2개 Node 간의 관계가 양방향 인 그래프&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Weighted Graph&lt;/td&gt;
&lt;td&gt;Node 사이의 Edge에 가중치가있는 그래프&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Unweighted Graph&lt;/td&gt;
&lt;td&gt;Node 사이의 Edge에 가중치가 없으며 어느 Edge도 동등한 강도인 그래프&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;resources-in-graph&#34;&gt;Resources in Graph&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;용어&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Node&lt;/td&gt;
&lt;td&gt;Ontology에서 말하는 entity&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Edge&lt;/td&gt;
&lt;td&gt;Ontology에서 말하는 relation&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Properties&lt;/td&gt;
&lt;td&gt;Node, Edge와 관련된 정보&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Label&lt;/td&gt;
&lt;td&gt;Ontology에서 말하는 Role&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;온톨로지(Ontology)란?&lt;/h4&gt;

    사람들이 세상에 대하여 보고 듣고 느끼고 생각하는 것에 대하여 서로 간의 토론을 통하여 합의를 이룬 바를, 개념적이고 컴퓨터에서 다룰 수 있는 형태로 표현한 모델로, 개념의 타입이나 사용상의 제약조건들을 명시적으로 정의한 기술이다. - 출처: &lt;a href=&#34;https://ko.wikipedia.org/wiki/%EC%98%A8%ED%86%A8%EB%A1%9C%EC%A7%80&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Wiki&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;

&lt;/div&gt;

&lt;h3 id=&#34;properties-on-node-node-속성&#34;&gt;Properties on Node: Node 속성&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;용어&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;title&lt;/td&gt;
&lt;td&gt;Node 이름&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;caption&lt;/td&gt;
&lt;td&gt;Node 설명&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;properties-on-edge-edge-속성&#34;&gt;:Properties on Edge: Edge 속성&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;용어&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Directionality&lt;/td&gt;
&lt;td&gt;연결 방향&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Weight&lt;/td&gt;
&lt;td&gt;연결 가중치&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;데이터-수집&#34;&gt;데이터 수집&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;용어&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Node List&lt;/td&gt;
&lt;td&gt;모든 Node 목록&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Edge List&lt;/td&gt;
&lt;td&gt;모든 Edge 목록&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Adjacency Matrix&lt;/td&gt;
&lt;td&gt;모든 Node x 모든 Node의 2차원 테이블.&lt;br&gt;각 항목에는 Edge 상태가 수치 표현된다 (ex: -1: 연결이 없다, 1~N: Weight)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Neighbors&lt;/td&gt;
&lt;td&gt;한 노드에 인접한 노드 목록&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://bitnine.tistory.com/389&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[알쓸IT잡] 그래프 데이터베이스란? (Graph Database) - Part.1&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wikidocs.net/50716&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;01-1 그래픽 데이터베이스란 ? | WiKiDocs&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>Graph Database</category>
      
    </item>
    
    <item>
      <title>TiDB 아키텍처 - 프로덕트 구성 이해</title>
      <link>https://www.devkuma.com/docs/tidb/architecture/</link>
      <pubDate>Sun, 04 Sep 2022 04:03:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tidb/architecture/</guid>
      <description>
        
        
        &lt;h2 id=&#34;tidb-아키텍처&#34;&gt;TiDB 아키텍처&lt;/h2&gt;
&lt;p&gt;기존의 독립형 데이터베이스와 비교하여 TiDB는 다음과 같은 이점을 제공한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;유연하고 탄력적인 확장성을 갖춘 분산 아키텍처를 갖추고 있다.&lt;/li&gt;
&lt;li&gt;MySQL 5.7 프로토콜, MySQL의 일반적인 기능 및 구문과 완전히 호환된다.
&lt;ul&gt;
&lt;li&gt;애플리케이션을 TiDB로 마이그레이션하기 위해 한 줄의 코드도 변경할 필요가 없다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;적은 복제본에 장애가 발생한 경우에는 자동 장애 조치로 고가용성을 지원한다. 애플리케이션에 투명하다.&lt;/li&gt;
&lt;li&gt;은행 송금과 같은 강력한 일관성이 필요한 시나리오에 적합한 ACID 트랜잭션를 지원한다.&lt;/li&gt;
&lt;li&gt;데이터 마이그레이션, 복제 또는 백업을 위한 다양한 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/migration-overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;데이터 마이그레이션 도구들&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 제공한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TiDB는 분산 데이터베이스로서 여러 구성 요소로 구성되도록 설계되었다. 이러한 컴포넌트는 서로 통신하여 완전한 TiDB 시스템을 형성한다. 아키텍처는 다음과 같다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/tidb/tidb-architecture-v3.1.png&#34; alt=&#34;TiDB Architecture&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;tidb-서버---외부-노출-서버&#34;&gt;TiDB 서버 - 외부 노출 서버&lt;/h2&gt;
&lt;p&gt;TiDB 서버는 MySQL 프로토콜의 연결 엔드포인트를 외부에 노출하는 상태 Stateless SQL 계층이다.&lt;/p&gt;
&lt;p&gt;TiDB 서버는 SQL 요청을 받고 &lt;strong&gt;SQL 구문 분석&lt;/strong&gt; 및 &lt;strong&gt;최적화를 수행&lt;/strong&gt;하며 궁극적으로 &lt;strong&gt;분산 실행 계획을 생성&lt;/strong&gt;한다. 수평 확장이 가능하며 LVS(Linux Virtual Server), HAProxy, F5와 같은 로드 밸런싱 구성 요소를 통해 외부에 통합 인터페이스를 제공한다. 데이터를 저장하지 않고 컴퓨팅 및 SQL 분석만 수행하고 실제 데이터 읽기 요청을 TiKV 노드(또는 TiFlash 노드)로 전송한다.&lt;/p&gt;
&lt;h2 id=&#34;pdplacement-driver-서버---클러스터-관리&#34;&gt;PD(Placement Driver) 서버 - 클러스터 관리&lt;/h2&gt;
&lt;p&gt;PD(Placement Driver) 서버는 전체 클러스터의 메타데이터 관리 구성 요소이다.&lt;/p&gt;
&lt;p&gt;모든 단일 TiKV 노드의 실시간 데이터 분포 메타데이터와 전체 TiDB 클러스터 토폴로지 구조를 저장하고, TiDB 대시보드 관리 UI를 제공하고, 트랜잭션 ID를 분산 트랜잭션에 할당한다. PD 서버는 클러스터 메타데이터를 저장할 뿐만 아니라, TiKV 노드에서 실시간으로 보고되는 데이터 전달 상태에 따라 특정 TiKV 노드로 데이터 스케줄링 명령을 보내기 때문에 전체 TiDB 클러스터의 &amp;ldquo;두뇌&amp;rdquo; 혹은 &amp;ldquo;사령탑&amp;rdquo; 같은 역할을 한다. 또한 PD 서버는 최소 3개의 노드로 구성되며 고가용성을 제공하여, 홀수 개의 PD 노드를 배포하는 것이 좋다.&lt;/p&gt;
&lt;h2 id=&#34;스토리지-서버---저장-클러스터&#34;&gt;스토리지 서버 - 저장 클러스터&lt;/h2&gt;
&lt;p&gt;저장은 두 종류의 클러스터 서버가 존재한다.&lt;/p&gt;
&lt;h3 id=&#34;tikv-서버&#34;&gt;TiKV 서버&lt;/h3&gt;
&lt;p&gt;TiKV 서버는 데이터 저장을 담당한다. TiKV는 분산 트랜잭션 키-값 스토리지 엔진이다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.pingcap.com/tidb/stable/glossary#regionpeerraft-group&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;리전&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;은 데이터를 저장하는 기본 단위이다. 각 리전에는 StartKey에서 EndKey 까지의 왼쪽이 닫힘 및 오른쪽이 열림 간격인 특정 키 범위에 대한 데이터를 저장한다.&lt;/p&gt;
&lt;p&gt;각 TiKV 노드에는 여러 개의 리전이 있다. TiKV API는 키-값 쌍으로 분산 트랜잭션을 기본적으로 지원하며 기본적으로 스냅샷 격리 수준 분리를 지원한다. 이것이 TiDB가 SQL 수준에서 분산 트랜잭션을 지원하는 방법의 핵심이다. SQL문을 처리한 후 TiDB 서버는 SQL 실행 계획을 TiKV API에 대한 실제 호출로 변환한다. 따라서 데이터는 TiKV에 저장된다. TiKV의 모든 데이터는 여러 복제본(기본적으로 3개의 복제본)에서 자동으로 유지되므로 TiKV는 기본 고가용성과 자동 장애 조치를 지원한다.&lt;/p&gt;
&lt;h3 id=&#34;tiflash-서버&#34;&gt;TiFlash 서버&lt;/h3&gt;
&lt;p&gt;TiFlash 서버는 특수한 유형의 스토리지 서버이다. 일반적인 TiKV 노드와 달리 TiFlash는 주로 분석 프로세스를 가속화하도록 설계된 각 열에 대해 데이터를 저장한다.&lt;/p&gt;
&lt;h2 id=&#34;참고&#34;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.pingcap.com/tidb/stable/tidb-architecture&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiDB Architecture&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>TiDB</category>
      
    </item>
    
    <item>
      <title>TiDB 소프트웨어 및 하드웨어 권장 사항</title>
      <link>https://www.devkuma.com/docs/tidb/hardware-and-software-requirements/</link>
      <pubDate>Fri, 02 Sep 2022 15:38:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tidb/hardware-and-software-requirements/</guid>
      <description>
        
        
        &lt;h2 id=&#34;네트워크-요구사항&#34;&gt;네트워크 요구사항&lt;/h2&gt;
&lt;p&gt;오픈 소스 분산 NewSQL 데이터베이스인 TiDB를 실행하려면 다음 네트워크 포트 구성이 필요하다. 실제 환경에서 TiDB 배포를 기반으로 관리자는 네트워크 및 호스트 측에서 관련 포트를 열 수 있다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;요소&lt;/th&gt;
&lt;th&gt;기본 포트&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;TiDB&lt;/td&gt;
&lt;td&gt;4000&lt;/td&gt;
&lt;td&gt;애플리케이션 및 DBA ​​도구용 통신 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TiDB&lt;/td&gt;
&lt;td&gt;10080&lt;/td&gt;
&lt;td&gt;TiDB 상태를 보고하기 위한 통신 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TiKV&lt;/td&gt;
&lt;td&gt;20160&lt;/td&gt;
&lt;td&gt;TiKV 통신 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TiKV&lt;/td&gt;
&lt;td&gt;20180&lt;/td&gt;
&lt;td&gt;TiKV 상태를 보고하기 위한 통신 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PD&lt;/td&gt;
&lt;td&gt;2379&lt;/td&gt;
&lt;td&gt;TiDB와 PD 간의 통신 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;PD&lt;/td&gt;
&lt;td&gt;2380&lt;/td&gt;
&lt;td&gt;PD 클러스터의 노드 간 통신 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TiFlash&lt;/td&gt;
&lt;td&gt;9000&lt;/td&gt;
&lt;td&gt;TiFlash TCP 서비스 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TiFlash&lt;/td&gt;
&lt;td&gt;8123&lt;/td&gt;
&lt;td&gt;TiFlash HTTP 서비스 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TiFlash&lt;/td&gt;
&lt;td&gt;3930&lt;/td&gt;
&lt;td&gt;TiFlash RAFT 및 코 프로세서 서비스 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TiFlash&lt;/td&gt;
&lt;td&gt;20170&lt;/td&gt;
&lt;td&gt;TiFlash 프록시 서비스 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TiFlash&lt;/td&gt;
&lt;td&gt;20292&lt;/td&gt;
&lt;td&gt;Prometheus가 TiFlash Proxy 메트릭을 끌어 올리는 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TiFlash&lt;/td&gt;
&lt;td&gt;8234&lt;/td&gt;
&lt;td&gt;Prometheus가 TiFlash 메트릭을 끌어 올리는 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Pump&lt;/td&gt;
&lt;td&gt;8250&lt;/td&gt;
&lt;td&gt;펌프 통신 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Drainer&lt;/td&gt;
&lt;td&gt;8249&lt;/td&gt;
&lt;td&gt;Drainer 통신 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;TiCDC&lt;/td&gt;
&lt;td&gt;8300&lt;/td&gt;
&lt;td&gt;TiCDC 통신 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;모니터링&lt;/td&gt;
&lt;td&gt;9090&lt;/td&gt;
&lt;td&gt;Prometheus 서비스의 통신 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;모니터링&lt;/td&gt;
&lt;td&gt;20120&lt;/td&gt;
&lt;td&gt;NgMonitoring 서비스의 통신 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Node_exporter&lt;/td&gt;
&lt;td&gt;9100&lt;/td&gt;
&lt;td&gt;모든 TiDB 클러스터 노드의 시스템 정보를 보고하기 위한 통신 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Blackbox_exporter&lt;/td&gt;
&lt;td&gt;9115&lt;/td&gt;
&lt;td&gt;Blackbox_exporter 통신 포트. TiDB 클러스터의 포트를 모니터링하는데 사용된다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Grafana&lt;/td&gt;
&lt;td&gt;3000&lt;/td&gt;
&lt;td&gt;외부 웹 모니터링 서비스 및 클라이언트(브라우저) 액세스용 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;경고 관리자&lt;/td&gt;
&lt;td&gt;9093&lt;/td&gt;
&lt;td&gt;경고 웹 서비스 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;경고 관리자&lt;/td&gt;
&lt;td&gt;9094&lt;/td&gt;
&lt;td&gt;경고 통신 포트&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

      </description>
      
      <category>Database</category>
      
      <category>TiDB</category>
      
    </item>
    
    <item>
      <title>TiDB 소개</title>
      <link>https://www.devkuma.com/docs/tidb/overview/</link>
      <pubDate>Mon, 08 Aug 2022 14:32:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tidb/overview/</guid>
      <description>
        
        
        &lt;p&gt;&lt;a href=&#34;https://github.com/pingcap/tidb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiDB&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;(/’taɪdiːbi:/, &amp;ldquo;Ti&amp;rdquo; 는 Titanium을 나타냄)는 하이브리드 트랜잭션 및 분석 처리(HTAP) 워크로드를 지원하는 오픈 소스 NewSQL 데이터베이스이다. 이는 MySQL과 호환되며 수평 확장성, 강력한 일관성 및 고가용성을 제공한다. TiDB의 목표는 OLTP(온라인 트랜잭션 처리), OLAP(온라인 분석 처리) 및 HTAP 서비스를 다루는 원스톱 데이터베이스 솔루션을 사용자에게 제공하는 것이다. TiDB는 고가용성과 대규모 데이터의 강력한 일관성을 요구하는 다양한 사용 사례에 적합하다.&lt;/p&gt;
&lt;iframe width=&#34;600&#34; height=&#34;450&#34; src=&#34;https://www.youtube.com/embed/aWBNNPm21zg&#34; title=&#34;Why TiDB?&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;주요-기능&#34;&gt;주요 기능&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;수평으로 스케일-아웃하거나 간단한 스케일-인&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;컴퓨팅을 스토리지와 분리하는 TiDB 아키텍처 설계를 통해 필요에 따라 컴퓨팅 또는 스토리지 용량을 온라인으로 개별적으로 스케일 아웃하거나 스케일 아웃할 수 있다. 스케일링 프로세스는 애플리케이션 운영 및 유지보수 직원에게 투명한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;금융 등급의 고가용성&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;데이터는 여러 복제본에 저장된다. 데이터 복제본은 Multi-Raft 프로토콜을 사용하여 트랜잭션 로그를 검색한다. 트랜잭션은 데이터가 대부분의 복제본에 성공적으로 기록된 경우에만 커밋할 수 있다. 이렇게 하면 소수의 복제본이 다운될 때 강력한 일관성과 가용성을 보장할 수 있다. 다양한 재해 저항 수준의 요구 사항을 충족하기 위해 필요에 따라 지리적 위치와 복제본 수를 구성할 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;실시간 HTAP&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TiDB는 두 개의 스토리지 엔진을 제공한다. TiKV는 행 기반 스토리지 엔진이고 TiFlash는 열 기반 스토리지 엔진이다. TiFlash는 Multi-Raft Learner 프로토콜을 사용하여 TiKV의 데이터를 실시간으로 복제하여 TiKV 행기반 스토리지 엔진과 TiFlash 열기반 스토리지 엔진 간의 데이터 일관성을 보장한다. TiKV 및 TiFlash는 HTAP 리소스 격리 문제를 해결하기 위해 필요에 따라 다른 시스템에 배포할 수 있다.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;HTAP(Hybrid Transaction/Analytical Processing)&lt;/h4&gt;

    &lt;p&gt;HTAP(Hybrid Transaction/Analytical Processing)는 조사 기관 가트너가 붙인 명칭이다. 데이터 복제 없이 OLTP(Online Transaction Processing)과 OLAP(Online Analytical Processing)가 가능한 차세대 데이터 플랫폼을 의미한다.&lt;/p&gt;
&lt;p&gt;원문보기: &lt;a href=&#34;https://www.ciokorea.com/t/544/12200/30801?page=0,1#csidxd92aa7fca28b93089f3d5aea81955b0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&amp;ldquo;빅데이터 알뜰 혁신&amp;rdquo;··· 맵알이 전하는 8가지 융합 요령&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;


&lt;/div&gt;

&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;클라우드 네이티브 분산 데이터베이스&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TiDB는 클라우드용으로 설계된 분산 데이터베이스로 클라우드 플랫폼에 유연한 확장성, 안정성 및 보안을 제공한다. 사용자는 변화하는 워크로드 요구 사항에 맞게 TiDB를 유연하게 확장할 수 있다. TiDB를 사용하면 각 데이터에 최소 3개의 복제본이 있으며 데이터 센터 전체를 중지할 수 있도록 서로 다른 클라우드 가용성 영역에서 예약할 수 있다. TiDB Operator 는 Kubernetes에서 TiDB 관리를 지원하고 TiDB 클러스터 작업과 관련된 작업을 자동화한다. 이를 통해 관리되는 Kubernetes를 제공하는 클라우드에 TiDB를 쉽게 배포할 수 있다. 완전 관리형 TiDB 서비스인 TiDB Cloud 는 클라우드에서 TiDB 의 힘을 발휘하는 가장 쉽고 경제적이며 탄력적인 방법이며 몇 번의 클릭만으로 TiDB 클러스터를 배포하고 실행할 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;MySQL 5.7 프로토콜 및 MySQL 에코시스템과 호환 가능&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TiDB는 MySQL 5.7 프로토콜, MySQL의 일반적인 기능 및 MySQL 에코시스템과 호환된다. 응용 프로그램을 TiDB로 마이그레이션하기 위해 종종 한 줄의 코드를 변경할 필요가 없으며 소량의 코드를 변경하기 만하면 된다. 또한 TiDB는 애플리케이션 데이터를 TiDB로 쉽게 마이그레이션하는데 도움이 되는 일련의 데이터 마이그레이션 도구를 제공한다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;사용-사례&#34;&gt;사용 사례&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;데이터 일관성, 신뢰성, 가용성, 확장성 및 내결함성에 대한 높은 요구사항이 있는 금융 산업 시나리오&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;많은 사람들이 알고 있듯이 금융 업계는 데이터의 일관성, 신뢰성, 가용성, 확장성(Scalability) 및 내결함성에 대한 높은 요구 사항을 가지고 있다. 기존 솔루션은 동일한 도시의 두개의 데이터 센터에서 서비스를 제공하고, 다른 도시의 세 번째 데이터 센터는 데이터 재해 복구를 제공하지만 서비스는 제공하지 않는다. 이 솔루션에는 리소스 사용률이 낮고 유지 보수 비용이 높다는 단점이 있으며, RTO(Recovery Time Objective, 목표 복구 시간)와 RPO(Recovery Point Objective, 목표 복구 시점)가 기대에 부응하지 못하고 있다. TiDB는 여러 복제본과 Multi-Raft 프로토콜을 사용하여 다른 데이터 센터, 랙 및 장비에 데이터를 스케줄링한다. 일부 장비에 장애가 발생하면 시스템이 자동으로 전환하여 시스템의 RTO ≤ 30초 및 RPO = 0이 되도록 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;스토리지 용량, 확장성 및 동시성에 대한 요구 사항이 높은 대량의 데이터와 동시성이 높은 시나리오&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;애플리케이션이 빠르게 성장함에 따라 데이터가 급증한다. 기존의 독립형(Standalone) 데이터베이스에서는 데이터 용량 요구 사항을 충족할 수 없다. 해결책은 샤딩 미들웨어 또는 NewSQL 데이터베이스(예: TiDB)를 사용하는 것이다. 후자는 비용 효율적이다. TiDB는 별도의 컴퓨팅 및 스토리지 아키텍처를 사용하므로 컴퓨팅 또는 스토리지 용량을 개별적으로 스케일-아웃하거나 스케일-인 할 수 있다. 컴퓨팅 레이어는 최대 512개의 노드를 지원하며, 각 노드는 최대 1,000개의 동시 실행을 지원하며 최대 클러스터 용량은 PB(페타바이트) 수준이다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;실시간 HTAP 시나리오&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;5G, 사물 인터넷, 인공 지능의 급속한 성장과 함께, 기업에 의해 생성 된 데이터는 엄청나게 증가하고 수백 TB (테라바이트) 또는 PB 수준의 규모에 도달했다. 기존 솔루션은 OLTP 데이터베이스를 사용하여 온라인 트랜잭션 응용 프로그램을 처리하고, ETL(추출, 변환, 로드) 도구를 사용하여 데이터 분석을 위해 데이터를 OLAP 데이터베이스로 복제하는 것이다. 이 솔루션에는 스토리지 비용이 높고 실시간 성능이 낮을 수 있는 몇 가지 단점이 있다. TiDB는 v4.0에서 TiFlash 컬럼 스토리지 엔진을 도입한다. 이는 TiKV 행 기반 스토리지 엔진과 결합하여 TiDB를 진정한 HTAP 데이터베이스로 구축한다. 소량의 추가 스토리지 비용으로 온라인 트랜잭션 처리와 실시간 데이터 분석을 모두 동일한 시스템에서 처리할 수 있으므로 비용을 크게 절약할 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;데이터 집계 및 2차 처리 시나리오&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;대부분의 기업 애플리케이션 데이터는 다양한 시스템에 분산되어 있다. 애플리케이션이 성장함에 따라 의사 결정 리더는 회사 전체의 비즈니스 상태를 이해하고 시간 내에 의사 결정을 내려야 한다. 이럴 때 회사는 분산된 데이터를 동일한 시스템에 집계하고 2차 처리를 수행하여 T+0 또는 T+1 보고서를 생성해야 한다. 기존의 솔루션은 ETL과 Hadoop을 사용하는 것이지만 Hadoop 시스템은 복잡하며 운영 및 유지 보수 및 스토리지 비용이 높다. Hadoop과 비교하면 TiDB는 훨씬 간단하다. TiDB에서 제공하는 ETL 또는 데이터 마이그레이션 도구를 사용하여 데이터를 TiDB로 복제할 수 있다. 보고서는 SQL 문을 사용하여 직접 생성할 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;


&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pingcap/docs/blob/release-6.1/overview.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiDB Introduction&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; 최종수정일 2022. 8. 11. 오후 6:22:49: &lt;a href=&#34;https://github.com/pingcap/docs/commit/132f5275e29b808ff26c5c76d4eb30005a2b0ff0&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;overview: refine the size of the intro video (#9938) (#9940)&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;


      </description>
      
      <category>Database</category>
      
      <category>TiDB</category>
      
    </item>
    
    <item>
      <title>TiDB 스토리지</title>
      <link>https://www.devkuma.com/docs/tidb/storege/</link>
      <pubDate>Wed, 03 Aug 2022 03:38:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tidb/storege/</guid>
      <description>
        
        
        &lt;h2 id=&#34;스토리지와-키-밸류의-기본-지식&#34;&gt;스토리지와 키-밸류의 기본 지식&lt;/h2&gt;
&lt;h3 id=&#34;소개&#34;&gt;소개&lt;/h3&gt;
&lt;p&gt;데이터베이스, 운영 체제, 컴파일러는 컴퓨터 소프트웨어를 구축하는 주요 기본 기반이다. 데이터베이스는 애플리케이션 계층에 가깝고 비즈니스를 지원하는 시스템으로 수십 년 동안 개발이 계속되고 있으며, 매일 진화하고 있다.&lt;/p&gt;
&lt;p&gt;많은 사람들이 다양한 종류의 데이터베이스를 이용해 왔다고 생각하지만, 데이터베이스(특히 분산 데이터베이스)의 개발 경험이 있는 분은 극히 소수라고 생각한다. 데이터베이스 구현에서 알면 스킬 향상으로 이어질 뿐만 아니라 다른 시스템 구축에도 도움이 되며 데이터베이스를 능숙하게 활용할 수 있다.&lt;/p&gt;
&lt;p&gt;기술 이해를 깊게 하는 가장 좋은 방법은 그 분야의 오픈 소스 프로젝트에 몰두하는 것이라고 필자는 생각한다. 데이터베이스 분야에도 많은 훌륭한 오픈 소스 프로젝트가 있다. 이 프로젝트를 통해, 특히 유명한 MySQL과 PostgreSQL 소스 코드를 본적이 있는 사람도 많을 것이다. 분산 데이터베이스 분야에서 TiDB도 인정받는 몇 안되는 프로젝트로 위 제품과 마찬가지로 소스 코드를 읽을 수도 있다.&lt;/p&gt;
&lt;p&gt;그러나, 분산 데이터베이스는 복잡하기 때문에 많은 기술자에게 전체 프로젝트를 이해하는 것이 어려운 것 같다. 그 때문에, 필자는 TiDB의 기술을 알기 쉽게 해설하는 기사를 정리하기로 했다. 오픈 소스로부터 읽을 수 있는 테크닉 뿐만이 아니라, SQL 인터페이스의 배후에 숨겨져 있는 구현시의 테크닉등도 다수 소개 하겠다.&lt;/p&gt;
&lt;h3 id=&#34;데이터-저장&#34;&gt;데이터 저장&lt;/h3&gt;
&lt;p&gt;데이터베이스의 가장 기본적인 기능인 데이터 저장에 대해 설명한다. 데이터를 저장하는 방법에는 여러 가지가 있다. 가장 간단한 방법은 메모리에 데이터 구조를 구축하고 사용자가 보낸 데이터를 저장하는 방법이다. 예를 들어, 배열을 사용하여 데이터를 저장하고 데이터를 받으면 배열에 새 항목을 추가할 수 있다. 이 솔루션은 간단하고 기본적인 요구를 충족하며 성능이 뛰어나다. 그러나 이러한 장점을 능가하는 단점이 있다. 가장 큰 문제는 모든 데이터가 메모리에 저장되므로 서버가 중지되거나 다시 시작될 때 데이터가 손실된다는 것이다.&lt;/p&gt;
&lt;p&gt;데이터 지속성을 달성하는 수단으로는 디스크와 같은 비휘발성 스토리지에 데이터를 저장하는 것이다. 디스크에 파일을 만들고 데이터를 받으면 파일에 새 데이터를 추가한다. 이는 지속 가능한 스토리지 솔루션이지만 이것만으로는 충분하지는 않다. 왜냐하면 저장된 디스크가 손상되면 데이터가 손실되기 때문이다. 따라서 디스크가 손상된 경우를 가정하고 RAID(Redundant Array of Independent Disks)에서 중복하여 사용한다. 하지만 기계가 다운되면 어떻게 될까? 데이터에 더 이상 액세스할 수 없다.&lt;br&gt;
RAID는 안전한 저장 장소가 아니다. 그 외에도 네트워크를 통해 스토리지에 데이터를 저장하는 방법과 중복 소프트웨어를 이용하여 하드웨어 수준에서 복제하는 방법 등이 있다. 이러한 방법의 문제는 복제할 때 일관성을 유지하는 것이다. 데이터 무결성(무손상성)과 정확성 보호는 기본 요구 사항이며, 이를 달성하기 위해 아래에 같은 어려운 문제가 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;빠른 쓰기 속도가 필요하다.&lt;/li&gt;
&lt;li&gt;저장 시 데이터를 일관성 있게 읽어야 한다.&lt;/li&gt;
&lt;li&gt;동시 수정을 처리해야 한다.&lt;/li&gt;
&lt;li&gt;여러 레코드를 원자적으로 수정해야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이러한 문제는 모두 해결하기 어렵지만, 모든 것을 해결할 수 있어야 뛰어난 데이터베이스 스토리지 시스템이라고 할 수 있다.&lt;/p&gt;
&lt;p&gt;이러한 배경을 바탕으로 당사는 TiDB의 데이터스토어 부분인 TiKV를 개발하였다. 우선, SQL의 개념은 잊고, 고성능으로 고신뢰의 분산 키 밸류 스토어의 TiKV의 구현 방법을 소개하겠다.&lt;br&gt;
※ TiKV는 KVS로 이용하실 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;키-밸류key-value&#34;&gt;키-밸류(key-value)&lt;/h3&gt;
&lt;p&gt;데이터 스토리지 시스템의 첫 번째 가장 중요한 단계는 데이터 저장 모델을 결정하는 것이다. 즉, 어떤 형식으로 데이터를 저장해야 하는지를 결정하는 것이다. TiKV는 원래 바이트 배열이 키와 값으로 구성된 거대한 맵으로 생각할 수 있다. 이 맵에서는 키가 바이트 배열의 원시 바이너리 비트에 따라 비교 순서로 배치된다. 다음 사항에 유의해야 한다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;이는 키-밸류 쌍으로 구성된 거대한 지도이다.&lt;/li&gt;
&lt;li&gt;이 맵에서 키-밸류 쌍은 키의 이진 시퀀스에 따라 순서가 지정된다. 사용자는 키의 위치를 ​​탐색하고 다른 키 값 쌍에 대해 다음 메소드를 사용할 수 있다. 이 키-밸류 쌍은 모두 이것보다 커진다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;여기에서 언급한 스토리지 모델과 SQL 테이블 간의 관계는 무엇인가? 라고 의문을 느끼고 있는 사람도 있을 것이다. 분명히 말한다. 무관한다.&lt;/p&gt;
&lt;h2 id=&#34;rocksdb-raft-및-region의-개념&#34;&gt;RocksDB, Raft 및 Region의 개념&lt;/h2&gt;
&lt;p&gt;앞에서 데이터의 격납 및 키 밸류를 설명하였다. 이번 RocksDB, Raft와 리전을 소개하겠다.&lt;/p&gt;
&lt;h3 id=&#34;rocksdb&#34;&gt;RocksDB&lt;/h3&gt;
&lt;p&gt;지속 가능한 스토리지 엔진은 데이터를 디스크에 저장한다. TiKV도 예외는 아니다. 그러나 TiKV는 디스크에 직접 데이터를 쓰지 않는다. 먼저 TiKV가 RocksDB에 데이터를 저장하고 RocksDB가 데이터 저장을 수행한다. 독립 실행형(Stand-alone) 스토리지 엔진(특히 고성능 독립 실행형 엔진)의 개발은 상당한 비용이 들기 때문이다. 다양한 최적화 처리에 다가서는 것이다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://en.pingcap.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PingCAP&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;회사는 RocksDB가 모든 요구 사항을 충족하는 탁월한 오픈 소스 독립형 스토리지 엔진임을 발견하였다. Facebook팀이 이 엔진의 최적화에 매진하고 있는 동안, PingCAP사는 그렇게 어려움이 없이 개량이 진행되는 강력한 독립형 엔진을 즐길 수 있다는 장점도 있다. 물론, PingCAP사도 RocksDB에 대해서 약간의 코드 제공하고는 있지만, 이 프로젝트의 추가 개선이 기대하기는 힘들다. 간단히 말해 RocksDB는 독립형 키-밸류 맵으로 볼 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;raft&#34;&gt;Raft&lt;/h3&gt;
&lt;p&gt;이 복합 프로젝트의 첫번째로 중요한 단계는, 안정적이고 효과적인 로컬 스토리지 솔루션을 찾는 것이었다. 다음은 1대의 컴퓨터가 정지할 때 데이터의 무결성과 정확성을 어떻게 보호하는가에 대한 비교적 어려운 과제이다. 효과적인 것은 데이터를 여러 대의 컴퓨터에 복제하는 방법이다.&lt;/p&gt;
&lt;p&gt;그렇게 되면 1대의 컴퓨터가 충돌할 경우, 다른 컴퓨터의 복제본을 사용할 수 있다. 그러나, 복제 솔루션은 유효하지 않은 복제본이 있는 상황에 대응할 수 있는 안정적이고 효과적이어야 한다. 어려울 것 같지만 Raft를 이용하면 실현할 수 있다. Raft는 Paxos보다 이해하기 쉬운 Paxos와 동등한 합의 알고리즘이다. Raft에 관심이 있으시면 &lt;a href=&#34;https://raft.github.io/raft.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Raft의 논문&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;을 읽으시면 자세한 내용을 볼 수 있다. 이 외부 Raft 보고서는 기본적인 솔루션만을 제시하고 있으며, 이 보고서를 엄격하게 준수하면 성능이 낮아진다는 것을 지적한다. PingCAP는 Raft를 구현하기 위해 다양한 최적화를 수행하였다.&lt;/p&gt;
&lt;p&gt;Raft는 합의 알고리즘이며, 다음과 같은 세 가지 중요한 기능이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;리더 선출&lt;/li&gt;
&lt;li&gt;멤버십 변경&lt;/li&gt;
&lt;li&gt;로그 복제&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/tidb/TiDB-Raft.png&#34; alt=&#34;TiDB Raft&#34;&gt;&lt;/p&gt;
&lt;p&gt;TiKV는 Raft를 사용하여 데이터를 복제한다. 각 데이터 변경은 Raft 로그로 기록된다. 데이터는 Raft의 로그 복제 기능을 통해 Raft 그룹의 여러 노드와 안전하고 안정적으로 동기화된다.&lt;/p&gt;
&lt;p&gt;요약하면 독립 실행형 RocksDB를 사용하면 데이터를 디스크에 빠르게 저장할 수 있다. Raft를 사용하면 시스템 장애에 대비하여 여러 시스템에 데이터를 복제할 수 있다. 데이터는 RocksDB에 대한 것이 아니라 Raft 인터페이스를 통해 기록된다. Raft 구현 덕분에 분산형 키-밸류 시스템을 이용할 수 있게 되어, 이제는 컴퓨터의 장애에 대해 걱정할 필요가 없다.&lt;/p&gt;
&lt;h3 id=&#34;region&#34;&gt;Region&lt;/h3&gt;
&lt;p&gt;이 섹션에서는 매우 중요한 개념 &amp;ldquo;리전(지역, region)&amp;ldquo;에 대해 소개한다. 리전은 일련의 메커니즘을 이해하는데 있어서 기초가 된다. 이 개념을 고려하기 전에 Raft를 잊어 버리고 모든 데이터에 복제본이 하나만 있다는 상황을 상상해보자.&lt;/p&gt;
&lt;p&gt;앞서 언급했듯이 TiKV는 순서가 지정된 거대한 키-밸류 맵으로 볼 수 있다. 스토리지의 수평 확장성을 얻으려면 여러 시스템에 데이터를 분산시켜야 한다.&lt;/p&gt;
&lt;p&gt;키-밸류 시스템에는 여러 컴퓨터에 데이터를 분산시키는 두 가지 일반적인 솔루션이 있다. 하나는 해시를 만들고 해시 값을 기반으로 해당 스토리지 노드를 선택하는 솔루션이다. 다른 하나는 범위를 사용하고 직렬 키 세그먼트를 스토리지 노드에 저장하는 솔루션이다. TiKV는 두 번째 솔루션을 선택하고 전체 키 가치 공간을 여러 세그먼트로 나눈다. 각 세그먼트는 인접한 키 세트로 구성된다. 이러한 세그먼트를 당사는 &amp;lsquo;리전&amp;rsquo;이라고 부른다. 각 리전이 저장할 수 있는 데이터의 크기에는 상한이 있다(기본값은 64MB, 이 사이즈는 설정 가능). 각 리전은, 왼쪽이 열리고 오른쪽이 닫힌 구간(StartKey로부터 EndKey까지)에 의해 표현할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/tidb/TiKV-Region.png&#34; alt=&#34;TiKV과 Region&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;지금 여기서 말하고 있는 리전은 SQL의 테이블과는 아무 관계도 없다!&lt;/strong&gt; 지금은 SQL을 잠시 잊고 키-밸류에 집중하자.&lt;/p&gt;
&lt;p&gt;데이터를 리전으로 분할한 후 다음과 같은 두 가지 중요한 작업을 수행한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;클러스터의 모든 노드에 데이터를 분산하고 지역을 데이터 이동의 기본 단위로 사용한다. 각 노드의 리전 수가 거의 같은지 확인해야 한다.&lt;/li&gt;
&lt;li&gt;지역에서 Raft를 통한 복제 및 멤버십 관리.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이 두 가지 작업은 매우 중요하기 때문에 하나씩 설명한다.&lt;/p&gt;
&lt;p&gt;첫 번째 태스크에서는 키를 기반으로 데이터를 여러 리전으로 나누고, 각 리전의 모든 데이터를 하나의 노드에 저장한다. 모든 클러스터 노드에 대한 지역의 균등 분산은 당사 시스템의 한 구성 요소가 담당한다. 그 결과, 스토리지 용량의 수평 확장성이 제공된다(새 노드가 추가될 때 시스템이 자동으로 다른 노드에서 리전을 스케줄대로 처리한다). 반면에 부하 분산도 달성된다(즉, 한 노드에 많은 데이터가 배치되고, 다른 노드에는 적게 배치되는 상황이 발생하지 않음). 동시에 상위 클라이언트가 필요한 데이터에 액세스할 수 있도록 하기 위해 다른 구성 요소(component)가 여러 노드에 걸쳐서 리전의 분산을 기록한다. 즉, 사용자는 키의 정확한 리전과 키를 통해 배치된 해당 리전의 노드를 조회할 수 있다. 이 두 가지 구성 요소는 나중에 자세히 설명한다.&lt;/p&gt;
&lt;p&gt;두 번째 작업으로 이동하자. TiKV는 리전의 데이터를 복제한다. 즉, 하나의 리전의 데이터에는 &amp;ldquo;Replica&amp;quot;라는 이름의 여러 복제본이 있다. 복제본 간의 데이터 일관성을 달성하려면 Raft가 사용된다. 한 리전의 여러 복제본이 여러 개의 다른 노드에 저장되고 Raft 그룹을 구성한다. 한 복제본이 그룹의 리더 역할을 하고 다른 복제본이 팔로어가 된다. 읽기와 쓰기는 모두 리더를 통해 이루어지며 리더가 팔로어에 복제한다.&lt;/p&gt;
&lt;p&gt;다음 그림은 리전과 Raft 그룹의 전체 이미지를 표시해주고 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/tidb/TiDB-Raft-Group.png&#34; alt=&#34;리전과 Raft 그룹&#34;&gt;&lt;/p&gt;
&lt;p&gt;리전에서 데이터를 분산 및 복제할 때는 어느 정도 재해 복구 능력을 가진 분산형 키 밸류 시스템을 활용할 수 있다. 이제 사용자는 용량이나 디스크 장애로 인한 데이터 손실 문제로 고민할 필요가 없다. 이것은 훌륭하지만 완벽하지는 않다. 필요한 기능이 있다.&lt;/p&gt;
&lt;h2 id=&#34;mvcc와-트랜잭션&#34;&gt;MVCC와 트랜잭션&lt;/h2&gt;
&lt;p&gt;앞에서 데이터의 저장, 키 밸류, RocksDB, Raft와 리전등 개념을 소개하였다. 여기에서는 MVCC와 트랜잭션을 소개하겠다.&lt;/p&gt;
&lt;h3 id=&#34;mvcc&#34;&gt;MVCC&lt;/h3&gt;
&lt;p&gt;많은 데이터베이스는 여러 버전의 동시 제어(MVCC: Multi-Version Concurrency Control)를 수행한다. TiKV도 예외는 아니다. MVCC를 통하지 않고 두 클라이언트가 키 값을 동시에 업데이트하면 데이터가 락(Lock)이 걸린다. 분산 시나리오에서 이러한 처리는 성능 문제나 교착 상태 문제로 이어진다.&lt;/p&gt;
&lt;p&gt;TiKV는 키에 버전을 추가하여 MVCC를 실현한다. MVCC를 수행하지 않으면 TiKV의 데이터 레이아웃은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Key1 -&amp;gt; Value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Key2 -&amp;gt; Value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    KeyN -&amp;gt; Value
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MVCC를 수행하면 TiKV의 키 배열은 다음과 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Key1-Version3 -&amp;gt; Value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Key1-Version2 -&amp;gt; Value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Key1-Version1 -&amp;gt; Value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Key2-Version4 -&amp;gt; Value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Key2-Version3 -&amp;gt; Value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Key2-Version2 -&amp;gt; Value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Key2-Version1 -&amp;gt; Value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    KeyN-Version2 -&amp;gt; Value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    KeyN-Version1 -&amp;gt; Value
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;키에 여러 버전이 있다면, 가장 큰 숫자를 먼저 배치한다(필요한 경우 키와 정렬된 배열이라고 설명한 키 값 섹션을 다시 살펴보길 바란다). 이와 같이, 키에 버젼을 추기해 값을 받아올 때에는 키와 버젼을 사용한 MVCC의 키(Key-Version)를 구축할 수 있다. 그런 다음 Seek(Key-Version)을 직접 실행하여 이 Key-Version 이후의 첫 번째 위치를 찾을 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;트랜잭션&#34;&gt;트랜잭션&lt;/h3&gt;
&lt;p&gt;TiKV의 트랜잭션은 퍼콜레이터(percolator) 모델을 채택하고 있으며, 많은 최적화가 이루어지고 있다. 여기서 언급하고 싶은 것은 TiKV의 트랜잭션이 낙관적인 잠금을 사용한다는 것이다. TiKV의 트랜잭션은 실행 프로세스에서 쓰기 충돌을 감지하지 않는다. 충돌을 감지하는 것은 커밋 단계에서만 발생한다. 먼저 커밋을 종료하는 트랜잭션은 성공적으로 기록되지만, 다른 트랜잭션은 다시 시도한다. 그 회사의 쓰기 경쟁이 심각하지 않으면, 이 모델의 성능은 매우 좋다. 예를 들어 대형 테이블의 여러 데이터 행을 무작위로 업데이트하는 작업에 어려움없이 대응할 수 있다. 그러나, 쓰기 충돌이 심각하면 성능이 낮아 진다. 카운터는 극단적인 예라고 생각하길 바란다. 많은 클라이언트가 몇몇의 행을 동시에 업데이트하는 상황은 심각한 충돌과 다수의 잘못된 재시도로 이어진다.&lt;/p&gt;
&lt;h2 id=&#34;마무리&#34;&gt;마무리&lt;/h2&gt;
&lt;p&gt;스토리지 편의 기사에서는 TiKV의 기본 개념과 약간의 세부 사항, 이 분산형 트랜잭션 키 밸류 엔진의 레이어 구조, 멀티 데이터 센터의 재해 복구를 실현하는 방법 등을 소개하였다. 다음 기사에서는 분산 데이터베이스 TiDB의 컴퓨팅에 대해 소개한다.&lt;/p&gt;

      </description>
      
      <category>Database</category>
      
      <category>TiDB</category>
      
    </item>
    
    <item>
      <title>Graph Database</title>
      <link>https://www.devkuma.com/docs/graph-db/</link>
      <pubDate>Wed, 27 Jul 2022 07:48:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/graph-db/</guid>
      <description>
        
        
        &lt;p&gt;그래프 데이터베이스는 말그대로 그래프를 처리하는 데이터베이스이다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://db-engines.com/en/ranking/graph&amp;#43;dbms&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;DB-Engines Ranking of Graph DBMS&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;

      </description>
      
      <category>Database</category>
      
      <category>Graph Database</category>
      
    </item>
    
    <item>
      <title>그래프 데이터베이스 퀵 스타드 가이드</title>
      <link>https://www.devkuma.com/docs/graph-database/quick-start/</link>
      <pubDate>Wed, 27 Jul 2022 07:48:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/graph-database/quick-start/</guid>
      <description>
        
        
        &lt;h2 id=&#34;그래프-데이터베이스란&#34;&gt;그래프 데이터베이스란?&lt;/h2&gt;
&lt;p&gt;그래프 데이터베이스는 말그대로 그래프를 처리하는 데이터베이스이다. 많이 사용되는 관계형 데이터베이스는 테이블 구조를 다루는 데이터베이스라고 할 수 있다.&lt;/p&gt;
&lt;p&gt;관계형 데이터베이스는 여러 테이블 구조의 관계를 처리할 수 있지만 실제로 관계를 다루는 것은 어려운 경우가 많다. 관계를 나타 내기 위해 적절한 스키마 디자인이 필요하며 쿼리는 어렵다. 또한 테이블을 조인하는데 비용이 많이 든다.&lt;/p&gt;
&lt;p&gt;그래프 데이터베이스는 화이트보드에 다이어그램을 그리듯이 데이터를 처리할 수 있는 장점이 있다. 연결된 데이터를 직관적으로 조작할 수 있다. 반대로 연결되지 않은 데이터를 다루는데는 적합하지 않다.&lt;/p&gt;
&lt;h3 id=&#34;그래프-데이터-모델&#34;&gt;그래프 데이터 모델&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/graph-database/graph-data-model.png&#34; alt=&#34;그래프 데이터 모델&#34;&gt;&lt;/p&gt;
&lt;p&gt;일반적으로 자주 사용되고 있는 것은 프로퍼티 그래프로 프로퍼티 그래프는 아래와 같은 특징이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;그래프에는 노드(node, 정점, 꼭지점)와 엣지(edge, 간선, 변)가 있다.&lt;/li&gt;
&lt;li&gt;노드에는 레이블과 속성(키-값 쌍)이 있다.&lt;/li&gt;
&lt;li&gt;엣지에는 레이블과 방향이 있으며 시작 노드와 끝 노드가 있다.&lt;/li&gt;
&lt;li&gt;엣지에는 물론 속성을 포함할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;실제로-그래프-데이터베이스를-사용해-보자&#34;&gt;실제로 그래프 데이터베이스를 사용해 보자.&lt;/h2&gt;
&lt;p&gt;그래프 데이터베이스를 이해하려면 실제로 사용해 보는 것이 빠르다. Docker를 사용하려면 사전에 Docker 설치가 필요하다.&lt;/p&gt;
&lt;h3 id=&#34;그래프-데이터베이스-사용을-위한-준비&#34;&gt;그래프 데이터베이스 사용을 위한 준비&lt;/h3&gt;
&lt;h4 id=&#34;샘플-데이터를-클론한다&#34;&gt;샘플 데이터를 클론한다.&lt;/h4&gt;
&lt;p&gt;실제로 그래프에서 데이터를 사용해 보면 알기 쉽기 때문에 샘플 데이터를 먼저 클론한다.&lt;br&gt;
아래 저장고는 &lt;a href=&#34;https://kelvinlawrence.net/book/Gremlin-Graph-Guide.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PRACTICAL GREMLIN: An Apache TinkerPop Tutorial&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에서 사용되는 항공로에 대한 데이터이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% git clone https://github.com/krlawrence/graph.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;그래프-스토어를-시작하고-샘플-데이터-로드&#34;&gt;그래프 스토어를 시작하고 샘플 데이터 로드&lt;/h4&gt;
&lt;p&gt;Docker에서 그래프 데이터베이스를 시작하고 샘플 데이터를 로드한다.
Docker 이미지는 &lt;code&gt;tinkerpop/gremlin-console&lt;/code&gt;을 사용한다.
Gremlin Console에는 TinkerGraph라는 온-메모리 그래프 스토어가 함께 제공된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% cd graph/sample-data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker run -it --rm -v `pwd`:/mydata tinkerpop/gremlin-console
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gremlin&amp;gt; :load /mydata/load-air-routes-graph-34.groovy
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;그래프-탐색&#34;&gt;그래프 탐색&lt;/h3&gt;
&lt;h4 id=&#34;gremlin&#34;&gt;Gremlin&lt;/h4&gt;
&lt;p&gt;관계형 데이터베이스에서 사용되는 SQL과 마찬가지로 그래프 데이터베이스에 대한 몇 가지 쿼리 언어가 있다.&lt;br&gt;
여기에서는 &lt;a href=&#34;https://tinkerpop.apache.org/gremlin.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Gremlin&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;을 사용한다. Gremlin에서는 메소드 체인과 같은 설명으로 그래프를 추적한다.&lt;/p&gt;
&lt;h4 id=&#34;그래프-추적&#34;&gt;그래프 추적&lt;/h4&gt;
&lt;p&gt;Gremlin에서 쿼리는 기본적으로 &lt;code&gt;g&lt;/code&gt;부터 시작된다. 이는 그래프에 액세스하기 위한 traversal 객체라고 불리는 것이다.&lt;br&gt;
이 traversal 객체는 스스로 좋아하는 변수에 할당할 수 있지만, &lt;code&gt;g&lt;/code&gt;라는 변수에 바인딩하는 경우가 많다. 샘플 데이터를 로드한 시점에, 이미 &lt;code&gt;g&lt;/code&gt;에 바인딩되어 있다.&lt;/p&gt;
&lt;h3 id=&#34;첫번째-쿼리&#34;&gt;첫번째 쿼리&lt;/h3&gt;
&lt;h4 id=&#34;노드-조회&#34;&gt;노드 조회&lt;/h4&gt;
&lt;p&gt;샘플 데이터의 항공로 데이터를 추적해 보자. 우선, 그래프의 모든 노드(정점)를 취득해 보겠다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gremlin&amp;gt; g.V()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[0]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[1]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[2]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[3]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[4]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[5]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[6]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[7]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[8]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[9]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;... 생략 ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[996]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[997]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[998]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;v[999]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;당연히 많은 양의 노드가 반환된다.&lt;/p&gt;
&lt;p&gt;총 몇건이 있는지 조회해 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gremlin&amp;gt; g.V().count()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;3619
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;노드는 라벨로 필터링 하지 않으면, 공항 이외의 노드도 조회되므로 공항(airport)의 노드만의 건수를 세어 보겠다.
&lt;code&gt;hasLabel&lt;/code&gt;로 레이블을 조회 할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gremlin&amp;gt; g.V().hasLabel(&amp;#39;airport&amp;#39;).count()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;3374
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;인천 공항 코드(ICN)를 가진 공항을 찾아 보겠다. &lt;code&gt;has&lt;/code&gt;로 속성의 키와 값을 전달하여 조회 할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gremlin&amp;gt; g.V().hasLabel(&amp;#39;airport&amp;#39;).has(&amp;#39;code&amp;#39;,&amp;#39;ICN&amp;#39;)
==&amp;gt;v[122]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;단, 하나의 노드를 얻을 수 있었다! 인천 공항의 노드가 어떤 속성을 가지고 있는지 살펴 보겠다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gremlin&amp;gt; g.V().hasLabel(&amp;#39;airport&amp;#39;).has(&amp;#39;code&amp;#39;,&amp;#39;ICN&amp;#39;).valueMap()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[country:[KR],code:[ICN],longest:[13000],city:[Seoul],elev:[23],icao:[RKSI],lon:[126.450996398926],type:[airport],region:[KR-28],runways:[3],lat:[37.4691009521484],desc:[Seoul, Incheon International Airport]]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;노드-따라가기&#34;&gt;노드 따라가기&lt;/h4&gt;
&lt;p&gt;&lt;code&gt;out&lt;/code&gt;를 이용하여, 나가는 방향의 정점이나 엣지를 찾을 수 있다.&lt;br&gt;
공항과 공항은 &lt;code&gt;route&lt;/code&gt;라는 라벨의 엣지로 연결되어 있으므로 인천 공항에서 나가는 루트의 수를 세어 보겠다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gremlin&amp;gt; g.V().hasLabel(&amp;#39;airport&amp;#39;).has(&amp;#39;code&amp;#39;,&amp;#39;ICN&amp;#39;).out(&amp;#39;route&amp;#39;).count()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;144
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;144개의 경로가 있음을 알 수 있다.&lt;br&gt;
실제로 어떤 공항으로 가는지 보자. 속성 값을 가져오려면 &lt;code&gt;values&lt;/code&gt;을 사용한다. 키 이름을 전달하여 특정 속성의 값을 얻을 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gremlin&amp;gt; g.V().hasLabel(&amp;#39;airport&amp;#39;).has(&amp;#39;code&amp;#39;,&amp;#39;ICN&amp;#39;).out(&amp;#39;route&amp;#39;).values(&amp;#39;code&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;BKK
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;SVO
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;HND
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;DOH
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;MXP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;NBO
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;MEX
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;WAW
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;인천 공항에서 환승을 한 번 사용하는 것을 허용하면, 얼마나 많은 공항에 갈 수 있을까?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gremlin&amp;gt; g.V().hasLabel(&amp;#39;airport&amp;#39;).has(&amp;#39;code&amp;#39;,&amp;#39;ICN&amp;#39;).out(&amp;#39;route&amp;#39;).out(&amp;#39;route&amp;#39;).count()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;11386
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;등록된 공항 수보다 많은 수가 반환 되었다. 이는 중복이 제거되지 않았기 때문이다. 중복을 제거하려면 &lt;code&gt;dedup&lt;/code&gt;을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gremlin&amp;gt; g.V().hasLabel(&amp;#39;airport&amp;#39;).has(&amp;#39;code&amp;#39;,&amp;#39;ICN&amp;#39;).out(&amp;#39;route&amp;#39;).out(&amp;#39;route&amp;#39;).dedup().count()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;1817
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그리고, 환승을 1회 사용하지만, 직행으로 갈 수 있는 루트를 제거해 보자. &lt;code&gt;aggregate&lt;/code&gt;으로 일시적으로 컬렉션을 저장하고, &lt;code&gt;where&lt;/code&gt;로 제거한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gremlin&amp;gt; g.V().hasLabel(&amp;#39;airport&amp;#39;).has(&amp;#39;code&amp;#39;,&amp;#39;ICN&amp;#39;).out(&amp;#39;route&amp;#39;).aggregate(&amp;#39;nonstop&amp;#39;).out(&amp;#39;route&amp;#39;).where(without(&amp;#39;nonstop&amp;#39;)).dedup().count()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;1673
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;인천 공항(ICN)에서 나와 김포 공항(GMP)으로 돌아오는 루트는 어떤 루트가 있습니까?&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gremlin&amp;gt; g.V().hasLabel(&amp;#39;airport&amp;#39;).has(&amp;#39;code&amp;#39;,&amp;#39;ICN&amp;#39;).out(&amp;#39;route&amp;#39;).out(&amp;#39;route&amp;#39;).has(&amp;#39;code&amp;#39;, &amp;#39;GMP&amp;#39;).path().by(&amp;#39;code&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,HND,GMP]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,KIX,GMP]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,NGO,GMP]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,CJU,GMP]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,PEK,GMP]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;하네다 공항(HND) 등을 경유하는 루트가 목록으로 반환되었다.&lt;/p&gt;
&lt;h4 id=&#34;조금-더-노드-따라가기&#34;&gt;조금 더 노드 따라가기&lt;/h4&gt;
&lt;p&gt;한국과 일본을 잇는 공항의 루트를 받아 온다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gremlin&amp;gt; g.V().hasLabel(&amp;#39;airport&amp;#39;).has(&amp;#39;country&amp;#39;,&amp;#39;KR&amp;#39;).out(&amp;#39;route&amp;#39;).has(&amp;#39;country&amp;#39;,&amp;#39;JP&amp;#39;).path().by(&amp;#39;code&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,HND]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,FUK]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,KIX]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,CTS]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,NGO]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,HIJ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,KOJ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,OIT]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,KMQ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,YGJ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,MYJ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,TAK]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,KIJ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,SDJ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,OKA]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,UBJ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,KMI]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,KKJ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,HSG]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,KMJ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,NGS]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,TOY]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,OKJ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,AOJ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,AXT]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,FSZ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN,NRT]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[CJU,NRT]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[CJU,FUK]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[CJU,KIX]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[CJU,NGO]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[PUS,NRT]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[PUS,FUK]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[PUS,KIX]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[PUS,CTS]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[PUS,NGO]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[PUS,OKA]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[GMP,HND]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[GMP,KIX]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[GMP,NGO]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[TAE,NRT]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[TAE,FUK]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[TAE,KIX]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[TAE,CTS]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[TAE,OKA]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;대부분 인천발이다. 이해하기 쉽게 계산해 보자.&lt;/p&gt;
&lt;p&gt;어디에서 그룹화할지 알 수 있도록 중간에 &lt;code&gt;as&lt;/code&gt; 이름을 붙여 참조해야 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gremlin&amp;gt; g.V().hasLabel(&amp;#39;airport&amp;#39;).has(&amp;#39;country&amp;#39;,&amp;#39;KR&amp;#39;).as(&amp;#39;kr&amp;#39;).out(&amp;#39;route&amp;#39;).has(&amp;#39;country&amp;#39;,&amp;#39;JP&amp;#39;).select(&amp;#39;kr&amp;#39;).groupCount().by(&amp;#39;code&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;==&amp;gt;[ICN:27,TAE:5,GMP:3,CJU:4,PUS:6]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;일본으로 가는 루트는 인천 공항발이 27개, 부산 공항발이 6개가 있는 것을 알았다.&lt;/p&gt;
&lt;p&gt;한국과 일본의 최장 경로는 어디일까? 각 엣지에는 거리가 있기 때문에 이를 참조하여 조회해 보자.&lt;br&gt;
엣지에 봐야 하기에 &lt;code&gt;out&lt;/code&gt;이 아닌 &lt;code&gt;outE&lt;/code&gt;와 &lt;code&gt;inV&lt;/code&gt;를 사용하여, &lt;code&gt;order&lt;/code&gt;로 정렬해 보겠다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;gremlin&amp;gt; g.V().hasLabel(&amp;#39;airport&amp;#39;).has(&amp;#39;country&amp;#39;,&amp;#39;KR&amp;#39;).outE(&amp;#39;route&amp;#39;).order().by(&amp;#39;dist&amp;#39;,desc).inV().has(&amp;#39;country&amp;#39;,&amp;#39;JP&amp;#39;).path().by(&amp;#39;code&amp;#39;).by(&amp;#39;dist&amp;#39;)
==&amp;gt;[ICN,882,CTS]
==&amp;gt;[PUS,861,CTS]
==&amp;gt;[TAE,841,CTS]
==&amp;gt;[CJU,804,NRT]
==&amp;gt;[ICN,795,AOJ]
==&amp;gt;[ICN,790,SDJ]
...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;인천 공항(ICN)과 신치토세 공항(CTS)을 연결하는 882마일이 가장 긴 것을 알 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;그래프-데이터베이스의-특징-어려운-점&#34;&gt;그래프 데이터베이스의 특징, 어려운 점&lt;/h2&gt;
&lt;p&gt;실제로 그래프 데이터베이스를 사용해 보면 연결이 있는 데이터를 쉽게 끌어 당길 수 있다는 것을 알 수 있다.&lt;br&gt;
그러나, 그래프 데이터베이스라고 해도 무엇이든 끌어 당길 수 있는 것은 아니다. 그래프 데이터베이스에서 참조하는 노드와 에지 수가 증가하면 응답이 느려진다.&lt;br&gt;
예를 들어, 수백만 팔로워가 있는 유명인이 존재하는 소셜 그래프의 경우, 그 유명인을 팔로우하고 있다는 조건으로 시작하여 순회해 나가면, 수백만 엣지를 참조하게 되므로 즉시 결과를 돌려주는 것 어려워진다.&lt;/p&gt;
&lt;p&gt;효율적인 쿼리를 작성하는 것은 물론 중요하지만, 시스템으로 사용할 계획인 일반적인 쿼리를 효율적으로 처리할 수 있도록 그래프를 배치해야 한다.
또, 그래프에 모든 데이터를 보존할 필요는 없고, 다른 데이타베이스 시스템과 조합해 알맞게 곳에 배치하여 이용하는 것이 중요하다.&lt;/p&gt;
&lt;p&gt;데이터로서 관계성을 다루고 있지만, MySQL에서 JOIN하는 것이 힘들었다면, 꼭 한번 그래프 데이터베이스를 이용해 보길 바란다.&lt;/p&gt;
&lt;h2 id=&#34;참고문헌&#34;&gt;참고문헌&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://kelvinlawrence.net/book/Gremlin-Graph-Guide.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PRACTICAL GREMLIN: An Apache TinkerPop Tutorial&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;좀 더 Gremlin에서 여러가지 시험해보고 싶은 분에게 추천하는 Tutorial이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.oreilly.com/library/view/graph-databases/9781449356255/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;O&amp;rsquo;Reilly - Graph Databases&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;이용하고 있는 쿼리 언어는 다르지만, 그래프 데이터베이스에 대해서 설명한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tinkerpop.apache.org/docs/current/reference/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TinkerPop Documentation&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;포괄적인 문서이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>Graph Database</category>
      
      <category>Gremlin</category>
      
    </item>
    
    <item>
      <title>MongoDB 샤딩 개요</title>
      <link>https://www.devkuma.com/docs/mongodb/sharding/intro/</link>
      <pubDate>Wed, 19 Jan 2022 09:19:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/mongodb/sharding/intro/</guid>
      <description>
        
        
        &lt;h2 id=&#34;스케일링scaling&#34;&gt;스케일링(scaling)&lt;/h2&gt;
&lt;p&gt;샤딩을 말하기 전에 먼저 스케일링에 대해 알아보겠다.&lt;/p&gt;
&lt;p&gt;일반적인 스케일링을 말하자면, 시스템 규모가 커지면 스케일링(확장)이 필요하게 된다. 스케일링 방법은 크게  &amp;ldquo;수직 스케일링&amp;rdquo;, &amp;ldquo;수평 스케일링&amp;rdquo; 이렇게 2가지 종류로 나눈다.&lt;/p&gt;
&lt;h3 id=&#34;수직-스케일링&#34;&gt;수직 스케일링&lt;/h3&gt;
&lt;p&gt;수직 스케일링은 CPU나 RAM, 스토리지를 보다 고성능인 것으로 교체해 나가는 방법이다. 스케일링은 간단하지만, 애초에 CPU나 메모리에 한계가 있기 때문에 어느 정도로 성능 한계가 있다.&lt;/p&gt;
&lt;h3 id=&#34;수평-스케일링&#34;&gt;수평 스케일링&lt;/h3&gt;
&lt;p&gt;데이터 세트로 시스템 분할을 하여, 여러 개의 서버로부터 병렬로 처리하도록 하는 방법이다. 포괄적으로 성능은 수직 스케일링보다 날 수 있지만 스케일링 할수록 복잡성이 커지므로 관리가 어려워진다.&lt;/p&gt;
&lt;h2 id=&#34;샤딩sharding이란&#34;&gt;샤딩(sharding)이란?&lt;/h2&gt;
&lt;p&gt;샤딩이란, 데이터를 복수 서버에 분산시키는 &amp;ldquo;수평 스케일링&amp;rdquo; 구조이다.&lt;/p&gt;
&lt;p&gt;샤딩을 하는 것으로 크게 3개의 이점(&amp;ldquo;읽고 쓰기 처리가 빠리진다 &amp;amp; 성능을 올리기 쉽다&amp;rdquo;, &amp;ldquo;스토리지가 증설하기 쉽다&amp;rdquo;, &amp;ldquo;가용성이 높다&amp;rdquo;)가 있다. 각각 자세한 내용은 아래에서 살펴 보겠다. MongoDB는 표준 기능으로 샤딩 수평 스케일링)을 지원한다.&lt;/p&gt;
&lt;h3 id=&#34;읽기쓰기&#34;&gt;읽기/쓰기&lt;/h3&gt;
&lt;p&gt;데이터를 샤드 클러스터에 분산하고 저장하면 읽기/쓰기 처리(파일 I/O)를 분산 처리할 수 있다. 파일 읽기/쓰기(파일 I/O)는 느린 처리이므로 이를 분산화함으로써 보다 빠른 읽기/쓰기를 할 수 있게 된다. 또, 읽고 쓰기의 부하가 오더라도 서버를 늘려 가는 것으로 수평 스케일링할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;스토리지&#34;&gt;스토리지&lt;/h3&gt;
&lt;p&gt;샤드 클러스터에는 조각 데이터가 분산되어 저장된다. 데이터량이 늘어날 때에도 서버를 늘려서 수평 스케일링할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;고가용성&#34;&gt;고가용성&lt;/h3&gt;
&lt;p&gt;샤드 클러스터에서는 부분 읽기 및 쓰기가 가능하다. 읽고 쓸 수 없으면 작업을 수행할 수 있는 샤드 서버에서 가져올 수도 있다.&lt;/p&gt;
&lt;h2 id=&#34;샤드-클러스터&#34;&gt;샤드 클러스터&lt;/h2&gt;
&lt;p&gt;MongoDB의 샤딩은 다음 3가지 구성 요소(샤드, 라우터, 구성 서버)로 구성된다. 각각의 관계와 설명은 다음과 같다.&lt;/p&gt;
&lt;h3 id=&#34;샤드&#34;&gt;샤드&lt;/h3&gt;
&lt;p&gt;샤드 서버에는 컬렉션을 분할한 조각 데이터(청크)를 저장한다. 샤드 서버는 복제 세트로 구성될 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;라우터&#34;&gt;라우터&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;mongos&lt;/code&gt;는 쿼리 라우터로 애플리케이션에서 샤드 클러스터로의 인터페이스를 제공한다. 샤드 클러스터에 액세스할 때는 항상 &lt;code&gt;mongos&lt;/code&gt; 경유로 액세스한다. 샤드화되어 있지 않은 컬렉션이어도 반드시 &lt;code&gt;mongos&lt;/code&gt; 경유하여 액세스 한다.&lt;/p&gt;
&lt;h3 id=&#34;구성-서버&#34;&gt;구성 서버&lt;/h3&gt;
&lt;p&gt;샤드 클러스터 설정에 대한 메타데이터를 저장한다. 어떤 샤드 서버에 데이터가 있는지 등도 이 서버에 저장된다. MongoDB 3.4 이상부터는 구성 서버를 레프리카셋으로 구성한다.&lt;/p&gt;
&lt;h2 id=&#34;샤드-키&#34;&gt;샤드 키&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;샤드 키&amp;quot;란, 데이터를 분산해 샤드 서버에 보존할 때에 키로서 이용하는 정보를 말한다. MongoDB는 &amp;ldquo;샤드 키&amp;quot;를 사용하여 컬렉션 내 문서 분산을 수행한다.&lt;/p&gt;
&lt;p&gt;다음 그림은 x샤드 키로 분산된 간단한 예이다.&lt;/p&gt;
&lt;p&gt;&amp;hellip; 그림 &amp;hellip;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;샤드 키&amp;quot;에 대한 포인트는 아래 3자지디다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;모든 문서에 존재하는 불변의 필드 또는 필드군으로 구성한다.&lt;/li&gt;
&lt;li&gt;일단 샤드 키를 결정하고 분산을 수행되면, 샤드 키를 다시 변경할 수 없다.&lt;/li&gt;
&lt;li&gt;샤딩할 컬렉션에는 샤드 키가 포함된 인덱스가 필요하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;물론 샤드 키의 선택에 의해 성능, 효율, 확장성에 큰 영향을 주는 것은 말할 필요도 없다. 샤드 키 선택이 부적절하다면 위에서 설명한 대로 샤드 서버에 편향이 발생하여 비효율적인 동작이 발생할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;청크&#34;&gt;청크&lt;/h2&gt;
&lt;p&gt;앞서 언급했듯이 MongoDB는 &amp;ldquo;샤드 키&amp;quot;값으로 데이터 저장을 분산하지만,이 때 &amp;ldquo;청크&amp;quot;라는 덩어리마다 그룹화하여 샤드 서버에 분산 저장한다. MongoDB는 자동으로 &amp;ldquo;청크&amp;quot;가 샤드 클러스터 내에서 균형있게 분산되도록 이동한다.&lt;/p&gt;
&lt;p&gt;청크로 분할 및 그것을 각 샤드에 분산 보존하는 이미지는 아래와 같다.&lt;/p&gt;
&lt;p&gt;&amp;hellip; 그림 &amp;hellip;&lt;/p&gt;
&lt;h2 id=&#34;샤드-데이터에-대한-조작-제약&#34;&gt;샤드 데이터에 대한 조작 제약&lt;/h2&gt;
&lt;p&gt;샤딩된 데이터(샤드 데이터)에 대한 조작에는 몇 가지 제한사항이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;group 명령을 사용할 수 없다.&lt;/li&gt;
&lt;li&gt;대신 aggregate 없이 MapReduce 를 이용한다.&lt;/li&gt;
&lt;li&gt;updateOne 또는 _iddeleteOne 를 지정해야 한다.&lt;/li&gt;
&lt;li&gt;샤드 키 _id가 포함되어 있지 않으면 오류가 발생한다.&lt;/li&gt;
&lt;li&gt;샤딩한 컬렉션에는 독특한 인덱스가 필요하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;샤드-컬렉션-및-비샤드-컬렉션&#34;&gt;샤드 컬렉션 및 비샤드 컬렉션&lt;/h2&gt;
&lt;p&gt;MongoDB에서는 샤드화하는 컬렉션과 샤드화하지 않는 컬렉션을 혼합할 수 있다. 샤드화할 컬렉션은 샤드 클러스터에 분산되어 저장되지만 샤드되지 않은 컬렉션은 기본 샤드에 저장된다.&lt;/p&gt;
&lt;h2 id=&#34;데이터-분산-방법&#34;&gt;데이터 분산 방법&lt;/h2&gt;
&lt;p&gt;샤드화할 때의 분산 방법은 &amp;ldquo;해시 샤드&amp;quot;와 &amp;ldquo;레인지 샤드&amp;quot;의 2가지가 있다.&lt;/p&gt;
&lt;h3 id=&#34;해시-샤드&#34;&gt;해시 샤드&lt;/h3&gt;
&lt;p&gt;샤드 키의 해시 값을 이용하여 데이터 분산을 수행한다. 해시를 이용한 샤드의 경우, 샤드 키의 값이 가까워져도 청크가 엉망이 되기 쉬운 특징이 있다. 즉, 샤드 키가 단조 변화하는 경우에 분산화하기 쉬운 분산화 방법이다. 반대로 데이터가 분산되기 쉽기 때문에, 데이터 구조나 취득 방법에 따라서는 브로드캐스트 조작이 늘어날 우려도 있다.&lt;/p&gt;
&lt;h3 id=&#34;레인지-샤드&#34;&gt;레인지 샤드&lt;/h3&gt;
&lt;p&gt;샤드 키 범위에 따라 데이터 분산을 수행힌다. 해시 샤드와 달리, 샤드 키의 값이 가까우면 같은 청크 상에 존재할 가능성이 높아지는 분산화 방법이다. 샤드키의 선정이 부적절하다면 모처럼 샤드라는 분산화 기술을 이용하려고 하는데도 특정 서버에 부하가 치우쳐 버릴 우려가 있다.&lt;/p&gt;

      </description>
      
      <category>Database</category>
      
      <category>NoSQL</category>
      
      <category>MongoDB</category>
      
    </item>
    
    <item>
      <title>MongoDB 레플리케이션 개요</title>
      <link>https://www.devkuma.com/docs/mongodb/replication/intro/</link>
      <pubDate>Sun, 16 Jan 2022 10:20:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/mongodb/replication/intro/</guid>
      <description>
        
        
        &lt;p&gt;이번에는 &amp;ldquo;MongoDB 레플리케이션&amp;quot;에 대해 알아보겠다.&lt;/p&gt;
&lt;h2 id=&#34;레플리케이션-replication&#34;&gt;레플리케이션 (Replication)&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;레플리케이션(Replication)&amp;ldquo;는 데이터를 여러 데이터베이스 서버에 복사하여 중복성과 가용성을 제공하는 메커니즘이다. 보존하는 데이터 센터가 다른 경우 장애 혹은 재해에 대책이 된다. 또한, 동일한 데이터가 되고 있으므로 읽기가 많은 어플리케이션에서는 부하 분산을 시킬 수도 있다.&lt;/p&gt;
&lt;h2 id=&#34;mongodb에서의-레플리케이션&#34;&gt;MongoDB에서의 레플리케이션&lt;/h2&gt;
&lt;p&gt;MongoDB는 동일한 데이터를 보유하는 데이터베이스 인스턴스를 &amp;ldquo;복제본 셋&amp;quot;라는 단일 그룹으로 관리한다. MongoDB는 이 레플리케이션 셋의 작동 방식으로 중복성과 가용성을 제공한다.&lt;/p&gt;
&lt;p&gt;프라이머리 서버는 모든 쓰기 작업을 받는 서버로 데이터에 대한 변경 사항을 기록하고 로그에 남긴다. 세컨더리 서버는 프라이머리 서버의 작업 로그를 복사하고 적용하여 프라이머리 서버와 동일한 데이터 상태를 만든다. 만약 프라이머리 서버에 장애가 발생하면 적절한 세컨더리 서버가 프라이머리 서버로 선임되어 서비스를 계속하게 된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/mongodb/mongodb_replication_1.png&#34; alt=&#34;MongoDB 레플리케이션&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;레프리카셋복제본-셋-replicaset-맴버&#34;&gt;레프리카셋(복제본 셋, Replicaset) 맴버&lt;/h2&gt;
&lt;p&gt;MongoDB의 레프리카셋(Replicaset)에 포함된 맴버 유형은 다음과 같은 세 가지 유형이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;프라이머리(Primary)&lt;/li&gt;
&lt;li&gt;세컨더리(Secondary)&lt;/li&gt;
&lt;li&gt;아비터(Arbiter)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;각각에 대해 아래에서 자세히 소개한다.&lt;/p&gt;
&lt;h3 id=&#34;프라이머리주-primary-서버&#34;&gt;프라이머리(주, Primary) 서버&lt;/h3&gt;
&lt;p&gt;레프리카셋 중에 하나만 존재하는 쓰기 가능한 서버이다. 프라이머리 서버에 쓰기 작업 정보는 로그 oplog로 남아 있으며, 이 작업 로그가 세컨더리 서버로 전송되어 복사된다.&lt;/p&gt;
&lt;p&gt;프라이머리 서버가 어떤 이유로든 문제가 생기면, 나머지 세컨더리 서버 중 다음 프라이머리 서버가 투표로 선임된다.&lt;/p&gt;
&lt;h3 id=&#34;세컨더리보조-secondary-서버&#34;&gt;세컨더리(보조, Secondary) 서버&lt;/h3&gt;
&lt;p&gt;기본 서버의 작업 로그를 기반으로 데이터를 업데이트하는 읽기 전용 서버이다. 세컨더리 서버를 여러 대 준비하여 많은 양의 읽기 작업을 수행할 수 있다.&lt;/p&gt;
&lt;p&gt;클라이언트로부터의 데이터 읽기는 기본적으로 세컨더리 서버 우선으로 읽기에 수행되고, 즉시 요구되는 데이터만 프라이머리 서버 우선으로 읽기를 수행한다.&lt;/p&gt;
&lt;p&gt;세컨더리 서버의 기본 설정에는 우선 순위(Priority), 숨겨진(Hidden), 지연(Delayed)의 3가지가 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;우선순위(Priority)&lt;br&gt;
&lt;code&gt;Priority: 0&lt;/code&gt;를 지정하면 프라이머리 서버로 승격하지 않는다. 우선순위가 0보다 큰 값이 설정된 서버에서 프라이머리 서버를 선임한다. 또한 우선 순위가 높은 값이 설정된 서버가 우선적으로 프라이머리 서버로 선임된다.&lt;/li&gt;
&lt;li&gt;숨겨진(Hidden)&lt;br&gt;
프라이머리 서버에서 작업 로그를 복사하여 데이터를 최신화하지만, 클라이언트 응용 프로그램에서는 보이지 않는 설정이다. 클라이언트 응용 프로그램에서 볼 수 없으므로 다른 서버에 비해 부하가 낮다. 숨겨진 설정으로 한 서버는 데이터 분석이나 백업 등 통상 업무와 다른 전용 단말로 이용한다.&lt;/li&gt;
&lt;li&gt;지연(Delayed)&lt;br&gt;
프라이머리 서버에서 작업 로그를 복사하여 데이터를 반영하지만, 프라이머리 서버보다 지정된 시간만큼 지연시켜 반영한다. 프라이어미 서버보다 지연시켜 반영시킴으로써 뭔가 조작 실수를 일으켜 버렸을 때의 복구에 이용할 수 있도록 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;아비터중재-arbiter-서버&#34;&gt;아비터(중재, Arbiter) 서버&lt;/h3&gt;
&lt;p&gt;레프리카셋에서 투표 권한이 있는 서버를 홀수로 만들기 위해 추가하는 조정용 서버이다. 아비터 서버 자체에는 데이터가 없으며, 프라이머리 서버가 문재가 생겼을 때 발생하는 새로운 프라이머리 서버의 선임으로 투표하는 것이 주요 역할이다. 자신이 프라이머리 서버가 되지 않기 때문에 &lt;code&gt;Priority: 0&lt;/code&gt;를 지정해 둔다.&lt;/p&gt;
&lt;h2 id=&#34;레프리카셋-구성&#34;&gt;레프리카셋 구성&lt;/h2&gt;
&lt;p&gt;레프리카셋에는 최대 50대의 멤버가 포함될 수 있으며, 그 중 최대 7대까지 투표권을 가진다. 투표 권한이 있는 서버 수는 홀수가 되도록 설계한다. 부족한 경우에는 중재자인 아비터를 추가하고 조정한다.&lt;/p&gt;
&lt;p&gt;최소 레프리카셋은 3대 구성으로, 다음과 같은 구성을 할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;프라이머리, 세컨더리 2대&lt;/li&gt;
&lt;li&gt;프라이머리, 세컨더리, 아비터&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;지리적으로 떨어진 데이터 센터에 멤버를 배치하면 더 높은 가용성을 얻을 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;프라이머리-세컨더리-2대&#34;&gt;프라이머리, 세컨더리 2대&lt;/h3&gt;
&lt;p&gt;이 패턴은 세컨더리 서버 2대 모두가 프라이어 머리 서버가 될 수 있으므로 가용성이 높은 구성이 된다.&lt;/p&gt;
&lt;p&gt;보통 2대의 세컨더리 서버에 완전한 복사본이 만들어진다. 프라이머리 서버가 문제가 발생하면 남아 있는 두 개의 세컨더리 서버가 투표를 수행하고 둘 중 하나가 프라이머리 서버로 승격된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/mongodb/mongodb_replication_2.png&#34; alt=&#34;프라이머리, 세컨더리 2대&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;프라이머리-세컨더리-아비터&#34;&gt;프라이머리, 세컨더리, 아비터&lt;/h3&gt;
&lt;p&gt;이른바 서버 2대 구성이다. 실제로 동작은 프라이머리 서버와 세컨더리 서버의 2대이고, 아비터 서버는 장애 조치(failover)가 수행 될 시에 투표에 참가할 정도이다(그러나, 세컨더리에 아비터 승격에 추천되지 않으므로, 관리용 서버 등 물리적으로 다른 낮은 사양 서버에 위치한다).&lt;/p&gt;
&lt;p&gt;이 패턴의 경우는 아비터 서버에는 데이터 복사되지 않으므로 전체 복사본은 세컨더리 서버에만 적용된다. 프라이머리 서버에 문제가 생기면 프라이머리 서버 투표가 수행되지만 필연적으로 남아 있는 세컨더리 서버가 프라이머리 서버로 승격된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/mongodb/mongodb_replication_2.png&#34; alt=&#34;프라이머리, 세컨더리, 아비터&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;자동-장애-조치failover&#34;&gt;자동 장애 조치(failover)&lt;/h2&gt;
&lt;p&gt;레프리카셋은 자동 장애 조치(failover)로 고가용성을 제공한다. 구체적으로는 프라이머리 서버가 응답하지 않을 때, 세컨더리 서버에서 다음 프라이머리 서버를 선임하고 선임된 세컨더리 서버가 프라이머리 서버로 승격함으로써 실현된다.&lt;/p&gt;
&lt;p&gt;각 멤버는 2초 간격으로 하트비트(ping)를 수행한다. 10초 동안 응답을 받지 못하면 해당 서버를 불량 서버로 표시한다. 프라이머리 서버가 불량 서버로 설정되면 나머지 세컨더리 서버에서 다음 주 서버의 선임이 시작된다.&lt;/p&gt;
&lt;p&gt;서버가 투표를 할 때 우선 순위가 높은 서버가 우선적으로 세컨더리 서버로 선임된다. 우선 순위(Priority)가 낮은 서버가 선임된 상태로 보다 높은 우선도(Priority)의 서버가 유효하게 되었을 경우, 다시 우선도(Priority)가 높은 서버가 프라이머리 서버가 되도록 투표가 수행 된다.&lt;/p&gt;
&lt;p&gt;투표를 하지 않는 맴버은 우선순위(Priority)를 0으로 설정한다. 하나의 레프리카셋에서 투표권은 7개까지이므로, 그 이상의 보조 서버를 용기하는 경우는 우선도(Priority)를 0으로 투표권(votes)도 0으로 설정한 서버로 한다.&lt;/p&gt;
&lt;h2 id=&#34;데이터-읽기쓰기&#34;&gt;데이터 읽기/쓰기&lt;/h2&gt;
&lt;p&gt;데이터의 읽기 쓰기도 MongoClient의 생성시에 설정 옵션으로 지정할 수 있다. 쓰기에 대한 설정은 &lt;code&gt;w&lt;/code&gt;, &lt;code&gt;j&lt;/code&gt;, &lt;code&gt;wtimeout&lt;/code&gt; 3가지, 읽기에 대한 설정은 &lt;code&gt;readPreference&lt;/code&gt;, &lt;code&gt;readConcern.level&lt;/code&gt; 2가지가 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-js&#34; data-lang=&#34;js&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MongoClient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ReadPreference&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;require&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;mongodb&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;var&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;URL&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;mongodb://localhost:27017/test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;MongoClient&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;connect&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;URL&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 쓰기 설정
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;w&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;majority&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;j&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;wtimeout&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5000&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;// 읽기 설정
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;  &lt;span style=&#34;color:#000&#34;&gt;readPreference&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;ReadPreference&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;SECONDARY_PREFERRED&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;readConcern&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#000&#34;&gt;level&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;local&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;},&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;client&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000&#34;&gt;client&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;close&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;();&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;});&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;데이터-쓰기&#34;&gt;데이터 쓰기&lt;/h3&gt;
&lt;p&gt;쓰기는 &lt;code&gt;Write Concern&lt;/code&gt; 구성에서 레프라카셋에 포함된 서버의 몇 대까지 쓰기 처리를 전파할지 여부를 지정한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;w&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;설정값&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;지정한 대수까지 기입되는 것을 보증한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;majority&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;투표 권한이 있는 서버의 과반수에 기록되도록 한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;j&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;설정값&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;true&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;디스크에 쓸 때까지 수행한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;false&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본값. 메모리에 쓰기만 보장한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;wtimeout&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;설정값&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;lt;number&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;쓰기 시간이 초과되는 시간(밀리초)을 지정한다. 설정하는 경우 1보다 큰 값을 지정한다. 0을 지정하면 시간 초과 처리가 수행되지 않는다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;데이터-읽기&#34;&gt;데이터 읽기&lt;/h3&gt;
&lt;p&gt;읽기는 Read Preference 설정으로 어떤 서버에서 우선적으로 데이터를 로드할지 설정할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;readPreference&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;설정값&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;primary&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본 모드. 주 서버에서 가져온다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;primaryPreferred&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;대부분의 경우 기본 서버에서 가져오지만 주 서버에 액세스할 수 없는 경우 보조 서버에서 가져온다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;secondary&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;보조 서버에서 가져온다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;secondaryPreferred&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;대부분의 경우 보조 서버에서 가져오지만 보조 서버에 액세스할 수 없는 경우 주 서버에서 가져온다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;nearest&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;복제 세트의 유형에 관계없이 대기 시간이 최소 서버에서 검색된다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;readConcern.level&lt;/strong&gt;&lt;br&gt;
어떤 데이터를 가져올지 지정한다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;설정값&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;local&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본적으로 기본을 읽으십시오. 인스턴스의 최신 데이터를 가져온다. 복제본 세트의 대부분에 쓰여진 데이터인지 여부는 보장하지 않는다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;available&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본적으로 보조를 읽으십시오. 인스턴스의 최신 데이터를 가져온다. 복제본 세트의 대부분에 쓰여진 데이터인지 여부는 보장하지 않는다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;majority&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;대부분의 멤버에 기록된 데이터의 최신 데이터를 가져온다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;&amp;quot;linearizable&amp;quot;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;모든 쓰기가 끝난 후 롤백되지 않는 데이터를 가져온다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;정리&#34;&gt;정리&lt;/h2&gt;
&lt;p&gt;이번에는 「MongoDB의 복제」에 대해 정리하였다. 포인트는 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;쓰기는 프라이머리 서버만 가능하다.&lt;/li&gt;
&lt;li&gt;프라이머리 서버에 문제가 생기면 남은 세컨더리 서버가 프라이어머리 서버로 승격된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;참고-자료&#34;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/replication/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Replication&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/core/replica-set-members/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Replica Set Members&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/core/replica-set-primary/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Replica Set Primary&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/core/replica-set-priority-0-member/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Priority 0 Replica Set Members&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/core/replica-set-hidden-member/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Hidden Replica Set Members&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/core/replica-set-delayed-member/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Delayed Replica Set Members&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/core/replica-set-arbiter/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Replica Set Arbiter&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/reference/write-concern/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Write Concern&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/core/read-preference/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Read Preference&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/reference/read-concern/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Read Concern&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>NoSQL</category>
      
      <category>MongoDB</category>
      
    </item>
    
    <item>
      <title>MongoDB mongod 명령어 사용법</title>
      <link>https://www.devkuma.com/docs/mongodb/how-use-mongod/</link>
      <pubDate>Thu, 13 Jan 2022 07:57:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/mongodb/how-use-mongod/</guid>
      <description>
        
        
        &lt;p&gt;&lt;code&gt;mongod&lt;/code&gt; 커맨드의 기본적인 주요 사용법(옵션)을 정리한다.&lt;/p&gt;
&lt;p&gt;여기서 다루고 있는 것은 중요한 것 같은 옵션만 있기에 그 밖에도 더 많은 옵션에 대해서는 &lt;a href=&#34;https://docs.mongodb.com/manual/reference/program/mongod/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;공식 매뉴얼&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 참조하여라.&lt;/p&gt;
&lt;h2 id=&#34;기본-옵션&#34;&gt;기본 옵션&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;옵션&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--config &amp;lt;filename&amp;gt;&lt;/code&gt;, &lt;code&gt;-f &amp;lt;filename&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기동 옵션이 포함된 구성 파일을 지정한다.&lt;br&gt;구성 파일의 경로에 공백이 포함되어 있으면 큰따옴표(&lt;code&gt;&amp;quot;&lt;/code&gt;)로 묶는다.&lt;br&gt;구성 파일은 ASCII 인코딩을 사용한다. UTF-8 등 ASCII 이외는 지원하지 않는다. 구성 파일과 시작 옵션을 동시에 지정되면 시작 옵션의 값이 우선이다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--port &amp;lt;port&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본값: 27017&lt;br&gt;MongoDB가 TCP 연결을 기다리는 포트 번호를 지정한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--maxConns &amp;lt;number&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MongoDB가 허용하는 동시 연결 수를 지정한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--logpath &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;로그 파일 출력할 경로를 지정한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--logappend&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MongoDB를 재기동하면 기존 로그 파일의 연속으로 로깅된다.&lt;br&gt;MongoDB의 기본값은 다시 시작할 때 기존 로그 파일을 백업하여 새 로그 파일을 만든다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--slowms &amp;lt;integer&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본값: 100&lt;br&gt;프로파일링할 임계값을 밀리초로 지정한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--profile &amp;lt;level&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본값: 0&lt;br&gt;데이터베이스 프로파일링 레벨을 변경한다.&lt;br&gt;&lt;br&gt;- 0 : Off. 프로파일링을 하지 않습니다.&lt;br&gt;- 1 : On. 느린 작업만 프로파일링을 수행한다.&lt;br&gt;- 2 : On. 모든 작업을 프로파일링한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--auth&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;데이터베이스 액세스 제어를 사용한다.&lt;br&gt;사용자의 설정 변경은 &lt;code&gt;mongo&lt;/code&gt; 명령로 수행된다. 사용자가 존재하지 않으면 &lt;code&gt;localhost&lt;/code&gt;로의 접근만 허가된다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--bind_ip &amp;lt;address&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본값: 모든 연결&lt;br&gt;MongoDB가 연결을 수락하는 IP 주소를 지정한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--dbpath &amp;lt;path&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본: &lt;code&gt;C:\data\db&lt;/code&gt;&lt;br&gt;데이터베이스 파일을 저장할 스토리지 경로를 지정한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;windows-서비스-설치-옵션&#34;&gt;Windows 서비스 설치 옵션&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;옵션&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--install&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MongoDB를 Windows 서비스에 추가한다.&lt;br&gt;필요한 경우 &lt;code&gt;--serviceName&lt;/code&gt;, &lt;code&gt;--serviceDisplayName&lt;/code&gt;을 동시에 지정 한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--remove&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;Windows 서비스에서 MongoDB 서비스를 제거한다.&lt;br&gt;&lt;code&gt;--serviceName&lt;/code&gt;으로 기본이 아닌 이름을 설치하려면 &lt;code&gt;--serviceName&lt;/code&gt;를 지정해야 한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--serviceName &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본값: MongoDB&lt;br&gt;서비스 이름을 지정한다.&lt;br&gt;여기에서 지정한 이름은 &lt;code&gt;net start &amp;lt;name&amp;gt;&lt;/code&gt;, &lt;code&gt;net stop &amp;lt;name&amp;gt;&lt;/code&gt;의 인수로 사용된다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--serviceDisplayName &amp;lt;name&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본값: MongoDB&lt;br&gt;서비스 관리 도구에 표시되는 이름을 지정한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--serviceDescription &amp;lt;description&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;기본값: MongoDB Server&lt;br&gt;서비스 관리 도구의 설명에 표시할 문자열을 지정한다. 공백이 포함된 경우 더블 쿼트(&lt;code&gt;&amp;quot;&lt;/code&gt;)로 묶는다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--serviceUser &amp;lt;user&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MongoDB 실행 사용자를 지정한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;--servicePassword &amp;lt;password&amp;gt;&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;MongoDB를 실행할 사용자의 비밀번호를 지정한다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;참고-문서&#34;&gt;참고 문서&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/reference/program/mongod/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB Manual - mongod&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/reference/program/mongod.exe/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB Manual - mongod.exe&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>NoSQL</category>
      
      <category>MongoDB</category>
      
    </item>
    
    <item>
      <title>MongoDB 특징</title>
      <link>https://www.devkuma.com/docs/mongodb/features/</link>
      <pubDate>Sun, 09 Jan 2022 18:38:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/mongodb/features/</guid>
      <description>
        
        
        &lt;p&gt;이번에는 MontoDB의 특징에 대해 알아보자.&lt;/p&gt;
&lt;p&gt;공식 사이트에서도 기재되는 내용으로 특징은 크게 아래와 같이 정리된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;도큐먼트 데이터베이스(NoSQL)&lt;/li&gt;
&lt;li&gt;특수 쿼리&lt;/li&gt;
&lt;li&gt;고성능&lt;/li&gt;
&lt;li&gt;고가용성&lt;/li&gt;
&lt;li&gt;수평 확장성&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;도큐먼트-데이터베이스nosql&#34;&gt;도큐먼트 데이터베이스(NoSQL)&lt;/h2&gt;
&lt;p&gt;JSON처럼 키-밸류(Key-Value) 조합을 그대로 저장할 수 있는 문서 형식의 데이터베이스이다. 밸류에는 다양한 형태를 지정할 수 있다. 예를 들면 수치, 문자열는 물론, 배열이나 오브젝트를 보존할 수 있는 것도 특징이다. 또, 이 밸류의 형태는 동적으로 변경할 수 있고, 같은 필드명에 복수의 형태를 넣을 수도 있다. 즉, 스키마리스(schemaless) 도큐먼트 데이터베이스이다.&lt;/p&gt;
&lt;h2 id=&#34;성능&#34;&gt;성능&lt;/h2&gt;
&lt;p&gt;성능을 내기 위해 다음과 같은 기능이 구현되어 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;임베디드 데이터 모델을 이용한 I/O 처리 감소&lt;/li&gt;
&lt;li&gt;색인(index) 지원&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NoSQL이면서 &amp;ldquo;인덱스&amp;quot;를 지원하고 있다는 것이 MongoDB의 특징이다. &amp;ldquo;인덱스&amp;quot;와 관련하여 &amp;ldquo;유니크 키&amp;quot;를 지정할 수도 있다.&lt;/p&gt;
&lt;h2 id=&#34;특수-쿼리&#34;&gt;특수 쿼리&lt;/h2&gt;
&lt;p&gt;JSON 형식으로 지정하는 특수 쿼리를 활용하여 DB를 검색한다. 쿼리를 이용해 할 수 있는 조작은 기본적인 CRUD 조작은 물론, 이하에 주는 특징적인 쿼리가 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;집계(Aggregation, Map-Reduce)&lt;/li&gt;
&lt;li&gt;&amp;ldquo;텍스트 인덱스&amp;quot;를 사용하여 문자열 검색&lt;/li&gt;
&lt;li&gt;지리 공간 쿼리&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;집계(Aggregation, Map-Reduce)에서는 저장된 데이터에 대해 다양한 통계를 수행할 수 있다. 쿼리 단체의 조립은 독특한 구현이므로 익숙해져야 하는데, 처리 순서가 파이프라인화 되어 있어 코드의 전망은 좋다.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;지리 공간 쿼리&amp;quot;는 내장의 &amp;ldquo;GeoJSON&amp;quot;형식을 이용하여 &amp;ldquo;범위내의 포인트 검색
&amp;ldquo;을 할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;가용성&#34;&gt;가용성&lt;/h2&gt;
&lt;p&gt;MongoDB는 복제 세트라는 기능으로 복제 기능을 제공한다. 이 복제 세트는 자동 장애 조치 및 데이터 중복성을 제공한다.&lt;/p&gt;
&lt;h2 id=&#34;수평-확장&#34;&gt;수평 확장&lt;/h2&gt;
&lt;p&gt;수평 확장 이란 특징은 &amp;ldquo;머신을 늘리는 것으로 성능 향상할 수 있다&amp;quot;라는 것이다. MongoDB에서는 코어 기능(샤딩이라는 구조)으로 수평 확장성을 실현하고 있다.&lt;/p&gt;
&lt;h2 id=&#34;다중-스토리지-엔진-지원&#34;&gt;다중 스토리지 엔진 지원&lt;/h2&gt;
&lt;p&gt;MongoDB는 여러 스토리지 엔진을 지원한다. 일반적으로 사용되는 파일 시스템 외에도 인 메모리 엔진을 선택할 수 있다. 또한 스토리지 엔진 API를 공개하고 있으므로 타사 스토리지 엔진을 만들 수도 있다.&lt;/p&gt;
&lt;h2 id=&#34;참고-문서&#34;&gt;참고 문서&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/v3.2/introduction/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Introduction to MongoDB&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.tutorialsjar.com/key-features-of-mongodb/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TutorialsJar - What Are The Top 10 Key Features Of MongoDB?&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>NoSQL</category>
      
      <category>MongoDB</category>
      
    </item>
    
    <item>
      <title>Database Index (인덱스)</title>
      <link>https://www.devkuma.com/docs/rdbms/index/</link>
      <pubDate>Sun, 19 Dec 2021 01:05:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/rdbms/index/</guid>
      <description>
        
        
        &lt;h2 id=&#34;인덱스index란&#34;&gt;인덱스(index)란?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;데이블에 대한 동작 속도를 높여주는 자료 구조를 말한다.&lt;/li&gt;
&lt;li&gt;인텍스는 테이블 내에 1개의 컬럼, 혹은 여러 컬럼을 이용하여 생성될 수 있다.&lt;/li&gt;
&lt;li&gt;빠른 검색 동작뿐 아니라 레코드 접근과 관련 효율적인 순서 매김 동작에 대한 기초를 제공한다.&lt;/li&gt;
&lt;li&gt;인덱스란 추가적인 쓰기 작업과 저장 공간을 활용하여 데이터베이스 테이블의 검색 속도를 향상시키기 위한 자료 구조이다.&lt;/li&gt;
&lt;li&gt;만약 우리가 책에서 원하는 내용을 찾는다고 하면, 책의 모든 페이지를 찾아 보는 것은 오랜 시간이 걸린다. 그렇게 때문에 책의 저자들은 책의 맨 앞 또는 맨 뒤에 색인을 추가하는데, 데이터베이스의 index는 책의 색인과 같다.&lt;/li&gt;
&lt;li&gt;데이터베이스에서도 테이블의 모든 데이터를 검색하면 시간이 오래 걸리기 때문에 데이터와 데이터의 위치를 포함한 자료구조를 생성하여 빠르게 조회할 수 있도록 돕고 있다.&lt;/li&gt;
&lt;li&gt;만약 index를 적용하지 않은 컬럼을 조회하면, 전체를 탐색하는 Full Scan이 수행된다. Full Scan은 전체를 비교하여 탐색하기 때문에 속도가 떨어진다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;데이터베이스에서-자료를-갬색하는-2가지-방법&#34;&gt;데이터베이스에서 자료를 갬색하는 2가지 방법&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;FTS(Full Table Scan)
&lt;ul&gt;
&lt;li&gt;테이블을 처음부터 끝까지 검색하는 방법이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Index Scan
&lt;ul&gt;
&lt;li&gt;인데그를 검색하여 해당 자료의 테이블을 액세스하는 방법이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;인덱스의-자료구조&#34;&gt;인덱스의 자료구조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;해시 테이블&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;컬럼의 값으로 생성된 해시를 기반으로 인덱스를 구현한다.&lt;/li&gt;
&lt;li&gt;시간복잡도 O(1)이라 검색이 매우 빠르다.&lt;/li&gt;
&lt;li&gt;부등호(&amp;lt;, &amp;gt;)와 같은 연속적인 데이터를 위한 순차 검색이 불가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;B+Tree&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;자식 노드가 2개 이상인 B-Tree를 개선시킨 자료구조이다.&lt;/li&gt;
&lt;li&gt;BTree의 리프노드들을 LinekdList로 연결하여 순차 검색을 용이하게 하였다.&lt;/li&gt;
&lt;li&gt;해시 테이블보다 나쁜 O(𝑙𝑜𝑔2𝑛)의 시간 복잡도를 갖지만 해시테이블보다 흔하게 사용된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>RDBMS</category>
      
      <category>Transaction</category>
      
    </item>
    
    <item>
      <title>Elasticsearch 기본 개념</title>
      <link>https://www.devkuma.com/docs/elasticsearch/intro/</link>
      <pubDate>Fri, 03 Sep 2021 09:09:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/elasticsearch/intro/</guid>
      <description>
        
        
        &lt;h2 id=&#34;elasticsearch&#34;&gt;Elasticsearch&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Elasticsearch는 Apache Lucene(아파치 루씬) 기반의 자바로 개발된 오픈소스 검색엔진이다.&lt;/li&gt;
&lt;li&gt;Elasticsearch는 여러 문서(파일)에서 특정 문자열을 검색하는 분산 엔진이다.&lt;/li&gt;
&lt;li&gt;Inverted Index 구조로 데이터를 저장해서, 전문(Full-text) 검색시에 RDBMS에 띄어난 성능을 보장한다.&lt;/li&gt;
&lt;li&gt;보통 단독으로 사용하기보다는 ELK 스택이라고 하여, Logstach, Kibana, Beats를 추가적으로 사용한다.&lt;/li&gt;
&lt;li&gt;데이터 저장, 문서 검색, 위치 검색, 머신 러닝 기반 검색, 로그 분석, 보안 검사 분석 등 다양한 용도로 사용된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;전체-텍스트-검색&#34;&gt;전체 텍스트 검색&lt;/h2&gt;
&lt;p&gt;여러 문서(파일)에서 특정 문자열을 검색하는 것을 전체 텍스트 검색 이라고 한다.&lt;/p&gt;
&lt;p&gt;전체 텍스트 검색 기술에는 grep 유형과 색인(인덱스) 유형이 있으며, Elasticsearch는 여러 컴퓨터에 색인 유형의 전체 텍스트 검색을 분산하여 빠른 검색을 제공한다.&lt;/p&gt;
&lt;h3 id=&#34;grep-유형&#34;&gt;grep 유형&lt;/h3&gt;
&lt;p&gt;여러 파일을 순서대로 검색하는 방법이다. 검색 대상이 증가함에 따라 검색 속도가 크게 저하된다. UNIX 문자열 검색 명령 grep이 이에 해당한다.&lt;/p&gt;
&lt;h3 id=&#34;색인인덱스-유형&#34;&gt;색인(인덱스) 유형&lt;/h3&gt;
&lt;p&gt;책의 색인과 마찬가지로 여러 문서에 미리 색인을 작성하여 검색 속도를 높이는 방법이다. 색인 유형의 전체 텍스트 검색을 이용한 예는 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Elasticsearch 도큐먼트 검색&lt;/li&gt;
&lt;li&gt;Google 검색 : 여러 문서(웹 페이지)에서 특정 문자열 검색&lt;/li&gt;
&lt;li&gt;GitHub 코드 검색 : 여러 문서(소스 코드)에서 특정 문자열 검색&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;여기서 다음의 2개의 도큐먼트를 예로 하여 인덱스를 작성했을 경우의 예를 소개하겠다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;도큐먼트 1: I Like search engine.&lt;/li&gt;
&lt;li&gt;도큐먼트 2: I search keywords by google.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;위에 도큐먼트에서 도큐먼트에 단어가 포함되는 경우를 1, 포함되지 않는 경우를 0으로 하면, 다음과 같은 인덱스가 작성된다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;인덱스 (Index)&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;I&lt;/th&gt;
&lt;th&gt;like&lt;/th&gt;
&lt;th&gt;search&lt;/th&gt;
&lt;th&gt;engine&lt;/th&gt;
&lt;th&gt;keywords&lt;/th&gt;
&lt;th&gt;by&lt;/th&gt;
&lt;th&gt;google&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;도큐먼트 1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;도큐먼트 2&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;그런데 인덱스는 왼쪽에서 오른쪽으로의 행 단위로 밖에 검색할 수 없다. 그러기 때문에 google 이라는 단어를 사용하는 문서를 찾으려면 모든 행을 스캔 해야 한다.&lt;/p&gt;
&lt;p&gt;그래서 Elasticsearch는 역 인덱스(Inverted index)라는 인덱스를 사용한다. 역 인덱스는 다음과 같이 인덱스의 행과 열을 바꾼 역 행렬을 말한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;역 인덱스 (Inverted index)&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;도큐먼트 1&lt;/th&gt;
&lt;th&gt;도큐먼트 2&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;I&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;like&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;search&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;engine&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;keywords&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;by&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;google&lt;/td&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;역 색인에서는 google이라는 단어가 등장하는 색인을 검색하려면 &amp;lsquo;google&amp;rsquo;이라는 한 줄만 스캔하면 된다.&lt;/p&gt;
&lt;h3 id=&#34;색인index와-역색인inverted-index&#34;&gt;색인(Index)와 역색인(Inverted Index)&lt;/h3&gt;
&lt;p&gt;Elasticsearch에서 index는 RDBMS에서 database와 대응하는 개념이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;색인(index)
&lt;ul&gt;
&lt;li&gt;키워드를 찾아보기 쉽도록 정렬/나열한 목록을 말한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;역색인(Inverted Index)
&lt;ul&gt;
&lt;li&gt;키워드를 통해 문서를 찾아내는 방식을 말한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;역색인의 구조의 이점은 검색이 매우 빠르다는 것이다.&lt;br&gt;
쉽게 말해 책에서 맨 앞에 볼 수 있는 목차가 Index에 해당되고, 책 맨 뒤에 키워드마다 찾아볼 수 있도록 찾아보기가 Inverted index에 해당한다.&lt;br&gt;
Elasticsearch는 텍스트를 파싱해서 검색어 사전을 만든 다음에 역색인 방식으로 텍스트를 저장한다.&lt;/p&gt;
&lt;h2 id=&#34;elasticsearch-특징&#34;&gt;Elasticsearch 특징&lt;/h2&gt;
&lt;p&gt;Elasticsearch는 다음과 같은 특징이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Scale out
&lt;ul&gt;
&lt;li&gt;샤드를 통해 규모가 수평적으로 늘어날 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;고가용성(Availability)
&lt;ul&gt;
&lt;li&gt;Replica를 통해 데이터의 안정성을 보장한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Schema Free
&lt;ul&gt;
&lt;li&gt;Json 문서를 통해 데이터 검색을 수행하므로 스키마 개념이 없다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Restful
&lt;ul&gt;
&lt;li&gt;데이터 CURD 작업은 HTTP Restful API를 통해 수행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;elasticsearch-용도-활용-사례&#34;&gt;Elasticsearch 용도 (활용 사례)&lt;/h2&gt;
&lt;h3 id=&#34;내부-및-외부-문서-검색&#34;&gt;내부 및 외부 문서 검색&lt;/h3&gt;
&lt;p&gt;자사내에 문서나 서비스의 문서 등를 검색하기 위해서 이용한다. 기업에서의 활용 사례는 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;위메프: 판매 제품을 검색할 수 있는 온라인 웹 스토어 (제품 카탈로그, 재고 저장 및 자동 완성 등)
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.oss.kr/oss_case/show/55e43889-dd33-44e5-94e2-16fa91c076ed&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;[공개SW 활용 성공사례 203] 위메프 - 공개SW로 제공되는 ‘핫딜’&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;GitHub: 소스 코드 찾기
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.elastic.co/customers/github&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;GitHub uses Elasticsearch to index over 8 million code repositories | Elastic Customers&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;이상-감지&#34;&gt;이상 감지&lt;/h3&gt;
&lt;p&gt;액세스 로그 등에서 이상을 감지한다. 기업에서의 활용 사례는 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;위메프: 머신러닝을 통한 비정형 위협탐지
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.elastic.co/kr/customers/wemakeprice&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;위메프: AWS 클라우드 환경의 비정형 위협탐지를 위한 머신러닝 도입&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;11번가 : 모니터링 및 이상 감지
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.elastic.co/kr/blog/11-street-order-monitoring-and-anomaly-detection-with-the-elastic-stack&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Elasticsearch를 통한 주문/결제에 대한 모니터링 및 이상 감지에 대한 Alert &amp;amp; 머신러닝 적용 사례&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Netflix: 보안 로그 모니터링
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.slideshare.net/g9yuayon/elasticsearch-in-netflix&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Elasticsearch&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; in Netflix from Danny Yuan&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;elasticsearch와-rdbms-비교&#34;&gt;Elasticsearch와 RDBMS 비교&lt;/h2&gt;
&lt;p&gt;관계형 DB와 다음과 같이 대응된다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Relational Database&lt;/th&gt;
&lt;th&gt;Elasticseach&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Database&lt;/td&gt;
&lt;td&gt;Index&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Table&lt;/td&gt;
&lt;td&gt;Type&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Row&lt;/td&gt;
&lt;td&gt;Document&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Column&lt;/td&gt;
&lt;td&gt;Field&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Index&lt;/td&gt;
&lt;td&gt;Analyze&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Primary key&lt;/td&gt;
&lt;td&gt;_id&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Schema&lt;/td&gt;
&lt;td&gt;Mapping&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Physical partition&lt;/td&gt;
&lt;td&gt;Shard&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Logical partition&lt;/td&gt;
&lt;td&gt;Route&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Relational&lt;/td&gt;
&lt;td&gt;Parent/Child Nested&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;SQL&lt;/td&gt;
&lt;td&gt;Query DSL&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;출처: &lt;a href=&#34;https://www.slideshare.net/deview/2d1elasticsearch&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.slideshare.net/deview/2d1elasticsearch&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;인덱스-구조-차이&#34;&gt;인덱스 구조 차이&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Elasticsearch
&lt;ul&gt;
&lt;li&gt;Inverted-Index 구조로 데이터를 저장한다.&lt;/li&gt;
&lt;li&gt;책의 색인처럼, 특정 단어가 포함된 문서를 저장하는 방식이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RDBMS
&lt;ul&gt;
&lt;li&gt;B-Tree 혹은, 그와 유사한 인덱스를 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;elastic-stack&#34;&gt;Elastic Stack&lt;/h2&gt;
&lt;p&gt;Elastic Stack은 Elasticsearch와 다음 세 가지 오픈 소스 프로젝트이다. Elasticsearch는 검색을 위해 단독으로 사용되기도 하지만, ELK 스택으로 사용된다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Logstash, Kibana와 함께 사용 되면서 한동안 ELK Stack (Elasticsearch, Logstash, Kibana) 이라고 널리 알려지게 된 Elastic은 2013년에 Logstash, Kibana 프로젝트를 정식으로 흡수하여 한 지붕 아래에서 함께 개발을 해 나가고 있습니다. 2015년에는 회사명을 Elasticsearch 에서 Elastic으로 변경 하고, ELK Stack 대신 제품명을 Elastic Stack이라고 정식으로 명명하면서 모니터링, 클라우드 서비스, 머신러닝 등의 기능을 계속해서 개발, 확장 해 나가고 있다.
&lt;a href=&#34;https://esbook.kimjmin.net/01-overview/1.1-elastic-stack&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;공식 문서&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에서 발췌한 내용&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;logstash&#34;&gt;Logstash&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Elasticsearch로 보내는 데이터 형식을 변환하는 도구이다. &lt;a href=&#34;https://ko.wikipedia.org/wiki/%EC%B6%94%EC%B6%9C,_%EB%B3%80%ED%99%98,_%EC%A0%81%EC%9E%AC&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;ETL&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; 툴의 Transform, Load 부분을 담당한다.&lt;/li&gt;
&lt;li&gt;응용 프로그램 서버에서 Elasticsearch 서버로 로그를 전송할 때 적절한 데이터 형식으로 변경하는데 사용된다.
&lt;ul&gt;
&lt;li&gt;다양한 소스(DB, csv파일 등)의 로그 또는 트랜잭션 데이터를 수집, 집계, 파싱하여 Elasticsearch로 전달한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;beats&#34;&gt;Beats&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;데이터를 전송하는 쉬퍼이다. ETL의 Extract를 담당한다.&lt;/li&gt;
&lt;li&gt;애플리케이션 서버에서 Logstash 또는 Elasticsearch로 데이터를 보낸다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;elasticsearch-1&#34;&gt;Elasticsearch&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Logstash로부터 받은 데이터를 검색 및 집계를 하여 필요한 관심 있는 정보를 받는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;kibana&#34;&gt;Kibana&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Elasticsearch의 빠른 검색을 통해 데이터를 시각화 및 모니터링&lt;/li&gt;
&lt;li&gt;Elasticsearch의 문서를 시각화하는 소위 BI 도구이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;elasticsearch-아키텍처&#34;&gt;Elasticsearch 아키텍처&lt;/h2&gt;
&lt;p&gt;Elasticsearch의 아키텍처는 다음 두 가지로 나뉜다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;논리적 개념(소프트웨어 관점에서의 용어)&lt;/li&gt;
&lt;li&gt;물리적 개념(하드웨어 관점에서 용어)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;논리적-개념&#34;&gt;논리적 개념&lt;/h3&gt;
&lt;p&gt;Elasticsearch의 논리적 개념의 전체 다이어그램은 다음과 같다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/elasticsearch/elasticsearch_index.png&#34; alt=&#34;논리적 개념도&#34;&gt;&lt;br&gt;
&lt;strong&gt;논리적 개념도&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;다음으로 각 용어에 대해 설명한다.&lt;/p&gt;
&lt;h4 id=&#34;필드-field&#34;&gt;필드 (Field)&lt;/h4&gt;
&lt;p&gt;항목명(Key)과 값(Value)의 쌍이다. 파일 시스템에서 말하는 &amp;ldquo;파일의 내용&amp;quot;에 해당한다. 각각의 Key는 유형(Type)를 가진다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;문자열을 나타내는 text 유형&lt;/li&gt;
&lt;li&gt;시간을 나타내는 date 유형 등&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;도큐먼트-document&#34;&gt;도큐먼트 (Document)&lt;/h4&gt;
&lt;p&gt;필드 집합을 도큐먼트라고 한다. 파일 시스템에서 말하는 &amp;ldquo;파일&amp;quot;에 해당한다. 도큐먼트는 JSON 객체이다.&lt;/p&gt;
&lt;h4 id=&#34;색인-index&#34;&gt;색인 (Index)&lt;/h4&gt;
&lt;p&gt;문서 집합을 인덱스라고 한다. 파일 시스템에서 말하는 &amp;ldquo;폴더&amp;quot;에 해당한다. 도큐먼트를 인덱스에 저장할 때 역 인덱스를 만든다.&lt;/p&gt;
&lt;h4 id=&#34;매핑-mapping&#34;&gt;매핑 (Mapping)&lt;/h4&gt;
&lt;p&gt;각 필드의 Key 에 대한 값을 데이터의 유형 등을 정의하는 것이다. 매핑은 하나의 인덱스에 하나 존재한다.&lt;/p&gt;
&lt;p&gt;위의 &amp;ldquo;논리적 개념도&amp;quot;에 설명된 매핑에서 &amp;ldquo;Content&amp;rdquo; 키는 &amp;ldquo;Text&amp;rdquo; 유형으로 정의되어 있기 때문에 &amp;ldquo;Content&amp;rdquo; 키의 값은 항상 Text 유형의 문자열이 된다.&lt;/p&gt;
&lt;h3 id=&#34;물리적-개념&#34;&gt;물리적 개념&lt;/h3&gt;
&lt;p&gt;Elasticsearch의 물리적 개념의 전체 다이어그램은 다음과 같다. 또한 논리적인 개념의 인덱스와의 관계도 함께 표현되어 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/elasticsearch/elasticsearch_cluster.png&#34; alt=&#34;물리적 개념과 논리적 개념의 연관&#34;&gt;&lt;br&gt;
&lt;strong&gt;물리적 개념과 논리적 개념의 연관&lt;/strong&gt;&lt;/p&gt;
&lt;h4 id=&#34;노드-node&#34;&gt;노드 (Node)&lt;/h4&gt;
&lt;p&gt;노드는 Elasticsearch를 구성하는 하나의 단위 프로세스를 의미하며, 하나의 Elasticsearch 서버이다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;하나의 OS에 여러 개의 Elasticsearch 노드를 시작할 수 있다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;노드는 그 역할에 따라 다음의 4가지 종류의 속성이 존재하고 있고, 1개의 노드가 복수의 속성을 가지는 것도 가능하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;마스터 노드 (Master Node)
&lt;ul&gt;
&lt;li&gt;클러스터 메타데이터 등을 관리하는 노드이다.&lt;/li&gt;
&lt;li&gt;마스터 노드는 클러스터당 하나만 존재한다.&lt;/li&gt;
&lt;li&gt;마스터 노드로 승격 가능한 노드는 Master-eligible 이라고 하는데, Master 노드는 아니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;데이터 노드 (Data Node)
&lt;ul&gt;
&lt;li&gt;실제 데이터를 저장하는 노드이다.&lt;/li&gt;
&lt;li&gt;요청 처리 (검색 및 집계 등) 수행한다.&lt;/li&gt;
&lt;li&gt;요청을 다른 노드로 라우팅(예: 다른 노드가 샤드가 있는 경우)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;인제스트 노드 (Ingest Node)
&lt;ul&gt;
&lt;li&gt;데이터 변환 및 가공을 수행하고 Data 노드에 저장한다.&lt;/li&gt;
&lt;li&gt;Logstash 와 동일한 역할을 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;코디네이트 노드 (Coordinating Node)
&lt;ul&gt;
&lt;li&gt;요청 라우팅(Data 노드도 가능) 역활을 한다.&lt;/li&gt;
&lt;li&gt;Data 노드에 라우팅 작업 부하를 가하고 싶지 않은 경우 라우팅 처리 전용 노드를 준비하기 위한 노드이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;클러스터-cluseter&#34;&gt;클러스터 (Cluseter)&lt;/h4&gt;
&lt;p&gt;Elasticsearch에서 클러스터는 가장 큰 시스템 단위를 의미하며, 최소 하나 이상의 노드로 이루어진 노드들의 집합이다. 클러스터에 검색 처리 요청을 던지면 각 노드에 검색 처리가 분산된다.&lt;/p&gt;
&lt;p&gt;서로 다른 클러스터는 데이터의 접근, 교환을 할 수 없는 독립적인 시스템으로 유지되며, 여러 대의 서버가 하나의 클러스터를 구성할 수 있고, 한 서버에 여러 개의 클러스터가 존재할 수도 있다.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;컴퓨터 클러스터(computer cluster)는 여러 대의 컴퓨터들이 연결되어 하나의 시스템처럼 동작하는 컴퓨터들의 집합을 말한다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&#34;샤드shard&#34;&gt;샤드(Shard)&lt;/h4&gt;
&lt;p&gt;논리적인 개념으로 소개한 &amp;ldquo;인덱스&amp;quot;의 데이터를 분할하여 노드에 보존한 데이터이다. 이렇게 하면 검색 프로세스를 각 노드에 분산할 수 있다. 샤드의 실체는 Lucene 인덱스 파일이다.&lt;/p&gt;
&lt;p&gt;샤드에는 다음의 2가지 종류가 존재한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;프라이머리 샤드(Primary shard)
&lt;ul&gt;
&lt;li&gt;데이터의 원본이다.&lt;/li&gt;
&lt;li&gt;최초로 갱신 처리를 실시하는 샤드이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;복제 샤드(Replica shard)
&lt;ul&gt;
&lt;li&gt;기본 샤드의 사본이다.&lt;/li&gt;
&lt;li&gt;기본 샤드 업데이트가 끝나면 복제된다.&lt;/li&gt;
&lt;li&gt;검색 부하의 분산이나 데이터의 백업으로서 사용된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;샤드shard와-레플리카replica&#34;&gt;샤드(Shard)와 레플리카(Replica)&lt;/h4&gt;
&lt;p&gt;샤드(Shard)와 레플리카(Replica)는 Elasticsearch에만 존재하는 개념이 아니라, 분산 데이터베이스 시스템에도 존재하는 개념이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;샤드(Shard)
&lt;ul&gt;
&lt;li&gt;샤딩(sharding)은 데이터를 분산해서 저장하는 방법을 의미한다. 즉, 스케일 아웃을 위해 index를 여러 shard로 나눈다.&lt;/li&gt;
&lt;li&gt;기본적으로 1개 이상 존재하며, 검색 성능 향상을 위해 클러스터의 샤드 갯수를 조정하는 튜닝을 하기도 한다.&lt;/li&gt;
&lt;li&gt;단일 노드에 저장할 수 있는 데이터양에는 제한이 있다.&lt;/li&gt;
&lt;li&gt;클러스터에서 단일 인덱스로 데이터를 분할해 클러스터의 저장소와 메모리, 처리 용약을 저절히 활용할 수 있다.&lt;/li&gt;
&lt;li&gt;기본적으로 샤드 갯수는 5개로 설정되며, 인덱스 생성 시점에 인덱스의 데이터를 나눌 샤드 갯수를 지정할 수 있다. 인덱스를 생성하고 나면 샤드 갯수는 변경할 수 없다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;레플리카(Replica)
&lt;ul&gt;
&lt;li&gt;Replica는 또 다른 형태의 Shard라고 볼 수 있다.&lt;/li&gt;
&lt;li&gt;장애 발생시에 문제없이 실행되도록 Replica(복사본)을 준비하여 장애를 해결할 수 있다. 즉, 노드를 손실했을 경우 데이터의 신뢰성을 위해 샤드들을 복제하는 것이다. 따라서 Replica는 서로 다른 노드에 존재할 것을 권장한다.&lt;/li&gt;
&lt;li&gt;인덱스의 각 샤드는 0개 이상의 레플리카를 가질 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;정리
&lt;ul&gt;
&lt;li&gt;엘라스틱의 가장 작은 단위는 노드이며, 이 노드는 데이터를 저장하고 쿼리를 수행한다.&lt;/li&gt;
&lt;li&gt;노드들이 1개 이상 모여 클러스터를 구성한다.&lt;/li&gt;
&lt;li&gt;노드의 내부는 샤드를 통해 더 효율적으로 데이터를 관리 할 수 있으며, 장애 상황이 발생할 것을 고려하여 레플리카를 추가 구성하여 장애 조치 및 데이터 가용성을 높을 수 있다.
&lt;ul&gt;
&lt;li&gt;고가용성(可用性, Availability)이란? 서버와 네트워크, 프로그램 등의 정보 시스템이 정상적으로 사용 가능한 정도를 말한다. 가동률과 비슷한 의미한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;참고&#34;&gt;참고&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://esbook.kimjmin.net/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Elastic 가이드 북&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/playlist?list=PLhFRZgJc2afp0gaUnQf68kJHPXLG16YCf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;처음부터 시작하는 Elastic YouTube&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.google.com/document/d/1XJsI2mHlihP8sOKJRn_MgMY4STovOnd4IlaAkwyxbys/edit&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;유용한 자료&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.elastic.co/guide/kr/elasticsearch/reference/current/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Elasticsearch 설명서&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>NoSQL</category>
      
      <category>Elasticsearch</category>
      
    </item>
    
    <item>
      <title>SQLite | SQLite 설치 | SQLite 커맨드 라인 도구 다운로드 및 설치</title>
      <link>https://www.devkuma.com/docs/sqlite/sqlite-%EC%BB%A4%EB%A7%A8%EB%93%9C-%EB%9D%BC%EC%9D%B8-%EB%8F%84%EA%B5%AC-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C-%EB%B0%8F-%EC%84%A4%EC%B9%98/</link>
      <pubDate>Mon, 14 Oct 2019 23:19:51 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sqlite/sqlite-%EC%BB%A4%EB%A7%A8%EB%93%9C-%EB%9D%BC%EC%9D%B8-%EB%8F%84%EA%B5%AC-%EB%8B%A4%EC%9A%B4%EB%A1%9C%EB%93%9C-%EB%B0%8F-%EC%84%A4%EC%B9%98/</guid>
      <description>
        
        
        &lt;p&gt;SQLite는 명령어로 사용하기 위해서는 커맨드 라인(Command line) 프로그램 다운로드 및 설치 방법을 설명한다. 2019년 10월 현재 최신 버전은 SQLite 3.30.1(2019-10-11) 이다.&lt;/p&gt;
&lt;h2 id=&#34;sqlite-다운로드&#34;&gt;SQLite 다운로드&lt;/h2&gt;
&lt;p&gt;브라우저에서 SQLite의 공식 페이지에 접근한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sqlite.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.sqlite.org/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/sqlite/sqlite_org.png&#34; alt=&#34;sqlite.org&#34;&gt;&lt;/p&gt;
&lt;p&gt;화면 상단의 메뉴에서 &amp;ldquo;Download&amp;quot;라고 쓰여진 메뉴를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/sqlite/sqlite_download.png&#34; alt=&#34;Sqlite download&#34;&gt;&lt;/p&gt;
&lt;p&gt;해당 OS에 맞게 도구 바이너리(sqlite-tools-xxx와 같은 파일명 형식의 파일)을 클릭하여 다운로드하여 임의의 장소에 저장한다.&lt;/p&gt;
&lt;h2 id=&#34;sqlite-커맨드-라인-프로그램-설치&#34;&gt;SQLite 커맨드 라인 프로그램 설치&lt;/h2&gt;
&lt;p&gt;다운로드한 파일은 압축 파일로 되어 있다. 임의의 디렉터리에 압축을 푼 것만으로 설치가 되었다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls -al
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;total &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5016&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwxr-xr-x@  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt; kimkc  staff      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;170&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt; 18:32 .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwxr-xr-x  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;41&lt;/span&gt; kimkc  staff     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1394&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;14&lt;/span&gt; 23:41 ..
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxr-xr-x@  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; kimkc  staff   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;691768&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt; 18:31 sqldiff
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxr-xr-x@  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; kimkc  staff  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1152260&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt; 18:32 sqlite3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rwxr-xr-x@  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; kimkc  staff   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;719796&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt; 18:31 sqlite3_analyzer
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;커멘드 라인 도구인 sqlite3, 두개의 데이터베이스의 차이를 알려주는 sqldiff, 데이터베이스 분석 보고서를 볼 수 있는 sqlite3_analyzer 이렇게 3개의 파일이 포함되어 있다.&lt;/p&gt;

      </description>
      
      <category>SQLite</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>PostgreSQL | PostgreSQL 설치 | PostgreSQL 다운로드 및 설치</title>
      <link>https://www.devkuma.com/docs/postgresql/postgresql-download-install/</link>
      <pubDate>Thu, 17 Aug 2017 10:31:25 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/postgresql/postgresql-download-install/</guid>
      <description>
        
        
        &lt;p&gt;PostgreSQL의 다운로드 및 설치하는 방법을 설명한다. 2020년 3월 현재 최신 버전은 PostgreSQL 12.2이다. 이번에는 Windows10 (64bit)에 설치한다.&lt;/p&gt;
&lt;h2 id=&#34;postgresql-다운로드&#34;&gt;PostgreSQL 다운로드&lt;/h2&gt;
&lt;p&gt;다음 URL에서 PostgreSQL을 다운로드한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.postgresql.org/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.postgresql.org/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_org_download_1.png&#34; alt=&#34;Postgresql.org Download&#34;&gt;&lt;/p&gt;
&lt;p&gt;화면 상단에 표시되어 있는 Download를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_org_download_2.png&#34; alt=&#34;Postgresql.org Download&#34;&gt;&lt;/p&gt;
&lt;p&gt;Binary packages에 있는&amp;quot; Windows&amp;quot; 링크를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_org_download_3.png&#34; alt=&#34;Postgresql.org Download&#34;&gt;&lt;/p&gt;
&lt;p&gt;Windows 용 다운로드 페이지가 표시되고, &amp;ldquo;Download the installer&amp;rdquo; 링크를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_org_download_4.png&#34; alt=&#34;Postgresql.org Download&#34;&gt;&lt;/p&gt;
&lt;p&gt;버전 별 다운로드를 할 수 있는 화면이 표시되고, 여기서 PostgreSQL 12.2 Windows x86-64를 사용하기에 해당 위치에 있는 Download를 클릭한다.&lt;/p&gt;
&lt;p&gt;그러면 다운로드가 시작된다. 적당한 위치에 저장하면 된다.&lt;/p&gt;
&lt;h2 id=&#34;postgresql-설치&#34;&gt;PostgreSQL 설치&lt;/h2&gt;
&lt;p&gt;계속해서 설치한다. 다운로드를 한 postgresql-12.2-1-windows-x64.exe 파일을 더블 클릭하면 다음과 같은 창이 표시된다.  여기서 Next를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_setup_1.png&#34; alt=&#34;Postgresql Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;설치 위치를 지정한다. 디폴트로 그대로 두어도 괜찮고, 변경하고 싶다면 설치 디렉터리를 지정한다. 여기서는 디폴트 그대로 설치하도록 한다. Next를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_setup_2.png&#34; alt=&#34;Postgresql Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;설치할 구성 요소를 선택한다. 여기서는 모두 체크한 상태로 Next를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_setup_3.png&#34; alt=&#34;Postgresql Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;데이터베이스 등 생성된 데이터를 설치할 디렉터리를 지정한다. 변경하려면 디렉터리를 지정한다. 이번에도 디폴트 그대로 놔둬었다. Next를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_setup_4.png&#34; alt=&#34;Postgresql Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;슈퍼 유저 postgres 계정의 암호를 설정한다. 확인을 위해 암호를 두번 입력한다. 설정이 끝나면 Next를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_setup_5.png&#34; alt=&#34;Postgresql Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;PostgreSQL 와 연결을 하기 위한 포트 번호를 지정한다. 일반적으로 디폴트 5432 으로도 상관 없지만 변경하여도 된다. 설정이 끝나면 Next를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_setup_6.png&#34; alt=&#34;Postgresql Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;새 데이터베이스 클러스터를 생성할 때에 로케일을 지정한다. 처음은 [Default locale] 설정되어 있는데, 이를 Korean, Korea을 선택하고, Next를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_setup_7.png&#34; alt=&#34;Postgresql Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;여기까지의 설정 내용을 확인한다. Next를 클릭하십시오.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_setup_8.png&#34; alt=&#34;Postgresql Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;설치 전 최종 확인을 하고, 설치를 해도 된다면 Next를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_setup_9.png&#34; alt=&#34;Postgresql Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;설치가 시작되면 설치 파일이 생성된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_setup_10.png&#34; alt=&#34;Postgresql Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;다음과 같이 표시되면 PostgreSQL 설치가 완료된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_setup_11.png&#34; alt=&#34;Postgresql Setup&#34;&gt;&lt;/p&gt;
&lt;p&gt;Stack Builder라고 적힌 왼쪽의 체크를 된 상태로 Finish를 클릭하면 드라이버 등 추가 응용 프로그램을 설치하기 위한 스택 작성기를 시작한다. 여기서는 하지 않을 것이기에 체크를 해제하고 Finish를 클릭한다.&lt;/p&gt;
&lt;p&gt;&amp;ndash;&lt;/p&gt;
&lt;p&gt;여기까지 PostgreSQL의 다운로드 및 설치 방법에 대해 설명을 마치도록 하겠다.&lt;/p&gt;

      </description>
      
      <category>PostgreSQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>MySQL | 콘솔창에서 데이터베이스 접속</title>
      <link>https://www.devkuma.com/docs/mysql/%EC%BD%98%EC%86%94%EC%B0%BD%EC%97%90%EC%84%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%A0%91%EC%86%8D/</link>
      <pubDate>Mon, 07 Aug 2017 21:01:44 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/mysql/%EC%BD%98%EC%86%94%EC%B0%BD%EC%97%90%EC%84%9C-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B2%A0%EC%9D%B4%EC%8A%A4-%EC%A0%91%EC%86%8D/</guid>
      <description>
        
        
        &lt;p&gt;콘솔 혹은 telnet환경에서 mysql 접속명령, 콘솔창에서 디비 접속하는 방법에 대해서 살펴보자.&lt;/p&gt;
&lt;h2 id=&#34;기본-접속-방법&#34;&gt;기본 접속 방법&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ mysql -u {사용자명} -p{비밀번호} {데이터베이스명}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;주의&lt;/strong&gt; : &amp;ldquo;-p{비밀번호}&amp;ldquo;에는 공백이 없다. 비밀번호가 1234라면 &amp;ldquo;-p1234&amp;quot;라고 입력해야 한다.&lt;/p&gt;
&lt;h3 id=&#34;그밖에-접속-방법&#34;&gt;그밖에 접속 방법&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql -u {사용자명} -p {데이터베이스명}
mysql -u root (계정과 비번을 만들지 않았을때)
mysql -u root -p(루트 비번이 있을때)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;외부-파일로-저장된-쿼리-실행&#34;&gt;외부 파일로 저장된 쿼리 실행&lt;/h2&gt;
&lt;p&gt;외부 파일에 저장된 쿼리가 실행하는 방법은 아래와 같다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ mysql -u {UserName} -p{Password} {Database} &amp;lt; {외부파일명}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;em&gt;이 방법은 SQL 문으로 export된 파일을 import할때 이 명령으로 주로 사용된다.&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;사용-예제&#34;&gt;사용 예제&lt;/h3&gt;
&lt;p&gt;외부 파일(/Users/devkuma/test.sql)를 먼저 생성한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;SELECT * FROM store_information
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;mysql 명령어가 저장된 디렉터리로 이동한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd /usr/local/mysql/bin/
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;명령어를 사용하여 SQL 외부 파일을 실행한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ./mysql -u root -p1234 devkuma &amp;lt; /Users/devkuma/test.sql 
Warning: Using a password on the command line interface can be insecure.
region_name	store_name	sales	txn_date
West	Los Angeles	1500	1999-01-05
West	San Diego	250	1999-01-07
West	Los Angeles	300	1999-01-08
East	Boston	700	1999-01-08
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;현재상태보기&#34;&gt;현재상태보기&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql&amp;gt; status
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;사용-예제-1&#34;&gt;사용 예제&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql&amp;gt; status
--------------
./mysql  Ver 14.14 Distrib 5.6.17, for osx10.7 (x86_64) using  EditLine wrapper

Connection id:		1068
Current database:	
Current user:		root@localhost
SSL:			Not in use
Current pager:		stdout
Using outfile:		&amp;#39;&amp;#39;
Using delimiter:	;
Server version:		5.6.17 MySQL Community Server (GPL)
Protocol version:	10
Connection:		Localhost via UNIX socket
Server characterset:	utf8
Db     characterset:	utf8
Client characterset:	utf8
Conn.  characterset:	utf8
UNIX socket:		/tmp/mysql.sock
Uptime:			1 hour 9 min 39 sec

Threads: 5  Questions: 4186  Slow queries: 0  Opens: 128  Flush tables: 1  Open tables: 107  Queries per second avg: 1.001
--------------
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;데이터베이스-목록-조회&#34;&gt;데이터베이스 목록 조회&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql&amp;gt; status
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;사용-예제-2&#34;&gt;사용 예제&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql&amp;gt; show databases;
+--------------------+
| Database           |
+--------------------+
| information_schema |
| devkuma            |
| mysampledata       |
| mysql              |
| performance_schema |
+--------------------+
5 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;사용할-데이터베이스-선택&#34;&gt;사용할 데이터베이스 선택&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql&amp;gt; use {데이터베이스명}
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;사용-예제-3&#34;&gt;사용 예제&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql&amp;gt; use devkuma
Reading table information for completion of table and column names
You can turn off this feature to get a quicker startup with -A

Database changed
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;테이블-목록-조회&#34;&gt;테이블 목록 조회&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql&amp;gt; show tables;
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;사용-예제-4&#34;&gt;사용 예제&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql&amp;gt; show tables;
+----------------------------+
| Tables_in_devkuma          |
+----------------------------+
| geography                  |
| store_information          |
+----------------------------+
46 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;접속-나가기&#34;&gt;접속 나가기&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql&amp;gt; exit
Bye
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;혹은 &lt;code&gt;Ctrl+C&lt;/code&gt;&lt;/p&gt;

      </description>
      
      <category>MySQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | SQL | Comments : 주석</title>
      <link>https://www.devkuma.com/docs/sql/comments/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/comments/</guid>
      <description>
        
        
        &lt;p&gt;주석(comment)은 로직에 대한 설명이나 코드를 비활성화 할 때 사용한다. 주석은 코드에 영향을 미치지 않는다. SQL에서 사용할 수 있는 주석문은 2가지 종류가 있다.&lt;/p&gt;
&lt;h2 id=&#34;단일-라인-주석-single-line-comment&#34;&gt;단일 라인 주석 (Single-line comment)&lt;/h2&gt;
&lt;p&gt;한줄 라인 주석은 &amp;lsquo;&amp;ndash;&amp;rsquo; 를 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;--Select all:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;블록-주석-multi-line-comment&#34;&gt;블록 주석 (Multi-line Comment)&lt;/h2&gt;
&lt;p&gt;/* 에서  */까지의 모든 내용이 주석 처리 된다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/*Select all the columns
of all the records
in the customers table:*/
SELECT * FROM customer;
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>데이터 중심 애플리케이션 설계</title>
      <link>https://www.devkuma.com/docs/data-intensive-application/</link>
      <pubDate>Wed, 03 Aug 2022 15:06:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/data-intensive-application/</guid>
      <description>
        
        
        &lt;p&gt;신뢰할 수 있고 확장 가능하며 유지보수하기 쉬운 시스템을 지탱하는 핵심 아이디어&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/book.jpg&#34; alt=&#34;데이터 중심 애플리케이션&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wikibook.co.kr/data-intensive-applications/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://wikibook.co.kr/data-intensive-applications/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;그룹 스터디 맴버 : 김경철, 김민규, 김정수, 김은택, 박수민, 박현도, 이승익, 이호준, 조성직, 황윤호&lt;/p&gt;
&lt;p&gt;&lt;em&gt;본 자료는 그룹 스터디를 하면서 발표한 자료이다.&lt;/em&gt;&lt;/p&gt;

      </description>
      
      <category>Database</category>
      
      <category>NoSQL</category>
      
      <category>Data</category>
      
      <category>RDB</category>
      
    </item>
    
    <item>
      <title>SQL 기본</title>
      <link>https://www.devkuma.com/docs/sql/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/</guid>
      <description>
        
        
        &lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/sql/sql_devkuma.png&#34; alt=&#34;SQL 기본&#34;&gt;&lt;/p&gt;
&lt;p&gt;SQL에 대해서 설명한다&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>TiUP 설치</title>
      <link>https://www.devkuma.com/docs/tidb/install/tiup/</link>
      <pubDate>Fri, 18 Nov 2022 11:31:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tidb/install/tiup/</guid>
      <description>
        
        
        &lt;h2 id=&#34;tiup-이란&#34;&gt;TiUP 이란?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/pingcap/tiup&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiUP&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;는 TiDB 4.0에 도입된 클러스터 운영 유지보수 도구이다.&lt;/li&gt;
&lt;li&gt;TiUP는 &lt;a href=&#34;https://github.com/pingcap/tiup/tree/master/components/cluster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Golang&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;으로 작성된 클러스터 관리 구성 요소인 TiUP 클러스터 를 제공한다.&lt;/li&gt;
&lt;li&gt;TiUP 클러스터를 사용하면 TiDB 클러스터의 배포, 시작, 중지, 삭제, 스케일링 및 업그레이드를 포함한 일상적인 데이터베이스 작업을 쉽게 수행하고 TiDB 클러스터의 매개 변수를 관리할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;linux-환경에서-tiup-설치&#34;&gt;Linux 환경에서 TiUP 설치&lt;/h2&gt;
&lt;h3 id=&#34;1-tiup-도구-다운로드-및-설치&#34;&gt;1. TiUP 도구 다운로드 및 설치&lt;/h3&gt;
&lt;p&gt;먼저, 온라인 환경에서 다음 명령을 실행하여 TiUP를 다운로드하여 설치한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl --proto &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;=https&amp;#39;&lt;/span&gt; --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;다음과 같은 &amp;ldquo;Successfully&amp;rdquo; 메시지가 표시 되었다면 TiUP가 성공적으로 설치된 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;kimkc@localhost ~&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;$ curl --proto &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;=https&amp;#39;&lt;/span&gt; --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                              Dload  Upload   Total   Spent    Left  Speed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt; 7085k  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt; 7085k    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;  3326k      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;  0:00:02  0:00:02 --:--:-- 3328k
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WARN: adding root certificate via internet: https://tiup-mirrors.pingcap.com/root.json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You can revoke this by remove /home/kimkc/.tiup/bin/7b8e153f2e2d0928.root.json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Successfully &lt;span style=&#34;color:#204a87&#34;&gt;set&lt;/span&gt; mirror to https://tiup-mirrors.pingcap.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Detected shell: bash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Shell profile:  /home/kimkc/.bash_profile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/home/kimkc/.bash_profile has been modified to add tiup to PATH
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;open a new terminal or &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; /home/kimkc/.bash_profile to use it
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Installed path: /home/kimkc/.tiup/bin/tiup
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===============================================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Have a try:     tiup &lt;span style=&#34;color:#000&#34;&gt;playground&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===============================================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;kimkc@localhost ~&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 출력에서 설치된 쉘 프로파일 경로에 기억해 두기로 하자. 다음 단계에서 이 경로를 사용해야 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Installed path: /home/kimkc/.tiup/bin/tiup
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-변경된-환경-변수-반영&#34;&gt;2. 변경된 환경 변수 반영&lt;/h3&gt;
&lt;p&gt;설치 후에 아래와 같이 home 디렉터리에 조회해보면 &lt;code&gt;.pki&lt;/code&gt;, &lt;code&gt;.tiup&lt;/code&gt; 디렉터리가 생성된 것을 볼 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;kimkc@localhost ~&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;$ ls -al
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;total &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;16&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwx------. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; kimkc kimkc &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;108&lt;/span&gt; Oct &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;31&lt;/span&gt; 11:08 .
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwxr-xr-x. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; root  root   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;19&lt;/span&gt; Oct &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;31&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2022&lt;/span&gt; ..
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-------. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; kimkc kimkc &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;282&lt;/span&gt; Oct &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;31&lt;/span&gt; 10:51 .bash_history
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r--. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; kimkc kimkc  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;18&lt;/span&gt; Mar &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;31&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2020&lt;/span&gt; .bash_logout
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r--. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; kimkc kimkc &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;234&lt;/span&gt; Oct &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;31&lt;/span&gt; 11:08 .bash_profile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;-rw-r--r--. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; kimkc kimkc &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;231&lt;/span&gt; Mar &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;31&lt;/span&gt;  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2020&lt;/span&gt; .bashrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwxrw----. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; kimkc kimkc  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;19&lt;/span&gt; Oct &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;31&lt;/span&gt; 11:07 .pki
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;drwxrwxr-x. &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; kimkc kimkc  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;34&lt;/span&gt; Oct &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;31&lt;/span&gt; 11:08 .tiup
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;kimkc@localhost ~&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그리고, 셸 프로필 파일(&lt;code&gt;.bash_profile&lt;/code&gt;)을 확인해 보면, 아래 부분에 &lt;code&gt;.tiup/bin&lt;/code&gt; 경로가 PATH가 등록된 것을 볼 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;kimkc@localhost ~&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;$ cat .bash_profile
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# .bash_profile&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# ... 중간 생략 ....&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;PATH&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;/home/kimkc/.tiup/bin:&lt;span style=&#34;color:#000&#34;&gt;$PATH&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 변경된 환경 변수를 &lt;code&gt;source&lt;/code&gt; 명령으로 반영해 준다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; .bash_profile
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;macos-환경에서-tiup-설치&#34;&gt;macOS 환경에서 TiUP 설치&lt;/h2&gt;
&lt;h3 id=&#34;1-tiup-도구-다운로드-및-설치-1&#34;&gt;1. TiUP 도구 다운로드 및 설치&lt;/h3&gt;
&lt;p&gt;먼저, 온라인 환경에서 다음 명령을 실행하여 TiUP를 다운로드하여 설치한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl --proto &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;=https&amp;#39;&lt;/span&gt; --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% curl --proto &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;=https&amp;#39;&lt;/span&gt; --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                Dload  Upload   Total   Spent    Left  Speed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt; 6988k  &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;100&lt;/span&gt; 6988k    &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;     &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;  3433k      &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;  0:00:02  0:00:02 --:--:-- 3442k
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WARN: adding root certificate via internet: https://tiup-mirrors.pingcap.com/root.json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;You can revoke this by remove /Users/user/.tiup/bin/7b8e153f2e2d0928.root.json
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Successfully &lt;span style=&#34;color:#204a87&#34;&gt;set&lt;/span&gt; mirror to https://tiup-mirrors.pingcap.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Detected shell: zsh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Shell profile:  /Users/user/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/Users/user/.zshrc has been modified to add tiup to PATH
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;open a new terminal or &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; /Users/user/.zshrc to use it
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Installed path: /Users/user/.tiup/bin/tiup
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===============================================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Have a try:     tiup &lt;span style=&#34;color:#000&#34;&gt;playground&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===============================================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;2-전역-환경-변수를-다시-선언&#34;&gt;2. 전역 환경 변수를 다시 선언&lt;/h3&gt;
&lt;p&gt;설치 후 TiUP는 해당하는 셸 프로필 파일의 절대 경로를 표시한다. 경로에 따라 다음 &lt;code&gt;source&lt;/code&gt; 명령에서 &lt;code&gt;${your_shell_profile}&lt;/code&gt;을 변경해야 한다. 이 경우 1단계의 출력에서 &lt;code&gt;${your_shell_profile}&lt;/code&gt;는 &lt;code&gt;/Users/user/.zshrc&lt;/code&gt;이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;your_shell_profile&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; .zshrc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-tiup이-설치되어-있는지-확인&#34;&gt;3. TiUP이 설치되어 있는지 확인&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;which tiup
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% which tiup
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/Users/user/.tiup/bin/tiup
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;전역 환경 변수를 선언한다.&lt;/li&gt;
&lt;/ol&gt;

      </description>
      
      <category>Database</category>
      
      <category>TiDB</category>
      
    </item>
    
    <item>
      <title>TiDB HTAP 퀵 스타트 가이드</title>
      <link>https://www.devkuma.com/docs/tidb/quick-start-with-htap/</link>
      <pubDate>Sat, 03 Sep 2022 18:16:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tidb/quick-start-with-htap/</guid>
      <description>
        
        
        &lt;p&gt;이 가이드에서는 하이브리드 트랜잭션 및 분석 처리(HTAP, Hybrid Transactional and Analytical Processing) TiDB의 원스톱 솔루션을 시작하는 가장 쉬운 방법에 대해 설명한다.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;

    이 가이드에 설명된 절차는 테스트 환경에서 빠른 시작 전용이다. 운영 환경에서는 &lt;a href=&#34;https://www.devkuma.com/docs/tidb/explore-htap/&#34;&gt;HTAP 살펴보기&lt;/a&gt;를 추천한다.

&lt;/div&gt;

&lt;h2 id=&#34;기본-개념&#34;&gt;기본 개념&lt;/h2&gt;
&lt;p&gt;TiDB HTAP를 사용하기 전에 TiDB OLTP(온라인 트랜잭션 처리, Online Transactional Processing)를 위한 행 기반(row-based) 스토리지 엔진인 TiKV와 TiDB OLAP(온라인 분석 처리, Online Analytical Processing)를 위한 열 기반(Columnar storage) 스토리지 엔진인 TiFlash에 대한 몇 가지 기본 지식이 필요하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;HTAP 스토리지 엔진: HTAP는 행 기반 스토리지 엔진과 열 기반 스토리지 엔진을 공존한다. 두 스토리지 엔진 모두 데이터를 자동으로 복제하여 강력한 무결성을 유지할 수 있다. 행 기반 스토리지 엔진은 OLTP 성능을 최적화하고, 열 기반 스토리지 엔진은 OLAP 성능을 최적화한다.&lt;/li&gt;
&lt;li&gt;HTAP 데이터 무결성: 분산 트랜잭션 키 값 데이터베이스로서 TiKV는 ACID 호환 트랜잭션 인터페이스를 제공하여 여러 복제본 간의 데이터 무결성과 Raft 컨센서스 알고리즘 구현을 통한 고가용성을 보장한다. TiKV의 열 기반 스토리지 확장으로서 TiFlash는 Raft Learner 컨센서스 알고리즘에 따라 실시간으로 TiKV에서 데이터를 복제한다.&lt;/li&gt;
&lt;li&gt;HTAP 데이터 격리: HTAP 리소스 분리 문제를 해결하기 위해 필요에 따라 TiKV와 TiFlash를 다른 시스템에 배포할 수 있다.&lt;/li&gt;
&lt;li&gt;MPP 컴퓨팅 엔진: MPP는 TiDB 5.0 이상 TiFlash 엔진에서 제공하는 분산 컴퓨팅 프레임워크로, 노드 간의 데이터 교환을 가능하게 하며 고성능, 고 처리량 SQL 알고리즘을 제공한다. MPP 모드를 사용하면 분석 쿼리 실행 시간을 크게 줄일 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;절차&#34;&gt;절차&lt;/h2&gt;
&lt;p&gt;이 문서에서는 TPC-H 데이터 세트에서 샘플 테이블을 쿼리하여 TiDB HTAP의 편의성과 고성능을 경험할 수 있다. TPC-H는 대량의 데이터와 매우 복잡한 일련의 비즈니스 지향 임시 쿼리로 구성된 일반적인 의사 결정 지원 벤치마크이다. TPC-H를 사용하여 22개의 완전한 SQL 쿼리를 경험하려면 tidb-bench 리포지토리 또는 TPC-H 에 액세스하여 쿼리 문과 데이터를 생성하는 방법을 알아보아라.&lt;/p&gt;
&lt;h3 id=&#34;1단계-로컬-테스트-환경-배포&#34;&gt;1단계. 로컬 테스트 환경 배포&lt;/h3&gt;
&lt;p&gt;TiDB HTAP를 사용하기 전에 &lt;a href=&#34;https://www.devkuma.com/docs/tidb/quick-start-with-tidb/&#34;&gt;TiDB 데이터베이스 플랫폼의 퀵 스타드 가이드&lt;/a&gt;에 설명된 대로 로컬 테스트 환경을 준비하고 다음 명령을 실행하여 TiDB 클러스터를 배포한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tiup playground
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;

    &lt;code&gt;tiup playground&lt;/code&gt; 명령어은 운영용이 아니라 퀵 가이드 전용이다.

&lt;/div&gt;

&lt;h3 id=&#34;2단계-테스트-데이터-준비&#34;&gt;2단계. 테스트 데이터 준비&lt;/h3&gt;
&lt;p&gt;다음 절차에서는 TiDB HTAP를 사용하기 위한 테스트 데이터로 TPC-H 데이터 세트를 만들 수 있다. TPC-H에 관심이 있다면 &lt;a href=&#34;https://www.tpc.org/tpc_documents_current_versions/pdf/tpc-h_v3.0.0.pdf&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;일반적인 구현 가이드&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;을 참조하여라.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;

    분석 쿼리에 기존 데이터를 사용하려는 경우 데이터를 TiDB로 마이그레이션할 수 있다. 테스트 데이터를 직접 디자인하고 생성하고 싶다면 SQL 문을 실행하거나 관련 도구를 사용하여 생성할 수 있다.

&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;다음 명령을 실행하여 테스트 데이터 생성 도구를 설치한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tiup install bench
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 명령을 실행하여 테스트 데이터를 생성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tiup bench tpch --sf&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt; prepare
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 명령의 출력에 &lt;code&gt;Finished&lt;/code&gt;가 표시되면 데이터가 생성되었음을 나타낸다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;다음 SQL 문을 실행하여 생성된 데이터를 표시한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;CONCAT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table_schema&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;.&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table_name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Table Name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table_rows&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Number of Rows&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;FORMAT_BYTES&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data_length&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Data Size&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;FORMAT_BYTES&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;index_length&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Index Size&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;FORMAT_BYTES&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data_length&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;index_length&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Total&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;information_schema&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TABLES&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;table_schema&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;출력에서 알 수 있듯이 총 8개의 테이블이 만들어지고 최대 테이블에는 650만 행이 있다(데이터가 무작위로 생성되므로 도구에서 만든 행 수는 실제 SQL 쿼리 결과 다르다).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;---------------+----------------+-----------+------------+-----------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Table&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;Number&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;of&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Rows&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Data&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Size&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Index&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Size&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Total&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;---------------+----------------+-----------+------------+-----------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;nation&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;             &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;KiB&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;44&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;KiB&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;region&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;              &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;416&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;416&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;part&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;         &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;200000&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;supplier&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;          &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10000&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;45&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;partsupp&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;         &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;800000&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;120&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;17&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;12&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;21&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;132&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;38&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;         &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;150000&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;24&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;77&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;orders&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;   &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1527648&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;174&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;bytes&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;174&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;40&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineitem&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;6491711&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;849&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;07&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;99&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;948&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;13&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;MiB&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;---------------+----------------+-----------+------------+-----------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;06&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이는 상업 주문 시스템의 데이터베이스이다. &lt;code&gt;test.nation&lt;/code&gt; 테이블는 국가에 대한 정보를, &lt;code&gt;test.region&lt;/code&gt; 테이블는 지역에 대한 정보를, &lt;code&gt;test.part&lt;/code&gt; 테이블는 부품에 대한 정보를, &lt;code&gt;test.supplier&lt;/code&gt; 테이블는 공급자에 대한 정보를, &lt;code&gt;test.partsupp&lt;/code&gt; 테이블는 공급자의 부품에 대한 정보를, &lt;code&gt;test.customer&lt;/code&gt; 테이블는 고객에 대한 정보, &lt;code&gt;test.customer&lt;/code&gt; 테이블는 주문 정보, &lt;code&gt;test.lineitem&lt;/code&gt; 테이블는 온라인 항목에 대한 정보를 나타낸다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;3단계-행-기반-스토리지-엔진을-사용하여-데이터-쿼리&#34;&gt;3단계. 행 기반 스토리지 엔진을 사용하여 데이터 쿼리&lt;/h3&gt;
&lt;p&gt;행 기반 스토리지 엔진만 사용하는 TiDB의 성능을 확인하려면 다음 SQL 문을 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;l_orderkey&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;l_extendedprice&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;l_discount&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;revenue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_orderdate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_shippriority&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;orders&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineitem&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c_mktsegment&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;BUILDING&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c_custkey&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_custkey&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;l_orderkey&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_orderkey&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_orderdate&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;DATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;1996-01-01&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;l_shipdate&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;DATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;1996-02-01&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GROUP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;l_orderkey&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_orderdate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_shippriority&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;revenue&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DESC&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_orderdate&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;limit&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이는 배송 우선순위 쿼리이며 지정된 날짜까지 배송되지 않은 최고 수익 주문의 우선순위와 잠재 수익을 제공한다. 잠재적 수익은 &lt;code&gt;l_extendedprice * (1-l_discount)&lt;/code&gt; 합계로 정의된다. 주문은 수익 내림차순으로 나열된다. 이 예에서 이 쿼리는 선적되지 않은 주문을 상위 10위까지 나열한다.&lt;/p&gt;
&lt;h3 id=&#34;4단계-테스트-데이터를-열-지향-스토리지-엔진에-복제&#34;&gt;4단계. 테스트 데이터를 열 지향 스토리지 엔진에 복제&lt;/h3&gt;
&lt;p&gt;TiFlash가 배포된 후 TiKV는 데이터를 즉시 TiFlash로 복제하지 않는다. 복제해야 하는 테이블을 지정하려면 TiDB MySQL 클라이언트에서 다음 DDL 문을 실행해야 한다. 그런 다음 TiDB는 그에 따라 지정된 복제본을 TiFlash에 만든다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TIFLASH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;REPLICA&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;orders&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TIFLASH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;REPLICA&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;test&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineitem&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TIFLASH&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;REPLICA&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;특정 테이블의 복제 상태를 확인하려면 다음 문을 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;information_schema&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tiflash_replica&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TABLE_SCHEMA&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;and&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE_NAME&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;customer&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;information_schema&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tiflash_replica&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TABLE_SCHEMA&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;and&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE_NAME&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;orders&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;information_schema&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tiflash_replica&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TABLE_SCHEMA&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;and&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE_NAME&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;lineitem&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위의 명령문 결과 :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;AVAILABLE&lt;/code&gt;는 특정 테이블의 TiFlash 복제본을 사용할 수 있는지 여부를 나타낸다. &lt;code&gt;1&lt;/code&gt;는 사용할 수 있음을 의미하며 &lt;code&gt;0&lt;/code&gt;은 사용할 수 없음을 의미한다. 복제본을 사용할 수 있게 되면 이 상태는 더 이상 변경되지 않는다. DDL 문을 사용하여 복제본 수를 변경하면 복제 상태가 다시 계산된다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;PROGRESS&lt;/code&gt;는 복제 진행 상황을 의미한다. 값은 0.0 ~ 1.0이다. 1은 적어도 하나의 복제본이 복제됨을 의미한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;5단계-htap를-사용하여-데이터를-보다-신속하게-분석&#34;&gt;5단계. HTAP를 사용하여 데이터를 보다 신속하게 분석&lt;/h3&gt;
&lt;p&gt;3단계 의 SQL문을 다시 실행하여 TiDB HTAP의 성능을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;TiFlash 복제본이 포함된 테이블의 경우 TiDB 옵티마이저는 비용 견적에 따라 TiFlash 복제본을 사용할지 여부를 자동으로 결정한다. TiFlash 복제본이 선택되어 있는지 여부를 확인 &lt;code&gt;desc&lt;/code&gt; 하거나 &lt;code&gt;explain analyze&lt;/code&gt;문을 사용할 수 있다. 예를 들면:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;explain&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;analyze&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;l_orderkey&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;l_extendedprice&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;l_discount&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;revenue&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_orderdate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_shippriority&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;customer&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;orders&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;lineitem&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c_mktsegment&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;BUILDING&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;c_custkey&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_custkey&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;l_orderkey&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_orderkey&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_orderdate&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;DATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;1996-01-01&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;l_shipdate&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;DATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;1996-02-01&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GROUP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;l_orderkey&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_orderdate&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_shippriority&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ORDER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;revenue&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DESC&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;o_orderdate&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;limit&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;EXPLAIN&lt;/code&gt;명령문의 결과가 &lt;code&gt;ExchangeSender&lt;/code&gt;하나 &lt;code&gt;ExchangeReceiver&lt;/code&gt;의 연산자를 나타내는 경우 MPP 모드가 사용 가능함을 나타낸다.&lt;/p&gt;
&lt;p&gt;또한 전체 쿼리의 각 부분이 TiFlash 엔진만 사용하여 계산되도록 지정할 수 있다. 자세한 내용은 TiDB를 사용하여 TiFlash 복제본 읽기를 참조하여라.&lt;/p&gt;
&lt;p&gt;이 두 가지 방법의 쿼리 결과와 쿼리 성능을 비교할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;다음은-무엇인가&#34;&gt;다음은 무엇인가&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;TiDB HTAP 아키텍처&lt;/li&gt;
&lt;li&gt;HTAP 조사&lt;/li&gt;
&lt;li&gt;TiFlash 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;


&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pingcap/docs/blob/release-6.1/quick-start-with-htap.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quick start with HTAP&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; 최종수정일 2022. 7. 8. 오전 11:48:44: &lt;a href=&#34;https://github.com/pingcap/docs/commit/4ac6357b8f2ad7e9c5c632ef4edd0627b0f7c20a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tiflash refactor: split use-tiflash into multiple docs (#9452) (#9521)&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;


      </description>
      
      <category>Database</category>
      
      <category>TiDB</category>
      
    </item>
    
    <item>
      <title>TiDB 컴퓨팅</title>
      <link>https://www.devkuma.com/docs/tidb/computing/</link>
      <pubDate>Thu, 04 Aug 2022 16:15:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tidb/computing/</guid>
      <description>
        
        
        &lt;p&gt;앞에서는 TiDB가 데이터를 저장하는 방법을 소개했다. (이것은 TiKV의 기본 개념이기도 하다.) 이번에는 TiDB가 어떻게 하단 레이어의 Key-Value에 데이터를 저장하고 관계형 모델을 Key-Value 모델에 매핑하고 SQL을 수행하는지에 대해 자세히 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;관계형-모델과-key-value-모델-매핑&#34;&gt;관계형 모델과 Key-Value 모델 매핑&lt;/h2&gt;
&lt;p&gt;관계형 모델을 단순화하고 간단한 테이블과 SQL 문만을 생각해 보자. 생각해야 할 것은 테이블 데이터의 저장과 SQL문의 실행을 Key-Value상에서 어떻게 하고 있는가이다. 다음과 같은 테이블을 생각한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;User&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;...&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ID&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;varchar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Role&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;varchar&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Age&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;int&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRIMARY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;ID&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;Key&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;idxAge&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;age&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;일반적인 SQL 데이터베이스와 Key-Value의 구조에는 큰 차이가 있기 때문에 SQL 데이터베이스를 Key-Value에 매핑하는 방법이 중요하다. 여기에서는 먼저 어떤 매핑 솔루션이 좋은지 결정하기 위해, 데이터를 저장하는 방법의 특징을 설명한다.&lt;/p&gt;
&lt;p&gt;테이블에는 세 가지 데이터가 포함되어 있다. (다만, 여기에서는 메타데이터에 대해서는 언급하지 않는다.)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;테이블에 대한 메타데이터&lt;/li&gt;
&lt;li&gt;테이블의 행 수&lt;/li&gt;
&lt;li&gt;인덱스 데이터&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;데이터는 행 단위 또는 열 단위로 저장할 수 있으며, 어느쪽도 장단점이 있다. TiDB의 주요 목적은 온라인 트랜잭션 처리(OLTP)이며, 데이터 행을 읽고, 저장, 변경, 삭제하는 것을 신속하게 수행하는 것을 목표로 하기 때문에, 행 저장소가 더 좋을 것이다.&lt;/p&gt;
&lt;p&gt;TiDB는 Primary Index와 Secondary Index를 모두 지원한다. 인덱스의 기능은 쿼리 가속화, 높은 쿼리 성능 및 제약을 위한 것입니다. 쿼리에는 두 가지 형식이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;포인트 쿼리: &lt;code&gt;select name from user where id = 1;&lt;/code&gt;와 같이 기본 키 또는 고유 키와 같은 동등한 조건을 사용하여 인덱스를 통해 데이터의 특정 행을 찾는다.&lt;/li&gt;
&lt;li&gt;범위 쿼리: 예를 들어 &lt;code&gt;select name from user where age &amp;gt; 30 and age &amp;lt; 35;&lt;/code&gt;와 같이, &lt;code&gt;idxAge&lt;/code&gt;을 사용하여 나이가 30에서 35 사이에 있는 데이터를 쿼리한다. 인덱스에는 Unique Index 와 Non-unique Index 의 2가지 종류가 있지만, TiDB 에서는 모두 지원하고 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;저장할 데이터의 특성을 분석한 후에는 Insert/Update/Delete/Select 문과 같은 데이터를 조작하는데 필요한 사항으로 보도록 하자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Insert&lt;/strong&gt; 문: 행 데이터를 Key-Value에 쓰고, 인덱스 데이터를 만든다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Update&lt;/strong&gt; 문: 필요에 따라 행 데이터와 인덱스 데이터를 변경한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Delete&lt;/strong&gt; 문: 행 데이터와 인덱스를 모두 삭제한다.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Select&lt;/strong&gt; 문: 이 4가지 중에 가장 복잡한 상황을 다룬다.
&lt;ul&gt;
&lt;li&gt;데이터의 행을 쉽고 빠르게 읽는다. (이 경우 각 행에는 ID(명시적 또는 암시적으로)가 필요한다.)&lt;/li&gt;
&lt;li&gt;&lt;code&gt;Select * from user;&lt;/code&gt;와 같이 여러 행의 데이터를 연속적으로 읽는다.&lt;/li&gt;
&lt;li&gt;인덱스를 사용하여 데이터를 로드하고, Point 쿼리와 Range 쿼리에서 인덱스를 활용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;글로벌로 분산되고, 정렬된 Key-Value 엔진은 위의 작업 요구 사항을 충족한다. 글로벌로 정렬된 특징은 상당히 많은 문제를 해결하는데 도움이 된다. 다음 2가지 예로 생각해 보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터 행의 신속한 조회: 단일 또는 복수의 키를 작성할 수 있다고 가정히여, 이 행을 찾을 때는, TiKV가 제공하는 Seek 메소드를 사용하여 이 데이터의 행을 신속하게 찾아낼 수가 있다.&lt;/li&gt;
&lt;li&gt;테이블 전체 스캔: 테이블을 Key의 Range에 매핑할 수 있는 경우는 StartKey에서 EndKey까지 스캔하여 모든 데이터를 검색할 수 있다. 인덱스 데이터를 조작하는 방법도 마찬가지이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이제는 이 TiDB에서 어떻게 작동하는지 살펴 보겠다.&lt;/p&gt;
&lt;p&gt;TiDB는 각 테이블에 &lt;code&gt;TableID&lt;/code&gt;, 각 인덱스에 &lt;code&gt;IndexID&lt;/code&gt;을, 각 행에 &lt;code&gt;RowID&lt;/code&gt;을 할당한다. 테이블에 정수 기본 키가 있으면 해당 값이 &lt;code&gt;RowID&lt;/code&gt;로 사용된다. &lt;code&gt;TableID&lt;/code&gt;는 클러스터 전체에서 고유하며 &lt;code&gt;IndexID/RowID&lt;/code&gt;는 테이블 내에서 고유한다. 이러한 ID는 모두 int64 이다.&lt;/p&gt;
&lt;p&gt;각 행의 데이터는 다음 규칙에 따라 키-값 쌍으로 인코딩된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Key: tablePrefix{tableID}_recordPrefixSep{rowID}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Value: [col1, col2, col3, col4]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Key의 &lt;code&gt;tablePrefix/recordPrefixSep&lt;/code&gt;는 특정 문자열 상수이며, Key-Value 공간에서 다른 데이터를 구별하는데 사용된다. 인덱스 데이터는 다음 규칙에 따라 Key-Value 쌍으로 인코딩된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Key: tablePrefix{tableID}_indexPrefixSep{indexID}_indexedColumnsValue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Value: rowID
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위의 인코딩 규칙은 Unique Index에는 적용되지만, Non-Unique Index에서는 Unique Key를 만들 수 없다. 그 이유는 인덱스의 &lt;code&gt;tablePrefix{tableID}_indexPrefixSep{indexID}&lt;/code&gt;가 동일하기 때문이다. 또한 여러 줄의 &lt;code&gt;ColumnsValue&lt;/code&gt;도 동일할 수 있다. 그래서 Non-unique Index를 인코딩하기 위해 몇 가지 변경을 했다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Key: tablePrefix{tableID}_indexPrefixSep{indexID}_indexedColumnsValue_rowID
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Value: null
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 방법으로 각 행의 데이터에 고유한 키를 만들 수 있다.&lt;/p&gt;
&lt;p&gt;위의 규칙에서 키의 &lt;code&gt;xxPrefix&lt;/code&gt;는 모두 문자열 상수이며, 다른 유형의 데이터 간의 충돌을 피하기 위해 네임 스페이스를 구별하는 기능을 가지고 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;var(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tablePrefix     = []byte{&amp;#39;t&amp;#39;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    recordPrefixSep = []byte(&amp;#34;_r&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    indexPrefixSep  = []byte(&amp;#34;_i&amp;#34;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;행과 인덱스의 키 인코딩 솔루션 모두 동일한 접두사를 가진다. 특히 테이블의 모든 행은 동일한 접두사를 가지며, 인덱스의 데이터도 동일한 접두사를 갖는다. 이러한 동일한 접두사를 가진 데이터는 TiKV의 키 공간에 함께 배치된다. 즉, 접미사의 부호화 방법을 신중하게 설계하고 비교 관계가 변화하지 않도록 하면 행이나 인덱스의 데이터가 가지런히 질서있게 TiKV에 저장되게 된다. 따라서 인코딩 전후에 비교 관계가 변경되지 않는 것을 &lt;strong&gt;Memcomparable&lt;/strong&gt; 이라고 한다. 어떠한 값이라도 encode 전의 2개의 오브젝트의 비교 결과는 encode 후의 바이트 배열의 비교 결과와 일치한다(주: TiKV 의 키와 밸류는 모두 프리미티브인 byte 배열이다). 자세한 내용은 TiDB의 코덱 패키지를 참조하여라. 이 인코딩 방법을 채택하면 테이블의 모든 행 데이터가 RowID 순서에 따라 TiKV의 키 공간에 배치된다. 또한, 특정 인덱스의 데이터도 인덱스의 ColumnValue 순서로 배치된다.&lt;/p&gt;
&lt;p&gt;이제 지금까지 요구 사항과 TiDB 매핑 솔루션을 고려하여, 솔루션의 실현 가능성을 확인한다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;먼저, 매핑 솔루션을 통해 행과 인덱스 데이터를 Key-Value 데이터로 변환하고 각 행과 각 인덱스 데이터에 고유한 키가 있는지 확인한다.&lt;/li&gt;
&lt;li&gt;그런 다음 Point 쿼리와 Range 쿼리를 모두 지원하므로 이 매핑 솔루션을 사용하여 행과 인덱스의 일부에 해당하는 키를 쉽게 만들 수 있다.&lt;/li&gt;
&lt;li&gt;마지막으로 테이블에 몇 가지 제약 조건을 확보하는 경우, 해당 제약 조건이 충족되는지 확인하기 위해 특정 키를 만들고 해당 키의 존재를 확인할 수 있다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;지금까지 테이블을 Key-Value에 매핑하는 방법을 설명하였다.&lt;/p&gt;
&lt;p&gt;다음으로 같은 테이블 구조를 가진 또 다른 경우를 소개한다. 테이블에 3행의 데이터가 있다고 가정한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1, &amp;#34;TiDB&amp;#34;, &amp;#34;SQL Layer&amp;#34;, 10
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2, &amp;#34;TiKV&amp;#34;, &amp;#34;KV Engine&amp;#34;, 20
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3, &amp;#34;PD&amp;#34;, &amp;#34;Manager&amp;#34;, 30
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;먼저, 데이터의 각 행은 Key-Value 쌍으로 매핑된다. 이 테이블에는 Int의 기본 키가 있으므로, RowID의 값은 이 기본 키의 값이다. 이 테이블의 TableID가 10이고, 그 행 데이터가 다음과 같이 가정한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t10_r1 --&amp;gt; [&amp;#34;TiDB&amp;#34;, &amp;#34;SQL Layer&amp;#34;, 10].
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t10_r2 --&amp;gt; [&amp;#34;TiKV&amp;#34;, &amp;#34;KV Engine&amp;#34;, 20].
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t10_r3 --&amp;gt; [&amp;#34;PD&amp;#34;, &amp;#34;Manager&amp;#34;, 30].
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 테이블에는 기본 키 외에 인덱스가 있다. 인덱스의 ID는 1이고, 그 데이터는 다음과 같이 가정한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t10_i1_10_1 --&amp;gt; null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t10_i1_20_2 --&amp;gt; null
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;t10_i1_30_3 --&amp;gt; null
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;앞에서 설명한 인코딩 규칙은 위의 예를 이해하는데 도움이 된다. 우리가 이 매핑 솔루션을 선택한 이유와 그 목적을 이해해 주길 바란다.&lt;/p&gt;
&lt;h2 id=&#34;메타데이터-관리-및-sql의-실현-방법&#34;&gt;메타데이터 관리 및 SQL의 실현 방법&lt;/h2&gt;
&lt;p&gt;앞에서 관계형 모델과 Key-Value 모델의 매핑을 설명하였다. 이번에는 메타데이터 관리 및 SQL의 실현 방법을 소개하겠다.&lt;/p&gt;
&lt;h3 id=&#34;메타데이터-관리&#34;&gt;메타데이터 관리&lt;/h3&gt;
&lt;p&gt;이전 섹션에서는 테이블의 데이터와 인덱스가 Key-Value에 매핑되는 방법을 설명하였다. 여기에서는 메타데이터를 저장하는 방법을 소개한다.&lt;/p&gt;
&lt;p&gt;데이터베이스와 테이블 모두 정의와 다양한 속성을 나타내는 메타데이터를 가지고 있다. 이러한 모든 정보는 TiKV에 저장되어야 한다. 데이터베이스나 테이블에는 각각 고유의 ID가 설정되어 있어, 이 ID가 고유의 식별 정보가 된다. Key-Value로 인코딩할 때는, 이 ID를 키에 접두사로 &lt;code&gt;m_&lt;/code&gt;붙여 인코딩한다. 이런 식으로 키가 생성되고 해당 Value에는 serialize된 메타데이터가 저장된다.&lt;/p&gt;
&lt;p&gt;이 외에도 특수한 Key-Value는 현재 스키마 정보의 버전을 저장한다. TiDB는 Google F1의 Online Schema change algorithm을 채택하고 있다. 백그라운드 스레드는 항상 TiKV에 저장된 스키마 버전이 변경되었는지 여부를 확인한다. 변경이 있는 경우는 일정 기간내에 변경 정보를 받을 수 있도록 관리하고 있다.&lt;/p&gt;
&lt;h3 id=&#34;key-value형-sql-아키텍처&#34;&gt;Key-Value형 SQL 아키텍처&lt;/h3&gt;
&lt;p&gt;아래 다이어그램은 TiDB의 전체 아키텍처를 보여준다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/tidb/TiDB-architecture.png&#34; alt=&#34;TiDB의 전체 아키텍처&#34;&gt;&lt;/p&gt;
&lt;p&gt;TiKV 클러스터의 주요 기능은 데이터를 저장하는 Key-Value 엔진이다. (이는 이전에 소개하였다.) 여기서는 SQL 계층, 즉, TiDB 서버에 중점을 둔다. 이 계층의 노드는 데이터를 저장하지 않는 스테이트리스(Stateless)이며, 각각은 완전히 동일하다. TiDB 서버는 사용자의 요청을 처리하고, SQL 조작 로직을 수행하는 역할을 담당한다.&lt;/p&gt;
&lt;h3 id=&#34;sql-컴퓨팅&#34;&gt;SQL 컴퓨팅&lt;/h3&gt;
&lt;p&gt;SQL에서 Key-Value로의 매핑 솔루션은 관계형 데이터를 저장하는 방법을 보여준다. 다음은 이러한 데이터를 사용하여 쿼리 요청을 충족하는 방법을 이해해야 한다. 즉, 질의문이 최하위 계층에 저장된 데이터에 어떻게 액세스하는지에 대한 프로세스이다.&lt;/p&gt;
&lt;p&gt;가장 간단한 방법은 이전 섹션에서 소개한 매핑 솔루션을 사용하여 SQL 쿼리를 Key-Value 쿼리에 매핑하고 일부 작업을 수행하기 전에 Key-Value 인터페이스를 사용하여 해당 데이터를 검색하는 것이다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;Select count(*) from user where name= &amp;quot;TiDB&amp;quot;;&lt;/code&gt;라는 쿼리문에 대해서는 테이블의 모든 데이터를 읽은 다음 &lt;code&gt;Name&lt;/code&gt; 필드에 &lt;code&gt;TiDB&lt;/code&gt;가 있는지 확인해야 한다. 그렇다면 이 행을 반환한다. 이 조작은 다음 Key-Value 조작 프로세스로 마이그레이션 된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;키 범위 생성 : 테이블의 모든 RowID는 &lt;code&gt;[0, MaxInt64]&lt;/code&gt;의 범위에 있으므로 0과 MaxInt64 및 행의 키 인코딩 규칙을 사용하여 &lt;code&gt;[StartKey, EndKey]&lt;/code&gt;와 같이 왼쪽-닫기-오른쪽-열기의 구간을 만든다.&lt;/li&gt;
&lt;li&gt;키 범위 스캔 : 미리 작성한 키 범위에 따라 TiKV 데이터를 읽는다.&lt;/li&gt;
&lt;li&gt;데이터 필터링 : 데이터의 각 행을 읽을 때, &lt;code&gt;name = &amp;quot;TiDB&amp;quot;&lt;/code&gt;의 표현을 판단한다. 그 결과가 참이면 이 행으로 되돌아 간다. 그렇지 않은 경우 이 행을 건너뛴다.&lt;/li&gt;
&lt;li&gt;Count 판단: 요구 사항을 충족하는 각 행에 대해, Count 값에 더한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;프로세스는 아래 그림을 보도록 한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/tidb/TiDB-process.png&#34; alt=&#34;TiDB 프로세스&#34;&gt;&lt;/p&gt;
&lt;p&gt;이 솔루션은 효과적이지만 다음과 같은 단점이 있다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;데이터를 스캔할 때는 각 행을 TiKV에서 Key-Value 조작으로 읽어야 한다. 따라서 최소한 하나의 RPC 오버헤드가 발생한다. 이 오버헤드는 스캔할 데이터가 많으면 커진다.&lt;/li&gt;
&lt;li&gt;모든 행에 적용되는 것은 아니다. 조건을 충족하지 않는 데이터는 로드할 필요가 없다.&lt;/li&gt;
&lt;li&gt;조건을 충족하는 행의 값은 중요하지 않ㅣ다. 여기서 필요한 것은 행 수뿐이다.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;분산-sql-조작&#34;&gt;분산 SQL 조작&lt;/h3&gt;
&lt;p&gt;위의 단점은 쉽게 피할 수 있다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;먼저, 많은 양의 RPC 호출을 중지하려면 스토리지 노드 가까에서 작업을 해야 한다.&lt;/li&gt;
&lt;li&gt;그러고, Filter를 스토리지 노드로 푸시다운해야 한다. 이 경우는 유효한 행만 반환되고 무의미한 네트워크 전송은 피할 수 있다.&lt;/li&gt;
&lt;li&gt;마지막으로 Aggregate 함수와 GroupBy를 누른 다음 사전 집계를 수행한다. 각 노드는 단지 하나의 Count 값을 반환할 수 있으며, 그 후 tidb-server는 모든 값을 합산한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;다음 그림은 데이터가 계층별로 되돌아오는 모습을 나타낸다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/tidb/TiDB-data-callback.png&#34; alt=&#34;데이터가 계층별로 되돌아오는 모습&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;sql-계층-아키텍처&#34;&gt;SQL 계층 아키텍처&lt;/h3&gt;
&lt;p&gt;앞에서 SQL 계층의 몇 가지 기능을 소개했으므로, SQL 문을 처리하는 방법에 대한 기본 개념을 이해할 수 있다고 생각한다. 사실, TiDB의 SQL 레이어는 매우 복잡하며 많은 모듈과 레이어가 있다. 다음 그림은 모든 중요한 모듈과 호출 간의 관계를 나타낸다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/tidb/TiDB-module-relations.png&#34; alt=&#34;모듈과 호출 간의 관계&#34;&gt;&lt;/p&gt;
&lt;p&gt;SQL 요청은 직접 또는 로드 밸런서를 통해 tidb-server로 전송되며, tidb-server는 MySQL 프로토콜 패킷을 구문 분석하여 요청 내용을 확인한다. 그런 다음 구문 분석을 수행하고 쿼리 계획을 만들고 최적화하며 계획을 실행하여 데이터에 액세스하고 처리한다. 모든 데이터는 TiKV 클러스터에 저장되므로 tidb-server는 처리 중에 데이터에 액세스하기 위해 tikv-server와 상호작용해야 한다. 마지막으로 tidb-server는 사용자에게 쿼리 결과를 반환해야 한다.&lt;/p&gt;
&lt;h2 id=&#34;마무리&#34;&gt;마무리&lt;/h2&gt;
&lt;p&gt;여기에서는 데이터가 어떻게 저장되고 조작에 사용되는지 SQL 관점에서 소개하였다. 앞으로는 최적화의 원리와 분산 실행 프레임워크의 상세 등 SQL 계층에 대한 정보를 소개할 예정이다. 다음에서는 PD, 특히 클러스터 관리 및 일정에 대한 정보를 소개한다.&lt;/p&gt;

      </description>
      
      <category>Database</category>
      
      <category>TiDB</category>
      
    </item>
    
    <item>
      <title>데이터 중심 애플리케이션 설계 | 02장. 데이터 모델과 질의 언어</title>
      <link>https://www.devkuma.com/docs/data-intensive-application/02/</link>
      <pubDate>Thu, 17 Feb 2022 00:00:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/data-intensive-application/02/</guid>
      <description>
        
        
        &lt;p&gt;&lt;em&gt;발표자 : 김정수, 박수민&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.devkuma.com/docs/data-intensive-application/02_ppt.pptx&#34;&gt;발표자료&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;챕터의-목적&#34;&gt;챕터의 목적&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;각 데이터 모델의 대한 차이점과 특성을 이해한다.&lt;/li&gt;
&lt;li&gt;만들고자 하는 애플리케이션에 어떠한 데이터 모델이 적절한지 판단할 수 있게 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rdb-vs-nosql&#34;&gt;RDB vs NoSQL&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2장에서는 데이터 모델의 차이점에만 집중한다.
&lt;ul&gt;
&lt;li&gt;그 외 것: 내결함성(5장), 동시성 처리(7장)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;NoSQL
&lt;ul&gt;
&lt;li&gt;스키마 유연성, 지역성에 기인한 더 나은 성능&lt;/li&gt;
&lt;li&gt;일부 애플리케이션의 경우, 애플리케이션에서 사용하는 데이터 구조와 더 가깝다&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;RDB
&lt;ul&gt;
&lt;li&gt;조인, N:1, N:N 관계를 잘 지원함&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;nosql&#34;&gt;NoSQL&lt;/h2&gt;
&lt;p&gt;문서와 비슷한 구조를 여러 테이블로 분리하는 관계형 기법의 문제점&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;다루기 힘든 스키마&lt;/li&gt;
&lt;li&gt;불필요하고 복합한 애플리케이션 코드 발생&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;문서-모델의-제한&#34;&gt;문서 모델의 제한&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;문서 내 중첩(nested) 항목을 바로 참조할 수 없다. (관계형은 관련된 key만 있다면 바로 참조 가능, 그러나 key를 찾기 위한 불필요한 선회가 발생할 수 도 있다.)
&lt;ul&gt;
&lt;li&gt;예) 사용자의 상세 주소를 참조해야할 경우
&lt;ul&gt;
&lt;li&gt;user.address.road.detail&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;중첩이 너무 깊지 않다면 일반적으로 문제가 되지 않는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;미흡한 조인 지원
&lt;ul&gt;
&lt;li&gt;애플리케이션의 경우에 따라 문제가 될 수도 아닐 수도 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;다대다 관계가 필요할 경우 비효율
&lt;ul&gt;
&lt;li&gt;애플리케이션의 복잡도가 증가&lt;/li&gt;
&lt;li&gt;애플리케이션에서 처리하는 것은 데이터베이스 내의 특화된 코드로 수행되는 것 보다 성능이 안 좋다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;

    &lt;p&gt;상호 연결이 많은 경우&lt;/p&gt;
&lt;p&gt;그래프 모델 &amp;gt; 관계형 모델 &amp;raquo;&amp;gt; 문서 모델&lt;/p&gt;


&lt;/div&gt;

&lt;h3 id=&#34;스미카-유연성&#34;&gt;스미카 유연성&lt;/h3&gt;
&lt;p&gt;특정 스키마를 강요하지 않는다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;임의의 키와 값을 문서에 추가할 수 있다.&lt;/li&gt;
&lt;li&gt;문서에 포함된 필드의 존애 여부를 보장하지 않는다.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;

    &lt;p&gt;스키마를 강요하지 않는 것이지 스키마가 없는 것이 아니다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;관계형 모델 = 쓰기 스키마(schema-on-write)
&lt;ul&gt;
&lt;li&gt;데이터 구조는 명시적&lt;/li&gt;
&lt;li&gt;데이터베이스는 모든 데이터가 스키마를 따르고 있음을 보장한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;문서형 모델 = 읽기 스키마(schema-on-read)
&lt;ul&gt;
&lt;li&gt;데이터 구조는 암묵적&lt;/li&gt;
&lt;li&gt;데이터를 읽을 때만 해석된다. (쓰기에는 아무런 제약이 없다.)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;p&gt;접근 방식에 따른 처리 방법 차이&lt;/p&gt;
&lt;p&gt;예) user에 first_name을 추가할 경우&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// 문서형 모델
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// 애플리케이션에서 데이터를 읽는 경우를 처리하는 코드만 있으면 된다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// (데이터베이스의 변경을 요구하지 않는 방법이지만 좋은 방법 같진 않다. 그냥 방법의 차이를 이해하는 정도로만 여기자.)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;if (user?.name &amp;amp;&amp;amp; user?.first_name == null) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user.first_name = user.name.split(&amp;#34; &amp;#34;)[0]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// 관계형 모델
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// 별도의 스키마 변경 및 데이터 마이그레이션 작업 필요
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ALTER TABLE users ADD COLUMN first_name test;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;UPDATE users SET first_name = substring_index(name, &amp;#39; &amp;#39;, 2);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;

    &lt;p&gt;스키마 변경은 느리고 중단시간을 요구한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;예외적으로 MySQL의 경우 스키마 변경은 성능이 매우 안 좋다.&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;



&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;

    &lt;p&gt;컬럼 추가의 경우 기존의 모든 레코드에 데이터가 없으므로&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;일단 nullable 속성으로 null 데이터를 가지게한 후&lt;/li&gt;
&lt;li&gt;데이터를 업데이트하고 (데이터베이스 크기가 큰 경우 업데이트 작업이 오래걸릴 수 있다.)&lt;/li&gt;
&lt;li&gt;다시 본래의 속성(nullable or non-null)로 변경해야 한다.&lt;/li&gt;
&lt;/ol&gt;


&lt;/div&gt;

&lt;h3 id=&#34;저장소-지역성&#34;&gt;저장소 지역성&lt;/h3&gt;
&lt;p&gt;지역성: 데이터, 프로그램 등에 대해서 특정 부분에 집중적으로 접근하는 성질&lt;/p&gt;
&lt;p&gt;자주 전체 문서에 접근해야 하는 경우 저장소 지역성 활용할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;정규화된 관계형 모델의 구조보다 역정규화된 문서형 모델의 구조가 성능상 이점이 있다
&lt;ul&gt;
&lt;li&gt;관계형 모델은 검색을 위해 다중 색인 검색이 필요 → 더 많은 디스크 탐색 필요 → 더 많은 시간 소요&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;한 번에 해당 문서의 많은 부분을 필요로 하는 경우에만 적용
&lt;ul&gt;
&lt;li&gt;문서형 모델에서는 작은 부분에만 접근해야 하는 경우에도 전체 문서를 저장해야 하기 때문에 큰 문서에서는 낭비일 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;일반적으로 문서를 최대한 작게 유지하면서 문서 크기의 증가를 최소화할 것을 권장&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;이러한 성능 제한 때문에 문서형 모델이 유용한 상황이 많이 줄어든다.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;

    &lt;p&gt;관계형 모델에서도 지역성이 적용된 개념이 존재한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;스패너(구글의 데이터베이스): 인터리브 테이블
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/spanner/docs/schema-and-data-model#creating-interleaved-tables&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://cloud.google.com/spanner/docs/schema-and-data-model#creating-interleaved-tables&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;오라클: 다중 테이블 색인 클러스터 테이블&lt;/li&gt;
&lt;li&gt;카산드라, HBase: 컬럼 패밀리&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;h2 id=&#34;rdb와-nosql의-통합&#34;&gt;RDB와 NoSQL의 통합&lt;/h2&gt;
&lt;p&gt;(서로 비슷한 기능을 제공한다는 의미)&lt;/p&gt;
&lt;p&gt;RDB&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL을 제외한 대부분의 RDB는 XML을 지원하여 문서형 모델과 매우 비슷한 데이터 모델을 사용할 수 있다.&lt;/li&gt;
&lt;li&gt;Postgre 9.3+, MySQL 5.7+, DB2 10.5+: JSON 문서에 대해 비슷한 기능을 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NoSQL&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;리싱크DB: 쿼리에서 관계형 조인을 지원&lt;/li&gt;
&lt;li&gt;몽고DB: 드라이버가 자동으로 데이터베이스 참조를 확인 (클라이언트에서 조인 수행, 네트워크 왕복이 추가로 필요, 최적화가 덜 되어 있어서 조인 성능이 좋지 않다)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;질의-언어query-language&#34;&gt;질의 언어(Query Language)&lt;/h2&gt;
&lt;h2 id=&#34;선언형-vs-명령형&#34;&gt;선언형 vs 명령형&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;SQL의 선언형&lt;/li&gt;
&lt;li&gt;IMS, 코다실의 명령형 (안 중요)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;선언형 질의 언어의 장점&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;알고자 하는 데이터의 패턴만 지정하면 된다. (어떤 색인과 조인 함수를 사용할지, 어떤 순서로 실행할 지는 데이터베이스의 질의 최적화가 할 일이다.)
&lt;ul&gt;
&lt;li&gt;충족해야 하는 조건&lt;/li&gt;
&lt;li&gt;데이터의 변환 (정렬, 그룹화, 집계 등)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;일반적으로 명령형 질의 API보다 더 간결하고 쉽게 작업할 수 있다.&lt;/li&gt;
&lt;li&gt;데이터베이스 엔진의 상세 구현이 추상화되어 있어서 쿼리를 변경하지 않고도 데이터베이스의 성능을 향상시킬 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;웹의 예제&lt;/p&gt;
&lt;p&gt;HTML에 style을 적용할 경우&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CSS는 선언형&lt;/li&gt;
&lt;li&gt;JS로 DOM API를 사용하는 것은 명령형&lt;/li&gt;
&lt;li&gt;선언형이 명령형보다 가독성, 생산성, 유지보수성에서 우수하다.&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;

    데이터베이스에서도 SQL같은 선언형 질의 언어가 명령형 질의 API보다 &amp;ldquo;훨씬&amp;rdquo; 좋다고 한다.

&lt;/div&gt;

&lt;h3 id=&#34;맵리듀스-질의&#34;&gt;맵리듀스 질의&lt;/h3&gt;
&lt;p&gt;(안 중요)&lt;/p&gt;
&lt;p&gt;함수형 프로그래밍에 있는 map, reduce 함수를 기반으로 한다.&lt;/p&gt;
&lt;p&gt;단점&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;질의를 작성하는 것 보다 어렵다&lt;/li&gt;
&lt;li&gt;선언형 질의 언어는 질의 최적화기가 질의 성능을 높일 수 있는 기회를 제공한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;몽고DB 2.2에서 집계 파이프라인(aggregate pipeline)이라는 선언형 질의 언어 지원을 추가하였다.&lt;/p&gt;
&lt;h2 id=&#34;그래프형-데이터-모델&#34;&gt;그래프형 데이터 모델&lt;/h2&gt;
&lt;p&gt;애플리케이션의 데이터 모델이 주로 1:N(트리 구조 데이터)거나 엔티티간 관계가 없다면 문서형 모델이 적합하다.&lt;/p&gt;
&lt;p&gt;그러나 N:N 관계가 매우 일반적인 경우라면 그래프형 모델이 적합하다.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;

    관계형 모델은 단순한 N:N 관계까지는 적합하나 그 이상의 복잡한 N:N 관계를 다루기에는 적합하지 않다. (복잡도가 상승)

&lt;/div&gt;

&lt;h3 id=&#34;그래프-구성-요소&#34;&gt;그래프 구성 요소&lt;/h3&gt;
&lt;p&gt;정점(Vertex, 혹은 노드나 엔티티)
SpringData에서는 노드엔티티라고 한다. (@NodeEntity)
간선(Edge 혹은 관계나 호(arc))&lt;/p&gt;
&lt;p&gt;예시)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;소셜 그래프
&lt;ul&gt;
&lt;li&gt;정점 = 사람, 간선 = 친구관계&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;웹 그래프
&lt;ul&gt;
&lt;li&gt;정점 = 웹페이지, 간선 = 링크&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;도로 네트워크
&lt;ul&gt;
&lt;li&gt;정점 = 교차로, 간선 = 도로&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;페이스북
&lt;ul&gt;
&lt;li&gt;여러 유형의 정점과 간선을 단일 그래프로 유지&lt;/li&gt;
&lt;li&gt;정점 = 사람, 장소, 이벤트, 체크인, 코멘트 등&lt;/li&gt;
&lt;li&gt;간선 = 사람간 관계, 체크인이 발생한 위치, 누가 어떤 포스트에 코멘트 했는지, 누가 이벤트에 참석했는지&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;만약 페이스북을 관계형 모델로 만든다면?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;사람, 장소, 이벤트, 체크인, 코멘트 등등이 모두 테이블로 정의될 것이다.&lt;/li&gt;
&lt;li&gt;그리고 각 테이블 간의 엄청 복잡한 관계들이 필요할 것이다.&lt;/li&gt;
&lt;li&gt;그래프 모델을 적용하는 순간 이러한 복잡성들이 단순화된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;그래프-모델의-종류&#34;&gt;그래프 모델의 종류&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;속성 그래프 모델&lt;/li&gt;
&lt;li&gt;트리플 저장소 모델 (안 중요)&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;그래프용-선언형-질의-언어&#34;&gt;그래프용 선언형 질의 언어&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;사이퍼(Cypher)&lt;/li&gt;
&lt;li&gt;스파클&lt;/li&gt;
&lt;li&gt;데이터로그&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;속성-그래프&#34;&gt;속성 그래프&lt;/h3&gt;
&lt;p&gt;정점의 구성 요소&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id&lt;/li&gt;
&lt;li&gt;유출(outgoing) 간선 집합&lt;/li&gt;
&lt;li&gt;유입(incoming) 간선 집합&lt;/li&gt;
&lt;li&gt;속성 컬렉션 (키-값 쌍)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;간선의 구성 요소&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;id&lt;/li&gt;
&lt;li&gt;간선이 시작하는 정점(tail vertex)&lt;/li&gt;
&lt;li&gt;간선이 끝나는 정점(head vertex)&lt;/li&gt;
&lt;li&gt;두 정점 간 관계 유형을 설명하는 레이블&lt;/li&gt;
&lt;li&gt;속성 컬렉션 (키-값 쌍)&lt;/li&gt;
&lt;/ul&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;

    간선의 방향은 tail -&amp;gt; head 방향이다 (그래서 tail이 시작, head가 끝)

&lt;/div&gt;

&lt;p&gt;관계형 스키마를 사용해 속성 그래프 표현하기&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vertices&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vertex_id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;integer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRIMARY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;properties&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;json&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;edges&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;edge_id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;integer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;PRIMARY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;KEY&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tail_vertex&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;integer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;REFERENCES&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vertices&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vertex_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;head_vertex&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;integer&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;REFERENCES&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vertices&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;vertex_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;text&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;properties&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;json&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;edges_tails&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;edges&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tail_vertex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;edges_heads&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;edges&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;head_vertex&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;정점은 다른 정점과 간선으로 연결된다
&lt;ul&gt;
&lt;li&gt;특정 유형과 관련 여부를 제한하는 스키마는 없다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;정점이 주어지면 정점의 유입과 유출 간선을 효율적으로 찾을 수 있고 그래프를 순회할 수 있다.&lt;/li&gt;
&lt;li&gt;다른 유형의 관계에 서로 다른 레이블을 사용하면 단일 그래프에 다른 유형의 정보를 저장하면서 데이터 모델을 깔끔하게 유지할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이런 기능을 통해 그래프는 데이터 모델링을 위한 많은 &lt;strong&gt;유연성&lt;/strong&gt;을 제공한다.&lt;/p&gt;
&lt;p&gt;그래프는 발전성이 좋아서 애플리케이션에 기능을 추가하는 경우 데이터 구조 변경을 수용하게끔 그래프를 쉽게 확장할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;사이퍼cypher&#34;&gt;사이퍼(Cypher)&lt;/h3&gt;
&lt;p&gt;속성 그래프를 위한 선언형 질의 언어&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;네오포제이(Neo4j) 그래프 데이터베이스용으로 만들어졌다.&lt;/li&gt;
&lt;li&gt;wiki: 사이퍼는 식으로 나타내는, 프로퍼티 그래프의 효율적인 질의 및 업데이트를 허용하는 선언형 그래프 질의어이다. 사이퍼는 상대적으로 단순하지만 매우 강력한 언어이다. 매우 복잡한 데이터베이스 쿼리들은 사이퍼를 통해 쉽게 표현이 가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;데이터 모델 생성&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-cypher&#34; data-lang=&#34;cypher&#34;&gt;CREATE
(NAmerica:Location {name:’North America’, type:’continent’}),
(USA:Location {name:’United States’, type:’country’}),
(Idaho:Location {name:’Idaho’, type:’state’}),
(Lucy:Person {name:’Lucy’}),
(Idaho) -[:WITHIN]-&amp;gt; (USA) -[:WITHIN]-&amp;gt; (NAmerica),
(Lucy) -[:BORN_IN]-&amp;gt; (Idaho)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;문제. 미국에서 유럽으로 이민 온 모든 사람들의 이름 찾기&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code class=&#34;language-cypher&#34; data-lang=&#34;cypher&#34;&gt;MATCH
(person) -[:BORN_IN]-&amp;gt; () -[:WITHIN*0..]-&amp;gt; (USA:Location {name:’United States’}),
(person) -[:LIVES_IN]-&amp;gt; () -[:WITHIN*0..]-&amp;gt; (EU:Location {name:’Europe’})
RETURN person.name
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;질의 실행 방법&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;모든 사람을 조회로 시작 -&amp;gt; 사람들의 출생지와 거주지를 확인 -&amp;gt; 맞는 사람들만 반환&lt;/li&gt;
&lt;li&gt;2개의 Location으로 시작 -&amp;gt; 미국과 유럽의 모든 위치 찾기를 진행 -&amp;gt; leaf 에 해당하는 정점 중 하나에 BORN_IN, LIVES_IN 유입 간선을 통해 발견된 사람들을 반환&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;선언형의 장점&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;수행 방법에 대해서 자세히 기술할 필요가 없음&lt;/li&gt;
&lt;li&gt;질의 최적화기가 알아서 가장 효율적인 전략을  자동으로 선택&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;관계형 모델에서 위의 쿼리를 한다면?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;가능하지만 어려움&lt;/li&gt;
&lt;li&gt;보통 관계형 모델에서는 쿼리에 필요한 조인을 미리 알고 있다. (FROM 절에서 선언)&lt;/li&gt;
&lt;li&gt;그러나 그래프 쿼리에서는 찾고자 하는 정점을 위해 여러 간선을 순회해야 한다.
&lt;ul&gt;
&lt;li&gt;순회가 몇 번 인지 모른다.&lt;/li&gt;
&lt;li&gt;조인 수를 미리 고정할 수 없다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;사이버 쿼리에서 &lt;code&gt;-[:WITHIN*0..]-&amp;gt;&lt;/code&gt; 로 순회를 매우 간결하게 표현한다. (*0은 0회 이상을 의미)&lt;/p&gt;
&lt;p&gt;SQL1999 이후로 가변 순회 경로에 대한 쿼리를 재귀 공통 테이블 식(Recursive common table expression, 이하 Recursive CTE)(WITH RECURSIVE 문)을 사용해 표현할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Postgre, DB2, Oracle, SQL Server에서 지원함&lt;/li&gt;
&lt;li&gt;MySQL 5.7+ 에서는 지원&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;트리플-저장소와-스파클&#34;&gt;트리플 저장소와 스파클&lt;/h3&gt;
&lt;p&gt;(안 중요)&lt;/p&gt;
&lt;p&gt;속성 그래프 모델과 거의 동일&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;단지 동일 개념에 대한 용어만 다르다&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;데이터를 주어(subject), 서술어(predicate), 목적어(object)로 매우 간단한 세 부분 구문(three-part statements) 형식으로 저장한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;주어 = 정점&lt;/li&gt;
&lt;li&gt;목적어 = 다른 정점 or primitive datatype의 데이터&lt;/li&gt;
&lt;li&gt;서술어 = 간선&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Turtle&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;wiki: Terse RDF Triple Language (Turtle)는 Resource Description Framework 데이터 모델에서 데이터를 표현하기 위한 구문 및 파일 형식입니다. Turtle 구문은 RDF 쿼리 언어인 SPARQL의 구문과 유사하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;스파클은 RDF 데이터 모델을 사용한 트리플 저장소 질의 언어이다.&lt;/p&gt;
&lt;h3 id=&#34;데이터-로그&#34;&gt;데이터 로그&lt;/h3&gt;
&lt;p&gt;데이터 모델이 트리플 저장소 모델과 유사&lt;/p&gt;
&lt;p&gt;주어, 서술어 목적어 -&amp;gt; 서술어(주어, 목적어)&lt;/p&gt;
&lt;h3 id=&#34;그래프-데이터베이스-순위&#34;&gt;그래프 데이터베이스 순위&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://db-engines.com/en/ranking/graph&amp;#43;dbms&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://db-engines.com/en/ranking/graph+dbms&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;한 줄 요약 : 그래프 데이터베이스를 사용하고 싶을 경우 Neo4J를 사용하면 된다.&lt;/p&gt;
&lt;h3 id=&#34;neo4j&#34;&gt;Neo4J&lt;/h3&gt;
&lt;p&gt;SpringData 지원&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://spring.io/guides/gs/accessing-data-neo4j/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://spring.io/guides/gs/accessing-data-neo4j/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;spring-boot-starter-data-neo4j
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-kotlin&#34; data-lang=&#34;kotlin&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@NodeEntity&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Food&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Id&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Long&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;FoodRepository&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Neo4jRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Food&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Long&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@NodeEntity&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;data&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Store&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Id&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Long&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;null&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;String&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#5c35cc;font-weight:bold&#34;&gt;@Relationship&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;type&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;has&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;val&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;foods&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Set&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Food&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;interface&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;StoreRepository&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Neo4jRepository&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;Store&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#000&#34;&gt;Long&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;summary&#34;&gt;Summary&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;역사적으로 데이터를 하나의 큰 트리로 표현하려고 노력&lt;/li&gt;
&lt;li&gt;N:N 관계 표현에 적절하지 않음 → 관계형 모델 등장&lt;/li&gt;
&lt;li&gt;최근(?) 관계형 모델에도 적합하지 않은 애플리케이션이 있다는 사실을 발견 → 비관계형 데이터 모델인 NoSQL 등장&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;NoSQL은 두 가지의 주요 갈래가 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;문서형 모델
&lt;ul&gt;
&lt;li&gt;모든 데이터가 문서에 포함하고 문서간의 관계가 거의 없는 경우 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;그래프형 모델
&lt;ul&gt;
&lt;li&gt;문서형 모델과 정반대로 모든 것이 잠재적으로 관련 있는 경우 사용&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;세 가지 모델 모두 현재 널리 사용&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;한 모델을 다른 모델로 흉내낼 수 있지만 대부분 그 결과는 엉망이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;문서형 모델, 그래프형 모델의 장점&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;저장할 데이터를 위한 스키마를 강제하지 않음 → 변화하는 요구사항에 맞춰 애플리케이션을 쉽게 변경할 수 있다.&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>NoSQL</category>
      
      <category>Data</category>
      
      <category>RDB</category>
      
    </item>
    
    <item>
      <title>MongoDB의 접근 제어(사용자 인증)를 활성화하는 방법</title>
      <link>https://www.devkuma.com/docs/mongodb/enable-auth-control/</link>
      <pubDate>Fri, 14 Jan 2022 08:53:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/mongodb/enable-auth-control/</guid>
      <description>
        
        
        &lt;p&gt;MongoDB는 초기 설정이 끝나면 액세스 제어없이 무제한으로 액세스 할 수 있다. 실제 운영으로 이대로 무제한 허가는 있을 수 없기 때문에, 액세스 제어(사용자 인증, 역할 제어)를 유효하게 해야 한다.&lt;/p&gt;
&lt;p&gt;여기에서는 가장 단순한 싱글 서버를 전제로 한 액세스 제어 방법에 대해 정리한다.&lt;/p&gt;
&lt;h2 id=&#34;사용자-관리에-관한-정보&#34;&gt;사용자 관리에 관한 정보&lt;/h2&gt;
&lt;p&gt;우선은 사용자 관리에 관한 각종 정보와 그 저장소에 대해 알아보겠다.&lt;/p&gt;
&lt;p&gt;사용자 정보가 저장된 데이터베이스는 &lt;code&gt;admin&lt;/code&gt;으로, &lt;code&gt;admin&lt;/code&gt; 데이터베이스의 &lt;code&gt;system.users&lt;/code&gt; 컬렉션에 사용자 정보가 존재한다.&lt;/p&gt;
&lt;p&gt;사용자 관리가 가능한 역할에는 &lt;code&gt;userAdmin&lt;/code&gt;과 &lt;code&gt;userAdminAnyDatabase&lt;/code&gt; 이렇게 두 가지 유형이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;userAdmin&lt;/code&gt;는 지정된 데이터베이스에 대해서만 사용자 관리를 수행할 수 있는 역할이다.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;userAdminAnyDatabase&lt;/code&gt;: 이 역할이 부여된 사용자는 모든 데이타베이스에 대한 사용자 관리를 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;사용자-인증-사용-절차&#34;&gt;사용자 인증 사용 절차&lt;/h2&gt;
&lt;p&gt;대략적인 절차는 다음과 같다. 기본적으로 MongoDB 서버에서 작업한다고 가정하여 명령을 작성한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;관리 사용자 추가&lt;/li&gt;
&lt;li&gt;MongoDB 재부팅&lt;/li&gt;
&lt;li&gt;일반 사용자 추가&lt;/li&gt;
&lt;li&gt;사용자 이름과 암호를 지정하여 데이터베이스에 연결&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;관리-사용자-추가&#34;&gt;관리 사용자 추가&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;액세스 제어없이 MongoDB 시작
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongod --dbpath &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;C:\data\db&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;MongoDB에 연결
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;사용자 관리자 만들기&lt;br&gt;
&lt;code&gt;admin&lt;/code&gt; 데이터베이스에 연결하여 다음 명령을 실행하여 사용자 관리자를 생성한다. 생성하고 있는 사용자 이름은 &lt;code&gt;admin&lt;/code&gt;이다.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;use admin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.createUser&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pwd: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    roles: &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        role: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;userAdminAnyDatabase&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        db: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;admin&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;mongodb-재부팅&#34;&gt;MongoDB 재부팅&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;MongoDB 서버를 액세스 제어로 재부팅
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongod --auth --dbpath &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;C:\data\db&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;※ MongoDB 구성 파일을 사용하여 기동하는 방법은 &lt;a href=&#34;#mongodb-%ea%b5%ac%ec%84%b1-%ed%8c%8c%ec%9d%bc-%ec%84%a4%ec%a0%95&#34;&gt;&amp;ldquo;MongoDB 구성 파일 설정&amp;rdquo;&lt;/a&gt;을 참조하자.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;일반-사용자-추가&#34;&gt;일반 사용자 추가&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;사용자 이름과 비밀번호를 지정하여 사용자 관리자로 MongoDB에 연결
액세스 제어를 활성화한 MongoDB에 연결하는 방법은 &amp;ldquo;MongoDB 연결과 동시에 인증하는 방법&amp;quot;과 &amp;ldquo;MongoDB 연결 후 사용자 인증하는 방법&amp;quot;이 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;MongoDB 연결과 동시에 인증하는 방법&lt;br&gt;
&lt;code&gt;mongo&lt;/code&gt; 명령의 &lt;code&gt;-u &amp;lt;username&amp;gt;&lt;/code&gt;, &lt;code&gt;-p &amp;lt;password&amp;gt;&lt;/code&gt;,&lt;code&gt;-authenticationDatabase &amp;lt;databasename&amp;gt;&lt;/code&gt; 옵션을 사용하여 연결한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongo -u &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt; -p &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; -authenticationDatabase &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;MongoDB 연결 후 사용자 인증하는 방법&lt;br&gt;
우선은 평소대로 MongoDB에 접속한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;인증이 필요한 데이터베이스로 전환하여 &lt;code&gt;db.auth(&amp;lt;username&amp;gt;, &amp;lt;password&amp;gt;)&lt;/code&gt; 메소드로 인증한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;use admin
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.auth&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;admin&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;일반적으로 데이터베이스에 액세스할 수 있는 사용자 만들기&lt;/p&gt;
&lt;p&gt;사용자 관리자를 만들고 액세스 제어를 활성화하면 권한이 없는 데이터베이스에는 액세스할 수 없다. 사용하는 각 데이터베이스마다 사용자를 만들어야 한다.&lt;/p&gt;
&lt;p&gt;아래에서는 &lt;code&gt;test&lt;/code&gt; 데이터베이스에 연결하여 &lt;code&gt;user1&lt;/code&gt; 사용자를 &lt;code&gt;readWrite&lt;/code&gt; 역할로 추가한다. 그 외에 역할은 아래의 &lt;a href=&#34;%22#%eb%82%b4%ec%9e%a5-%ec%97%ad%ed%95%a0%22&#34;&gt;내장 역할&lt;/a&gt;을 참조한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;use &lt;span style=&#34;color:#204a87&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.createUser&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;({&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    user: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;user1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pwd: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    roles: &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        role: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;readWrite&amp;#34;&lt;/span&gt;, db: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;})&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;사용자-이름과-암호를-지정하여-데이터베이스에-연결&#34;&gt;사용자 이름과 암호를 지정하여 데이터베이스에 연결&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;일반적으로 데이터베이스에 추가한 사용자로 연결
접속 방법은 관리 사용자의 액세스 방법과 같이 &amp;ldquo;MongoDB 접속과 동시에 인증하는 방법&amp;quot;과 &amp;ldquo;MongoDB 접속 후에 사용자 인증하는 방법&amp;quot;이 있다. 내용은 동일하기 때문에 자세한 내용은 생략한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MongoDB 연결과 동시에 인증하는 방법
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongo -u &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;user1&amp;#34;&lt;/span&gt; -p &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt; -authenticationDatabase &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;MongoDB 연결 후 사용자 인증하는 방법
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;use &lt;span style=&#34;color:#204a87&#34;&gt;test&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.auth&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;user1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;mongodb-구성-파일-설정&#34;&gt;MongoDB 구성 파일 설정&lt;/h3&gt;
&lt;p&gt;일반적으로 동작으로 생각하면 명령을 실행하여 MongoDB 서버를 시작하지 않는다. MongoDB 구성 파일에 기동 옵션을 지정하고, 그 구성 파일을 읽고 시작하는 작업이 될 것이다.&lt;/p&gt;
&lt;p&gt;여기에서는 액세스 제어를 활성화하는 MongoDB 구성 예제과 기동하는 명령은 아래와 같다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;mogodb.config&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemLog:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    destination: file
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    path: C:&lt;span style=&#34;color:#4e9a06&#34;&gt;\m&lt;/span&gt;ongodb&lt;span style=&#34;color:#4e9a06&#34;&gt;\s&lt;/span&gt;erver&lt;span style=&#34;color:#4e9a06&#34;&gt;\l&lt;/span&gt;og&lt;span style=&#34;color:#4e9a06&#34;&gt;\m&lt;/span&gt;ongod.log
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;security:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    authorization: enabled
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;storage:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dbPath: C:&lt;span style=&#34;color:#4e9a06&#34;&gt;\m&lt;/span&gt;ongodb&lt;span style=&#34;color:#4e9a06&#34;&gt;\s&lt;/span&gt;erver&lt;span style=&#34;color:#4e9a06&#34;&gt;\d&lt;/span&gt;ata
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;MongoDB 서버 시작&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongod --config &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;C:\data\mongod.config&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;※ MongoDB 구성 파일 옵션에 대한 자세한 내용은 &lt;a href=&#34;https://docs.mongodb.com/manual/reference/configuration-options/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Configuration File Options&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 참조한다.&lt;/p&gt;
&lt;h2 id=&#34;내장-역할&#34;&gt;내장 역할&lt;/h2&gt;
&lt;p&gt;MongoDB에는 몇 가지 기본 제공 역할이 있다. 여기에서는 그 중에서도 사용할 것 같은 것을 몇개 뽑아서 소개한다.&lt;/p&gt;
&lt;h3 id=&#34;데이터베이스-사용자-역할&#34;&gt;데이터베이스 사용자 역할&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;역할&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;read&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;모든 비시스템 콜렉션에 대한 읽기 권한과 &lt;code&gt;system.indexes.system.js&lt;/code&gt; 및 &lt;code&gt;system.namespaces&lt;/code&gt; 시스템 콜렉션에 대한 읽기 권한.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;readWrite&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;read&lt;/code&gt; 역할 외에 모든 비 시스템 콜렉션 변경 및 &lt;code&gt;system.js&lt;/code&gt; 시스템 콜렉션 변경 권한.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;데이터베이스-관리-역할&#34;&gt;데이터베이스 관리 역할&lt;/h3&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;역할&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbAdmin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;스키마에 대한 태스크, 인덱스, 통계 정보 취득 등의 관리 업무에 관한 권한.&lt;br&gt;이 권한에는 사용자 관리 또는 역할 관리에 대한 권한이 포함되지 않는다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;dbOwner&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;데이터베이스 관리자로서의 권한.&lt;br&gt;이 권한에는 &lt;code&gt;readWrite&lt;/code&gt;, &lt;code&gt;dbAdmin&lt;/code&gt;, &lt;code&gt;userAdmin&lt;/code&gt; 권한이 포함된다.&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;userAdmin&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;데이터베이스에 대한 사용자 및 역할을 관리하는 권한.&lt;br&gt;&lt;code&gt;userAdmin&lt;/code&gt;역할은 데이터베이스에 대한 액세스 권한을 자신을 포함하여 모든 사용자에게 부여할 수 있다. 따라서 &lt;code&gt;admin&lt;/code&gt; 데이터베이스의 &lt;code&gt;userAdmin&lt;/code&gt; 역할의 경우 수퍼 유저와 간접적으로 같은 의미가 된다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;참고-기사&#34;&gt;참고 기사&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/tutorial/enable-authentication/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Enable Auth&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/reference/built-in-roles/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Built-In Roles&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>NoSQL</category>
      
      <category>MongoDB</category>
      
    </item>
    
    <item>
      <title>MongoDB Docker 설치</title>
      <link>https://www.devkuma.com/docs/mongodb/installs/</link>
      <pubDate>Mon, 10 Jan 2022 08:53:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/mongodb/installs/</guid>
      <description>
        
        
        &lt;h2 id=&#34;mongodb-docker-설치&#34;&gt;MongoDB Docker 설치&lt;/h2&gt;
&lt;h3 id=&#34;mongodb-docker-이미지-다운로드&#34;&gt;MongoDB Docker 이미지 다운로드&lt;/h3&gt;
&lt;p&gt;아래 명령어를 실행하여 MongoDB Docker 이미지를 다운로드 한다. 태그에 버전을 지정하지 않으면 최신 버전을 다운로드 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull mongo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker pull mongo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Using default tag: latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;latest: Pulling from library/mongo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ea362f368469: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ecab26900ceb: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1847fcb70562: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a7de23811c0d: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;29dd51833fb9: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5eccd2be8afb: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd8a8cd6879f: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e6ca3abc397d: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7481c3682d3c: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;af377cb9eb7d: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Digest: sha256:6743836d42756b2ae50549b2eb4585c688fce81a243cedd152b56266c2fb3d17
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status: Downloaded newer image &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; mongo:latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker.io/library/mongo:latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MongoDB 버전을 지정하려면 태그에 버전을 지정해야 한다. 다운로드할 수 있는 MongoDB 버전은 &lt;a href=&#34;https://hub.docker.com/_/mongo/?tab=tags&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;docker hub&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에서 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;다음 명령어로 다운로드 받은 Docker 이미지를 확인한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker images
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker images
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;REPOSITORY                                      TAG            IMAGE ID       CREATED         SIZE
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongo                                           latest         ee13a1eacac9   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; days ago      696MB
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;mongodb-docker-컨테이너-생성-및-실행&#34;&gt;MongoDB Docker 컨테이너 생성 및 실행&lt;/h3&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker run --name my-mongodb -v ~/mongodb/db:/data/db -d -p 27017:27017 mongo
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;-v ~/mongodb/db:/data/db&lt;/code&gt;는 호스트(컨테이너를 구동하는 로컬 컴퓨터)의 &lt;code&gt;~/mongodb/db&lt;/code&gt; 디렉터리와 컨테이너의 &lt;code&gt;/data/db&lt;/code&gt; 디렉터리를 마운트시킨다. 이렇게 볼륨을 설정하지 않으면, 컨테이너가 삭제하면서 저장된 데이터도 삭제되기 때문이다. 한번 삭제된 컨테이터 데이터는 복구할 수 없다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker run --name my-mongodb -v ~/mongodb/db:/data/db -d -p 27017:27017 mongo
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ade97bdb08fde4eaa72ceb0135b0a570d97b21616affb7949a0fc479fec25e0e
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;mongodb-docker-컨테이너-시작중지재시작&#34;&gt;MongoDB Docker 컨테이너 시작/중지/재시작&lt;/h3&gt;
&lt;p&gt;MongoDB Docker 컨테이너 중지&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker stop my-mongodb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MongoDB Docker 컨테이너 시작&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker start my-mongodb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MongoDB Docker 컨테이너 재시작&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker restart my-mongodb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;mongodb-docker-컨테이너-실행-확인&#34;&gt;MongoDB Docker 컨테이너 실행 확인&lt;/h4&gt;
&lt;p&gt;다음 명령어를 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker ps -a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CONTAINER ID   IMAGE                                                  COMMAND                  CREATED          STATUS                      PORTS                                       NAMES
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ade97bdb08fd   mongo                                                  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;docker-entrypoint.s...&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;37&lt;/span&gt; seconds ago   Up &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;36&lt;/span&gt; seconds               0.0.0.0:27017-&amp;gt;27017/tcp                    my-mongodb
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;mongodb-docker-컨테이너-접속&#34;&gt;MongoDB Docker 컨테이너 접속&lt;/h4&gt;
&lt;p&gt;다음 명령어를 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#204a87&#34;&gt;exec&lt;/span&gt; -it my-mongodb bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker &lt;span style=&#34;color:#204a87&#34;&gt;exec&lt;/span&gt; -it my-mongodb bash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@ade97bdb08fd:/#
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>Database</category>
      
      <category>NoSQL</category>
      
      <category>MongoDB</category>
      
      <category>Docker</category>
      
    </item>
    
    <item>
      <title>Database Transaction (트랜잭션)</title>
      <link>https://www.devkuma.com/docs/rdbms/transaction/</link>
      <pubDate>Sun, 19 Dec 2021 01:05:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/rdbms/transaction/</guid>
      <description>
        
        
        &lt;h2 id=&#34;database-transaction트랜잭션이란&#34;&gt;Database Transaction(트랜잭션)이란?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;데이터베이스의 상태를 변화시키기 위해 수행하는 논리적인 작업의 단위이다.&lt;/li&gt;
&lt;li&gt;데이터베이스의 데이터를 조작하는 작업 단위(Unit of work)이다.&lt;/li&gt;
&lt;li&gt;트랜잭션에는 여러가지의 연산이 수행될 수 있다.&lt;/li&gt;
&lt;li&gt;트랜재션은 수행 중에 한 작업이라도 실패를 하면 전부 롤백이 이루어지고, 모두 성공하면 commit을 수행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;transaction-acid란&#34;&gt;Transaction ACID란?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;원자성(Atomicity)
&lt;ul&gt;
&lt;li&gt;하나의 트랜잭션이 작업이 그중에 일부분만 실행되거나 중단되지 않는 것을 보장해주는 것을 말한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;일관성(Consistency)
&lt;ul&gt;
&lt;li&gt;트랜잭션이 작업이 성공적으로 완료가 되더라도 작업 이전과 같이 같은 상태를 유지하는 것을 말한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;격리성(Isolation)
&lt;ul&gt;
&lt;li&gt;Trasaction 작업이 수행되고 있을 때 다른 작업이 끼어들지 못하도록 보장해주는 것을 말한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;지속성(Durability)
&lt;ul&gt;
&lt;li&gt;성공적으로 수행된 트랜잭션이 대해서는 영구히(Persistent) 반영되어야 함을 말한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;transaction을-사용시-주의할-점&#34;&gt;Transaction을 사용시 주의할 점&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;트랜잭션의 범위는 최소화한다.
&lt;ul&gt;
&lt;li&gt;트랜잭션의 범위를 최소화 하는 것이 중요하다.&lt;/li&gt;
&lt;li&gt;데이터베이스의 커넥션의 수는 한정적이기 때문에 커넥션을 보유하는 시간을 최소화해야할 필요가 있다.&lt;/li&gt;
&lt;li&gt;그렇지 않으면, 다른 서비스들은 해당 커넥션 사용을 위해 대기해야 할 상황이 발생한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;transaction-isolation-level의-종류-및-특징은-무엇인가&#34;&gt;Transaction isolation level의 종류 및 특징은 무엇인가?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;READ UNCOMMITTED
&lt;ul&gt;
&lt;li&gt;SELECT 쿼리 실행시에 다른 트랜잭션에서 COMMIT 되지 않은 데이터를 읽어올 수 있다.&lt;/li&gt;
&lt;li&gt;COMMIT 되지 않은 데이터를 읽는 현상을 Dirty read라고 말한다.&lt;/li&gt;
&lt;li&gt;INSERT만 진행되고 ROLLBACK 될 수 있는, 즉 COMMIT이 되지 않은 데이터를 읽을 수 있어 유의해야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;READ COMMITTED
&lt;ul&gt;
&lt;li&gt;COMMITTED에서는 COMMIT이 완료된 데이터만 SELECT시에 보이는 수준을 보장하는 Level이며, 대부분 DBMS에서 Read Committed를 기본으로 설정한다.&lt;/li&gt;
&lt;li&gt;Read Committed에서는 Read Uncommitted에서 발생하는 Dirty read가 발생하지 않도록 보장해 준다.&lt;/li&gt;
&lt;li&gt;트랜잭션에서 COMMIT을 수행하지 않더라도 DB에 이미 값이 반영이 되어있는 상태인데 COMMIT 이전의 데이터를 보장 받기 위해서는 COMMIT 되지 않은 쿼리를 복구하는 과정이 필요하게 된다. 즉, 이 시점에서는 Consistent Read를 수행해야 함을 의미한다.&lt;/li&gt;
&lt;li&gt;Read Committed의 문제는 하나의 트랜잭션 안에서 SELECT를 수행 할 때마다 데이터가 동일하다는 보장을 해주지 않는다. 그 이유는 다른 트랜젝션에서 해당 데이터를 COMMIT 했을 경우에는 COMMIT된 데이터를 반환해 주는게 Read Committed의 특징이기 때문이다.&lt;/li&gt;
&lt;li&gt;위와 같은 이유로 Read Committed를 Non-repeatable Read라고도 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;REPEATABLE READ
&lt;ul&gt;
&lt;li&gt;Read Committed와는 다르게 Repeatable Read는 한 트랜잭션 안에서 반복해서 SELECT를 수행하더라도 읽어 들이는 값이 변하지 않음을 보장한다.&lt;/li&gt;
&lt;li&gt;Repeatable Read 트랙잭션은 처음 SELECT를 수행한 시간을 기록한 뒤 그 이후에는 모든 SELECT마다 해당 시점을 기분으로 Consistent Read를 수행하여 준다.&lt;/li&gt;
&lt;li&gt;그러므로 트랜잭션 도중 다른 트랜잭션이 COMMIT되더라도 새로이 COMMIT된 데이터는 보이지 않게 된다.&lt;/li&gt;
&lt;li&gt;그 이유는 첫 SELECT 시에 생성된 SNAPSHOT을 읽기 때문이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SERIALIZABLE
&lt;ul&gt;
&lt;li&gt;Serializable은 모든 작업을 하나의 트랜잭션에서 처리하는 것과 같은 가장 높은 고립수준을 제공한다.&lt;/li&gt;
&lt;li&gt;Read Committed, Repeatable Read 두개의 공통적인 이슈는 Phantom Read가 발생한다는 점이다.
&lt;ul&gt;
&lt;li&gt;Phantom Read란?
&lt;ul&gt;
&lt;li&gt;하나의 트랜잭션에서 UPDATE 명령이 유실되거나 덮어써질수 있는 즉, UPDATE후 COMMIT하고 다시 조회를 했을때 예상과는 다른 값이 보이거나 데이터가 유실된 경우를 Phantom Read라고 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;그와 다르게 SERIALIZABLE에서는 SELECT 쿼리가 전부 SELECT &amp;hellip; FOR SHARE로 자동으로 변경되어 Repeatable Read에서 막을 수 없는 몇 가지 상황을 방지할 수 있게됩니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;commit과-rollback&#34;&gt;Commit과 Rollback&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Commit
&lt;ul&gt;
&lt;li&gt;하나의 트랜잭션이 끝났을 때, 완료된 것을 트랙잭션 관리자에게 알려준다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Rollback
&lt;ul&gt;
&lt;li&gt;하나의 트랜잭션 처리가 비정상적으로 종료되어 DB의 일괄성을 깨트렸을 때, 모든 연산을 취소시키는 것을 말한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>RDBMS</category>
      
      <category>Transaction</category>
      
    </item>
    
    <item>
      <title>Elasticsearch, Kibana, Cerebro 설치</title>
      <link>https://www.devkuma.com/docs/elasticsearch/install/</link>
      <pubDate>Fri, 03 Sep 2021 00:00:00 +0000</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/elasticsearch/install/</guid>
      <description>
        
        
        &lt;h2 id=&#34;다운로드-받아-설치&#34;&gt;다운로드 받아 설치&lt;/h2&gt;
&lt;h3 id=&#34;java-설치&#34;&gt;Java 설치&lt;/h3&gt;
&lt;p&gt;Elasticsearch는 JVM 상에서 동작하기 Java 8(JDK)이 설치가 되어 있어야 한다.&lt;/p&gt;
&lt;p&gt;설치가 되어 있지 않으면 먼저 JDK부터 설치를 하도록 하자.&lt;/p&gt;
&lt;p&gt;Java 8(JDK) 런타임 설치&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo yum install java-1.8.0-openjdk -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Java 8(JDK) 환경 설치&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo yum install java-1.8.0-openjdk-devel -y
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;자바 버전 확인한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ java -version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;openjdk version &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1.8.0_252&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OpenJDK Runtime Environment &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;build 1.8.0_252-b09&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;OpenJDK 64-Bit Server VM &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;build 25.252-b09, mixed mode&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;elasticsearch-설치&#34;&gt;Elasticsearch 설치&lt;/h3&gt;
&lt;p&gt;그럼 이제 Elasticsearch를 설치해 보자.&lt;/p&gt;
&lt;p&gt;먼저 설치 파일 다운로드한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ wget https://artifacts.elastic.co/downloads/kibana/kibana-7.14.1-linux-x86_64.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;다운 받은 파일을 압축 해제한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tar xvfz elasticsearch-7.14.1-linux-x86_64.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;디렉터리명 사용하기 편하게 짧게 변경한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mv files/elasticsearch-7.14.1-linux-x86_64/ es-714
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;bin 디렉터리로 이동한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; es-714/bin/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;기동 파일을 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./elasticsearch
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;kimkc@localhost bin&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;$ ./elasticsearch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;2021-09-02T21:45:57,952&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;INFO &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;o.e.n.Node               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;localhost.localdomain&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; version&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;7.14.1&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;, pid&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;116654&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;, build&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;default/tar/66b55ebfa59c92c15db3f69a335d500018b3331e/2021-08-26T09:01:05.390870785Z&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;, OS&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;Linux/4.18.0-338.el8.x86_64/amd64&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;, JVM&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;Eclipse Foundation/OpenJDK 64-Bit Server VM/16.0.2/16.0.2+7&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;2021-09-02T21:45:57,957&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;INFO &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;o.e.n.Node               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;localhost.localdomain&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; JVM home &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;/home/kimkc/es-714/jdk&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;, using bundled JDK &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;true&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;2021-09-02T21:45:57,958&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;INFO &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;o.e.n.Node               &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;localhost.localdomain&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; JVM arguments &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;-Xshare:auto, -Des.networkaddress.cache.ttl&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;60, -Des.networkaddress.cache.negative.ttl&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;10, -XX:+AlwaysPreTouch, -Xss1m, -Djava.awt.headless&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;true, -Dfile.encoding&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;UTF-8, -Djna.nosys&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;true, -XX:-OmitStackTraceInFastThrow, -XX:+ShowCodeDetailsInExceptionMessages, -Dio.netty.noUnsafe&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;true, -Dio.netty.noKeySetOptimization&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;true, -Dio.netty.recycler.maxCapacityPerThread&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;0, -Dio.netty.allocator.numDirectArenas&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;0, -Dlog4j.shutdownHookEnabled&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;false, -Dlog4j2.disable.jmx&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;true, -Djava.locale.providers&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;SPI,COMPAT, --add-opens&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;java.base/java.io&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;ALL-UNNAMED, -XX:+UseG1GC, -Djava.io.tmpdir&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;/tmp/elasticsearch-1671236956648459411, -XX:+HeapDumpOnOutOfMemoryError, -XX:HeapDumpPath&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;data, -XX:ErrorFile&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;logs/hs_err_pid%p.log, -Xlog:gc*,gc+age&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;trace,safepoint:file&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;logs/gc.log:utctime,pid,tags:filecount&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;32,filesize&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;64m, -Xms166m, -Xmx166m, -XX:MaxDirectMemorySize&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;87031808, -XX:G1HeapRegionSize&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;4m, -XX:InitiatingHeapOccupancyPercent&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;30, -XX:G1ReservePercent&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;15, -Des.path.home&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;/home/kimkc/es-714, -Des.path.conf&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;/home/kimkc/es-714/config, -Des.distribution.flavor&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;default, -Des.distribution.type&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;tar, -Des.bundled_jdk&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;true&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;2021-09-02T21:46:00,777&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;INFO &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;localhost.localdomain&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; loaded module &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;aggs-matrix-stats&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;2021-09-02T21:46:00,778&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;INFO &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;localhost.localdomain&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; loaded module &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;analysis-common&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;2021-09-02T21:46:00,778&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;INFO &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;localhost.localdomain&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; loaded module &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;constant-keyword&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;2021-09-02T21:46:00,779&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;INFO &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;localhost.localdomain&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; loaded module &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;frozen-indices&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;2021-09-02T21:46:00,779&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;INFO &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;][&lt;/span&gt;o.e.p.PluginsService     &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;localhost.localdomain&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt; loaded module &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;ingest-common&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;...이하 생략...
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;접속 여부 확인한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ curl -XGET localhost:9200
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -XGET localhost:9200
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;es-714&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;cluster_name&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;elasticsearch&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;cluster_uuid&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;8mO5vPIJQS-Eqa3PUvBVcA&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;version&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;7.14.1&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;build_flavor&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;default&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;build_type&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;tar&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;build_hash&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;66b55ebfa59c92c15db3f69a335d500018b3331e&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;build_date&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2021-08-26T09:01:05.390870785Z&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;build_snapshot&amp;#34;&lt;/span&gt; : false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;lucene_version&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;8.9.0&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;minimum_wire_compatibility_version&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;6.8.0&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;minimum_index_compatibility_version&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;6.0.0-beta1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;tagline&amp;#34;&lt;/span&gt; : &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;You Know, for Search&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;kimkc@es-714 ~&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같이 실행이 되었다면 무사히 설치된 거다.&lt;/p&gt;
&lt;h3 id=&#34;kibana-설치&#34;&gt;Kibana 설치&lt;/h3&gt;
&lt;p&gt;설치 파일 다운로드한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ wget https://artifacts.elastic.co/downloads/kibana/kibana-7.14.1-linux-x86_64.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;다운 받은 파일을 압축 해제한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tar xvfz kibana-7.14.1-linux-x86_64.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;디렉터리명 사용하기 편하게 짧게 변경한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mv files/kibana-7.14.1-linux-x86_64/ kb-714
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;bin 디렉터리로 이동한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; kb-714/bin/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;기동 파일을 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./kibana
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;docker에-설치&#34;&gt;Docker에 설치&lt;/h2&gt;
&lt;p&gt;간단히 학습이나 경험을 위한 것이라면, docker를 사용하여 설치하는 방법을 권장한다.&lt;/p&gt;
&lt;h3 id=&#34;elasticsearch-docker-설치&#34;&gt;Elasticsearch Docker 설치&lt;/h3&gt;
&lt;h4 id=&#34;elasticsearch-docker-이미지-다운로드&#34;&gt;Elasticsearch Docker 이미지 다운로드&lt;/h4&gt;
&lt;p&gt;다음 명령어를 실행하여 Elasticsearch Docker 이미지를 다운로드 받는다. 버전은 7.14.0을 받았다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull docker.elastic.co/elasticsearch/elasticsearch:7.14.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker pull docker.elastic.co/elasticsearch/elasticsearch:7.14.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7.14.0: Pulling from elasticsearch/elasticsearch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ddf49b9115d7: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;693712dd4782: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;e1843b23879c: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;43b0526f3562: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;395a8174c4c5: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;671bce37ebcd: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7b0bb020b357: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Digest: sha256:46815a329dfdf633cac9261e287c8440512db13554cbcb4fa89842dde58e74b2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status: Downloaded newer image &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; docker.elastic.co/elasticsearch/elasticsearch:7.14.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker.elastic.co/elasticsearch/elasticsearch:7.14.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;elasticsearch-docker-컨테이너-생성-및-실행&#34;&gt;Elasticsearch Docker 컨테이너 생성 및 실행&lt;/h4&gt;
&lt;p&gt;다음 명령어를 실행한다. 여기서 docker 컨테이너 이름은 &amp;ldquo;es714&amp;quot;로 하였다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d -p 9200:9200 -p 9300:9300 -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;discovery.type=single-node&amp;#34;&lt;/span&gt; --name es714 docker.elastic.co/elasticsearch/elasticsearch:7.14.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker run -d -p 9200:9200 -p 9300:9300 -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;discovery.type=single-node&amp;#34;&lt;/span&gt; --name es714 &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;docker.elastic.co/elasticsearch/elasticsearch:7.14.0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;](&lt;/span&gt;http://docker.elastic.co/elasticsearch/elasticsearch:7.14.0&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a3b75abf13c211cadf86637fe1c457b4b465556fc231a9a243362da49b117952
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h6 id=&#34;elasticsearch-docker-컨테이너-실행-확인&#34;&gt;Elasticsearch Docker 컨테이너 실행 확인&lt;/h6&gt;
&lt;p&gt;다음 명령어를 실행하여 컨테이너의 실행을 확인한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker ps
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker ps
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CONTAINER ID   IMAGE                                                  COMMAND                  CREATED              STATUS              PORTS                                                                                  NAMES
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a3b75abf13c2   docker.elastic.co/elasticsearch/elasticsearch:7.14.0   &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/bin/tini -- /usr/l...&amp;#34;&lt;/span&gt;   About a minute ago   Up About a minute   0.0.0.0:9200-&amp;gt;9200/tcp, :::9200-&amp;gt;9200/tcp, 0.0.0.0:9300-&amp;gt;9300/tcp, :::9300-&amp;gt;9300/tcp   es714
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;elasticsearch-docker-설정을-확인&#34;&gt;Elasticsearch Docker 설정을 확인&lt;/h4&gt;
&lt;p&gt;다음 명령어를 실행하여 설정을 확인한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#204a87&#34;&gt;exec&lt;/span&gt; -i -t es714 cat /usr/share/elasticsearch/config/elasticsearch.yml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker &lt;span style=&#34;color:#204a87&#34;&gt;exec&lt;/span&gt; -i -t es714 cat /usr/share/elasticsearch/config/elasticsearch.yml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cluster.name: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;docker-cluster&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;network.host: 0.0.0.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;kibana-docker-설치&#34;&gt;Kibana Docker 설치&lt;/h3&gt;
&lt;h4 id=&#34;kibana-docker-이미지-받아오기&#34;&gt;Kibana Docker 이미지 받아오기&lt;/h4&gt;
&lt;p&gt;다음 명령어를 실행하여 Kibana docker 이미지를 받아온다. 버전은 Elasticsearch와 동일하게 7.14.0을 받아야 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull docker.elastic.co/kibana/kibana:7.14.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker pull docker.elastic.co/kibana/kibana:7.14.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7.14.0: Pulling from kibana/kibana
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ddf49b9115d7: Already exists
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b62151c99641: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d11b460fe76c: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1078fcc7cd25: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c74f7ca3ab86: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;2fb0a75edcfc: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;339c3eb65140: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c359ec1d1586: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;7c0bddf401bf: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;59df587bba1b: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;34afeb086a05: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4de583c3a000: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;961084329244: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Digest: sha256:6408b11743abb2855e62406edb3cfd53848b97e48c65c0f4d843c427ccb3bb90
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status: Downloaded newer image &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; docker.elastic.co/kibana/kibana:7.14.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker.elastic.co/kibana/kibana:7.14.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;kibana-docker-컨테이너-생성-및-실행&#34;&gt;Kibana Docker 컨테이너 생성 및 실행&lt;/h4&gt;
&lt;p&gt;다음 명령어를 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d --link es714:elasticsearch -p 5601:5601 --name kb714 docker.elastic.co/kibana/kibana:7.14.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker run -d --link es714:elasticsearch -p 5601:5601 --name kb714 docker.elastic.co/kibana/kibana:7.14.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;becb75fdb608c119407ea37e1f75f54898d64683fdb76674b08e8c875e1fca77
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;kibana-docker-컨테이너-실행-확인&#34;&gt;Kibana Docker 컨테이너 실행 확인&lt;/h4&gt;
&lt;p&gt;아래 명령어를 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker ps
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker ps
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CONTAINER ID   IMAGE                                                  COMMAND                  CREATED             STATUS             PORTS                                                                                  NAMES
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;becb75fdb608   docker.elastic.co/kibana/kibana:7.14.0                 &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/bin/tini -- /usr/l...&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;13&lt;/span&gt; seconds ago      Up &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;12&lt;/span&gt; seconds      0.0.0.0:5601-&amp;gt;5601/tcp, :::5601-&amp;gt;5601/tcp                                              kb714
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a3b75abf13c2   docker.elastic.co/elasticsearch/elasticsearch:7.14.0   &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;/bin/tini -- /usr/l...&amp;#34;&lt;/span&gt;   About an hour ago   Up About an hour   0.0.0.0:9200-&amp;gt;9200/tcp, :::9200-&amp;gt;9200/tcp, 0.0.0.0:9300-&amp;gt;9300/tcp, :::9300-&amp;gt;9300/tcp   es714
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;kibana-설정을-확인&#34;&gt;Kibana 설정을 확인&lt;/h4&gt;
&lt;p&gt;다음 명령어를 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#204a87&#34;&gt;exec&lt;/span&gt; -i -t kb714 cat /usr/share/kibana/config/kibana.yml
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker &lt;span style=&#34;color:#204a87&#34;&gt;exec&lt;/span&gt; -i -t kb714 cat /usr/share/kibana/config/kibana.yml
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# ** THIS IS AN AUTO-GENERATED FILE **&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;# Default Kibana configuration for docker target&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;server.host: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;server.shutdownTimeout: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;5s&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;elasticsearch.hosts: &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://elasticsearch:9200&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;monitoring.ui.container.elasticsearch.enabled: true%
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;kibana-접속을-확인&#34;&gt;Kibana 접속을 확인&lt;/h4&gt;
&lt;p&gt;아래 URL를 브라우저에 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://localhost:5601/
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;아래와 같이 화면이 표시 되면 재대로 설치가 된 것이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/elasticsearch/elasticsearch_kibana.png&#34; alt=&#34;Kibana&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;cerebro-docker-설치&#34;&gt;Cerebro Docker 설치&lt;/h3&gt;
&lt;p&gt;Cerebro는 Elasticseacrh를 GUI로 볼 수 있는 또 다른 툴이다.&lt;/p&gt;
&lt;h4 id=&#34;cerebro-docker-이미지-받아오기&#34;&gt;Cerebro Docker 이미지 받아오기&lt;/h4&gt;
&lt;p&gt;다음 명령어를 실행하여 Cerebro Docker 이미지를 받아온다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull lmenezes/cerebro
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker pull lmenezes/cerebro
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Using default tag: latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;latest: Pulling from lmenezes/cerebro
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f7ec5a41d630: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;faf4c47c8c61: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;810072571faf: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;395682a2fa05: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;635a13f1552d: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Digest: sha256:95b02e46ec91c00ab33ce21f4d23bf6083d3c900257b9371a56ea218737462e5
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status: Downloaded newer image &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; lmenezes/cerebro:latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker.io/lmenezes/cerebro:latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;cerebro-docker-컨테이너-실행&#34;&gt;Cerebro Docker 컨테이너 실행&lt;/h4&gt;
&lt;p&gt;아래 명령어를 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -d -p 9000:9000 --link es714:localhost --name cerebro -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;CEREBRO_PORT=9000&amp;#34;&lt;/span&gt; -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ELASTICSEARCH_HOST=http://localhost:9200&amp;#34;&lt;/span&gt; lmenezes/cerebro
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행 결과는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker run -d -p 9000:9000 --link es714:localhost --name cerebro -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;CEREBRO_PORT=9000&amp;#34;&lt;/span&gt; -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ELASTICSEARCH_HOST=http://localhost:9200&amp;#34;&lt;/span&gt; lmenezes/cerebro
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;4f1c86c5e3156891cb129a841579f1ff6446c271c4fa53141c23c3d0004613f7
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;cerebro-실행을-확인&#34;&gt;Cerebro 실행을 확인&lt;/h4&gt;
&lt;p&gt;아래 URL를 브라우저에 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;http://localhost:9000
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;아래와 같은 화면이 나오면 Node address란에 &lt;code&gt;http://localhost:9200&lt;/code&gt;을 입력한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/elasticsearch/elasticsearch_cerebro_1.png&#34; alt=&#34;Cerebro&#34;&gt;&lt;/p&gt;
&lt;p&gt;아래와 같은 화면이 표시되었다면 제대로 설치가 된 것이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/elasticsearch/elasticsearch_cerabro_2.png&#34; alt=&#34;Cerebro&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;한번에-모두-제어하기&#34;&gt;한번에 모두 제어하기&lt;/h3&gt;
&lt;h4 id=&#34;docker-compose-파일-생성&#34;&gt;docker-compose 파일 생성&lt;/h4&gt;
&lt;p&gt;docker-compose-elastic.yml 파일을 생성하여 아래와 같이 작성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;version: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;3.6&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;services:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  elasticsearch:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    image: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;docker.elastic.co/elasticsearch/elasticsearch:7.14.0&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    container_name: es714
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ports:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;9200:9200&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;9300:9300&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    environment:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - node.name&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;es01&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - cluster.name&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;es-docker-cluster&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - bootstrap.memory_lock&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - discovery.type&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;single-node
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ES_JAVA_OPTS=-Xms4g -Xmx4g&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ulimits:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      memlock:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        soft: -1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hard: -1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    networks:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - elastic
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  kibana:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    image: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;docker.elastic.co/kibana/kibana:7.14.0&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    container_name: kb714
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ports:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;5601:5601&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    environment:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#000&#34;&gt;ELASTICSEARCH_HOSTS&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;http://es714:9200&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    depends_on:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - elasticsearch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    networks:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - elastic
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  cerebro:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    image: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;lmenezes/cerebro&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    container_name: &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;cerebro&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ports:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;9000:9000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    environment:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;CEREBRO_PORT=9000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;ELASTICSEARCH_HOST=http://es714:9200&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    networks:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      - elastic
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;volumes:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  data01:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver: &lt;span style=&#34;color:#204a87&#34;&gt;local&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  data02:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver: &lt;span style=&#34;color:#204a87&#34;&gt;local&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  data03:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver: &lt;span style=&#34;color:#204a87&#34;&gt;local&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;networks:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  elastic:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    driver: bridge
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;모두-실행-중지-제거&#34;&gt;모두 실행, 중지, 제거&lt;/h4&gt;
&lt;p&gt;실행 명령어&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker-compose -f docker-compose-elastic.yml up -d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;중지 명령어&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker-compose -f docker-compose-elastic.yml stop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;제거 명령어&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker-compose -f docker-compose-elastic.yml rm
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;각각-접속-확인&#34;&gt;각각 접속 확인&lt;/h4&gt;
&lt;p&gt;Elasticsearch 기동 여부를 확인한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;% chrome 127.0.0.1:9200
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Kibana 기동 여부를 확인한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;% chrome 127.0.0.1:5601
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Cerebro 기동 여부를 확인한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;% chrome 127.0.0.1:9000
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>Database</category>
      
      <category>NoSQL</category>
      
      <category>Elasticsearch</category>
      
      <category>Kibana</category>
      
      <category>Cerebro</category>
      
    </item>
    
    <item>
      <title>SQLite | SQLite 설치 | SQLite 커맨드 라인 도구 테스트</title>
      <link>https://www.devkuma.com/docs/sqlite/sqlite-cli/</link>
      <pubDate>Mon, 14 Oct 2019 23:19:51 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sqlite/sqlite-cli/</guid>
      <description>
        
        
        &lt;p&gt;다운로드 한 SQLite 커맨드 라인 도구를 실제로 사용해보고 동작 여부를 확인해 본다.&lt;/p&gt;
&lt;h2 id=&#34;커맨드-라인-도구로-데이터베이스와-테이블-만들기&#34;&gt;커맨드 라인 도구로 데이터베이스와 테이블 만들기&lt;/h2&gt;
&lt;p&gt;먼저 명령 프롬프트를 시작한다. PATH를 따로 설정하지 않았기에 sqlite3 실행 파일이 있는 디렉터리로 이동한다.&lt;/p&gt;
&lt;p&gt;데이터베이스를 만들어 보도록 하자. 커맨드 라인 도구를 사용하여 데이터베이스를 만들려면 다음 형식을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlite3 데이터베이스명
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;데이터베이스명을 지정하고 sqlite3 프로그램을 실행하면 이미 데이터베이스가 존재하는 경우는 지정된 이름의 데이터베이스에 연결하고 지정된 이름의 데이터베이스가 존재하지 않는 경우에는 새 데이터베이스를 생성한 다음에 연결한다.&lt;/p&gt;
&lt;p&gt;데이터베이스명은 뭐든 상관 없지만 지정된 데이터베이스명으로 파일이 생성된다. 예를 들어 sampledb.sqlite3 라든지 sampledb.db 라든지입니다. 확장자 없이 sampledb라도 괜찮다. 여기에서는 sample.sqlite3로 하겠다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlite3 sample.sqlite3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sqlite3 sample.sqlite3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SQLite version 3.19.3 2017-06-27 16:48:08
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Enter &amp;#34;.help&amp;#34; for usage hints.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlite&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;sample.sqlite3 라는 데이터베이스가 새로 작성되고 데이터베이스에 연결이 되었다. 그러나 실제로 파일이 만들어지는 것은 데이터베이스에 테이블와 같은 것을 작성했을 때이다. SQLite에 연결되어 있는 동안은 &lt;code&gt;sqlite&amp;gt;&lt;/code&gt; 프롬프트가 표시되어 있다.&lt;/p&gt;
&lt;p&gt;다음은 데이터베이스에서 테이블을 하나 만들려 보자. 다음과 같이 실행하도록 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;create&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;user&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sqlite3 sample.sqlite3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SQLite version 3.19.3 2017-06-27 16:48:08
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Enter &amp;#34;.help&amp;#34; for usage hints.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlite&amp;gt; create table user(id, name);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlite&amp;gt; 
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;테이블이 생성되었다. 이번에는 데이터베이스를 만들고 데이터베이스에 테이블을 만들어 보았다.&lt;/p&gt;
&lt;p&gt;데이터베이스와의 연결을 종료하려면 &amp;ldquo;.exit&amp;quot;를 입력한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.exit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sqlite3 sample.sqlite3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SQLite version 3.19.3 2017-06-27 16:48:08
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Enter &amp;#34;.help&amp;#34; for usage hints.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlite&amp;gt; create table user(id, name);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sqlite&amp;gt; .exit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;데이터베이스와의 연결이 끊겼다.&lt;/p&gt;
&lt;h2 id=&#34;데이터베이스가-저장된-파일&#34;&gt;데이터베이스가 저장된 파일&lt;/h2&gt;
&lt;p&gt;데이터베이스를 생성 한 후 테이블와 같은 것을 생성 했을 때에 데이터베이스 파일에 저장된다. 만들 위치를 따로 지정하지 않았기 때문에 sqlite3 실행 파일이 있는 디렉터리에 데이터베이스 파일이 생성되어 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ls
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sample.sqlite3   sqldiff          sqlite3          sqlite3_analyzer
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;sample.sqlite3라는 파일이 새로 생성있는 것을 볼 수 있다. 이 파일은 방금 만든 데이터베이스 sample.sqlite3에 대한 데이터가 저장되어있는 파일이다. 이렇게 SQLite는 데이터베이스마다 파일을 하나 (경우에 따라서는 여러 파일을 사용하는 경우도 있다) 생성하고 관리한다.&lt;/p&gt;

      </description>
      
      <category>SQLite</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>PostgreSQL | PostgreSQL 설치 | PATH 설정</title>
      <link>https://www.devkuma.com/docs/postgresql/path-%EC%84%A4%EC%A0%95/</link>
      <pubDate>Thu, 17 Aug 2017 10:31:25 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/postgresql/path-%EC%84%A4%EC%A0%95/</guid>
      <description>
        
        
        &lt;p&gt;명령 프롬프트에서 PostgreSQL에 연결하는 경우에는 PATH를 설정하면 편리하다. 여기에서는 여기에 PATH의 설정 방법에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;path-설정&#34;&gt;PATH 설정&lt;/h2&gt;
&lt;p&gt;명령 라인으로 실행하는 PostgreSQL 프로그램은 PostgreSQL을 설치 한 디렉터리 안에서 bin 디렉터리에 포함되어 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\Program&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; Files\PostgreSQL\12\bin&amp;gt;dir/w&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C 드라이브의 볼륨에는 이름이 없습니다.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 볼륨 일련 번호: XXXX-XXXX
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; C:\Program Files\PostgreSQL\12\bin 디렉터리
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[.]                           [..]                          clusterdb.exe                 createdb.exe
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;createuser.exe                dropdb.exe                    dropuser.exe                  ecpg.exe
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;icudt53.dll                   icuin53.dll                   icuio53.dll                   icule53.dll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;iculx53.dll                   icutest53.dll                 icutu53.dll                   icuuc53.dll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;initdb.exe                    isolationtester.exe           libcrypto-1_1-x64.dll         libcurl.dll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libcurl.lib                   libecpg.dll                   libecpg_compat.dll            libiconv-2.dll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libintl-8.dll                 libpgtypes.dll                libpq.dll                     libssl-1_1-x64.dll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;libwinpthread-1.dll           libxml2.dll                   libxslt.dll                   oid2name.exe
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pgbench.exe                   pg_archivecleanup.exe         pg_basebackup.exe             pg_checksums.exe
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pg_config.exe                 pg_controldata.exe            pg_ctl.exe                    pg_dump.exe
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pg_dumpall.exe                pg_isolation_regress.exe      pg_isready.exe                pg_receivewal.exe
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pg_recvlogical.exe            pg_regress.exe                pg_regress_ecpg.exe           pg_resetwal.exe
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pg_restore.exe                pg_rewind.exe                 pg_standby.exe                pg_test_fsync.exe
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pg_test_timing.exe            pg_upgrade.exe                pg_waldump.exe                postgres.exe
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;psql.exe                      reindexdb.exe                 stackbuilder.exe              vacuumdb.exe
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vacuumlo.exe                  wxbase28u_net_vc_custom.dll   wxbase28u_vc_custom.dll       wxbase28u_xml_vc_custom.dll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wxmsw28u_adv_vc_custom.dll    wxmsw28u_aui_vc_custom.dll    wxmsw28u_core_vc_custom.dll   wxmsw28u_html_vc_custom.dll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wxmsw28u_xrc_vc_custom.dll    zic.exe                       zlib1.dll
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;              69개 파일          56,286,000 바이트
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               2개 디렉터리  442,429,300,736 바이트 남음
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;C&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#f57900&#34;&gt;\Program&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt; Files\PostgreSQL\12\bin&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그러면 PATH를 설정해보도록 하자. 여기서는 Windows10 환경에서 설정하려고 한다.&lt;/p&gt;
&lt;p&gt;먼저, 탐색기창을 열어서 &amp;ldquo;내 PC&amp;quot;를 선택하고 마우스 오른쪽 버튼을 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_path_1.png&#34; alt=&#34;Postgresql path&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;시스템&amp;quot;화면이 표시되면 왼쪽 메뉴에 &amp;ldquo;고급 시스템 설정&amp;quot;을 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_path_2.png&#34; alt=&#34;Postgresql path&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;시스템 속성&amp;quot;화면이 표시되면 아래 부근에 &amp;ldquo;환경 변수&amp;quot;를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_path_3.png&#34; alt=&#34;Postgresql path&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;환경 변수 편집&amp;rdquo; 화면이 표시되는데 이 화면에서 PATH을 설정한다.&lt;/p&gt;
&lt;p&gt;&amp;ldquo;시스템 변수&amp;quot;에서 &amp;ldquo;변수&amp;quot;가 &amp;ldquo;Path&amp;quot;라고 쓰여진 것이 있는지를 찾는다. 찾았으면 &amp;ldquo;Path&amp;quot;라고 적힌 부분을 한 번 클릭하여 선택하고 &amp;ldquo;편집&amp;rdquo; 버튼을 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_path_4.png&#34; alt=&#34;Postgresql path&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;환경 변수 편집&amp;rdquo; 화면이 표시된다.&lt;/p&gt;
&lt;p&gt;오른쪽 상단의 &amp;lsquo;새로 만들기&amp;rsquo;를 클릭하면 왼쪽 목록의 마지막에 새로운 항목을 추가 할 수 있게 되고 여기에 PostgreSQL의 bin 디렉터리리인 &amp;ldquo;C:\Program Files\PostgreSQL\12&amp;rdquo; 을 입력한다. (설치된 PostgreSQL의디렉터리에 맞게 입력한다). 입력이 끝나면 &amp;ldquo;확인&amp;quot;를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_path_5.png&#34; alt=&#34;Postgresql path&#34;&gt;&lt;/p&gt;
&lt;p&gt;이것으로 PATH 설정에 PostgreSQL로 사용하는 PATH를 추가가 완료되었다.&lt;/p&gt;
&lt;h2 id=&#34;path가-제대로-설정되었는지-확인&#34;&gt;PATH가 제대로 설정되었는지 확인&lt;/h2&gt;
&lt;p&gt;그럼 설정이 잘되어 있는 확인해 보자.  PATH 설정을 한 이후에는 명령 프롬프트를 새로 실행하여 열지 않으면 설정이 적용되지 않기에 명령 프롬프트를 새로 열도록 한다. 그리고 다음과 같이 실행한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ psql --version
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\&amp;gt;psql --version
psql (PostgreSQL) 12.2

C:\&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;PostgreSQL 버전이 표시되면 PATH 설정은 제대로 된것이다.&lt;/p&gt;
&lt;p&gt;혹시 아래와 같이 &amp;ldquo;&amp;lsquo;psql&amp;rsquo;은(는) 내부 또는 외부 명령, 실행할 수 있는 프로그램, 또는 배치 파일이 아닙니다.&amp;ldquo;라고 표시된다면 PATH 설정이 제대로 되지 않은 것이니 다시 확인해 보도록 한다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\&amp;gt;psql --version
&amp;#39;psql&amp;#39;은(는) 내부 또는 외부 명령, 실행할 수 있는 프로그램, 또는
배치 파일이 아닙니다.

C:\&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;PostgreSQL를 명령 라인에서 사용을 하기 위한 PATH를 설정하는 방법에 대해 설명하였다.&lt;/p&gt;

      </description>
      
      <category>PostgreSQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>MySQL</title>
      <link>https://www.devkuma.com/docs/mysql/</link>
      <pubDate>Mon, 07 Aug 2017 21:01:44 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/mysql/</guid>
      <description>
        
        
        &lt;p&gt;MySQL은 전 세계적으로 널리 이용되고 있는 데이터베이스의 하나로 현재 Oracle에서 개발이 진행하고 있다. 여기에서 MySQL을 앞으로 사용하시는 분들을 대상으로 한 MySQL 소개하려고 한다. MySQL을 로컬 환경에 설치하는 방법과 MySQL을 사용하여 데이터베이스, 테이블, 사용자 트리거 등을 만드는 방법에 대해 간단한 예제를 사용하여 직접 체험하면서 하나 하나 설명하는 것이다.&lt;/p&gt;

      </description>
      
      <category>MySQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>MySQL | 버전 확인</title>
      <link>https://www.devkuma.com/docs/mysql/version/</link>
      <pubDate>Mon, 07 Aug 2017 21:01:44 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/mysql/version/</guid>
      <description>
        
        
        &lt;p&gt;MySQL의 버전을 확인하기 위해서는 커맨드로 확인 하는 방법과 쿼리로 확인하는 방법이 있다.&lt;/p&gt;
&lt;h2 id=&#34;command로-확인하는-방법&#34;&gt;Command로 확인하는 방법&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cd /usr/local/mysql/bin
$ ./mysql -V
./mysql  Ver 14.14 Distrib 5.6.17, for osx10.7 (x86_64) using  EditLine wrapper
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;또는&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ ./mysql --version
./mysql  Ver 14.14 Distrib 5.6.17, for osx10.7 (x86_64) using  EditLine wrapper
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;위에 커맨드 명령어는 엄밀히 말하면 mysql 클라이언트의 버전을 체크하는 방법이기에 버전 외에 설치된 클라이언트 정보도 같이 표시된다.&lt;/p&gt;
&lt;h2 id=&#34;query로-확인하는-방법&#34;&gt;Query로 확인하는 방법&lt;/h2&gt;
&lt;p&gt;서버에 접속하여 아래와 같이 쿼리로 실행시킨다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql&amp;gt; SELECT VERSION();
+-----------+
| VERSION() |
+-----------+
| 5.6.17    |
+-----------+
1 row in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;또는&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;mysql&amp;gt; SHOW VARIABLES LIKE &amp;#39;%VERSION%&amp;#39;;
+-------------------------+------------------------------+
| Variable_name           | Value                        |
+-------------------------+------------------------------+
| innodb_version          | 5.6.17                       |
| protocol_version        | 10                           |
| slave_type_conversions  |                              |
| version                 | 5.6.17                       |
| version_comment         | MySQL Community Server (GPL) |
| version_compile_machine | x86_64                       |
| version_compile_os      | osx10.7                      |
+-------------------------+------------------------------+
7 rows in set (0.00 sec)
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>MySQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DDL : 데이터 정의 언어</title>
      <link>https://www.devkuma.com/docs/sql/ddl--%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%95%EC%9D%98-%EC%96%B8%EC%96%B4/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/ddl--%EB%8D%B0%EC%9D%B4%ED%84%B0-%EC%A0%95%EC%9D%98-%EC%96%B8%EC%96%B4/</guid>
      <description>
        
        
        &lt;p&gt;DDL(Data Definition Language) 는 데이터 베이스 스키마를 정의 하거나 조작하기 위해 사용한다. SCHEMA, DOMAIN, TABLE, VIEW, INDEX 를 다음 명령어로 정의, 변경, 삭제한다.&lt;/p&gt;

      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>TiDB 로컬 설치 - 테스트 환경 구축</title>
      <link>https://www.devkuma.com/docs/tidb/install/linux/</link>
      <pubDate>Mon, 31 Oct 2022 22:12:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tidb/install/linux/</guid>
      <description>
        
        
        &lt;h2 id=&#34;로컬-테스트-클러스터-구축&#34;&gt;로컬 테스트 클러스터 구축&lt;/h2&gt;
&lt;p&gt;시나리오: 단일 macOS 또는 Linux 서버를 사용하여 테스트를 위해 로컬 TiDB 클러스터를 신속하게 구축한다. 이러한 클러스터를 배포하면 TiDB의 기본 아키텍처와 TiDB, TiKV, PD 및 모니터링 구성 요소와 같은 구성 요소 작업을 학습할 수 있다.&lt;/p&gt;
&lt;p&gt;분산 시스템으로서 기본적인 TiDB 테스트 클러스터는 일반적으로 2개의 TiDB 인스턴스, 3개의 TiKV 인스턴스, 3개의 PD 인스턴스 및 선택적 TiFlash 인스턴스로 구성된다. TiUP Playground를 사용하면, 다음 단계를 수행하여 테스트 클러스터를 신속하게 구축할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;1-tiup를-다운로드하여-설치한다&#34;&gt;1. TiUP를 다운로드하여 설치한다.&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl --proto &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;=https&amp;#39;&lt;/span&gt; --tlsv1.2 -sSf https://tiup-mirrors.pingcap.com/install.sh &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;다음 메시지가 나타나면 TiUP가 성공적으로 설치되었다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Successfully &lt;span style=&#34;color:#204a87&#34;&gt;set&lt;/span&gt; mirror to https://tiup-mirrors.pingcap.com
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Detected shell: zsh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Shell profile:  /Users/user/.zshrc
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/Users/user/.zshrc has been modified to add tiup to PATH
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;open a new terminal or &lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; /Users/user/.zshrc to use it
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Installed path: /Users/user/.tiup/bin/tiup
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===============================================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Have a try:     tiup &lt;span style=&#34;color:#000&#34;&gt;playground&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;===============================================&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 출력의 쉘 프로파일 경로에 기억하도록 하자. 다음 단계에서 경로를 사용해야 한다.&lt;/p&gt;
&lt;p&gt;설치 후 TiUP는 해당하는 셸 프로필 파일의 절대 경로를 표시한다. 경로에 따라 다음 &lt;code&gt;source&lt;/code&gt; 명령에서 &lt;code&gt;${your_shell_profile}&lt;/code&gt;을 변경해야 한다. 이 경우 1단계의 출력에서 &lt;code&gt;${your_shell_profile}&lt;/code&gt;는 &lt;code&gt;/Users/user/.zshrc&lt;/code&gt;이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;source&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;${&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;your_shell_profile&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;2-현재-세션에서-클러스터를-시작한다&#34;&gt;2. 현재 세션에서 클러스터를 시작한다.&lt;/h2&gt;
&lt;p&gt;단일 TiDB 인스턴스, 단일 TiKV 인스턴스, 단일 PD 인스턴스 및 단일 TiFlash 인스턴스에서 최신 버전의 TiDB 클러스터를 시작하려면 다음 명령을 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tiup playground
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;TiDB 버전과 각 컨포넌트 요소의 인스턴스 수를 지정하려면 다음과 유사한 명령을 실행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tiup playground v6.1.0 --db &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt; --pd &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt; --kv &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;이 명령은 v6.1.0과 같은 버전 클러스터를 로컬 컴퓨터에 다운로드하여 기동한다. 최신 버전을 보려면 &lt;code&gt;tiup list tidb&lt;/code&gt;을 실행한다.&lt;/p&gt;
&lt;p&gt;이 명령은 클러스터에 액세스하는 방법을 반환한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CLUSTER START SUCCESSFULLY, Enjoy it ^-^
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To connect TiDB: mysql --comments --host 127.0.0.1 --port &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4001&lt;/span&gt; -u root -p &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;no password&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To connect TiDB: mysql --comments --host 127.0.0.1 --port &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4000&lt;/span&gt; -u root -p &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;no password&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To view the dashboard: http://127.0.0.1:2379/dashboard
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PD client endpoints: &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;127.0.0.1:2379 127.0.0.1:2382 127.0.0.1:2384&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To view Prometheus: http://127.0.0.1:9090
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;To view Grafana: http://127.0.0.1:3000
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;

    &lt;ul&gt;
&lt;li&gt;v5.2.0부터 TiDB는 Apple M1 칩을 사용하는 컴퓨터에서 &lt;code&gt;tiup playground&lt;/code&gt;의 실행을 지원한다.&lt;/li&gt;
&lt;li&gt;이러한 방식으로 실행되는 플레이 그라운드의 경우, 테스트 배포가 완료된 후에는 TiUP은 원래 클러스터 데이터를 정리한다. 명령을 다시 실행하면 새 클러스터가 검색됩니다.&lt;/li&gt;
&lt;li&gt;데이터를 스토리지에 보관하려면 다음 &lt;code&gt;tiup --tag &amp;lt;your-tag&amp;gt; playground ...&lt;/code&gt;을 수행한다. 자세한 내용은 TiUP 참조 가이드를 참조한다.&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;h3 id=&#34;3-tidb에-액세스하기-위한-새-세션을-시작한다&#34;&gt;3. TiDB에 액세스하기 위한 새 세션을 시작한다.&lt;/h3&gt;
&lt;p&gt;TiUP 클라이언트를 사용하여 TiDB에 연결한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tiup client
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;처음 실행을 하면 아래와 같이 필요한 클라이언트가 설치되는 것을 볼 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;kimkc@localhost ~&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;$ tiup client
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tiup is checking updates &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; component client ...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;A new version of client is available:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The latest version:         v1.11.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Local installed version:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Update current component:   tiup update client
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Update all components:      tiup update --all
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;The component &lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;client&lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt; version  is not installed&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; downloading from repository.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;download https://tiup-mirrors.pingcap.com/client-v1.11.0-linux-amd64.tar.gz 49.3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;download https://tiup-mirrors.pingcap.com/client-v1.11.0-linux-amd64.tar.gz 304.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;download https://tiup-mirrors.pingcap.com/client-v1.11.0-linux-amd64.tar.gz 644.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;download https://tiup-mirrors.pingcap.com/client-v1.11.0-linux-amd64.tar.gz 1.45
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;download https://tiup-mirrors.pingcap.com/client-v1.11.0-linux-amd64.tar.gz 2.38
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;download https://tiup-mirrors.pingcap.com/client-v1.11.0-linux-amd64.tar.gz 3.87
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;download https://tiup-mirrors.pingcap.com/client-v1.11.0-linux-amd64.tar.gz 4.49
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MiB / 4.49 MiB 100.00% 4.24 MiB/s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Starting component &lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;client&lt;span style=&#34;color:#4e9a06&#34;&gt;`&lt;/span&gt;: /home/kimkc/.tiup/components/client/v1.11.0/tiup-client
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;kimkc@localhost ~&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]&lt;/span&gt;$
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그리고, 아래와 같이 엔드포인트 선택 화면이 나온다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;┌─Choose a endpoint to connect─────────────────────────────────────────────────┐
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│ TLr4XQE mysql://root@127.0.0.1:4000                                          │
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;│ TLr4XQE mysql://root@127.0.0.1:4001                                          │
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;└──────────────────────────────────────────────────────────────────────────────┘
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;선택은 녹색 항목에서 엔터를 누르면 된다. 여기서는 4000을 선택하였다.&lt;/p&gt;
&lt;p&gt;그러면, 아래와 같은 콘솔이 나올 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my:root@127.0.0.1:4000=&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MySQL과 친화력이 좋아서 그런건지 &lt;code&gt;my&lt;/code&gt;라는 단어가 눈에 들어온다.&lt;/p&gt;
&lt;p&gt;그럼, 여기서 mysql 명령어인 &lt;code&gt;show databases;&lt;/code&gt; 명령을 실행해 보자.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;my:root@127.0.0.1:4000=&amp;gt; show databases;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Database
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;--------------------
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;INFORMATION_SCHEMA
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;METRICS_SCHEMA
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;PERFORMANCE_SCHEMA
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;test
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(5 rows)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;그러면, 위와 같이 표시되는 것을 볼 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;MySQL 클라이언트를 사용하여 TiDB에 연결할 수도 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql --host 127.0.0.1 --port &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4000&lt;/span&gt; -u root
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;3-그밖에-접속-확인&#34;&gt;3. 그밖에 접속 확인&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;http://127.0.0.1:9090 에서 TiDB의 Prometheus 대시보드에 액세스한다.&lt;/li&gt;
&lt;li&gt;TiDB 대시보드 http://127.0.0.1:2379/dashboard 에 액세스한다.
&lt;ul&gt;
&lt;li&gt;기본 사용자명은 &lt;code&gt;root&lt;/code&gt;이고, 비밀번호는 비어 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;http://127.0.0.1:3000 에서 TiDB Grafana 대시보드에 액세스한다.
&lt;ul&gt;
&lt;li&gt;기본 사용자명과 비밀번호는 모두 &lt;code&gt;admin&lt;/code&gt; 이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(선택 사항) 분석용 데이터를 TiFlash에 로드한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;4-테스트-배포-후에-클러스터를-정리한다&#34;&gt;4. 테스트 배포 후에 클러스터를 정리한다.&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;Control+C&lt;/code&gt;를 눌러 위의 TiDB 서비스를 중지한다.&lt;/li&gt;
&lt;li&gt;서비스가 중지되면 다음 명령을 실행한다.&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;tiup clean --all
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;

    TiUP Playground는 기본적으로 &lt;code&gt;127.0.0.1&lt;/code&gt;를 수신 대기하며, 서비스는 로컬에서만 액세스할 수 있다. 서비스를 외부에서 액세스할 수 있게 하려면 &lt;code&gt;--host&lt;/code&gt; 매개 변수를 사용하여 수신 주소를 지정하고 네트워크 인터페이스 카드(NIC)를 외부에서 액세스할 수 있는 IP 주소에 바인딩한다.

&lt;/div&gt;

&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.pingcap.com/tidb/stable/quick-start-with-tidb&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Quick Start Guide for the TiDB Database Platform&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>TiDB</category>
      
    </item>
    
    <item>
      <title>TiDB의 SQL 살펴보기</title>
      <link>https://www.devkuma.com/docs/tidb/basic-sql-operations/</link>
      <pubDate>Fri, 02 Sep 2022 15:38:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tidb/basic-sql-operations/</guid>
      <description>
        
        
        &lt;p&gt;TiDB는 MySQL과 호환되며 대부분의 경우 MySQL 문을 직접 사용할 수 있다. 지원되지 않는 기능에 대한 자세한 내용은 &lt;a href=&#34;https://www.devkuma.com/docs/tidb/mysql-compatibility/&#34;&gt;MySQL과의 호환성&lt;/a&gt;을 참조하여라.&lt;/p&gt;
&lt;p&gt;SQL을 실험해 보고 MySQL 쿼리와의 TiDB 호환성을 테스트하려면 &lt;a href=&#34;https://tour.tidb.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiDB를 설치하지 않고 웹 브라우저&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에서 직접 실행할 수 있다. 먼저 TiDB 클러스터를 배포한 다음 SQL 문을 실행할 수도 있다.&lt;/p&gt;
&lt;p&gt;이 페이지에서는 DDL, DML, CRUD 작업과 같은 기본 TiDB SQL 문에 대해 설명한다. TiDB 문의 전체 목록은 &lt;a href=&#34;https://pingcap.github.io/sqlgram/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiDB SQL 구문 다이어그램&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;을 참조하여라.&lt;/p&gt;
&lt;h2 id=&#34;카테고리&#34;&gt;카테고리&lt;/h2&gt;
&lt;p&gt;SQL은 함수에 따라 다음 네 가지 유형으로 나눤다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DDL(데이터 정의 언어): 데이터베이스, 테이블, 뷰, 인덱스 등과 같은 데이터베이스 개체를 정의하는데 사용된다.&lt;/li&gt;
&lt;li&gt;DML(Data Manipulation Language): 응용 프로그램 관련 레코드를 조작하는데 사용된다.&lt;/li&gt;
&lt;li&gt;DQL(Data Query Language): 조건부 필터링 후 레코드를 쿼리하는데 사용된다.&lt;/li&gt;
&lt;li&gt;DCL(Data Control Language): 액세스 권한 및 보안 수준을 정의하는데 사용됩된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;일반적인 DDL 기능은 객체(테이블이나 인덱스 등)의 생성, 수정 및 삭제이다. 해당 명령은 &lt;code&gt;CREATE&lt;/code&gt;, &lt;code&gt;ALTER&lt;/code&gt; 및 &lt;code&gt;DROP&lt;/code&gt; 이다.&lt;/p&gt;
&lt;h2 id=&#34;데이터베이스-보기-작성-삭제&#34;&gt;데이터베이스 보기, 작성, 삭제&lt;/h2&gt;
&lt;p&gt;TiDB 데이터베이스는 테이블 및 인덱스와 같은 객체의 컬렉션으로 볼 수 있다.&lt;/p&gt;
&lt;p&gt;데이터베이스 목록을 표시하려면 &lt;code&gt;SHOW DATABASES&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SHOW&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;DATABASES&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;mysql&lt;/code&gt;이라는 데이터베이스를 사용하려면 다음문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000&#34;&gt;USE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mysql&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;데이터베이스의 모든 테이블을 표시하려면, &lt;code&gt;SHOW TABLES&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SHOW&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;TABLES&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;mysql&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;데이터베이스를 작성하려면 다음 &lt;code&gt;CREATE DATABASE&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DATABASE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;db_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;options&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;samp_db&lt;/code&gt;라는 데이터베이스를 만들려면 다음문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DATABASE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IF&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;NOT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;EXISTS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;samp_db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;데이터베이스가 있을 경우에 오류를 방지하기 위해 &lt;code&gt;IF NOT EXISTS&lt;/code&gt; 추가한다.&lt;/p&gt;
&lt;p&gt;데이터베이스를 삭제하려면 다음 &lt;code&gt;DROP DATABASE&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DATABASE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;samp_db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;테이블-생성-표시-및-삭제&#34;&gt;테이블 생성, 표시 및 삭제&lt;/h2&gt;
&lt;p&gt;테이블을 만들려면 CREATE TABLE문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;column_name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;data_type&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;constraint&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;예를 들어, 번호, 이름, 생일 등의 필드를 포함하는 &lt;code&gt;person&lt;/code&gt;라는 테이블을 생성하려면 다음문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;INT&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;VARCHAR&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;255&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;),&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;birthday&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;DATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;테이블(DDL)을 생성하는 명령문을 표시하려면 &lt;code&gt;SHOW CREATE&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SHOW&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;table&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;테이블을 삭제하려면 &lt;code&gt;DROP TABLE&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;인덱스-생성-표시-및-삭제&#34;&gt;인덱스 생성, 표시 및 삭제&lt;/h2&gt;
&lt;p&gt;인덱스는 인덱싱된 열에 대한 쿼리 속도를 높이는데 사용된다. 값이 고유하지 않은 열의 인덱스를 만들려면 다음 &lt;code&gt;CREATE INDEX&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person_id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;또는, 다음과 같이 &lt;code&gt;ALTER TABLE&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ADD&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person_id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;값이 고유한 열에 고유한 인덱스를 생성하려면, 다음과 같이 &lt;code&gt;CREATE UNIQUE INDEX&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;UNIQUE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person_unique_id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;또는 다음과 같이 &lt;code&gt;ALTER TABLE&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ADD&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;UNIQUE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person_unique_id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;테이블의 모든 인덱스를 표시하려면 다음과 같이 &lt;code&gt;SHOW INDEX&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SHOW&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;인덱스를 삭제하려면 &lt;code&gt;DROP INDEX&lt;/code&gt; 또는 &lt;code&gt;ALTER TABLE&lt;/code&gt;문을 사용한다. &lt;code&gt;DROP INDEX&lt;/code&gt;에 &lt;code&gt;ALTER TABLE&lt;/code&gt;를 중첩할 수도 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person_id&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ALTER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TABLE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person_unique_id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;

    DDL 조작은 트랜잭션이 아닙니다. DDL 조작을 수행할 때 COMMIT명령문을 실행할 필요가 없습니다.

&lt;/div&gt;

&lt;h2 id=&#34;데이터-삽입-업데이트-및-삭제&#34;&gt;데이터 삽입, 업데이트 및 삭제&lt;/h2&gt;
&lt;p&gt;일반적인 DML 기능은 테이블 레코드를 추가, 수정 및 삭제하는 것이다. 해당 명령은 &lt;code&gt;INSERT&lt;/code&gt;, &lt;code&gt;UPDATE&lt;/code&gt; 및 &lt;code&gt;DELETE&lt;/code&gt; 이다.&lt;/p&gt;
&lt;p&gt;테이블에 데이터를 삽입하려면 다음과 같이 &lt;code&gt;INSERT&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INSERT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INTO&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;VALUES&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;tom&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;20170912&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여러 필드의 데이터가 포함된 레코드를 테이블에 삽입하려면 &lt;code&gt;INSERT&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INSERT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INTO&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;VALUES&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;2&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;bob&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;);&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;테이블에 있는 레코드의 일부 필드를 갱신하려면 &lt;code&gt;UPDATE&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;UPDATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SET&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;birthday&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;20180808&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;테이블의 데이터를 삭제하려면 다음와 같이 &lt;code&gt;DELETE&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DELETE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;

    필터로서 &lt;code&gt;WHERE&lt;/code&gt; 절이 없는 &lt;code&gt;UPDATE&lt;/code&gt; 명령문과 &lt;code&gt;DELETE&lt;/code&gt; 명령문은 전체 테이블에 적용된다.

&lt;/div&gt;

&lt;h2 id=&#34;쿼리-데이터&#34;&gt;쿼리 데이터&lt;/h2&gt;
&lt;p&gt;DQL은 테이블 또는 여러 테이블에서 원하는 데이터 행을 검색하는 데 사용된다.&lt;/p&gt;
&lt;p&gt;테이블의 데이터를 보려면 &lt;code&gt;SELECT&lt;/code&gt;문을 사용한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;특정 열을 쿼리하려면 &lt;code&gt;SELECT&lt;/code&gt; 키워드 뒤에 열 이름을 추가한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tom&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;------+
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;rows&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;in&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;set&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;00&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sec&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;WHERE&lt;/code&gt; 절을 사용하여 조건과 일치하는 모든 레코드를 필터링하고 결과를 반환한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;person&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;where&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;사용자-생성-승인-및-삭제&#34;&gt;사용자 생성, 승인 및 삭제&lt;/h2&gt;
&lt;p&gt;DCL은 일반적으로 사용자를 만들거나 삭제하고 사용자 권한을 관리하는데 사용된다.&lt;/p&gt;
&lt;p&gt;사용자를 생성하려면 &lt;code&gt;CREATE USER&lt;/code&gt;문을 사용한다. 다음 예제에서는 비밀번호가 &lt;code&gt;123456&lt;/code&gt;인 &lt;code&gt;tiuser&lt;/code&gt; 사용자를 생성한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;USER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;tiuser&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;IDENTIFIED&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;123456&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;samp_db&lt;/code&gt; 데이터베이스에서 테이블을 검색할 수 있는 권한을 &lt;code&gt;tiuser&lt;/code&gt;에 부여하려면 다음을 수행한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GRANT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;samp_db&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;TO&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;tiuser&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;tiuser&lt;/code&gt;의 권한을 확인하려면:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SHOW&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;GRANTS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;tiuser&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;localhost&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;tiuser&lt;/code&gt;의 삭제하려면:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;USER&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;tiuser&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;localhost&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;


&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pingcap/docs/blob/release-6.1/basic-sql-operations.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Explore SQL with TiDB&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; 최종수정일 2022. 7. 21. 오후 7:23:10: &lt;a href=&#34;https://github.com/pingcap/docs/commit/81f07d13d8d85290d95df24f5426859b245dd401&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;cloud: add SQL and TiFlash related docs (#9001) (#9479)&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;


      </description>
      
      <category>Database</category>
      
      <category>TiDB</category>
      
    </item>
    
    <item>
      <title>TiDB 스케줄링</title>
      <link>https://www.devkuma.com/docs/tidb/scheduling/</link>
      <pubDate>Fri, 05 Aug 2022 18:50:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tidb/scheduling/</guid>
      <description>
        
        
        &lt;h2 id=&#34;스케줄링을-하는-이유&#34;&gt;스케줄링을 하는 이유&lt;/h2&gt;
&lt;p&gt;앞에서는 TiKV 클러스터가 TiDB 데이터베이스의 분산 KV 스토리지 엔진인 것을 소개하고 있다. 데이터는 리전에 복제된 후에 관리된다. 각 리전에는 서로 다른 TiKV 노드에 분산된 여러 복제본이 있다. 이러한 복제본 중 리더는 읽기/쓰기를 담당하고, 팔로어는 리더에서 보낸 Raft 로그를 동기화한다. 그럼 다음 질문에 대해 생각해 보자.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;동일한 리전의 여러 복제본이 서로 다른 노드에 분산되어 있는지 확인하려면 어떻게 해야 할까? 그리고, 하나의 컴퓨터에서 여러 TiKV 인스턴스를 시작하려면 어떻게 해야 하나?&lt;/li&gt;
&lt;li&gt;TiKV 클러스터가 재해 복구(Disaster Recovery)에 대비하여 여러 위치에 배포된 경우, 단일 데이터 센터에 장애가 발생하여도, Raft 그룹의 여러 복제본이 손실되지 않도록 하려면 어떻게 해야 할까?&lt;/li&gt;
&lt;li&gt;TiKV 클러스터의 다른 노드의 데이터를 새로 추가된 노드로 이동하려면 어떻게 해야 할까?&lt;/li&gt;
&lt;li&gt;노드가 고장나면 어떻게 하나? 클러스터 전체에서 무엇을 해야 하나? 노드에 일시적인 장애가 발생한 경우(예: 서비스 다시 시작), 어떻게 해결해야 한까? 장시간 장애(예: 디스크 장애 또는 데이터 손실)의 경우는 어떻게 해야 할까?&lt;/li&gt;
&lt;li&gt;각 Raft 그룹에 N개의 복제본이 있어야 한다. 1개의 Raft 그룹에서 복제본이 부족(예: 노드가 실패하고 복제본이 손실된 경우)하거나, 너무 많은 경우(예: 장애가 발생한 노드가 다시 실행되어 자동으로 클러스터에 추가된 경우)가 있다. 어떻게 복제 수를 설정할 수 있는가? 읽기/쓰기는 리더가 수행되는데, 모든 리더가 여러 노드에 모인 경우에 클러스터는 어떻게 되나?&lt;/li&gt;
&lt;li&gt;모든 리전에 액세스할 필요는 없으며, 핫스팟이 여러 리전에 존재하는 것으로 보인다. 이 경우는 어떻게 해야 할까?&lt;/li&gt;
&lt;li&gt;클러스터는 로드 밸런싱 과정에서 데이터를 마이그레이션해야 한다. 이러한 데이터 이동은 네트워크 대역폭, 디스크 IO, CPU를 많이 소비하는데, 온라인 서비스에 영향을 미치지는 않는가?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;위의 문제 중 하나를 하나를 해결하는 것은 간단하지만, 조합하게 되면 어려워 진다. 예를 들어, 복제본을 추가할지 여부는 숫자가 부족한지 여부를 확인하는 것과, 1개의 Raft 그룹의 내부 상황을 생각하면 좋은 문제도 있다. 그러나 실제로는 이 복제본을 어디에 추가할지 포괄적인 관점이 필요하다. 전체 시스템은 역동적으로 변화하고 있다. 지역 분할, 노드 조인, 노드 고장, 핫스팟 액세스 변경 등이 항상 발생한다. 스케줄링 시스템은 또한 최상의 상태를 유지하기 위해 계속 조정되어야 한다. 전반적인 정보를 파악하고 스케줄링하고 구성할 수 있는 컴포넌트가 없다면, 이러한 요구를 충족시키는 것은 어려울 것이다. 따라서 전체 시스템의 상황을 제어하고 조정하는 중앙 노드가 필요하다. 거기서 등장한 것이 Placement Driver(PD) 모듈이다.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;

    &lt;p&gt;&lt;strong&gt;핫스팟 (hotspot)&lt;/strong&gt;
핫스팟이란? 사전적인 의미로는 그 장소만 주위에 비해 특이적으로 무언가가 높아지고 있는 지점을 말한다. 분야에 따라 구체적인 의미는 다르며, 예를 들어, 범죄 다발 지역, 고농도 오염 지역, 거리에서 특히 인기있는 장소 등의 용법이다. 흔하게 휴대전화의 개인 핫스팟 또는 휴대용 핫스팟은 인터넷 서비스 제공자에 연결된 라우터를 사용해 무선 네트워크, 일반적으로 Wi-Fi 기술을 이용해 인터넷에 접속할 수 있는 물리적인 위치(physical location) 말한다.&lt;/p&gt;
&lt;p&gt;여기 분산 처리에는 하나의 노드에 사용량이 많아 실행 빈도가 높은 영역으로 해석될 것이다.&lt;/p&gt;


&lt;/div&gt;

&lt;h2 id=&#34;스케줄링-요구-사항&#34;&gt;스케줄링 요구 사항&lt;/h2&gt;
&lt;p&gt;앞서 언급한 질문을 분류하고 정리해 보겠다. 크게 나누어 두 종류가 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;분산형이고 가용성이 높은 스토리지 시스템은 다음 요구 사항을 충족해야 한다.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;적절한 수의 복제본 생성&lt;/li&gt;
&lt;li&gt;복제본을 다른 컴퓨터에 분산&lt;/li&gt;
&lt;li&gt;다른 노드의 복제본을 노드 추가 후에 이동 가능&lt;/li&gt;
&lt;li&gt;노드가 오프라인 일 때, 노드의 데이터 이동&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;탁월한 분산 시스템에는 다음과 같은 최적화가 필요하다.&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;클러스터에서 리더의 균형 잡힌 배치&lt;/li&gt;
&lt;li&gt;각 노드의 스토리지 용량의 균형 잡힌 배치&lt;/li&gt;
&lt;li&gt;핫스팟 액세스의 균형 잡힌 배포&lt;/li&gt;
&lt;li&gt;온라인 서비스에 영향을 미치지 않는 밸런싱 속도 제어&lt;/li&gt;
&lt;li&gt;수동으로 노드 온라인/오프라인을 전환하거나 장애가 발생한 노드를 자동으로 오프라인으로 전환하는 등 노드 상태 관리&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;첫번째 요구 사항을 충족하는 경우는 시스템은 여러 복제본의 재해 복구, 동적 확장성, 노드 장애 내성 및 자동 재해 복구를 지원한다. 그리고, 두번째 요구 사항을 충족하면 시스템 부하 균형이 좋고 관리가 쉬워진다.&lt;/p&gt;
&lt;p&gt;이러한 요구 사항을 충족하려면 먼저 각 노드의 상태, 각 Raft 그룹의 정보, 비즈니스 액세스 및 운영 통계와 같은 정보를 충분히 수집해야 한다. 그런 다음 PD가 이러한 정보와 스케줄링 정책을 기반으로 위의 요청을 충족하는 스케줄링 계획을 수립하도록 정책을 설정해야 한다.&lt;/p&gt;
&lt;h2 id=&#34;스케줄링의-기본-작업operation&#34;&gt;스케줄링의 기본 작업(operation)&lt;/h2&gt;
&lt;p&gt;스케줄링의 기본 작업은 매우 간단하다. 즉, 스케줄링 정책을 따라 할 수 있다는 것이다. 이것이 스케줄러 전체의 본 바탕이다.&lt;/p&gt;
&lt;p&gt;위의 스케줄러 요구 사항은 복잡해 보이지만 세 가지 작업으로 크게 나눌 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;복제본 추가&lt;/li&gt;
&lt;li&gt;복제본 삭제&lt;/li&gt;
&lt;li&gt;Raft 그룹의 다른 복제본 간의 리더 역할 이동&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Raft 프로토콜은 우연히 이러한 요구 사항을 충족하고, &lt;code&gt;AddReplica&lt;/code&gt;, &lt;code&gt;RemoveReplica&lt;/code&gt;, &lt;code&gt;TransferLeader&lt;/code&gt;의 각 명령은 이 세 가지 기본 작업을 지원한다.&lt;/p&gt;
&lt;h2 id=&#34;정보-수집&#34;&gt;정보 수집&lt;/h2&gt;
&lt;p&gt;스케줄링은 클러스터 전체의 정보 수집에 따라 다른다. 간단히 말해서 각 TiKV 노드와 각 지역의 상태를 알아야 한다. TiKV 클러스터는 두 가지 유형의 정보를 PD에 보고한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;각 TiKV 노드는 노드 전체에 대한 정보를 PD에 주기적으로 보고한다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;TiKV 스토어와 PD 사이에는 하트비트(Heartbeat)가 있다. PD는 하트비트로 각 데이터스토어가 활성 상태인지, 새로 추가된 데이터스토어가 있는지 확인한다. 반면에 하트비트에는 해당 데이터스토어의 상태 정보가 포함된다. 주로 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;총 디스크 용량&lt;/li&gt;
&lt;li&gt;여유 디스크 용량&lt;/li&gt;
&lt;li&gt;지역 수&lt;/li&gt;
&lt;li&gt;데이터 쓰기 속도&lt;/li&gt;
&lt;li&gt;보내고 받은 스냅샷 수(복제본은 스냅샷으로 데이터를 동기화한다)&lt;/li&gt;
&lt;li&gt;오버로드하지 있지 않은가?&lt;/li&gt;
&lt;li&gt;라벨 정보(라벨은 상하 관계가 있는 일련의 태그이다)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;각 Raft 그룹의 리더를 PD에 정기적으로 보고&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;각 Raft 그룹의 리더와 PD는 하트비트로 연결되어 있으며, 이 리전의 상태를 다음과 같이 보고한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;리더의 지위&lt;/li&gt;
&lt;li&gt;팔로워 위치&lt;/li&gt;
&lt;li&gt;오프라인 복제본 수&lt;/li&gt;
&lt;li&gt;데이터 읽기/쓰기 속도&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이 두 종류의 하트비트를 통해 PD는 전체 클러스터의 정보를 수집하고 판단한다. 또한 PD는 관리 인터페이스를 통해 추가 정보를 얻어 보다 정확한 판단을 내린다. 예를 들어, 데이터스토어의 하트비트가 중단되면 PD는 그것이 일시적인 것인지 영구적인 것인지를 알 수 없다. PD는 일정 시간(기본적으로 30분)만 기다릴 수 있다. 정해진 시간을 기다려도 하트비트가 없다면, PD는 해당 데이터스토어가 오프라인이 되었다고 판단하고 해당 데이터스토어의 모든 리전을 이동해야 한다. 그러나, 운영 스태프가 수동으로 시스템을 오프라인으로 설정한 경우에는 그 스태프가 관리 인터페이스를 통해 PD에 데이터 스토어를 사용할 수 없음을 알려야 한다. 이 경우 PD는 데이터스토어의 모든 리전을 즉시 이동한다.&lt;/p&gt;
&lt;h2 id=&#34;스케줄링-정책&#34;&gt;스케줄링 정책&lt;/h2&gt;
&lt;p&gt;정보를 수집한 후 구체적인 스케줄링 계획을 그리려면 PD에 몇 가지 정책이 필요하다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1. 리전의 복제본 수가 정확하다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;PD는 리전 리더의 하트비트를 통해서 어느 리전의 복제본 수가 요구 사항을 충족하지 못한다는 것을 발견하면 복제본 추가/제거 작업을 통해 복제본 수를 수정한다. 이는 다음과 같은 경우에 발생한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;노드가 고장나서 모든 데이터를 잃고, 일부 지역에서 복제본이 존재하지 않는다.&lt;/li&gt;
&lt;li&gt;실패한 노드가 다시 작동하고 자동으로 클러스터에 참여한다. 이 경우 중복 복제본이 존재하므로 삭제해야 한다.&lt;/li&gt;
&lt;li&gt;관리자가 복제 정책 및 최대 복제본 수 설정을 변경한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;2. 1개의 Raft 그룹의 여러 복제본이 같은 위치에 존재해서는 안된다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;동일한 위치이고, 동일한 노드가 아니라는 점에 유의해야 한다. 일반적으로 PD가 보장할 수 있는 것은 노드가 고장날 때 많은 복제본이 손실되는 문제를 피하기 위해 여러 복제본이 동일한 노드에 존재하지 않는다는 것이다. 실제 도입 시에는 다음과 같은 요건이 나올 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;동일한 물리적 장비에 여러 노드가 배치된다.&lt;/li&gt;
&lt;li&gt;TiKV 노드가 여러 서버에 분산되어 있다. 서버가 꺼져도 시스템을 사용할 수 있다고 가정한다.&lt;/li&gt;
&lt;li&gt;TiKV 노드가 여러 IDC에 분산되어 있다. 데이터 센터가 꺼져도 시스템은 그대로 사용할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;기본적으로 공통 위치 속성을 가지며, 최소 내장 유닛을 구성하는 노드가 필요하다. 이 장치 중 여러 지역 복제본이 공존하지 않는 것이 바람직하다. 이 때 노드에 레이블을 설정하고 PD의 로케이션 레이블을 설정하여 어떤 레이블을 위치 식별자로 지정할지 지정한다. 복제본을 배포할 때 여러 복제본을 저장하는 노드는 동일한 위치 식별자를 갖지 않는다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 복제본이 각 데이터 저장소에 균등하게 분산&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;각 복제본의 데이터 저장 용량은 고정되어 있으므로 각 노드의 복제본 수의 균형을 유지하면 전체 부하가 더욱 균형을 이룬다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4. 리더 수가 각 데이터 스토어에 균등하게 분산&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Raft 프로토콜은 리더를 통해 읽기/쓰기를 수행하기 때문에 계산 부하는 주로 리더에서 걸린다. 따라서 PD는 리더를 다른 데이터스토어에 분산시켜 관리한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5. 핫스팟 수가 각 데이터 저장소에 균등하게 분포&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;정보를 보낼 때 각 데이터스토어와 리전 리더는 키 읽기/쓰기 속도와 같은 해당 시점의 액세스 부하에 대한 정보를 전달한다. PD는 핫스팟을 확인하고 여러 노드에 분산한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;6. 각 데이터스토어의 스토리지 공간 점유율이 거의 동일&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;각 데이터스토어는 시작 시에 용량 매개변수를 지정하지만, 이는 데이터스토어의 스토리지 공간 한계를 나타낸다. PD는 스케줄링 시 노드의 나머지 공간을 고려한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;7. 온라인 서비스에 영향을 미치지 않도록 스케줄링 속도 제어&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;스케줄링 동작은 CPU, 메모리, 디스크 I/O, 네트워크 대역을 소비하기 때문에 온라인 서비스에 영향을 주지 않도록 해야 한다. PD는 진행 중인 작업 수를 제어하며 기본 속도는 보수적이다. 스케줄링을 가속화하려는 경우(서비스 업그레이드 중지, 새 노드 추가, 가능한 한 빨리 스케줄링하려는 경우)는 pd-ctl으로 사용하여 수동으로 가속화할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;8. 오프라인 노드를 수동으로 지원&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;pd-ctl으로 수동으로 노드를 오프라인으로 설정하면 PD는 특정 속도 제어 범위 내에서 노드의 데이터를 떼어 놓는다. 그런 다음 노드를 오프라인으로 만든다.&lt;/p&gt;
&lt;h2 id=&#34;스케줄링-구현&#34;&gt;스케줄링 구현&lt;/h2&gt;
&lt;p&gt;그럼, 스케줄링의 흐름을 살펴보겠다.&lt;/p&gt;
&lt;p&gt;PD는 데이터스토어와 리더의 하트비트를 통해 항상 정보를 수집하여 클러스터의 상세한 데이터를 검색한다. PD는 이 정보와 스케줄링 정책을 기반으로 동작 순서를 작성하고 리전 리더에서 보낸 하트비트를 수신하면 이 리전에 수행할 작업이 있는지 확인한다. PD는 하트비트 응답 메시지를 통해 향후 수행할 작업을 리전 리더에게 반환하고 다음 하트비트에서 실행 결과를 모니터링한다. 이러한 작업은 지역 리더에 대한 제안일 뿐이며 실행이 보장되지는 않는다. 실행할지 여부 및 언제 실행할지 여부는 리전 리더가 현재 상태에 따라 결정한다.&lt;/p&gt;
&lt;h2 id=&#34;마무리&#34;&gt;마무리&lt;/h2&gt;
&lt;p&gt;여기에서는 스케줄링을 위한 분산 스토리지 시스템을 구축하기 위해 무엇을 고려해야 하는지, 그리고 보다 유연하게 정책을 확장할 수 있도록 정책과 구현을 분리하는 방법에 대해서 소개하였다.&lt;/p&gt;
&lt;p&gt;세 가지 블로그(스토리지, 컴퓨팅, 스케줄링)가 TiDB의 기본 개념과 구현 원리를 이해하는 데 도움이 되기를 바란다.&lt;/p&gt;

      </description>
      
      <category>Database</category>
      
      <category>TiDB</category>
      
    </item>
    
    <item>
      <title>데이터 중심 애플리케이션 설계 | 03장. 저장소와 검색</title>
      <link>https://www.devkuma.com/docs/data-intensive-application/03/</link>
      <pubDate>Wed, 23 Feb 2022 00:00:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/data-intensive-application/03/</guid>
      <description>
        
        
        &lt;p&gt;&lt;em&gt;발표자 : 김경철, 김민규&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;데이터베이스에서 &lt;strong&gt;데이터를 저장하는 방법과 데이터를 요청 했을 때 다시 찾을 수 있는 방법&lt;/strong&gt;에 대해 알아본다.&lt;/p&gt;
&lt;p&gt;특정 작업부하(workload) 유형에서 좋은 성능을 내게끔 저장소 엔진을 조정하려면, 엔진 내부에서 수행되는 작업에 대해 대략적인 개념을 이해할 필요가 있다.&lt;/p&gt;
&lt;p&gt;관계형 테이터 베이스, NoSQL이라 불리는 저장소 엔진에 대해서 설명을 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;로그 구조(log-structured) 계열 저장소 엔진&lt;/li&gt;
&lt;li&gt;B트리(B-tree) 같은 페이지 저향(page-oriented) 계열 저장소 엔진&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;데이터베이스를-강력하게-만드는-데이터-구조&#34;&gt;데이터베이스를 강력하게 만드는 데이터 구조&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;키-값 저장소&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;2개의 bash 함수로 구현한, 세상에서 가장 간단한 데이터베이스이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db_set&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$1&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$2&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; database
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db_get&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;()&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    grep &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;^&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$1&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;,&amp;#34;&lt;/span&gt; database &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; sed -e &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;S/^&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;$1&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;,//&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; tail -n &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위 코드를 활용한 명령어는 아래와 같다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ db_set &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;42&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;{&amp;#34;name&amp;#34;:&amp;#34;San Francisco&amp;#34;,&amp;#34;attractions&amp;#34;:[&amp;#34;Exploratorium&amp;#34;]}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ db_get &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;42&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;San Francisco&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;attractions&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Exploratorium&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ cat
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;123456,&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;London&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;attractions&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Big Ben&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;London Eye&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;42,&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;San Francisco&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;attractions&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Golden Gate Bridge&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;42,&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;San Francisco&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;attractions&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Exploratorium&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;]}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;저장(db_set)&lt;/th&gt;
&lt;th&gt;저장(db_get)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;행위&lt;/td&gt;
&lt;td&gt;key와 value를 저장&lt;/td&gt;
&lt;td&gt;해당 key와 연관된 가장 최근 값을 찾아 반환&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;내부 동작&lt;/td&gt;
&lt;td&gt;호출될 때마다 파일의 마지막에 추가(append)&lt;/td&gt;
&lt;td&gt;파일에 키의 마지막(최근) 항목을 검색&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;성능&lt;/td&gt;
&lt;td&gt;성능이 좋다.&lt;br&gt; - 간단한 작업인 경우에 좋다.&lt;/td&gt;
&lt;td&gt;성능이 좋지 않다.&lt;br&gt; - 레코드가 많을 수록 더 안 좋다.&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;로그(log)란?&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;일반적으로 로그는 애플리케이션에서 무슨 일이 일어나는지 기술한 텍스트이다.&lt;/li&gt;
&lt;li&gt;여기에서는 연속된 추가 전용(append-only) 레코드를 말한다.&lt;/li&gt;
&lt;li&gt;많은 데이터베이스는 내부적으로 추가 전용(apend-only) 데이터 파일인 로그(log)를 사용한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;검색 성능의 문제점&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;키가 있는지 찾기 위해 데이터베이스 파일을 처음부터 끝까지 스캔해야 한다.&lt;/li&gt;
&lt;li&gt;알고리즘 용어로 검색 비용 O(n)이다.
&lt;ul&gt;
&lt;li&gt;레코드 수가 두배로 늘면, 검색도 두배로 오래 걸린다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;검색 성능의 개선 방법&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터베이스에서 특정 키의 값을 효율적으로 찾기 위해 색인(index, 다른 데이터 구조)이 필요하다.&lt;/li&gt;
&lt;li&gt;색인의 일반적인 개념을 어떤 부가적인 메타데이터를 유지하는 것이다.
&lt;ul&gt;
&lt;li&gt;메타데이터는 이정표 역할을 해서 원하는 데이터 위치에 찾은데 도움을 준다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;여러가지 다양한 방법으로 검색하고자 한다면, 데이터의 각 여러 가지 다양한 색인이 필요하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;색인의 구조&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;색인은 기본 데이터(primary data)에서 파생된 추가적인 구조다.&lt;/li&gt;
&lt;li&gt;색인은 질의 성능에 영향을 준다.&lt;/li&gt;
&lt;li&gt;쓰기 과정에서 오버헤드가 발생한다.
&lt;ul&gt;
&lt;li&gt;데이터를 쓸 때마다 색인을 갱신해야 하기 때문이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;색인의 선택&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;색인 선택에는 트레이드오프(trade-off)가 발생한다.
&lt;ul&gt;
&lt;li&gt;색인을 잘 선택했다면 &lt;strong&gt;읽기 질의 속도가 향상시킨다.&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;하지만, 모든 색인은 &lt;strong&gt;쓰기 속도를 떨어 뜨린다.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;보통 자동으로 모든 것을 색인하지 않기에, 애플리케이션의 전형적인 질의 패턴에 대한 지식을 활용해 수동으로 색인을 선택해야 한다.&lt;br&gt;
오버헤드를 발생시키지 않으면서, 애플리케이션에 가장 큰 이익을 안겨주는 색인을 선택해야 한다.&lt;/p&gt;
&lt;h3 id=&#34;해시-색인-hash-index&#34;&gt;해시 색인 (Hash index)&lt;/h3&gt;
&lt;p&gt;키-값 데이터는 매우 일반적이고 더욱 복잡한 색인을 위한 구성 요소로 유용하다.&lt;br&gt;
대부분의 프로그래밍 언어에서 볼 수 있는 &lt;strong&gt;사전 타입(Dictionary type)&lt;/strong&gt; 유사하고, Hash map(Hash table)으로 구현한다.&lt;/p&gt;
&lt;p&gt;키를 데이터 파일의 **바이트 오프셋(byte offset)**에 매핑해서 인메모리(in-memory) 해시 맵을 유지하는 전략으로 색인에 접근해 보자.&lt;br&gt;
바이트 오프셋은 그림 3-1과 같이 값을 바로 찾을 수 있는 위치이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_1.png&#34; alt=&#34;그림 3-1&#34;&gt;&lt;br&gt;
&lt;em&gt;그림 3-1. CSV와 유사한 형식의 키-값 쌍의 로그 저장하기, 인메모리 해시 맵으로 색인했다.&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;추가 : 파일에 새로운 key-value 쌍을 추가할 때마다 방금 기록한 데이터의 offset 을 반영하기 위해 hash map 도 갱신해야 한다.&lt;/li&gt;
&lt;li&gt;조회 : 조회할 때는 hash map 을 사용해 데이터 파일에서 offset 을 찾아 해당 위치를 구해서 값을 읽는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이 방식은 단순해 보이지만 많이 사용하는 접근법이다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Riak의 비트케스크&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;위에 방식은 &lt;a href=&#34;https://docs.riak.com/riak/kv/2.2.3/setup/planning/backend/bitcask/index.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Riak의 비트케스크(Bitcask, 기본 저장 엔진)&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;가 사용하는 방식이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;해시맵을 전부 메모리에 유지하기 때문에 RAM에 모든 키가 저장된다는 조건을 전제로 고성능 읽기, 쓰기를 보장한다.&lt;/li&gt;
&lt;li&gt;값은 한번의 디스크 탐색으로 디스크에 적재할 수 있기 때문에 사용 가능한 메모리보다 더 많은 공간을 사용할 수 있다.
&lt;ul&gt;
&lt;li&gt;데이터 파일의 일부가 파일 시스템 캐시에 있다면 읽기에 디스크 입출력도 필요하지 않다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;이런 형태의 저장소는 각 key의 value가 자주 갱신되는 상황에 매우 적합하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;디스크 공간 부족의 해결책&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;그런데 지금과 같은 상황으로 파일에 계속해서 추가만 된다면 결국 디스크 공간이 부족해 진다. 이럴때 특정 크기의 세그먼트로 로그를 나누는 방식이 좋은 해결책이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;특정 크기에 도달하면 세그먼트 파일을 닫고 새로운 세그먼트 파일에 이후 쓰기를 수행한다.&lt;/li&gt;
&lt;li&gt;그러고 세그먼트 파일에 대해 **컴팩션(compaction)**을 수행한다.
&lt;ul&gt;
&lt;li&gt;컴팩션(compaction)란? 로그에서 중복된 키를 버리고 각 키의 최신 갱신 값만 유지하는 것을 의미한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&amp;hellip; 이미지 &amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_2.png&#34; alt=&#34;그림 3-2&#34;&gt;&lt;br&gt;
&lt;em&gt;그림 3-2. 키-값 갱신 로그를 컴팩션하고 각 키의 최신(마지막) 값만 유지한다.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;컴팩션과 세그먼트 병합&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;컴팩션은 세그먼트를 더 작게 만들 수 때문에, 컴팩션을 수행할 때는 동시에 여러 세그먼트들을 병합할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;세그먼트가 쓰여진 후에는 변경할 수 없기 때문에, 병합할 세그먼트는 새로운 파일로 만든다.&lt;/li&gt;
&lt;li&gt;고정된 세그먼트의 병합과 컴팩션을 백그라운드로 스레드로 수행할 수 있어, 컴팩션을 수행하는 동안 이전 세그먼트 파일을 사용해 읽기와 쓰기 요청의 처리를 정상적으로 계속 수행할 수 있게 된다.&lt;/li&gt;
&lt;li&gt;병합 과정이 끝난 이후에는 읽기 요청은 이전 세그먼트 대신 새로 병합한 세그먼트를 사용하게끔 전환한다.&lt;/li&gt;
&lt;li&gt;전환 후에는 이전 세그컨트 파일을 삭제된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_3.png&#34; alt=&#34;그림 3-3&#34;&gt;&lt;br&gt;
&lt;em&gt;그럼 3-3. 컴팩션과 세그먼트 병합을 동시에 수행한다.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;병합된 세그먼트는 키를 오프셋에 매핑한 자체 인메모리 해시 테이블에 반영한다.&lt;br&gt;
키의 값을 찾으려면 세그먼트 해시 맵을 먼저 확인한다. 만약 없다면 두 번째 최신 세그먼트 등을 확인 한다.&lt;br&gt;
병합 과정을 통해 세그먼트 수를 적게 유지하면 조회할 때 많은 해시 맵을 확인할 필요가 없다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;실제 구현할 때 주의해야 할 점&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;파일 형식
&lt;ul&gt;
&lt;li&gt;key-value 를 구분하는 것이 콤마(,) 이다. 그렇다고 해서 CSV 가 적합한 형식은 아니다.&lt;/li&gt;
&lt;li&gt;문자열을 부호화하는 바이너리 형식을 사용하는 것이 더 빠르고 간단하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;레코드 삭제
&lt;ul&gt;
&lt;li&gt;키에 해당하는 값을 삭제하려면, 데이터 파일에 특수한 삭제 레코드(Tombstone, 묘비)를 추가해야 한다.&lt;/li&gt;
&lt;li&gt;로그 세그먼트 이 톰스톰을 병합 과정에서 삭제된 키의 이전 값을 무시하게 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;고장(Crash) 복구
&lt;ul&gt;
&lt;li&gt;데이터베이스가 재시작되면 in-memory hash map은 손실된다.&lt;/li&gt;
&lt;li&gt;데이터가 커지면 hash map을 복원하는데 오래 걸리기 때문에 스냅샷(Snapshot)을 만들어 디스크에 저장하여 복구 속도를 높일 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;부분적으로 레코드 쓰기
&lt;ul&gt;
&lt;li&gt;데이터베이스에서 로그에 record를 추가하는 도중에 죽을 수 있다.&lt;/li&gt;
&lt;li&gt;bitcask 파일은 checksum을 포함하고 있어서 로그의 손상된 부분을 탐지해 무시할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;동시성 제어
&lt;ul&gt;
&lt;li&gt;순차적으로 로그에 추가할 때 일반적인 구현하는 방법은 Single thread만 사용한다.&lt;/li&gt;
&lt;li&gt;읽기는 불변(immutable)이므로,Multi thread 로 동시에 읽기를 할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;추가 전용(append-only) 로그의 이점&lt;/strong&gt;&lt;br&gt;
추가 전용(append-only) 로그는 언뜻 보면 낭비처럼 보인다. 왜 파일의 그 자리에서 오래된 값을 갱신하지 않는 것일까? 하지만 append-only 설계는 여러 측면에서 좋은 설계이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;append-only 와 segment 병합은 순차적인 쓰기 작업이기 때문에 보통 &lt;strong&gt;무작위 쓰기보다 빠르다.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;특히 자기 회전 디스크 하드 드라이브에서 더 빠르다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;segment 파일이 추가 전용이나 불변이면 동시성과 &lt;strong&gt;고장 복구가 간단하다.&lt;/strong&gt;
&lt;ul&gt;
&lt;li&gt;값을 덮어 쓰는 동안 DB 가 죽는 경우에 대해서 걱정할 필요가 없다. 이전 값 부분과 새로운 값 부분을 포함한 파일을 나누어 함께 남겨두기 때문이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;오래된 segment 병합은 시간이 지남에 따라 &lt;strong&gt;조각화되는 데이터 파일 문제를 피할 수 있다.&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;해시 테이블 색인 제한 사항&lt;/strong&gt;&lt;br&gt;
그러나 hash table index 역시 한계가 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;메모리 저장해야 하므로 키가 너무 많으면 문제가 된다.
&lt;ul&gt;
&lt;li&gt;디스크에 hash map 을 유지할 수 있지만 디스크 상에서 좋은 성능을 기대하기 어렵다.&lt;/li&gt;
&lt;li&gt;이는 무작위 접근 I/O 가 많이 발생하고 디스크가 가득 찼을 때 확장하는 비용이 비싸며 해시 충돌 해소를 위해 성가신 로직이 필요하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;range query 에 효율적이지 않다.
&lt;ul&gt;
&lt;li&gt;해시 맵에서 모든 개별 키를 조회해야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다음에는 이런 제한이 없는 색인 구조를 살펴보자.&lt;/p&gt;
&lt;h3 id=&#34;ss테이블과-lsm-트리&#34;&gt;SS테이블과 LSM 트리&lt;/h3&gt;
&lt;p&gt;일련의 키-값 쌍으로 키로 정렬하는 것이다. 이런 변경은 순차 쓰기(append-only)를 할 수 없게 하는거 같지만, 뒤에서 알아보겠다.&lt;/p&gt;
&lt;p&gt;키로 정렬된 형식을 정렬된 **문자열 테이블(Sorted String Table, SS테이블)**이라고 한다. 각 키가 병합된 세그먼트 파일 내에는 한번만 나타나야 한다(이미 컴팩트 과정이 이를 이미 보장한다).&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;해시 색인을 가진 로그 세그먼트 비교한 SS 테이블의 장점&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;세그먼트 병합은 파일이 사용가능한 메모리보다 크더라도 간단하고 효율적이다. 병합 정렬(mergesort) 알고리즘의 방식과 유사하다.&lt;br&gt;
각 세그먼트를 읽고 첫 번째 키를 본다(이미 정렬되어있고, 그 순서대로) 그리고 가장 낮은 키를 출력 파일로 복사한뒤 이 과정을 반복한다.&lt;br&gt;
&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_4.png&#34; alt=&#34;그림 3-4&#34;&gt;&lt;br&gt;
&lt;em&gt;그럼 3-4. 여러 SS테이블 세그먼트를 병합하고 각 키의 최신 값만 유지한다.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;여러 세그먼트에 동일한 키가 있다면 어떻게 해야 할까? 다중 세그먼트가 동일한 키를 포함하는 경우 가장 최근 세그먼트의 값은 유지하고 오래된 세그먼트의 값은 버린다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;파일에서 특정 키를 찾기 위해 모든 키를 메모리에 색인으로 유지할 필요는 없다.&lt;br&gt;
아래 그림에서 handiwork 를 보면 handbag 과 handsome 사이에 있음을 알 수 있다.
&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_5.png&#34; alt=&#34;그림 3-5&#34;&gt;&lt;br&gt;
&lt;em&gt;그림 3-5. 인메모리 색인을 가진 SS테이블&lt;/em&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;읽기 요청은 요청 범위 내에서 key-value 를 스캔해야 한다. 따라서 record를 블록으로 그룹화 하고 디스크에 쓰기 전에 압축한다. 그러면 key는 압축된 블록의 시작을 가리키게 된다.&lt;br&gt;
disk 공간을 절약하는 것 외에도 I/O를 줄일 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;ss테이블-생성과-유지-constructing-and-maintaining-sstables&#34;&gt;SS테이블 생성과 유지 (Constructing and maintaining SSTables)&lt;/h4&gt;
&lt;p&gt;그런데 이러한 기능을 구현할 수 있는것은 key 가 정렬되어 있기 때문이다. 쓰기 요청은 유입되는 순서대로 쓰기가 발생한다.&lt;/p&gt;
&lt;p&gt;디스크에 정렬된 구조를 유지하는 것은 가능하지만(B트리 참조), 메모리에 유지하는 편이 더 쉽다.&lt;br&gt;
레드 블랙 트리(red-black tree)나 AVL 트리와 같이 잘 알려진 데이터 구조 등은 많이 있다.&lt;br&gt;
이러한 데티터 구조를 이용하면 임의 순서로 키를 삽입하고 정렬된 순서로 해당 키를 다시 읽을 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;저장소 엔진 구현&lt;/strong&gt;&lt;br&gt;
저장소 엔진은 다음과 같이 만들 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;쓰기가 들어오면 균형 트리(balanced tree)에 추가한다.
&lt;ul&gt;
&lt;li&gt;이 인메모리는 맴테이블(memtable)이라고도 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;이 맴테이블이 임계값 보다 커지면 SS테이블 파일로 디스크에 기록한다.
&lt;ul&gt;
&lt;li&gt;이미 정렬되어 있기 때문에 효율적으로 저장할 수 있다.&lt;/li&gt;
&lt;li&gt;이 새로운 SS테이블은 DB의 가장 최신 세그먼트가 된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;읽기 요청이 있으면 맴테이블에서 키를 찾는다.
&lt;ul&gt;
&lt;li&gt;없으면 그 다음 가장 최신의 세그먼트, 또 없으면 그 다음으로 오래된 세그먼트를 찾는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;가끔 세그먼트 파일을 합치고 덮어 쓰여지거나 삭제된 값을 버리는 병합과 컴팩션 작업을 한다.
&lt;ul&gt;
&lt;li&gt;이는 background 에서 수행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;저장소 엔진 장애 발생시 대응법&lt;/strong&gt;&lt;br&gt;
DB가 고장나서 디스크로 기록되지 않은 memtable 이 있다면, 이 데이터는 손실 될 수 있으므로 append-only 로그를 디스크 상에 유지해야 한다.&lt;br&gt;
이 로그는 데이터를 복구하는데만 사용하며 정렬되지 않아도 문제가 없다. 맴테이블은 SS테이블로 기록하고 나면 해당 로그는 버린다.&lt;/p&gt;
&lt;h4 id=&#34;ss테이블에서-lsm-트리-만들기-making-an-lsm-tree-out-of-sstables&#34;&gt;SS테이블에서 LSM 트리 만들기 (Making an LSM-tree out of SSTables)&lt;/h4&gt;
&lt;p&gt;이런 색인 구조를 로그 구조화 병합 트리(Log-Structred Merge-Tree, LSM)란 이름으로 패트릭 오닐(Patrick O`Neil) 등이 발표했다.&lt;/p&gt;
&lt;p&gt;정렬된 파일 병합과 컴팩트 원리를 기반으로 하는 저장소 엔진을 LSM 저장소 엔진이라 부른다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;루씬(Lucene)&lt;/strong&gt;
루씬(Lucene)은 엘라스틱서치나 솔라에서 사용하는 전문 검색 색인 엔진이다.&lt;br&gt;
루씬은 용어 사전(term dictionary)을 저장하기 위해 유사한 방법으로 전문 검색을 구현했다.&lt;br&gt;
질의 단어가 들어오면 단어가 언급된 모든 문서를 찾는다.&lt;br&gt;
이 접근법이 키를 단어(용어)로, 같은 값을 포함한 모든 문서의 ID 목록으로 하는 key-value 로 구현한다.&lt;br&gt;
용어와 용어에 해당하는 문서를 SS테이블 같은 정렬 파일에 유지하고 필요에 따라 background 에서 병합한다.&lt;/p&gt;
&lt;h4 id=&#34;성능-최적화-performance-optimizations&#34;&gt;성능 최적화 (Performance optimizations)&lt;/h4&gt;
&lt;p&gt;LSM 트리 알고리즘은 데이터베이스에 존재하지 않는 키를 찾는 경우 느릴 수 있다. 앞에서 설명 했듯이  맴테이블을 검색하고, 가장 오래된 세그먼트까지 검색해야 하기 때문이다.&lt;/p&gt;
&lt;p&gt;이런 종류의 접근을 최적화하기 위해 **블룸 필터(bloom filter)**라는 것을 사용한다. (블룸 필터는 집한 내용을 근사한(approximating) 메모리 효율적 구조이다. 키가 데이터베이스에 존재하지 않음을 알려주므로 불필요한 디스크 읽기를 줄일 수 있다.)&lt;/p&gt;
&lt;p&gt;또한, SS테이블을 압축하고 압축(compaction)하고 병합(merge)하는 순서와 시기를 다양한 전략이 있다.&lt;/p&gt;
&lt;p&gt;대표적으로 **크기 계층(사이즈 계충, size-tiered)**과 **레벨 컴팩션(level compaction)**이 있다. LevelDB, LocksDB가 이 이름을 따왔다고 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;크기 계층 컴팩션
&lt;ul&gt;
&lt;li&gt;상대적으로 좀 더 새롭고 작은 SS테이블을 오래되고 큰 SS테이블에 연이어 병합한다.&lt;/li&gt;
&lt;li&gt;HBase, 카산드라&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;레벨 컴팩션
&lt;ul&gt;
&lt;li&gt;키 범위를 더 작은 SS테이블로 나누고 오래된 데이터는 개별 &amp;ldquo;level&amp;rdquo; 로 이동하기 때문에 컴팩션을 점진적으로 진행해 디스크 공간을 덜 사용했다.&lt;/li&gt;
&lt;li&gt;레벨DB(LevelDB, 레벨DB이라는 이름이 레벨 컴팩션에서 유래), 룩스DB(LocksDB), 카산드라&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;LSM 트리의 기본 개념은 백그라운드에서 연쇄적으로 SS테이블을 나누고 순차적으로 병합하는 것이다. 이 개념은 데이터셋이 가능한 메모리보다 훨신 더 크더라도 여전히 효과적이다.&lt;br&gt;
이 접근법은 디스크 쓰기가 순차적이기 때문에 LSM 트리가 매우 높은 쓰기 처리량을 보장할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;b-트리&#34;&gt;B 트리&lt;/h3&gt;
&lt;p&gt;로그 구조화 색인은 보편화 되고 있지만 일반적은 색인 유형이 아니다. 가장 널리 사용되는 색인 구조가 **B 트리(B-Tree)**로 구조가 로그 구조화 색인과는 상당히 다르다.&lt;/p&gt;
&lt;p&gt;B 트리는 1970년에 등장하여 오래동안 테스트되어 왔다. B-tree 인덱스는 RDB, NoSQL 모두 사용된다.&lt;br&gt;
SS 테이블과 같이 키로 정렬된 키-값을 유지하기 때문에 키-값 검색과 범위 질의에 효과적이다. 로그 구조화 색인 비슷한 점이 이거 뿐이다.&lt;/p&gt;
&lt;p&gt;로그 구조화 색인은 세그먼트로 나누고 항상 순차적으로 세그먼트에 기록하는 방식이지만, B-Tree 는 4KB 크기(때로는 더 큰)의 고정 블록이나 페이지로 나누고 한번에 하나의 페이지에 읽기 또는 쓰기를 한다.&lt;br&gt;
디스크가 고정 크기 블록으로 배열되기 때문에 하드웨어와 더 밀접한 관련이 있다.&lt;/p&gt;
&lt;p&gt;각 페이지는 주소나 위치를 통해 식별할 수 있고, 이 방식 때문에 다른 페이지를 참조할 수도 있다(포인트와 비슷하지만 메모리 대신에 디스크에 있다).&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_6.png&#34; alt=&#34;그림 3-6&#34;&gt;&lt;br&gt;
&lt;em&gt;그럼 3-6. B 트리 색인을 이용한 key 검색(각 페이지가 다른 페이지를 참조하는 모습을 묘사함)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;한 페이지가 B 트리의 루트(root) 로 지정된다. 위 예제에서 보면 키 251을 찾기 위해 루트의 200~300 경계 사이의 페이지 참조를 따라가고, 다시 더 작은 범위로 나눈 페이지로 이동한다.&lt;br&gt;
최종적으로 개별 키(leaf page)를 포함한 페이지에 도달한다.&lt;/p&gt;
&lt;p&gt;B 트리의 한 페이지에서 하위 페이지를 참조(ref)하는 수를 분기 계수(branching factor)라고 부른다. 위 예제에서의 분기 계수는 6이다. 실제로 분기 계수는 페이지 참조와 범위 경계를 저장하는데 보통 수백 개에 달한다.&lt;/p&gt;
&lt;p&gt;B 트리에 존재하는 키의 값의 값을 갱신하려면, 키를 포함하고 있는 리프(leaf) 페이지를 검색하고 페이지의 값을 바꾼 다음 페이지를 디스크에 다시 기록한다.&lt;br&gt;
새로운 키를  추가하려면, 새로운 키의 범위를 포함하는 페이지를 찾아 해당 페이지에 키와 값을 추가한다.&lt;br&gt;
새로운 키를 수용한 페이지에 충분한 공간이 없다면, 페이지를 반쯤 채워 페이지 둘로 나누고 상위 페이지가 새로운 키 범위의 하위 부분을 알 수 있게 갱신하는 작업을 한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_7.png&#34; alt=&#34;그림 3-7&#34;&gt;&lt;br&gt;
&lt;em&gt;그럼 3-7. 페이지 분리로 커진 B-Tree&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;이 알고리즘은 트리가 계속 균형을 유지하는 것을 보장한다. n개의 키를 가진 B 트리는 깊이가 항상 O(logn) 이다. 대부분 DB에서 깊이는 3~4 단계면 충분하다.&lt;br&gt;
분기 계수 500의 4KB페이지의 4단계 트리는 256TB 까지 저장할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_Time-complexity.png&#34; alt=&#34;시간 복잡도&#34;&gt;&lt;br&gt;
&lt;em&gt;그림. 시간 복잡도&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&#34;신뢰할-수-있는-b트리-만들기-making-b-trees-reliable&#34;&gt;신뢰할 수 있는 B트리 만들기 (Making B-trees reliable)&lt;/h4&gt;
&lt;p&gt;B 트리의 기본적인 쓰기 동작은 새로운 데이터를 디스크 상 페이지에 덮어쓴다. 이 동작은 덮어 쓰기가 페이지 위치를 변경하지 않는다고 가정한다. 페이지를 덮어 쓴다고 해도 페이지를 가리키는 참조는 온전하게 남는다.&lt;/p&gt;
&lt;p&gt;LSM 트리와 같은 로그 구조화 색인과는 대조적이다. 로그 구조화는 색인 파일을 추가할 뿐 같은 같은 위치의 파일은 변경하지 않는다.&lt;/p&gt;
&lt;p&gt;디스크 페이지를 덮어쓰는 일은 실제 H/W 동작이라 생각할 수 있다. SSD의 경우는 칩의 상당한 블록을 한번에 지우고 다시 쓰기를 해야하기 때문에 조금 더 복잡하다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;데이터 고장시 복구&lt;/strong&gt;&lt;br&gt;
일부 페이지만 기록하고 데이터베이스가 고장이 난다면 결국 색인이 훼손되기 때문에 매우 위험하다.&lt;/p&gt;
&lt;p&gt;데이터베이스가 고장이 난 상황에 스스로 복구하게 하려면, 쓰기전 로그(Write-ahead log, WAL, (재실행 로그, redo log)라고도 함)라는 데이터 구조를 추가 B-Tree를 구현한다.&lt;/p&gt;
&lt;p&gt;쓰기 전 로그는 B-Tree의 변경 사항을 기록하는 추가 전용(append-only) 파일이다. 이 로그는 고장 이후 복구될 때 일관성 있게 B-Tree를 복원하는 데 사용한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;동시성 제어&lt;/strong&gt;&lt;br&gt;
다중 스레드가 동시에 B-Tree에 접근한다면 주의 깊게 동시성 제어를 해야하는데, 이때 랜치(latch, 가벼운 잠금(lock))로 트리를 보호한다.&lt;/p&gt;
&lt;p&gt;로그 구조화 접근 방식은 이 상황에서 더 간단하다. 유입 질의에 간섭 없이 백그라운드에서 모든 병합를 수행하고 이따금 원자적으로 새로운 새그먼트 이전 세그먼트로 바꾸기 때문이다.&lt;/p&gt;
&lt;h4 id=&#34;b-트리-최적화-b-tree-optimizations&#34;&gt;B 트리 최적화 (B-tree optimizations)&lt;/h4&gt;
&lt;p&gt;B 트리는 오랜 동안 사용되면서 개발된 많은 최적화 기법이 있다. 몇가지를 언급하자면 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;페이지 덮어쓰기와 WAL을 유지하는 대신, 쓰기 시 복사 방식(copy-on-write scheme)을 사용한다. 변경된 페이지는 다른 위치에 기록하고 트리 상위 페이지의 새로운 버젼을 만들어 새로운 위치를 가리킨다.
&lt;ul&gt;
&lt;li&gt;동시성 제어에 유용하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;페이지에 전체 키를 저장하는 것이 아니라 키를 축약해 쓰면 공간을 절약할 수 있다. 페이지 하나에 키를 더 많이 채워 더 높은 분기 계수를 얻는다.
&lt;ul&gt;
&lt;li&gt;leaf 를 찾는 깊이 수준을 낮출 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;페이지는 디스크 상 어디든지 존재할 수 있다. 하지만 leaf 페이지 만큼은 디스크 상 연속된 순서로 나타나게끔 트리를 배치하려 시도한다.(하지만 트리가 커진다면 어렵다)
&lt;ul&gt;
&lt;li&gt;로그 구조화 기반과 비교하면, 병합과 압축 과정에서 세그먼트를 다시 쓰기 때문에 연속된 키를 더 가깝게 유지하기 쉽다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;트리에 포인터를 추가하여, 상위 페이지로 이동하지 않고 형제 페이지로 바로 이동하게 만들 수 있다.&lt;/li&gt;
&lt;li&gt;프랙탈 트리(fratal tree)와 같은 B 트리 변형은 디스크 찾기를 줄이기 위해 로그 구조화 개념을 일부 빌렸다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;b-트리와-lsm-트리-비교&#34;&gt;B 트리와 LSM 트리 비교&lt;/h3&gt;
&lt;p&gt;B 트리가 LSM 트리보다 일반적으로 구현 성숙도가 더 높지만 LSM 트리도 그 성능 특성 때문에 여전히 관심을 받는다.&lt;/p&gt;
&lt;p&gt;LSM은 쓰기에 빠르고 B-tree 는 읽기에 더 빠르다. 읽기가 보통 LSM 트리에서 더 느린 이유는 컴팩트 단계에 있는 여러 데이터 구조와 SS 테이블을 확인해야 하기 때문이다.&lt;/p&gt;
&lt;h4 id=&#34;lsm-트리의-장점-advantages-of-lsm-trees&#34;&gt;LSM 트리의 장점 (Advantages of LSM-trees)&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;B-Tree
&lt;ul&gt;
&lt;li&gt;색인은 모든 데이터 조각을 최소한 두번 기록한다.
&lt;ul&gt;
&lt;li&gt;쓰기 전 로그(WAL)에 한번, 트리 페이지에 한번(페이지가 분리될 때 다시 기록) 이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;해당 페이지 내 몇 byte 만 바뀌어도 전체 페이지를 기록해야 하는 오버헤드가 존재하기도 한다.&lt;/li&gt;
&lt;li&gt;일부 엔진은 전원 장애가 발생했을 때 일부만 갱신된 페이지로 끝나지 않게 두번 덮어 쓴다.(innoDB)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;LSM (로그 구조화 색인)
&lt;ul&gt;
&lt;li&gt;SS테이블의 반복된 compaction, merge 로 여러번 다시쓴다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이렇게 한번 쓸때 여러번 쓰는 작업을 쓰기 증폭(write amplification)이라 하는데, SSD의 경우 블록에 덮어 쓰기 횟수가 정해져 있기 때문에 쓰기 증폭은 특별한 관심사 이다.&lt;/p&gt;
&lt;p&gt;쓰기가 많은 애플리케이션에서 디스크의 쓰기 증폭이 성능에 중요한 영향을 미친다.(저장소 엔진이 기록할수록 디스크 대역폭 내 초당 쓰기는 점점 줄어든다)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;LSM 트리는 B 트리보다 쓰기 처리량을 높게 유지할 수 있다.
&lt;ul&gt;
&lt;li&gt;컴팩트과 병합 작업 때문에 B 트리에 비해 쓰기 증폭이 낮다. 특히 HDD 라면 순차 쓰기가 임의 쓰기 보다 훨씬 더 빠르기 때문에 적합하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;LSM 트리는 압축률이 좋다.
&lt;ul&gt;
&lt;li&gt;B 트리보다 더 적은 파일을 생성한다.&lt;/li&gt;
&lt;li&gt;B tree 는 파편화로 인해 디스크 공간 일부가 남는다. (일부 공간을 사용하지 않음)&lt;/li&gt;
&lt;li&gt;SS테이블을 다시 기록하면서 저장소 오버헤드가 낮다.&lt;/li&gt;
&lt;li&gt;이 장점은 SSD 에서도 유리하다(SSD는 임의 쓰기를 순차 쓰기로 전환할때 LSM 알고리즘을 사용한다)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;lsm-트리의-단점-downsides-of-lsm-trees&#34;&gt;LSM 트리의 단점 (Downsides of LSM-trees)&lt;/h4&gt;
&lt;p&gt;LSM 트리의 단점은 캠팩트 과정으로 인해 읽기와 쓰기의 성능에 영향을 준다.&lt;/p&gt;
&lt;p&gt;디스크가 가진 자원은 한계가 있다. 그래서 디스크에서 값 비싼 컴팩트 연산이 끝날 때까지 요청이 대기해야 하는 상황이 발생하기 쉽다.&lt;/p&gt;
&lt;p&gt;물론 처리량과 평균 응답 시간이 성능에 주는 영향은 작지만, 백분위로 비교하면 종종 매우 길어지는 시간이 존재한다.&lt;/p&gt;
&lt;p&gt;반면, B 트리의 성능은 상대적으로 예측하기 쉽다.&lt;/p&gt;
&lt;p&gt;쓰기 처리량이 높다 하더라도 설정을 주의 깊게 하지 않으면 컴팩션이 유입 속도를 따라가지 못하는 경우가 발생한다. 유입 속도에 맞춰 컴팩션이 줄어드는것이 아니기 때문에 이런 상황을 감지하기 위한 명시적인 모니터링이 필요하다.&lt;/p&gt;
&lt;p&gt;또한, 키의 다중 복사본이 여러 세그먼트에 존재할 수 있다. B 트리는 이것이 한 곳에 모여 있기 때문에 강력한 트랜잭션 시멘틱(semantic)을 제공하는 데이터베이스는 B 트리가 더 매력적일 수 밖에 없다(제세한 내용은 7장).&lt;/p&gt;
&lt;p&gt;요즘 나오는 저장소는 LSM 방식을 많이 채택하는데 그럼에도 불구하고 많은 작업 부하에 B 트리는 지속적으로 좋은 성능을 나타내기 때문에 사라질 가능성은 거의 없다.&lt;/p&gt;
&lt;h3 id=&#34;기타-색인-구조-other-indexing-structures&#34;&gt;기타 색인 구조 (Other Indexing Structures)&lt;/h3&gt;
&lt;p&gt;키-값 색인의 대표적인 예는 관계형 모델의 기본키(Primary key, PK) 색인이다.&lt;/p&gt;
&lt;p&gt;기본키로 아래와 같이 각 데이터베이스마다 Row/Document/Vertex 고유하게 식별하고 참조할 수 있다.&lt;/p&gt;
&lt;p&gt;색인은 이런 참조를 찾아 때 사용한다.&lt;/p&gt;
&lt;p&gt;보조 색인(secondary index)을 사용하기도 한다.  기본키와의 차이점은 키가 고유하지 않는다는 것이다. 즉, 같은 키를 가진 많은 로우(문서, 정점)가 있을 수 있다.&lt;/p&gt;
&lt;p&gt;이를 해결할 방법으로 색인의 각 값에 일치하는 row 식별자 목록을 만드는 방법 또는 row 식별자를 추가해서 각 키를 고유하게 만드는 방법이 있다.(대리키)&lt;/p&gt;
&lt;p&gt;어느 쪽이든 보조 색인으로 B 트리와 로그 구조화 색인(LSM) 둘 다 사용할 수 있다.&lt;/p&gt;
&lt;h4 id=&#34;색인-안에-값-저장하기-storing-values-within-the-index&#34;&gt;색인 안에 값 저장하기 (Storing values within the index)&lt;/h4&gt;
&lt;p&gt;색인에서 키는 질의가 검색하는 대상이지만, 값은 다음의 두 가지 중에 하나에 해당한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;값은 질문의 실제 Row(document, vertex)이다.&lt;/li&gt;
&lt;li&gt;다른 곳에 저장된 Row를 가리키는 참조(reference)이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;다른 곳을 가리키는 참조가 가리키는 곳을 **힙 파일(heap file)**이라 하는데 특정 순서 없이 데이터를 저장한다(tombstone을 기록할 수도 있다).&lt;/p&gt;
&lt;p&gt;힙 파일 방식을 선택하는 이유는 여러 보조 색인이 존재할 때 데이터 중복을 피할 수 있다. 각 색인은 힙 파일에서 위치만 참조하고 데이터는 일정한 곳에 유지한다.&lt;/p&gt;
&lt;p&gt;힙 파일 접근 방식은 키를 변경하지 않고 값만 갱신할 때 효과적이다.&lt;/p&gt;
&lt;p&gt;변경 될 데이터의 크기가 기존보다 작거나 같다면 record 를 그 자리에 덮어 쓸 수 있다.&lt;/p&gt;
&lt;p&gt;하지만, 크다면 새로운 곳으로 위치를 이동해야 하기 때문에 더 복잡하다. 이는 레코드의 새로운 힙 위치를 가리키게끔 갱신하거나 이전 힙 위치에 포인터를 남겨둬야 하기 때문이다.&lt;/p&gt;
&lt;p&gt;색인에서 힙 파일로 다시 이동하는 일은 읽기 성능에 불이익이 너무 많기 때문에, 어떤 상황에서는 색인 안에 바로 색인된 로우를 저장하는 편이 바람직하다. 이를 **클러스터드 색인(clustered index)**이라고 한다.&lt;/p&gt;
&lt;p&gt;MySQL의 InnoDB의 경우 PK는 언제나 clustered index 이고 보조 색인은 기본키를 참조한다.&lt;/p&gt;
&lt;p&gt;클러스터드 색인과 비-클러스터드 색인(non-clustered index) 사이의 절충안을 &lt;strong&gt;커버링 색인(covering index)&lt;/strong&gt; 혹은 **포괄열이 있는 색인(index with included column)**이라고 한다.&lt;/p&gt;
&lt;p&gt;이 색인은 색인(index) 안에 테이블의 컬럼일부를 저장한다. 이렇게 하면 색인만 사용해 일부 query 응답이 가능하다(색인이 질의를 cover 했다고 말함)&lt;/p&gt;
&lt;p&gt;클러스터드 색인과 커버링 색인은 읽기 성능을 높일 수 있지만, 추가적인 저장소가 필요하고 쓰기 과정에서 오버헤드가 발생한다.&lt;/p&gt;
&lt;h4 id=&#34;다중-칼럼-색인-multi-column-indexes&#34;&gt;다중 칼럼 색인 (Multi-column indexes)&lt;/h4&gt;
&lt;p&gt;다중 컬럼에 동시에 질의할 때 **결합 색인(concatenated index)**을 사용한다. 하나의 컬럼에 다른 컬럼을 추가하는 방식으로 하나의 키에 여러 필드를 결합하는 것이다.&lt;/p&gt;
&lt;p&gt;전화번호부와 유사하게 (성, 이름)이 순서가 정렬된 경우에 특정 성을 가진 사람을 찾거나, 특정 성 이름 조합으로 모든 사람을 찾을 때는 이 색인을 사용할 수 있지만,&lt;/p&gt;
&lt;p&gt;특정 이름을 가진 모든 사람을 찾을 때는 쓸모가 없다.&lt;/p&gt;
&lt;p&gt;다차원 색인은 지리 공간 데이터에 중요하게 사용되는데, 경위도에 대해 다음과 같은 이차원 범위 질의가 필요하다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;select&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;from&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;restaurants&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;where&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;latitude&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4946&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;and&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;latitude&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;51&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;5079&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;and&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;longitude&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1162&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;and&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;longitude&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1004&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;B 트리나 LSM 는 이러한 색인 유형에 효율적으로 응답할 수 없다.&lt;/p&gt;
&lt;p&gt;한가지 방법은 &lt;a href=&#34;https://en.wikipedia.org/wiki/Space-filling_curve&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;2차원 위치를 공간 채움 곡선(space-filling curve)&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; 을 이용해 단일 숫자로 변환하여 B 트리 색인을 하는 것이다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_Space-filling-curve.png&#34; alt=&#34;Space-filling curve&#34;&gt;&lt;br&gt;
&lt;em&gt;그림. Space-filling curve&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;좀 더 일반적인 방식은 PostGIS와 같이 R 트리처럼 전문 공간 색인(specialized spatial index)을 사용하는 것이다.&lt;/p&gt;
&lt;p&gt;그밖에 다차원 색인은 여러 곳에서 활용된다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;전자 상거래 웹 사이트에서 특정 색상을 위해 (빨강, 초록, 파랑)의 3차원 색인&lt;/li&gt;
&lt;li&gt;날씨 관측 데이터베이스에서 2013년에 기혼이 25도에서 40도 사이인 모든 관측을 찾기 위해(날짜, 기온)의 2차원 색인&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;전문-검색-색인과-퍼지-색인-full-text-search-and-fuzzy-indexes&#34;&gt;전문 검색 색인과 퍼지 색인 (Full-text search and fuzzy indexes)&lt;/h4&gt;
&lt;p&gt;지금까지는 키의 정환한 값이나 정렬된 키의 값의 범위를 질의할 수 있다고 가정한다. 하지만, 철자가 틀린 단어와 같이 유사한 혹은 애매모호한(fuzzy) 질의에는 다른 기술이 필요하다.&lt;/p&gt;
&lt;p&gt;예를 들어, 전문 검색 엔진은 단어를 검색할 때 단어의 동의어로 질의를 확장한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;단어의 문법적 활용을 무시하고 동일한 문서에서 서로 인접해 나타난 단어를 검색&lt;/li&gt;
&lt;li&gt;언어학적으로 텍스트를 분석해 사용하는 등 다양한 기능을 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;루씬은 문서나 질의의 오타에 대처하기 위해 특정 편집 거리(edit distance) 내 단어를 검색할 수 있는 기능이 있다. 앞서 설명 했듯 루씬은 SS 테이블 같은 구조를 사용한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_finite-state-automation.png&#34; alt=&#34;Space-filling curve&#34;&gt;&lt;br&gt;
&lt;em&gt;그림. 유한 상태 오토마톤 (finite state automation)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;SS테이블은 인메모리 색인이 필요한데 루씬에서 인메모리 색인은 여러 키 내 문자에 대한 유한 상태 오토마톤으로 트라이(trie)와 유사한 메모리 색인을 사용한다.&lt;/p&gt;
&lt;p&gt;그밖에 퍼지 검색 기술은 문서 분류 및 머신머닝의 방향으로 진행되고 있다.&lt;/p&gt;
&lt;h4 id=&#34;모든-것을-메모리에-보관-keeping-everything-in-memory&#34;&gt;모든 것을 메모리에 보관 (Keeping everything in memory)&lt;/h4&gt;
&lt;p&gt;지금까지는 설명한 데이터 구조는 디스크 한계에 대한 해결책이었다. 디스크는 메인 메모리보다 비교해 다루기 어렵다. 디스크와 SSD를 사용할 때 읽기 쓰기에 좋은 성능을 원한다면, 주의해서 데이터를 디스크(HDD, SSD)에 배치해야 한다.&lt;/p&gt;
&lt;p&gt;이러한 불편함에도 불구하고 디스크를 선택하는 이유는 &lt;strong&gt;지속성&lt;/strong&gt;과 &lt;strong&gt;가격&lt;/strong&gt; 때문이다.&lt;/p&gt;
&lt;p&gt;램(ram)이  점점 저렴해지기 때문에 가격 논쟁은 약해졌다. 데이터셋 대부분은 충분히 크지 않기 때문에 메모리에 전체를 보관하는 방식도 꽤 현실적이고, 여러 장비간 분산해서 보관할 수도 있다.&lt;/p&gt;
&lt;p&gt;이런 이유로 인메모리 데이터베이스가 개발되었다.&lt;/p&gt;
&lt;p&gt;맴캐시드 같은 경우는 데이터 손실을 허용하는 캐시 용도로만 사용되지만, 다른 인메모리 DB는 지속성을 목표로 하여 배터리 전원을 공급 RAM 과 같은 특수 장비를 사용하거나 디스크를 함께 사용하여 주기적인 snapshot을 만드는 방식으로 지속성 문제를 해결한다.&lt;/p&gt;
&lt;p&gt;인메모리 DB가 재시작 되는 경우 특수 장비를 사용하지 않는다면 지속성을 위한 추가 전용(append-only) 로그와 함께 사용한다. 인메모리는 디스크에 데이터가 저장되더라도 읽기는 전적으로 메모리에서 제공된다.&lt;/p&gt;
&lt;p&gt;디스크 상의 파일은 쉽게 백업이 가능하고, 외부 유틸을 사용해 검사와 분석도 가능하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VoltDB, MemSQL, Oracle TimeTen
&lt;ul&gt;
&lt;li&gt;관계형 모델의 인메모리 데이터베이스&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Ram Cloud
&lt;ul&gt;
&lt;li&gt;지속성 있는 오픈소스 인메모리 키-값 저장소&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Redis, Couchbase
&lt;ul&gt;
&lt;li&gt;비동기로 디스크에 기록하기 때문에 약한 지속성 제공&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;직관에 어긋나지만, 인메모리 DB의 성능 장점은 디스크에서 읽지 않아도 되기 때문이 아니다. 심지어 OS가 최근에 사용한 디스크 블럭을 메모리에 캐시하기 때문에 충분한 메모리를 가진 경우 디스크 기반 저장소도 디스크 에서 데이터를 읽지 않기도 한다.&lt;br&gt;
오히려 메모리의 데이터 구조를 디스크에 기록하기 위해 부호화 하는 과정의 오버헤드를 피할 수 있기 때문에 더 빠를 수도 있다.&lt;/p&gt;
&lt;p&gt;성능 이외에도 인메모리 데이터베이스는 디스크 기반의 색인이 제공하지 못하는 데이터 모델을 제공한다. 예를들어, 레디스는 우선 순위 큐와 셋(set) 같은 데이터 구조를 데이터베이스의 인터페이스로 제공하기 때문에 구현이 간단하다.&lt;/p&gt;
&lt;p&gt;최근 연구에서는 인메모리 데이터베이스 아키텍쳐가 디스크 중심 아키텍쳐에서 발생하는 오버헤드를 제거하고 가용한 메모리 보다 큰 데이터셋(dataset)을 지원하게끔 확장할 수 있다.&lt;br&gt;
소희 안티 캐싱(anti-caching)은 메모리가 충분하지 않을 때 사용하는데 최근에 사용하지 않는 데이터를 디스크로 내보내고 나중에 다시 접근할 때 메모리에 적재하는 방식으로 동작한다(위의 설명이 anti-caching을 의미한다).&lt;br&gt;
이는 운영 체제가 가상 메모리와 swap 파일에서 수행하는 방식이 유사하지만, 데이터베이스는 전체 메모리 페이지보다 개별 레코드 단위로 작업하기 때문에 OS 보다 더 효율적으로 메모리를 관리할 수 있다.&lt;br&gt;
하지만 이 접근 방식은 여전히 전체 색인이 메모리에 있어야 한다.&lt;/p&gt;
&lt;h2 id=&#34;트랜젝션-처리나-분석&#34;&gt;트랜젝션 처리나 분석?&lt;/h2&gt;
&lt;p&gt;초창기 비즈니스 모델은 논리 단위의 형태로 읽기와 쓰기 그룹을 나타내는 커머셜 트랜잭션(commercial transaction, 상거래)에 해당한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;금전 거래가 아닌 영역으로 데이터베이스가 확장됐어도 트랜잭션이란 용어는 변하지 않고 논리 단위 형태로서 읽기와 쓰기 그룹을 나타내고 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;온라인 트랜잭션 처리(OnLine Transaction Processing, OLTP)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;레코드가 사용자 입력을 기반으로 삽입되거나 갱신됨&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;온라인 분석 처리(OnLine Analytic Processing, OLAP)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터 분석 용도&lt;/li&gt;
&lt;li&gt;많은 수의 레코드를 스캔해 레코드당 일부 칼럼만 읽어 집계 통계를 계산
&lt;ul&gt;
&lt;li&gt;ex) 1월의 각 매장의 총 수익, 평소보다 많은 프로모션 기간의 바나나 판매량&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;비즈니스 분석가가 작성하고 회사 경영진에게 제공해 의사결정을 돕는다.
&lt;ul&gt;
&lt;li&gt;비즈니스 인텔리전스(business intelligence)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;트랜잭션 처리와 분석 시스템의 특징 비교&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;특성&lt;/th&gt;
&lt;th&gt;트랜잭션 처리 시스템(OLTP)&lt;/th&gt;
&lt;th&gt;분석 시스템(OLAP)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;주요 읽기 패턴&lt;/td&gt;
&lt;td&gt;질의당 적은 record, 키 기준 fetch&lt;/td&gt;
&lt;td&gt;많은 record 에 대한 집계&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;주요 쓰기 패턴&lt;/td&gt;
&lt;td&gt;임의 접근, 사용자 입력을 낮은 지연 시간&lt;/td&gt;
&lt;td&gt;대규모 불려오기(bulk import, ETL), 이벤트 스트림(event stream)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;주요 사용처&lt;/td&gt;
&lt;td&gt;웹 앱, 사용자, 소비자	의사 결정을 위한 내부 분석가&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;데이터 표현	데이터의 최신 상태(현재 시점, 실시간)	시간이 지나며 발생된 이력(과거)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;데이터셋 크기&lt;/td&gt;
&lt;td&gt;기가바이트에서 테라바이트&lt;/td&gt;
&lt;td&gt;테라바이트에서 페타바이트&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;최적화 방법&lt;/td&gt;
&lt;td&gt;트랜잭션 효율화, 무결성의 극대화	조회 속도, 정보의 가치, 편의성&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;데이터의 특성&lt;/td&gt;
&lt;td&gt;트랜잭션 중심&lt;/td&gt;
&lt;td&gt;정보 중심&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;처음에는 트랜잭션 처리와 분석 질의를 위해 동일한 데이터베이스를 사용했다.&lt;/li&gt;
&lt;li&gt;개별 데이터베이스를 데이터 웨어하우징(Data warehouse)라고 불렸다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;데이터-웨어하우징&#34;&gt;데이터 웨어하우징&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;OLTP 작업에 영향을 주지 않고 마음껏 질의할 수 있는 개별 데이터베이스&lt;/li&gt;
&lt;li&gt;회사 내의 모든 다양한 OLTP 시스템에 있는 데이터의 읽기 전용 복사본&lt;/li&gt;
&lt;li&gt;개별 데이터 웨어하우스를 사용하면 분석 접근 패턴에 맞게 최적화 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;ETL(Extract-Transform-Load)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;OLTP 데이터베이스에서 데이터를 추출(extract)하고&lt;/li&gt;
&lt;li&gt;분석 친화적인 스키마로 변환(transform)하고&lt;/li&gt;
&lt;li&gt;데이터 웨어하우스에 적재(load)한다&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_8.png&#34; alt=&#34;그림 3-8&#34;&gt;&lt;br&gt;
&lt;em&gt;그럼 3-8. 데이터 웨어하우스에 대한 ETL의 간략한 개요&lt;/em&gt;&lt;/p&gt;
&lt;h4 id=&#34;oltp-데이터베이스와-데이터-웨어하우스의-차이점-the-divergence-between-oltp-databases-and-data-warehouses&#34;&gt;OLTP 데이터베이스와 데이터 웨어하우스의 차이점 (The divergence between OLTP databases and data warehouses)&lt;/h4&gt;
&lt;p&gt;표면적으로 데이터 웨어하우스와 관계형 OLTP 데이터베이스는 둘 다 SQL 질의 인터페이스를 지원하기 떄문에 비슷해보인다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;하지만 각각 매우 다른 질의 패턴에 맞게 최적화됐기 때문에 시스템의 내부는 완전히 다르다.&lt;/li&gt;
&lt;li&gt;공통 SQL 인터페이스로 접근할 수 있는 저장소와 질의 엔진으로 점점 분리되고 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;상용 라이선스 데이터 웨어하우스 벤더&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;테라데이터(Teradata)&lt;/li&gt;
&lt;li&gt;버티카(Vertica)&lt;/li&gt;
&lt;li&gt;SAP 하나&lt;/li&gt;
&lt;li&gt;파르에이셀(ParAccel)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;오픈소스 SQL 온 하둡(SQL-on-Hadoop)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;아파치 하이브(Apache Hive)&lt;/li&gt;
&lt;li&gt;스파크 SQL(Spark SQL)&lt;/li&gt;
&lt;li&gt;클라우데라 임팔라(Cloudera Impala)&lt;/li&gt;
&lt;li&gt;페이스북 프레스토(Facebook Presto)&lt;/li&gt;
&lt;li&gt;아파치 타조(Apache Tajo)&lt;/li&gt;
&lt;li&gt;아파치 드릴(Apache Drill)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_sql-on-hadoop.png&#34; alt=&#34;Sql on Hadoop&#34;&gt;&lt;br&gt;
&lt;em&gt;그럼. Sql on Hadoop&lt;/em&gt;&lt;/p&gt;
&lt;h3 id=&#34;분석용-스키마-별-모양-스키마와-눈꽃송이-모양-스키마-stars-and-snowflakes-schemas-for-analytics&#34;&gt;분석용 스키마: 별 모양 스키마와 눈꽃송이 모양 스키마 (Stars and Snowflakes: Schemas for Analytics)&lt;/h3&gt;
&lt;p&gt;별 모양 스키마(star schema - 차원 모델링 dimensional modeling)로 알려진 정형화된 방식을 사용한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;사실 테이블(fact table)이 가운데에 있고 차원 테이블로 둘러싸고 있는 모양&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_9.png&#34; alt=&#34;그림 3-9&#34;&gt;&lt;br&gt;
&lt;em&gt;그럼 3-9. 데이터 웨어하우스에서 사용하는 별 모양 스키마 예제&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;사실 테이블(fact table): fact_sales&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;특정 시각에 발생한 이벤트(제품 구매)
사실 테이블의 다른 컬럼은 차원 테이블(dimension table)이라 부르는 다른 테이블을 가리키는 외래 키 참조다&lt;/p&gt;
&lt;p&gt;차원은 이벤트의 속성&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;누가(dim_customer)&lt;/li&gt;
&lt;li&gt;언제(dim_date)&lt;/li&gt;
&lt;li&gt;어디서(dim_store)&lt;/li&gt;
&lt;li&gt;무엇을(dim_product)&lt;/li&gt;
&lt;li&gt;어떻게(dim_promotion) ??&lt;/li&gt;
&lt;li&gt;왜&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;위에 그림에서 상품 정보(dim_product)는 아래 테이블과 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;product_sk&lt;/th&gt;
&lt;th&gt;stock-keeping unit, SKU&lt;/th&gt;
&lt;th&gt;description&lt;/th&gt;
&lt;th&gt;brand_name&lt;/th&gt;
&lt;th&gt;category&lt;/th&gt;
&lt;th&gt;&amp;hellip;&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;제품 키&lt;/td&gt;
&lt;td&gt;재고 관리 코드&lt;/td&gt;
&lt;td&gt;설명&lt;/td&gt;
&lt;td&gt;브랜드 이름&lt;/td&gt;
&lt;td&gt;범주&lt;/td&gt;
&lt;td&gt;그밖에&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;31&lt;/td&gt;
&lt;td&gt;KA9511&lt;/td&gt;
&lt;td&gt;해산물&lt;/td&gt;
&lt;td&gt;아쿠아테크&lt;/td&gt;
&lt;td&gt;애완용품&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;fact_sales 테이블의 각 로우는 특정 트랙잭션에서 제품이 판매되었는지 나타내기 위해 외래키를 사용한다.&lt;br&gt;
여러 다양한 제품을 동시에 구매함녀 사실 테이블에는 개별 로우로 표시된다.&lt;br&gt;
심지어 날짜, 시간 등을 모두 차원 테이블(dimension table) 을 통해 표현한다. 이러한 차원 테이블은 추가적인 정보를 부호화할 수 있고 휴일과 평일의 판매 차이를 질의할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;눈꽃송이 모양 스키마(snowflake schema)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;별 모양 스키마의 변형이다.&lt;/li&gt;
&lt;li&gt;차원이 하위차원으로 더 세분화된다.
&lt;ul&gt;
&lt;li&gt;질의를 수행하기 위해서 더 많은 조인을 필요 → 검색의 효과를 감소 → 시스템의 성능에 악영향을 끼칠 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;데이터웨어하우스는 설계에 있어서 스타스키마 만큼 널리 쓰이지 않는다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_star-schema.jpg&#34; alt=&#34;Star schema&#34;&gt;&lt;br&gt;
&lt;em&gt;그림. Star schema&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_Snowflake-schema-example.png&#34; alt=&#34;Snowflake schema example&#34;&gt;&lt;br&gt;
&lt;em&gt;그림. Snowflake schema example&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&#34;컬럼-지향-저장소-column-oriented-storage&#34;&gt;컬럼 지향 저장소 (column-Oriented Storage)&lt;/h2&gt;
&lt;p&gt;데이터 웨어하우스의 사실 테이블에는 엄청난 개수의 로우의 페타바이트 데이터가 있다면 효율적으로 저장하고 질의하기에는 어려운 문제가 있다.&lt;/p&gt;
&lt;p&gt;Large Data Means?&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1000 Kilobytes = 1 Megabyte&lt;/li&gt;
&lt;li&gt;1000 Megabytes = 1 Gigabyte&lt;/li&gt;
&lt;li&gt;1000 Gigabytes = 1 Terabyte&lt;/li&gt;
&lt;li&gt;1000 Terabytes = 1 Petabyte&lt;/li&gt;
&lt;li&gt;1000 Petabytes = 1 Exabyte&lt;/li&gt;
&lt;li&gt;1000 Exabytes = 1 Zettabyte&lt;/li&gt;
&lt;li&gt;1000 Zettabytes = 1 Yottabyte&lt;/li&gt;
&lt;li&gt;1000 Yottabytes = 1 Bronobyte&lt;/li&gt;
&lt;li&gt;1000 Bronobytes = 1 Geobyte&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_Floppy-disk.jpg&#34; alt=&#34;플로피 디스크&#34;&gt;&lt;br&gt;
&lt;em&gt;그림. 플로피 디스크&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;8인치: 250KB&lt;/li&gt;
&lt;li&gt;5.25인치: 500KB ~ 1.2MB&lt;/li&gt;
&lt;li&gt;3.5인치: 1.44MB&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;일반적으로 데이터 웨어하우스에서 한번에 4, 5개의 컬럼만 접근한다 (SELECT * 를 사용하는 일은 거의 없다)&lt;/p&gt;
&lt;p&gt;사람들이 요일에 따라 신선 과일을 사고싶어하는지 사탕을 더 사고싶어 하는지 분석하기&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-SQL&#34; data-lang=&#34;SQL&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SELECT&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dim_date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;weekday&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dim_product&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;category&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;SUM&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fact_sales&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;quantity&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AS&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;quantity_sold&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fact_sales&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;JOIN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dim_date&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;       &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fact_sales&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;date_key&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dim_date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;date_key&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;JOIN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dim_product&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;  &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fact_sales&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;product_sk&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dim_product&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;product_sk&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;WHERE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dim_data&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;year&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2013&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dim&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;product&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;category&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;IN&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;fresh fruit&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;Candy&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;GROUP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;BY&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;     &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dim_date&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;weekday&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;dim_product&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;category&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;대부분의 OLTP 데이터베이스에서 저장소&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;로우 지향 방식으로 데이터를 배치한다.&lt;/li&gt;
&lt;li&gt;데이틀에 한 로우의 모든 값은 서로 인접하게 저장된다.
&lt;ul&gt;
&lt;li&gt;문서 데이터베이스와 유사하다. 문서 데이터베이스는 전체 문서를 보통 하나의 연속된 바이트 열로 저장한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;fact_sales 에서 3개의 컬럼에만 접근한고 했을 때, &lt;em&gt;date_key&lt;/em&gt;, &lt;em&gt;product_sk&lt;/em&gt; 둘 중하나에만 색인이 있다고 가정하자.&lt;/p&gt;
&lt;p&gt;이 색인은 저장소 엔진에 &lt;em&gt;특정 날짜&lt;/em&gt;나 &lt;em&gt;특정 제품&lt;/em&gt;의 모든 판매 내용을 찾을 수 있는 위치를 알려준다.&lt;/p&gt;
&lt;p&gt;하지만 위와 같은 질의를 처리하기 위해서는 &lt;strong&gt;디스크에서 100개 이상의 속성을 포함하는 로우(row)를 모두 메모리에 적재&lt;/strong&gt;하고,&lt;/p&gt;
&lt;p&gt;구문을 분석하여 필요한 조건을 충족하는 로우를 필터링 하는 방식으로 대응하는데 이것은 &lt;strong&gt;시간이 너무 오래걸린다.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;컬럼 지향 저장소&lt;/strong&gt;의 개념은 모든 값을 하나의 로우에 저장하지 않고 모든 값(column)을 함께 저장한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;각 칼럼은 개별 파일에 저장하면 질의에 필요한 칼럼만 읽고 구문 분석할 수 있다.&lt;/li&gt;
&lt;li&gt;각 칼럼 파일에 포함된 로우가 모두 순서가 같아야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_10.png&#34; alt=&#34;그림 3-10&#34;&gt;&lt;br&gt;
&lt;em&gt;그럼 3-10. 관계형 데이터를 로우 단위가 아닌 컬럼 단위로 저장&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;컬럼 지향 저장소 배치는 각 컬럼 파일에 포함된 로우가 모두 같은 순서인 점에 의존한다.&lt;br&gt;
예를 들면, 23번째 데이터를 모두 모으려면 컬럼별로 23번째에 해당하는 모든 데이터를 가져오면 된다.&lt;/p&gt;
&lt;h3 id=&#34;컬럼-압축&#34;&gt;컬럼 압축&lt;/h3&gt;
&lt;p&gt;데이터를 압축하면 디스크 처리량을 줄일 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;컬럼 저장소는 대개 압축에 적합하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;컬럼의 데이터에 따라 다양한 압축 기법을 사용할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터 웨어하우스에 효과적인 압축 중 비트맵 부호화(bitmap encoding)이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_11.png&#34; alt=&#34;그림 3-11&#34;&gt;&lt;br&gt;
&lt;em&gt;그럼 3-11. 압축된 단일 칼럼의 비트맵 저장소&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;보통 컬럼에서 고유 값의 수는 로우에 비해 적다.(판매되는 제품의 고유한 수가 10만개, 판매 거래는 수십억)&lt;/p&gt;
&lt;p&gt;그러면 n개의 고유 값을 가진 column(69,69,69,69,74,31,31&amp;hellip;) 을 가져와 n개의 개별 비트맵으로 변환하는데(product_sk 별 비트맵을 따로 가짐) 만약 row가 해당 값을 가지면 비트는 1이고 그렇지 않으면 0 이다.&lt;/p&gt;
&lt;p&gt;위와 같은 상황으로 보면 비트맵엔 0이 더 많은데 이것을 런 렝스(run-length) 부호화를 하여 한번 더 압축이 가능하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;런 렝스 부호화&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ex) AABBBBCC(8byte) → A2B4C2(6byte)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;where product_sk in (30, 68, 69)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;product_sk = 30, product_sk = 68, product_sk = 69 에 비트맵 3개를 적재하고 3개 비트맵의 비트를 or 로 계산한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;0&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;1&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;2&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;3&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;4&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;5&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;6&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;7&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;8&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;9&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;10&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;11&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;12&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;13&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;14&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;15&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;16&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;17&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;product_sk = 30&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;product_sk = 68&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;product_sk = 69&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;종합&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;ul&gt;
&lt;li&gt;where product_sk = 31 and store_sk = 3
&lt;ul&gt;
&lt;li&gt;product_sk = 31, store_sk = 3 으로 비트맵을 적재하고 and 계산한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;0&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;1&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;2&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;3&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;4&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;5&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;6&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;7&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;8&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;9&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;10&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;11&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;12&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;13&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;14&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;15&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;16&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;17&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;product_sk = 31&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;product_sk = 3&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;종합&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;&lt;strong&gt;1&lt;/strong&gt;&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;strong&gt;이런 계산은 각 컬럼에 동일한 순서로 row 가 포함되기 때문에 가능하다.&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;B-Tree&lt;/th&gt;
&lt;th&gt;Bitmap index&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;큰 분포도를 갖는 테이블에 적합&lt;/td&gt;
&lt;td&gt;적은 분포도를 갖는 테이블에 적합&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;비교적 키의 갱신 비용이 적음&lt;/td&gt;
&lt;td&gt;갱신 비용이 매우 큼&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OR 사용 Query 비효율적&lt;/td&gt;
&lt;td&gt;OR 사용 Query 효율적&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;OLTP에 유용함&lt;/td&gt;
&lt;td&gt;Cardinality가 낮고 대량의 데이터에 대한 조회 작업이 많은 시스템에 유용함&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;비트맵 인덱스의 탄생 배경&lt;/p&gt;
&lt;p&gt;B-tree 가 가진 문제점을 해결하기 위해..&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;B-tree 인덱스에서는 실제 칼럼 값을 보관: 대용량 데이터를 관리에는 부담&lt;/li&gt;
&lt;li&gt;결합 인덱스에서 조건을 사용하지 않는 칼럼이나 =(equals) 조건이 아닌 칼럼이 결합 인덱스 중간에 있으면 액세스 효율이 떨어짐&lt;/li&gt;
&lt;li&gt;다양한 액세스 패턴을 수용하기 위해 많은 인덱스가 필요할 수 있음&lt;/li&gt;
&lt;li&gt;NOT 이나 NULL을 사용하거나 복잡한 OR 조건에서는 인덱스의 성능을 보장받지 못함&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;BITMAP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;INDEX&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;fact_sales&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;ON&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;sales&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;product_sk&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Tip&lt;/h4&gt;

    &lt;p&gt;칼럼 지향 저장소와 칼럼 패밀리&lt;/p&gt;
&lt;p&gt;카산드라와 HBase는 빅테이블로부터 내려오는 칼럼 패밀리 개념이 있다.&lt;/p&gt;
&lt;p&gt;하지만 이를 칼럼 지향적이라고 부르기에는 오해의 소지가 많다.&lt;/p&gt;
&lt;p&gt;각 칼럼 패밀리 안에는 로우 키에 따라 로우와 모든 칼럼을 함께 저장하며 칼럼 압축을 사용하지 않는다.&lt;/p&gt;
&lt;p&gt;따라서 빅테이블 모델은 여전히 대부분 로우 지향이다.&lt;/p&gt;


&lt;/div&gt;

&lt;h3 id=&#34;메모리-대역폭과-백터화-처리&#34;&gt;메모리 대역폭과 백터화 처리&lt;/h3&gt;
&lt;p&gt;수백만 로우를 스캔해야 하는 데이터 웨어하우스 질의는 디스크로부터 메모리로 데이터를 가져오는 대역폭이 큰 병목이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;분석용 데이터베이스 개발자는 메인 메모리에서 CPU 캐시로 가는 대역폭을 효율적으로 사용한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;클럭: 데이터를 보내는 빠르기&lt;/li&gt;
&lt;li&gt;대역폭: 한 번에 전송되는 데이터의 양&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;CPU 명령 처리 파이프라인에서 분기 예측 실패(branch misprediction)와 버블(bubble)을 피해야 한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_%E1%84%87%E1%85%AE%E1%86%AB%E1%84%80%E1%85%B5%E1%84%8B%E1%85%A8%E1%84%8E%E1%85%B3%E1%86%A8_4%E1%84%83%E1%85%A1%E1%86%AB%E1%84%80%E1%85%A8-%E1%84%91%E1%85%A1%E1%84%8B%E1%85%B5%E1%84%91%E1%85%B3%E1%84%85%E1%85%A1%E1%84%8B%E1%85%B5%E1%86%AB.png&#34; alt=&#34;분기예측 4단계 파이프라인&#34;&gt;&lt;br&gt;
&lt;em&gt;그럼. 분기예측 4단계 파이프라인&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;다음 실행될 조건문이 어떤 곳으로 분기할 것인지를 확실히 알게 되기 전에 미리 추측하여 실행하여 파이프라인 효율성 확보&lt;/li&gt;
&lt;li&gt;버블: 빈 공간&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;최신 CPU에서 단일 명령 다중 데이터(Single Instruction Multi Data, SIMD) 명령을 사용하게끔 신경 써야 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SIMD: CPU에서 지원되는 명령어 셋으로 하나의 명령어로 동일한 형태/구조의 여러 데이터를 한 번에 처리하는 병렬처리기법&lt;/li&gt;
&lt;li&gt;SISD(Single Instruction Single Data)&lt;/li&gt;
&lt;li&gt;4번의 연산과 1번의 연산
&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/simd.png&#34; alt=&#34;SISD, SIMD&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;벡터화-처리&#34;&gt;벡터화 처리&lt;/h4&gt;
&lt;p&gt;한 번에 처리하는 데이터의 양을 늘려서 CPU 사용률을 높이고 처리속도를 빠르게 하는 기법
비트 AND와 OR같은 연산자는 압축된 칼럼 데이터 덩어리를 바로 연산할 수 있게 설계할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;컬럼-저장소의-순서-정렬&#34;&gt;컬럼 저장소의 순서 정렬&lt;/h3&gt;
&lt;p&gt;로우가 저장되는 순서가 중요하지는 않다.&lt;/p&gt;
&lt;p&gt;하지만 각 칼럼은 독립적으로 정렬하면 안되고 한 칼럼의 k번째 항목이 다른 칼럼 k번째 항목과 같은 로우에 속해야 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;그룹화, 필터링 용이
&lt;ul&gt;
&lt;li&gt;1차 정렬 키를 date_key 로 시간 범위 지정&lt;/li&gt;
&lt;li&gt;product_sk를 보조 정렬 키로 같은 날짜에 판매한 같은 제품 그룹화 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;칼럼 압축에 도움
&lt;ul&gt;
&lt;li&gt;기본 정렬 칼럼은 연속해서 같은 값이 연속해서 길게 반복된다.&lt;/li&gt;
&lt;li&gt;간단한 런 렝스 부호화는 수십억 개의 로우를 가진 테이블이라도 수 킬로바이트로 칼럼을 압축할 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;다양한-순서-정렬&#34;&gt;다양한 순서 정렬&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;데이터 복원력을 위해 데이터를 여러 장비에 복제
&lt;ul&gt;
&lt;li&gt;데이터마다 서로 다른 방식으로 정렬해서 저장 → 질의를 처리할 때 패턴에 적합한 버전 사용 가능&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;컬럼 지향 저장에서 여러 정렬 순서를 갖는 것은 로우 지향 저장에서 2차 색인을 갖는 것과 약간 비슷하다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;로우 지향 저장
&lt;ul&gt;
&lt;li&gt;한 곳(힙 파일이나 클러스터 색인)에 모든 로우를 유지하고 2차 색인은 일치하는 로우를 가리키는 포인터만 포함한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;컬럼 저장 지장
&lt;ul&gt;
&lt;li&gt;일반적인 데이터를 가리키는 포인터가 없고, 단지 값을 포함한 컬럼만 존재한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;칼럼-지향-저장소에-쓰기&#34;&gt;칼럼 지향 저장소에 쓰기&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;칼럼 지향 저장소, 압축, 정렬은 모두 읽기에 더 빠르다.
&lt;ul&gt;
&lt;li&gt;제자리 갱신(update-in-place) 불가&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;쓰기를 위한 해결책은 LSM 트리 구조가 적절하다.
&lt;ul&gt;
&lt;li&gt;쓰기 → 인메모리 저장소로 이동해 정렬된 구조에 추가 → 디스크에 쓸 준비&lt;/li&gt;
&lt;li&gt;디스크의 칼럼 파일에 병합하고 → 대량으로 새로운 파일에 기록&lt;/li&gt;
&lt;li&gt;ex) 버티카&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;집계-데이터-큐브와-구체화-뷰&#34;&gt;집계: 데이터 큐브와 구체화 뷰&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;구체화 집계(materialized aggregate)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;데이터 웨어하우스 질의는 보통 SQL에 COUNT, SUM, AVG, MIN, MAX 같은 집계 함수를 포함한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;동일한 집계를 많은 많은 질의에서 사용한다면 매번 원시 데이터를 처리하는 일은 낭비다.&lt;/li&gt;
&lt;li&gt;질의 자주 사용하는 일부 카운트(count)나 합(sum)을 캐시하는 하는 방법중 하나는 구체화 뷰(materialized view)이다.&lt;/li&gt;
&lt;li&gt;구체화 뷰는 원본데이터의 복사본
&lt;ul&gt;
&lt;li&gt;원본 데이터를 변경하면 구체화 뷰를 갱신해야 함 → DB가 자동으로 수행&lt;/li&gt;
&lt;li&gt;비용이 비싸기 때문에 OLTP에서는 사용하지 않음&lt;/li&gt;
&lt;li&gt;데이터 웨어하우스는 읽기 비중이 크기 때문에 합리적&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;데이터 큐브(data cube)&lt;/strong&gt; 또는 &lt;strong&gt;OLAP 큐브&lt;/strong&gt;라고 알려려진 구체화 뷰는 일반화된 구체화 뷴의 특별한 사례이다.&lt;/p&gt;
&lt;p&gt;&amp;hellip; 이미지 &amp;hellip;
&lt;img src=&#34;https://www.devkuma.com/docs/data-intensive-application/03_12.png&#34; alt=&#34;그림 3-11&#34;&gt;&lt;br&gt;
&lt;em&gt;그럼 3-11. 합으로 데이터를 집계한 2차원 데이터 큐브&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;구체화 데이터 큐브&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;장점
&lt;ul&gt;
&lt;li&gt;특정 질의를 효과적으로 미리 계산했기 때문에 해당 질의를 수행할 때 매우 빠르다.
&lt;ul&gt;
&lt;li&gt;ex) 어제 매장별 총 판매량(풀스캔 X, 차원을 따라 합계를 살펴본다)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;단점
&lt;ul&gt;
&lt;li&gt;원시 데이터의 질의하는 것과 동일한 유연성이 없다.
&lt;ul&gt;
&lt;li&gt;포함되지 않은 차원을 기준으로 집계를 할 수 없다.&lt;/li&gt;
&lt;li&gt;데이터 재적재해야 함&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;데이터 큐브와 같은 집계 값은 특정 질의에 다한 성능 향상에만 사용한다.&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;참조-자료&#34;&gt;참조 자료&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.yevgnenll.me/data-intensive/storage-and-retrieval&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://blog.yevgnenll.me/data-intensive/storage-and-retrieval&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Space-filling_curve&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://en.wikipedia.org/wiki/Space-filling_curve&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.researchgate.net/figure/Star-schema-left-vs-Snowflake-schema-right_fig4_227246694&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.researchgate.net/figure/Star-schema-left-vs-Snowflake-schema-right_fig4_227246694&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bitmap: &lt;a href=&#34;http://wiki.gurubee.net/pages/viewpage.action?pageId=1507452&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;http://wiki.gurubee.net/pages/viewpage.action?pageId=1507452&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Bloom Filters: &lt;a href=&#34;https://llimllib.github.io/bloomfilter-tutorial/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://llimllib.github.io/bloomfilter-tutorial/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Huffman Conding: &lt;a href=&#34;https://blog.naver.com/PostView.nhn?blogId=whwo161&amp;amp;logNo=221065253075&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://blog.naver.com/PostView.nhn?blogId=whwo161&amp;logNo=221065253075&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>NoSQL</category>
      
      <category>Data</category>
      
      <category>RDB</category>
      
    </item>
    
    <item>
      <title>MongoDB 기본 사용법</title>
      <link>https://www.devkuma.com/docs/mongodb/how-to-use/</link>
      <pubDate>Mon, 10 Jan 2022 09:30:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/mongodb/how-to-use/</guid>
      <description>
        
        
        &lt;h2 id=&#34;oracle과-mongodb의-차이&#34;&gt;Oracle과 MongoDB의 차이&lt;/h2&gt;
&lt;p&gt;MongoDB는 소위 NoSQL이라는 데이터베이스이다. JSON과 같은 도큐먼트라고 하는 데이터를 컬렉션이라고 하는 묶은으로 유지하도록 되어 있다. 기존의 RDB의 대표로서 Excel과 Oracle과 MongoDB의 명칭의 연관은 다음과 같다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Excel&lt;/th&gt;
&lt;th&gt;Oracle&lt;/th&gt;
&lt;th&gt;MongoDB&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Book&lt;/td&gt;
&lt;td&gt;Schema&lt;/td&gt;
&lt;td&gt;Database&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sheet&lt;/td&gt;
&lt;td&gt;Table&lt;/td&gt;
&lt;td&gt;Collection&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Row&lt;/td&gt;
&lt;td&gt;Row&lt;/td&gt;
&lt;td&gt;Document&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Column&lt;/td&gt;
&lt;td&gt;Column&lt;/td&gt;
&lt;td&gt;Field&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Shell&lt;/td&gt;
&lt;td&gt;Field&lt;/td&gt;
&lt;td&gt;Value&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;서버&#34;&gt;서버&lt;/h2&gt;
&lt;p&gt;서버 명령 &lt;code&gt;mongod&lt;/code&gt;이다. 여기서는 &lt;code&gt;mongod&lt;/code&gt;를 사용하여 서버를 시작/종료하는 명령을 살펴보겠다. 여기에서 다루지 않는 &lt;code&gt;mongod&lt;/code&gt; 명령 옵션은 &amp;ldquo;MongoDB 명령 &lt;code&gt;mongod&lt;/code&gt; 사용법&amp;quot;을 참조한다.&lt;/p&gt;
&lt;h3 id=&#34;서버-시작종료&#34;&gt;서버 시작/종료&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;서버 시작
&lt;ul&gt;
&lt;li&gt;데이터베이스 파일을 저장할 위치가 &lt;code&gt;C:\mongodb\server\data&lt;/code&gt;에 준비되어 있다고 가정한다.&lt;/li&gt;
&lt;li&gt;명령 프롬프트를 시작하고, 다음 명령을 실행하여 MongoDB 서버를 시작할 수 있다.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongod --dbpath &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;C:\mongodb\server\data&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;서버 종료
&lt;ul&gt;
&lt;li&gt;시작 중인 명령 프롬프트에서 &lt;code&gt;Ctrl+C&lt;/code&gt;를 누르면 shutdown 명령이 발행되고 MongoDB가 종료된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;클라이언트&#34;&gt;클라이언트&lt;/h2&gt;
&lt;p&gt;위의 단계에서 MongoDB를 시작한 상태에서 클라이언트 명령어 &lt;code&gt;mongo&lt;/code&gt;을 사용하여 연결해 보자. MongoDB 서버와 동일한 서버에서 연결을 수행하는 경우, 위의 서버에 대해 시작한 명령 프롬프트와 별도로 시작하여 연결한다. 여기서 다루지 않는 &lt;code&gt;mongo&lt;/code&gt;의 다른 옵션에 대해서는 &amp;ldquo;MongoDB 명령 &amp;ldquo;mongo&amp;rdquo; 사용 방법&amp;quot;을 참조한다.&lt;/p&gt;
&lt;h3 id=&#34;서버-연결해제&#34;&gt;서버 연결/해제&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;서버 연결
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mongo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;MongoDB를 기동하고 있는 단말과 같은 단말의 경우, 명령 프롬프트를 시작하여 이하의 커멘드를 실행하면 접속할 수 있다. 다른 호스트인 경우에는 &lt;code&gt;--host &amp;lt;호스트명&amp;gt;&lt;/code&gt; 옵션으로 연결 대상을 지정한다.&lt;/li&gt;
&lt;li&gt;서버 연결 해제&lt;br&gt;
MongoDB 연결을 끊으려면, &lt;code&gt;Ctrl+C&lt;/code&gt;를 누르면 연결을 끊을 수 있다. 또한 다음 명령을 실행하여 연결을 끊을 수 있다.
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; exit
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;데이터베이스-생성목록-조회변경삭제&#34;&gt;데이터베이스 생성/목록 조회/변경/삭제&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;데이터베이스 생성&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; use sample_database
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;지정된 데이터베이스에 연결한다. 데이터베이스가 존재하지 않으면 생성한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;데이터베이스 목록 조회&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; show dbs
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;기본적으로 &lt;code&gt;admin&lt;/code&gt;, &lt;code&gt;local&lt;/code&gt;, &lt;code&gt;test&lt;/code&gt; 이 3개의 데이터베이스가 존재한다.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;use &amp;lt;데이터베이스명&amp;gt;&lt;/code&gt;를 실행하자마자 목록을 표시하며 생성한 데이터베이스는 표시되지 않다. &lt;code&gt;show dbs&lt;/code&gt;로 표시되려면 최소한 1건 이상의 데이터 등록이 필요하다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;데이터베이스 이름 변경&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; db.copyDatabase(&amp;#39;old_database&amp;#39;, &amp;#39;new_database&amp;#39;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; use old_database
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; db.dropDatabase()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;유감스럽게도 데이터베이스 이름을 바꾸는 명령이 없으므로, 이전 데이터베이스를 새 데이터베이스로 복사하고 이전 데이터베이스를 삭제하는 식으로 해야 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;데이터베이스 삭제&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; use sample_database
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; db.dropDatabase();
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;삭제할 데이터베이스에 연결하고 &lt;code&gt;db.dropDatabase()&lt;/code&gt;를 실행하면 삭제할 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;컬렉션-생성목록-조회변경삭제&#34;&gt;컬렉션 생성/목록 조회/변경/삭제&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;컬렉션 생성&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; db.createCollection(products);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;인수에 지정된 이름의 콜렉션을 생성한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;컬렉션 목록 조회&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; show collections
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;현재 연결 중인 데이터베이스에 포함된 컬렉션 목록을 표시한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;컬렉션 이름 변경&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; db.old_collection_name.renameCollection(new_collection_name, true);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;old_collection_name&lt;/code&gt;에서 &lt;code&gt;new_collection_name&lt;/code&gt;으로 이름을 변경한다. 또, 변경할 때에 기존 컬렉션 &lt;code&gt;old_collection_name&lt;/code&gt;을 삭제하는 경우에는 두번째 인수에 &lt;code&gt;true&lt;/code&gt;를 지정한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;컬렉션 삭제&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; db.products.drop();
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;지정된 컬렉션을 삭제한다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;도큐먼트-추가조회변경삭제&#34;&gt;도큐먼트 추가/조회/변경/삭제&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;도큐먼트 추가&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; db.products.insert(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {name: &amp;#39;sample book&amp;#39;, price: 1280}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;지정된 컬렉션에 문서를 추가한다. &lt;code&gt;insert&lt;/code&gt;를 실행하면 자동으로 &lt;code&gt;_id&lt;/code&gt;필드가 추가된다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;도큐먼트 조회&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; db.products.find(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         {name: {$eq: &amp;#39;sample book&amp;#39;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;인수에 지정하는 쿼리의 기본 형식은 &lt;code&gt;{ 필드: { 연산자: 값}}&lt;/code&gt;와 같다. 연산자에 대해서는 &lt;a href=&#34;https://docs.mongodb.com/manual/reference/operator/query/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - Query and Projection Operators&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에 기재되어 있다. 여기서 인수 지정 없으면 모든 데이터가 조회된다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;도큐먼트 변경&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; db.products.update(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {name: {$eq: &amp;#39;sample book&amp;#39;}},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {$set: {name: &amp;#39;Hack MongoDB&amp;#39;}},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {upsert: false, multi: true}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;첫번째 인수로 지정한 조건에 매치하는 도큐먼트를, 두번째 인수로 지정한 문서 내용으로 변경한다. 세번째 인수의 객체로 지정하고 있는 &lt;code&gt;upsert&lt;/code&gt;는 &amp;ldquo;조건에 일치하는 문서가 발견되지 않았을 경우에 삽입할지 에 대한 여부&amp;quot;를 지정하고 있고, &lt;code&gt;multi&lt;/code&gt;는 &amp;ldquo;조건에 일치하는 도큐먼트 모두를 변경 대상으로 할지에 대한 여부&amp;quot;를 지정한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;도큐먼트 삭제
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-cmd&#34; data-lang=&#34;cmd&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;&amp;gt;&lt;/span&gt; db.products.remove(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {name: {$eq: &amp;#39;sample book&amp;#39;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8f5902;font-style:italic&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;첫번째 인수로 지정된 쿼리에 일치하는 모든 문서를 삭제한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;참고-자료&#34;&gt;참고 자료&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/release-notes/4.2-compatibility/#remove-support-for-the-copydb-and-clone-commands/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - copydb&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/reference/method/db.dropDatabase/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - db.dropDatabase()&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/reference/method/db.createCollection/#db.createCollection&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - db.createCollection()&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/reference/method/db.collection.insert/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - db.collection.insert()&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/reference/method/db.collection.find/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - db.collection.find()&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/reference/method/db.collection.update/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - db.collection.update()&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.mongodb.com/manual/reference/method/db.collection.remove/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MongoDB - db.collection.remove()&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>NoSQL</category>
      
      <category>MongoDB</category>
      
    </item>
    
    <item>
      <title>Database Normalization (정규화)</title>
      <link>https://www.devkuma.com/docs/rdbms/normalization/</link>
      <pubDate>Sun, 19 Dec 2021 01:05:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/rdbms/normalization/</guid>
      <description>
        
        
        &lt;h2 id=&#34;db-정규화&#34;&gt;DB 정규화&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;자료 손실이나 불필요한 정보의 도입 없이 데이터 일관성, 데이터 중복을 최소화하고 최대의 데이터 안정성 확보를 위한 안정적 자료 구조로 변환하기 위해서 하나의 테이블을 둘 이상을 분리하는 작업이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;db-정규화의-목적&#34;&gt;DB 정규화의 목적&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;데이터 무결성 유지
&lt;ul&gt;
&lt;li&gt;자료 저장에 필요한 저장 공간을 최소화하고 자료의 삽입, 갱신 및 삭제에 따른 이상 현상을 제거한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;자료 구조의 안정화성 최대화를 위해서 이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;정규화-과정&#34;&gt;정규화 과정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;제1정규화
&lt;ul&gt;
&lt;li&gt;모든 속성 값이 원자 값을 갖도록 분해한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;제2정규화
&lt;ul&gt;
&lt;li&gt;제1정규형을 만족하고, 기본키가 아닌 속성이 기본키에 완전 함수 종속이도록 분해한다.
&lt;ul&gt;
&lt;li&gt;여기서 완전 함수 종속이란 기본키의 부분집합이 다른 값을 결정하지 않는 것을 의미한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;재3정규화
&lt;ul&gt;
&lt;li&gt;제2정규형을 만족하고, 기본키가 아닌 속성이 기본키에 직접 종속(비이행적 종속)하도록 분해한다.
&lt;ul&gt;
&lt;li&gt;여기서 이행적 종속이란 A-&amp;gt;B-&amp;gt;C가 성립하는 것으로, 이를 A,B와 B,C로 분해하는 것이 제3정규형이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;BCNF 정규화
&lt;ul&gt;
&lt;li&gt;제3정규형을 만족하고, 함수 종속성 X-&amp;gt;Y가 성립할 때 모든 결정자 X가 후보키가 되도록 분해한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>RDBMS</category>
      
    </item>
    
    <item>
      <title>Elasticsearch CRUD 작업 &#43; Bulk API</title>
      <link>https://www.devkuma.com/docs/elasticsearch/crud/</link>
      <pubDate>Tue, 14 Dec 2021 09:00:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/elasticsearch/crud/</guid>
      <description>
        
        
        &lt;p&gt;Elasticsearch는 다음과 같은 프로그램에서 &lt;a href=&#34;https://www.devkuma.com/docs/rest-api/&#34;&gt;REST API&lt;/a&gt; 를 호출하여 조작할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kibana Dev Tools&lt;/li&gt;
&lt;li&gt;cURL&lt;/li&gt;
&lt;li&gt;기타 등등&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;crud-작업--bulk-api&#34;&gt;CRUD 작업 + Bulk API&lt;/h2&gt;
&lt;p&gt;Elasticsearch의 REST API 에서는 문서에 대해 다음과 같은 CRUD 작업이 가능하다.&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;REST API&lt;/th&gt;
&lt;th&gt;해당 CRUD&lt;/th&gt;
&lt;th&gt;설명&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;Index API&lt;/td&gt;
&lt;td&gt;Create&lt;/td&gt;
&lt;td&gt;문서를 색인에 추가&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Get API&lt;/td&gt;
&lt;td&gt;Read&lt;/td&gt;
&lt;td&gt;문서 조회&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Update API&lt;/td&gt;
&lt;td&gt;Update&lt;/td&gt;
&lt;td&gt;문서 변경&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Delete API&lt;/td&gt;
&lt;td&gt;Delete&lt;/td&gt;
&lt;td&gt;문서 삭제&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;위를 Single document APIs 라고 하며, 한 번의 API 호출로 하나의 문서를 작업한다.&lt;/p&gt;
&lt;p&gt;한번의 API 호출로 여러 문서를 작업하려면 Bulk API 를 사용한다.&lt;/p&gt;
&lt;h3 id=&#34;index-api-create&#34;&gt;Index API (Create)&lt;/h3&gt;
&lt;p&gt;Index API를 사용하여 Elasticsearch 색인에 문서를 추가한다.&lt;/p&gt;
&lt;p&gt;Index API를 사용하는 방법은 다음과 같다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Index API 사용 (curl 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;curl&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;localhost:9200/2021-12-tweet/_doc/1?pretty&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;-XPUT&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;-H&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;-d&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2021/12/13 09:00 KST&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;Tweet&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;트위터를 시작했습니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;User ID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;devkuma&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Index API 사용 (Kinbana 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;PUT&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2021-12&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;-tweet/_doc/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2021/12/13 09:00 KST&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;Tweet&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;트위터를 시작했습니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;User ID&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;devkuma&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Kibana의 DevTools를 사용하는 경우에는 위에 명령어를 붙여 넣고 오른쪽 상단의 삼각 버튼을 누른다.&lt;/p&gt;
&lt;h4 id=&#34;데이터-스트림에-문서를-추가하는-경우&#34;&gt;데이터 스트림에 문서를 추가하는 경우&lt;/h4&gt;
&lt;p&gt;데이터 스트림이란, 복수의 인덱스를 1개에 모은 것이다.&lt;/p&gt;
&lt;p&gt;데이터 스트림에 대한 자세한 내용은 아래 공식 문서를 찾아 보길 바란다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.elastic.co/guide/en/elasticsearch/reference/current/data-streams.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Data streams | Elasticsearch Guide [7.16] | Elastic&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;데이터 스트림에 도큐먼트를 추가하기 위해서는, 아래와 같이 REST API 를 이용한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Index API 사용 (Kibana 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;PUT&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;/tweet/_create/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2021/12/13 09:00 KST&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;Tweet&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;트위터를 시작했습니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;User ID&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;devkuma&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;get-api-read&#34;&gt;Get API (Read)&lt;/h3&gt;
&lt;p&gt;Get API를 사용하여 만든 문서를 조회한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Get API 사용 (curl 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;localhost:9200/2021-12-tweet/_doc/1?pretty&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Get API 사용 (Kibana 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET /2021-12-tweet/_doc/1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;위 명령어의 응답&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2021-12-tweet&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;_doc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_version&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_seq_no&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_primary_term&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;found&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_source&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2021/12/13 09:00 KST&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;Tweet&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;트위터를 시작했습니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;User ID&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;devkuma&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;update-api-update&#34;&gt;Update API (Update)&lt;/h2&gt;
&lt;p&gt;Update API를 사용 하여 도큐먼트를 수정한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update API 사용 (curl 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;localhost:9200/2021-12-tweet/_update/1?pretty&amp;#34;&lt;/span&gt; -XPOST -H &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt; -d &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  &amp;#34;doc&amp;#34; : {
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    &amp;#34;date&amp;#34; : &amp;#34;2021/12/13 09:00 KST&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    &amp;#34;Tweet&amp;#34; : &amp;#34;문서를 업데이트했습니다.&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;    &amp;#34;User ID&amp;#34; : &amp;#34;devkuma&amp;#34; 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;  }
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#4e9a06&#34;&gt;}&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Update API 사용 (Kibana 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;POST&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2021-12&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;-tweet/_update/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;doc&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2021/12/13 09:00 KST&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;Tweet&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;문서를 업데이트했습니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;User ID&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;devkuma&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;수정 결과를 Get API로 확인한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Update 결과 확인 (curl 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;localhost:9200/2021-12-tweet/_doc/1?pretty&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Update 결과 확인 (Kibana 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;GET&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2021-12&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;-tweet/_doc/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;위 명령어의 응답&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2021-12-tweet&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;_doc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_version&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_seq_no&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_primary_term&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;found&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;true&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_source&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;date&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2021/12/13 09:00 KST&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;Tweet&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;문서를 업데이트했습니다.&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;User ID&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;devkuma&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;delete-api-delete&#34;&gt;Delete API (Delete)&lt;/h3&gt;
&lt;p&gt;Delete API으로 도규먼트를 삭제한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Delete API 사용 (curl 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;localhost:9200/2021-12-tweet/_doc/1?pretty&amp;#34;&lt;/span&gt; -XDELETE
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Delete API 사용 (Kibana 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;2021-12&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;-tweet/_doc/&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;문서가 삭제되었음을 Get API롷 확인한다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Delete 결과 확인 (curl 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;localhost:9200/2021-12-tweet/_doc/1?pretty&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Delete 결과 확인 (Kibana 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GET /2021-12-tweet/_doc/1
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;위 명령어의 응답&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2021-12-tweet&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_type&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;_doc&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;found&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;bulk-api일괄-처리&#34;&gt;Bulk API(일괄 처리)&lt;/h3&gt;
&lt;p&gt;지금까지 REST API로 한번에 하나의 도큐먼트만 작업을 하였다.&lt;/p&gt;
&lt;p&gt;Bulk API를 사용하면 REST API로 한번에 여러 문서를 일괄적으로 작업을 할 수 있다.&lt;/p&gt;
&lt;p&gt;Bulk API 의 사용 방법은 다음과 같다.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;bulk.json의 내용&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;field1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;value1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;delete&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;create&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;field1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;value3&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;update&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;doc&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;field2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;value2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Bulk API 사용 (curl 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;localhost:9200/_bulk?pretty&amp;#34;&lt;/span&gt; -XPOST --data-binary @bulk.json -H &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;Content-Type: application/json&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;Bulk API 사용 (Kibana 사용)&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;POST&lt;/span&gt; &lt;span style=&#34;color:#a40000&#34;&gt;/_bulk&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;field1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;value1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;delete&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;create&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;field1&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;value3&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;update&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_id&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;,&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;_index&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;test&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;doc&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;{&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;&amp;#34;field2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;value2&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt; &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Create, Index와 Update의 차이점은 다음과 같다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Create: 인덱스의 도큐먼트가 없는 경우 생성한다.&lt;/li&gt;
&lt;li&gt;Index: 인덱스의 도큐먼트를 바꾼다.&lt;/li&gt;
&lt;li&gt;Update: 인덱스의 도큐먼트를 문서의 일부 변경한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;참조&#34;&gt;참조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://esbook.kimjmin.net/04-data/4.2-crud&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;4.2 CRUD - 입력, 조회, 수정, 삭제&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>NoSQL</category>
      
      <category>Elasticsearch</category>
      
    </item>
    
    <item>
      <title>SQLite | SQLite 설치 | sqlite3.dll 다운로드</title>
      <link>https://www.devkuma.com/docs/sqlite/sqlite3-dll-download/</link>
      <pubDate>Mon, 14 Oct 2019 23:19:51 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sqlite/sqlite3-dll-download/</guid>
      <description>
        
        
        &lt;p&gt;SQLite는 커멘드 라인에서 사용 할 수도 있지만, PHP와 Rails와 같은 다른 응용 프로그램에서 사용되는 경우가 더 많다.  응용 프로그램에서 사용하려면 sqlite3.dll을 이용해야 한다. 여기에서는 sqlite3.dll 파일을 다운로드하는 방법에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;sqlite3dll-다운로드&#34;&gt;sqlite3.dll 다운로드&lt;/h2&gt;
&lt;p&gt;sqlite3.dll를 다운로드 받기 위해서는 아래 URL로 접근한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.sqlite.org/download.html&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.sqlite.org/download.html&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;브라우저에서 SQLite의 공식 페이지에 접근한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/sqlite/sqlite_download_dll.png&#34; alt=&#34;Sqlite download&#34;&gt;&lt;/p&gt;
&lt;p&gt;Windows 64bit 환경이라면 &amp;ldquo;Precompiled Binaries for Windows&amp;quot;블록에 &lt;strong&gt;sqlite-dll-win64-x64-3300100.zip&lt;/strong&gt; 라고 적힌 링크를 클릭하여 다운로드하여 임의의 장소에 저장한다.&lt;/p&gt;
&lt;h2 id=&#34;sqlite3dll을-path가-설정된-폴더에-복사&#34;&gt;sqlite3.dll을 PATH가 설정된 폴더에 복사&lt;/h2&gt;
&lt;p&gt;다운로드하여 저장한 &lt;strong&gt;sqlite-dll-win64-x64-3300100.zip&lt;/strong&gt; 압축 파일을 풀면 sqlite3.dll과 sqlite3.def 두 파일이 나오는데, sqlite3.dll 파일 경로가 설정된 폴더에 저장한다. (예 : C:\Windows\System32에 넣어도 된다)&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;sqlite3.def sqlite3.dll
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;사실은 PHP를 설치하면 SQLite를 사용하는데 필요한 DLL도 함께 설치되어 있다. 그러기에 반드시 별도로 다운로드를 해야 하는 것은 아니다.&lt;/p&gt;

      </description>
      
      <category>SQLite</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>PostgreSQL</title>
      <link>https://www.devkuma.com/docs/postgresql/</link>
      <pubDate>Thu, 17 Aug 2017 10:31:25 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/postgresql/</guid>
      <description>
        
        
        &lt;p&gt;PostgreSQL는 세계적으로 널리 이용되고 있는 데이터베이스이다. 여기에서는 PostgreSQL을 앞으로 사용하시는 분들을 대상으로 PostgreSQL 소개하려고 한다. PostgreSQL의 설치 방법과 PostgreSQL을 사용하여 데이터베이스를 구축하는 방법에 대한 간단한 예제를 사용하여 직접 체험하면서 하나 하나 설명하는 것이다.&lt;/p&gt;

      </description>
      
      <category>PostgreSQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>PostgreSQL | PostgreSQL 설치 | Windows 서비스 시작 및 중지</title>
      <link>https://www.devkuma.com/docs/postgresql/windows-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%8B%9C%EC%9E%91-%EB%B0%8F-%EC%A4%91%EC%A7%80/</link>
      <pubDate>Thu, 17 Aug 2017 10:31:25 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/postgresql/windows-%EC%84%9C%EB%B9%84%EC%8A%A4-%EC%8B%9C%EC%9E%91-%EB%B0%8F-%EC%A4%91%EC%A7%80/</guid>
      <description>
        
        
        &lt;p&gt;PostgreSQL을 Windows 환경에 설치하면 자동으로 Windows 서비스로 등록되어 &amp;ldquo;실행 중&amp;quot;인 상태로 된다. 여기에서는 PostgreSQL가 어떻게 Winodws 서비스에 등록되어 있는지를 확인하고 PostgreSQL을 중지하거나 다시 시작하는 방법에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;windows-서비스-목록에서-확인&#34;&gt;Windows 서비스 목록에서 확인&lt;/h2&gt;
&lt;p&gt;먼저 PostgreSQL가 Windows 서비스로 등록되어 있는지 확인한다. Windows 서비스 목록을 표시하려면 바탕 화면 왼쪽 하단의 시작 메뉴를 마우스 오른쪽 버튼을 클릭하여, 표시되는 메뉴 중에서 &amp;ldquo;컴퓨터 관리&amp;quot;를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_service_1.png&#34; alt=&#34;컴퓨터 관리&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;컴퓨터 관리&amp;quot;화면이 표시되면, 왼쪽 메뉴의 &amp;ldquo;서비스 및 응용 프로그램&amp;quot;에 있는 &amp;ldquo;서비스&amp;quot;를 클릭한다. &amp;ldquo;서비스&amp;quot;에 대한 정보가 표시된다. 그리고 표시된 목록에서 &amp;ldquo;postgresql-x64-12&amp;quot;을 찾아 더블 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_service_2.png&#34; alt=&#34;컴퓨터 관리-서비스&#34;&gt;&lt;/p&gt;
&lt;p&gt;그러면 아래와 같이 Windows 서비스로 등록되어 있는 PostgreSQL에 대한 속성이 표시된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_service_3.png&#34; alt=&#34;PostgreSQL 속성&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;postgresql-서비스-시작-및-중지&#34;&gt;PostgreSQL 서비스 시작 및 중지&lt;/h2&gt;
&lt;p&gt;&amp;ldquo;시작 유형&amp;quot;을 &amp;ldquo;자동&amp;quot;으로 설정되어 있어서 Windows가 시작될 때 자동으로 PostgreSQL도 서비스로 시작되도록 되어 있다. 만약 수동으로 PostgreSQL을 시작하고 싶은 경우는 &amp;ldquo;시작 유형&amp;quot;을 &amp;ldquo;수동&amp;quot;으로 변경하면 된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_service_4.png&#34; alt=&#34;PostgreSQL 속성&#34;&gt;&lt;/p&gt;
&lt;p&gt;PostgreSQL을 정지시키려면, &amp;ldquo;서비스 상태&amp;quot;에 있는 &amp;ldquo;정지&amp;quot;를 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_service_5.png&#34; alt=&#34;PostgreSQL 속성-중지&#34;&gt;&lt;/p&gt;
&lt;p&gt;정지 한 PostgreSQL을 시작하려고 한다면,  &amp;ldquo;서비스 상태&amp;quot;에 있는 &amp;ldquo;시작&amp;quot;을 클릭한다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/postgresql/postgresql_service_6.png&#34; alt=&#34;PostgreSQL 속성-시작&#34;&gt;&lt;/p&gt;
&lt;p&gt;&amp;ldquo;실행 파일 경로&amp;quot;에는 어떤 명령어로 PostgreSQL가 시작되는지 확인 할 수 있다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;C:\Program Files\PostgreSQL\12\bin\pg_ctl.exe&amp;#34; runservice -N &amp;#34;postgresql-x64-12&amp;#34; -D &amp;#34;C:\Program Files\PostgreSQL\12\data&amp;#34; -w
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&amp;ndash;&lt;/p&gt;
&lt;p&gt;여기까지 PostgreSQL가 Windows 서비스에 어떻게 등록되어 있는지 확인하고 Windows 서비스로 PostgreSQL을 시작하거나 중지하는 방법에 대해 설명하였다.&lt;/p&gt;

      </description>
      
      <category>PostgreSQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>MySQL | 테이블 생성, 컬럼 추가, 삭제, 수정</title>
      <link>https://www.devkuma.com/docs/mysql/%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%83%9D%EC%84%B1-%EC%BB%AC%EB%9F%BC-%EC%B6%94%EA%B0%80-%EC%82%AD%EC%A0%9C-%EC%88%98%EC%A0%95/</link>
      <pubDate>Mon, 07 Aug 2017 21:01:44 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/mysql/%ED%85%8C%EC%9D%B4%EB%B8%94-%EC%83%9D%EC%84%B1-%EC%BB%AC%EB%9F%BC-%EC%B6%94%EA%B0%80-%EC%82%AD%EC%A0%9C-%EC%88%98%EC%A0%95/</guid>
      <description>
        
        
        &lt;h2 id=&#34;테이블-생성&#34;&gt;테이블 생성&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;CREATE TABLE [테이블명](id int, name varchar(20));
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;테이블명-수정&#34;&gt;테이블명 수정&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;RENAME TABLE [테이블명] TO [새 테이블명]
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE [테이블명] RENAME [변경할 테이블명];
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;테이블-삭제&#34;&gt;테이블 삭제&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;DROP TABLE [테이블명];
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;컬럼-추가&#34;&gt;컬럼 추가&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE [테이블명] ADD [컬럼명] [타입] [옵션]; 
&lt;/code&gt;&lt;/pre&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ex) ALTER TABLE [테이블명] ADD [컬럼명] varchar(100) not null default &amp;#39;0&amp;#39;; 
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;컬럼-삭제&#34;&gt;컬럼 삭제&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;alter TABLE [테이블명] drop [컬럼명];
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;컬럼명-변경-및-타입-변경&#34;&gt;컬럼명 변경 및 타입 변경&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE [테이블명] change [컬럼명] [변경할컬럼명] varchar(12);
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;컬럼-타입-수정&#34;&gt;컬럼 타입 수정&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ALTER TABLE [테이블명] MODIFY [컬럼명] varchar(14);
&lt;/code&gt;&lt;/pre&gt;
      </description>
      
      <category>MySQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>SQL 기본 | DDL : 데이터 정의 언어 | DATABASE</title>
      <link>https://www.devkuma.com/docs/sql/database/</link>
      <pubDate>Sat, 17 Jun 2017 18:14:13 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/sql/database/</guid>
      <description>
        
        
        &lt;h2 id=&#34;create-database&#34;&gt;CREATE DATABASE&lt;/h2&gt;
&lt;p&gt;CREATE DATABASE 문은 최초 데이터베이스를 생성할 때 사용된다.&lt;/p&gt;
&lt;h3 id=&#34;create-database-문법&#34;&gt;CREATE DATABASE 문법&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DATABASE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#a40000&#34;&gt;데이터베이스명&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;];&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;create-database-예제&#34;&gt;CREATE DATABASE 예제&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DATABASE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;devkuma&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;drop-database&#34;&gt;DROP DATABASE&lt;/h2&gt;
&lt;p&gt;DROP DATABASE문은 데이터베이스를 삭제할 때 사용된다.&lt;/p&gt;
&lt;h3 id=&#34;drop-database-문법&#34;&gt;DROP DATABASE 문법&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DROP&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DATABASE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;databasename&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;drop-database-예제&#34;&gt;DROP DATABASE 예제&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;CREATE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;DATABASE&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt; &lt;/span&gt;&lt;span style=&#34;color:#000&#34;&gt;devkuma&lt;/span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;&lt;span style=&#34;color:#f8f8f8;text-decoration:underline&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>SQL</category>
      
      <category>Database</category>
      
    </item>
    
    <item>
      <title>TiDB Docker 설치 - 테스트 환경 구축</title>
      <link>https://www.devkuma.com/docs/tidb/install/docker-compose/</link>
      <pubDate>Fri, 16 Sep 2022 19:22:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tidb/install/docker-compose/</guid>
      <description>
        
        
        &lt;blockquote&gt;
&lt;p&gt;주의: 이 설치 방법은 테스트용이므로, 운영 환경에서는 사용하면 안된다.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;설치-요구-사항&#34;&gt;설치 요구 사항&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Docker: 17.03 이상&lt;/li&gt;
&lt;li&gt;Docker Compose : 1.6.0 이상&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;빠른-설치&#34;&gt;빠른 설치&lt;/h2&gt;
&lt;h3 id=&#34;tidb-docker-compose-받아오기&#34;&gt;tidb-docker-compose 받아오기&lt;/h3&gt;
&lt;p&gt;먼저 &lt;a href=&#34;https://github.com/pingcap/tidb-docker-compose&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;gitHub&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에서 tidb-docker-compose 프로젝트를 받아온다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git clone https://github.com/pingcap/tidb-docker-compose.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;클러스터-생성-및-시작&#34;&gt;클러스터 생성 및 시작&lt;/h3&gt;
&lt;p&gt;받아온 디렉터리 이동한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#204a87&#34;&gt;cd&lt;/span&gt; tidb-docker-compose
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;최신 버전의 도커 이미지를 받아온다.&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;docker-compose pull
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker-compose pull
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pulling pd0            ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pulling pd1            ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pulling pd2            ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pulling tikv0          ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pulling tikv1          ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pulling tikv2          ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pulling tidb           ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pulling tispark-master ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pulling tispark-slave0 ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pulling tidb-vision    ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pulling pushgateway    ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pulling prometheus     ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pulling grafana        ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;컨테이너를 생성하고 시작한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker-compose up -d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker-compose up -d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating network &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;tidb-docker-compose_default&amp;#34;&lt;/span&gt; with the default driver
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating tidb-docker-compose_tidb-vision_1 ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating tidb-docker-compose_prometheus_1  ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating tidb-docker-compose_pushgateway_1 ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating tidb-docker-compose_pd1_1         ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating tidb-docker-compose_pd2_1         ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating tidb-docker-compose_pd0_1         ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating tidb-docker-compose_grafana_1     ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating tidb-docker-compose_tikv0_1       ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating tidb-docker-compose_tikv1_1       ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating tidb-docker-compose_tikv2_1       ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating tidb-docker-compose_tidb_1           ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating tidb-docker-compose_tispark-master_1 ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Creating tidb-docker-compose_tispark-slave0_1 ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;설치-확인&#34;&gt;설치 확인&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;클러스터 Grafana 모니터링 페이지
&lt;ul&gt;
&lt;li&gt;http://localhost:3000&lt;/li&gt;
&lt;li&gt;grafana를 수정하려면 admin/admin으로 로그인&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;클러스터 데이터 시각화(tidb-vision)
&lt;ul&gt;
&lt;li&gt;http://localhost:8010&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Spark Web UI에 액세스
&lt;ul&gt;
&lt;li&gt;http://localhost:8080&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;TiSpark에 액세스
&lt;ul&gt;
&lt;li&gt;spark://127.0.0.1:7077&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;mysql-클라이언트로-접근&#34;&gt;mysql 클라이언트로 접근&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql -h http://127.0.0.1 -P &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4000&lt;/span&gt; -u root
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;클러스터-종료&#34;&gt;클러스터 종료&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker-compose stop
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker-compose stop
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stopping tidb-docker-compose_tispark-slave0_1 ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stopping tidb-docker-compose_tidb_1           ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stopping tidb-docker-compose_tispark-master_1 ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stopping tidb-docker-compose_tikv2_1          ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stopping tidb-docker-compose_tikv1_1          ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stopping tidb-docker-compose_tikv0_1          ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stopping tidb-docker-compose_prometheus_1     ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stopping tidb-docker-compose_grafana_1        ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stopping tidb-docker-compose_pd2_1            ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stopping tidb-docker-compose_pd0_1            ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stopping tidb-docker-compose_pd1_1            ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stopping tidb-docker-compose_tidb-vision_1    ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stopping tidb-docker-compose_pushgateway_1    ... &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;done&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>Database</category>
      
      <category>TiDB</category>
      
    </item>
    
    <item>
      <title>TiDB HTAP 살펴보기</title>
      <link>https://www.devkuma.com/docs/tidb/explore-htap/</link>
      <pubDate>Fri, 02 Sep 2022 15:38:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tidb/explore-htap/</guid>
      <description>
        
        
        &lt;p&gt;이 가이드에서는 TiDB HTAP(Hybrid Transactional and Analytical Processing) 기능을 조사하고 사용하는 방법에 대해 설명한다.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;

    TiDB HTAP를 처음 사용하고 빠르게 사용하기를 원한다면 &lt;a href=&#34;https://www.devkuma.com/docs/tidb/quick-start-with-htap/&#34;&gt;HTAP 퀵 스타트 가이드&lt;/a&gt;을 참조하여라.

&lt;/div&gt;

&lt;h2 id=&#34;사용-사례use-cases&#34;&gt;사용 사례(Use cases)&lt;/h2&gt;
&lt;p&gt;TiDB HTAP는 빠르게 증가하는 대용량 데이터를 처리하고, DevOps 비용을 절감하며, 온프레미스 또는 클라우드 환경에 쉽게 배포할 수 있으므로 데이터 자산의 가치를 실시간으로 제공한다.&lt;/p&gt;
&lt;p&gt;다음은 HTAP의 일반적인 사용 예이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;하이브리드 워크로드&lt;/p&gt;
&lt;p&gt;하이브리드 로드 시나리오에서 실시간 OLAP(온라인 분석 처리)에 TiDB를 사용하는 경우에는 데이터에 TiDB 진입점만 제공하면 된다. TiDB는 특정 비즈니스를 기반으로 다양한 처리 엔진을 자동으로 선택한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;실시간 스트림 처리&lt;/p&gt;
&lt;p&gt;실시간 스트림 처리 시나리오에서 TiDB를 사용하는 경우에는 TiDB는 지속적으로 유입되는 모든 데이터를 실시간으로 쿼리할 수 ​​있도록 한다. 동시에 TiDB는 동시성이 높은 데이터 워크로드와 비즈니스 인텔리전스(BI, Business Intelligence) 쿼리를 처리할 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;데이터 허브&lt;/p&gt;
&lt;p&gt;TiDB를 데이터 허브로 사용하는 경우에는 TiDB는 애플리케이션 데이터와 데이터 웨어하우스를 원활하게 연결하여 특정 비즈니스 요구를 충족할 수 있다.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TiDB HTAP 사용 예에 ​​대한 자세한 내용은 &lt;a href=&#34;https://pingcap.com/blog/?tag=htap&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;PingCAP 웹 사이트의 HTAP 관련 블로그&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 참조하여라.&lt;/p&gt;
&lt;h2 id=&#34;아키텍처&#34;&gt;아키텍처&lt;/h2&gt;
&lt;p&gt;TiDB에서는 OLTP(온라인 트랜잭션 처리)를 위한 행 기반 스토리지 엔진 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/tikv-overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiKV&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;와 OLAP(온라인 분석 처리)용 컬럼 스토리지 엔진 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/tiflash-overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiFlash&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 함께 사용하여 데이터를 자동으로 복제하며 강력한 무결성을 유지한다.&lt;/p&gt;
&lt;p&gt;아키텍처에 대한 자세한 내용은 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/tiflash-overview#architecture&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiDB HTAP 아키텍처&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 참조하여라.&lt;/p&gt;
&lt;h2 id=&#34;환경-준비&#34;&gt;환경 준비&lt;/h2&gt;
&lt;p&gt;TiDB HTAP의 기능을 확인하기 전에 데이터 양에 따라 TiDB와 해당 스토리지 엔진을 배포해야 한다. 데이터가 많을 경우(예: 100T) 기본 솔루션으로 TiFlash Massively Parallel Processing(MPP)을 사용하고 보조 솔루션으로 TiSpark를 사용하는 것이 좋다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;TiFlash&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;TiFlash 노드가 없이 TiDB 클러스터를 배포한 경우에는 현재 TiDB 클러스터에 TiFlash 노드를 추가한다. 자세한 내용은 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/scale-tidb-using-tiup#scale-out-a-tiflash-cluster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiFlash 클러스터 확장하기&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 참조하여라.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TiDB 클러스터를 배포하지 않은 경우에는 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/production-deployment-using-tiup&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiUP를 사용하여 TiDB 클러스터 배포&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 참조하여라. 최소한의 TiDB 토폴로지를 기반으로 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/tiflash-deployment-topology&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiFlash 토폴로지&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 배포해야 한다.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TiFlash 노드 수를 선택하는 방법을 결정할 때는 다음 시나리오를 고려하여라.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;소규모 분석 및 임시 쿼리를 사용하는 OLTP가 유스 케이스에 필요한 경우에는 하나 이상의 TiFlash 노드를 배포한다. 분석 쿼리의 속도를 획기적으로 향상시킬 수 있다.&lt;/li&gt;
&lt;li&gt;OLTP 처리량이 TiFlash 노드의 I/O 사용률에 큰 압력을 가하지 않으면, 각 TiFlash 노드는 더 많은 리소스를 계산에 사용하므로 TiFlash 클러스터는 거의 선형 확장성을 가질 수 있다. TiFlash 노드의 수는 예상되는 성능과 응답 시간에 따라 조정해야  한다.&lt;/li&gt;
&lt;li&gt;OLTP 처리량이 비교적 높은 경우(예: 쓰기 또는 업데이트 처리량이 1,000만 행/시간을 초과하는 경우), 네트워크 및 물리 디스크의 쓰기 용량이 제한되어 TiKV와 TiFlash 간의 I/O 병목 현상이되고 또한 핫스팟을 읽고 쓰는 경향이 있다. 이런 경우에는 TiFlash 노드의 수는 해석 처리의 계산량과 복잡한 비선형 관계를 가지므로 시스템의 실제 상황에 근거해 TiFlash 노드의 수를 조정할 필요가 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;TiSpark&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터를 Spark로 분석해야 하는 경우에는 TiSpark를 배포한다. 구체적인 프로세스는 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/tispark-overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiSpark 사용자 가이드&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 참조하여라.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;데이터-준비&#34;&gt;데이터 준비&lt;/h2&gt;
&lt;p&gt;TiFlash가 배포된 후 TiKV는 데이터를 TiFlash에 자동으로 복제하지 않다. TiFlash에 복제해야 하는 테이블을 수동으로 지정해야 한다. 그런 다음 TiDB는 해당 TiFlash 복제본을 만든다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TiDB 클러스터에 데이터가 없는 경우 먼저 데이터를 TiDB로 마이그레이션한다. 자세한 내용은 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/migration-overview&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;데이터 마이그레이션&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;을 참조하여라.&lt;/li&gt;
&lt;li&gt;TiDB 클러스터에 이미 업스트림에서 복제된 데이터가 있는 경우에 TiFlash를 배포한 후에는 데이터 복제가 자동으로 시작되지 않다. TiFlash에 복제할 테이블을 수동으로 지정해야 한다. 자세한 내용은 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/tiflash-overview#use-tiflash&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiFlash 사용&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;을 참조하여라.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;데이터-처리&#34;&gt;데이터 처리&lt;/h2&gt;
&lt;p&gt;TiDB를 사용하면 쿼리 또는 쓰기 요청에 대한 SQL 문을 간단히 입력할 수 있다. TiFlash 복제본이 포함된 테이블의 경우에는 TiDB는 프런트 엔드 옵티마이저를 사용하여 최적의 실행 계획을 자동으로 선택한다.&lt;/p&gt;


&lt;div class=&#34;alert alert-primary&#34; role=&#34;alert&#34;&gt;
&lt;h4 class=&#34;alert-heading&#34;&gt;Note:&lt;/h4&gt;

    &lt;p&gt;TiFlash의 MPP 모드는 기본적으로 활성화되어 있다. SQL 문이 실행되면 TiDB는 옵티마이저를 통해 MPP 모드에서 실행할지 여부를 자동으로 결정한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TiFlash의 MPP 모드를 비활성화하려면 시스템 변수 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/system-variables#tidb_allow_mpp-new-in-v50&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tidb_allow_mpp&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;의 값을 &lt;code&gt;OFF&lt;/code&gt;로 설정한다.&lt;/li&gt;
&lt;li&gt;쿼리 실행을 위해 TiFlash의 MPP 모드를 강제로 활성화하려면 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/system-variables#tidb_allow_mpp-new-in-v50&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tidb_allow_mpp&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;와 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/system-variables#tidb_enforce_mpp-new-in-v51&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tidb_enforce_mpp&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; 값을 &lt;code&gt;ON&lt;/code&gt;으로 설정한다.&lt;/li&gt;
&lt;li&gt;TiDB가 특정 쿼리를 실행하기 위해 MPP 모드를 선택하는지 확인하려면 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/explain-mpp#explain-statements-in-the-mpp-mode&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;MPP 모드의 Explain 문&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;을 참조하여라. &lt;code&gt;EXPLAIN&lt;/code&gt;문 출력에 &lt;code&gt;ExchangeSender&lt;/code&gt;, &lt;code&gt;ExchangeReceiver&lt;/code&gt; 연산자가 포함되어 있으면 MPP 모드가 사용되고 있는 거다.&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;h2 id=&#34;성능-모니터링&#34;&gt;성능 모니터링&lt;/h2&gt;
&lt;p&gt;TiDB를 사용할 때에는 다음 방법 중 하나를 사용하여 TiDB 클러스터의 상태 및 성능 메트릭을 모니터링할 수 있다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.pingcap.com/tidb/stable/dashboard-intro&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiDB 대시보드&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; : TiDB 클러스터의 전반적인 실행 상태를 확인하고, 읽기 및 쓰기 트래픽의 분포와 추세를 분석하며 느린 쿼리에 대한 자세한 실행 정보를 학습할 수 있다.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.pingcap.com/tidb/stable/grafana-overview-dashboard&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;모니터링 시스템(Prometheus &amp;amp; Grafana)&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; : PD, TiDB, TiKV, TiFlash, TiCDC, Node_exporter 등를 포함한 TiDB 클러스터 관련 구성 요소의 모니터링 매개변수를 볼 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;TiDB 클러스터 및 TiFlash 클러스터에 대한 경고 규칙을 보려면 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/alert-rules&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiDB 클러스터의 경고 규칙&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;와 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/tiflash-alert-rules&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiFlash 경고 규칙&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;을 참조하여라.&lt;/p&gt;
&lt;h2 id=&#34;문제해결&#34;&gt;문제해결&lt;/h2&gt;
&lt;p&gt;TiDB 사용 중에 문제가 발생하면 다음 문서를 참조하십시오.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.pingcap.com/tidb/stable/analyze-slow-queries&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;느린 쿼리 분석&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.pingcap.com/tidb/stable/identify-expensive-queries&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;비용이 많이 드는 쿼리 식별&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.pingcap.com/tidb/stable/troubleshoot-hot-spot-issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;핫스팟 문제 해결&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.pingcap.com/tidb/stable/troubleshoot-tidb-cluster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiDB 클러스터 문제 해결 가이드&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.pingcap.com/tidb/stable/troubleshoot-tiflash&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiFlash 클러스터 문제 해결&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;그리고 &lt;a href=&#34;https://github.com/pingcap/tiflash/issues&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Github 이슈&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 만들거나 &lt;a href=&#34;https://asktug.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;AskTUG&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;에 질문을 제출할 수 있다.&lt;/p&gt;
&lt;h2 id=&#34;다음은-무엇인가&#34;&gt;다음은 무엇인가&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;TiFlash 버전, 중요한 로그 및 시스템 테이블을 보려면 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/maintain-tiflash&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiFlash 클러스터 유지 관리&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;를 참조하여라.&lt;/li&gt;
&lt;li&gt;특정 TiFlash 노드를 삭제하려면 &lt;a href=&#34;https://docs.pingcap.com/tidb/stable/scale-tidb-using-tiup#scale-out-a-tiflash-cluster&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;TiFlash 클러스터 확장&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;을 참조하여라.&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;


&lt;div class=&#34;pageinfo pageinfo-primary&#34;&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/pingcap/docs/blob/release-6.1/explore-htap.md&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Explore HTAP&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt; 최종수정일 2022. 7. 8. 오전 11:48:44: &lt;a href=&#34;https://github.com/pingcap/docs/commit/4ac6357b8f2ad7e9c5c632ef4edd0627b0f7c20a&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;tiflash refactor: split use-tiflash into multiple docs (#9452) (#9521)&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;

&lt;/div&gt;


      </description>
      
      <category>Database</category>
      
      <category>TiDB</category>
      
    </item>
    
  </channel>
</rss>
