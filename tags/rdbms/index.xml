<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devkuma – RDBMS</title>
    <link>https://www.devkuma.com/tags/rdbms/</link>
    <image>
      <url>https://www.devkuma.com/tags/rdbms/logo/180x180.jpg</url>
      <title>RDBMS</title>
      <link>https://www.devkuma.com/tags/rdbms/</link>
    </image>
    <description>Recent content in RDBMS on devkuma</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko</language>
    <managingEditor>redfreek2c@gmail.com (kimkc)</managingEditor>
    <webMaster>redfreek2c@gmail.com (kimkc)</webMaster>
    <copyright>The devkuma</copyright>
    
	  <atom:link href="https://www.devkuma.com/tags/rdbms/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>MySQL | MySQL 설치</title>
      <link>https://www.devkuma.com/docs/mysql/install/</link>
      <pubDate>Mon, 07 Aug 2017 21:01:44 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/mysql/install/</guid>
      <description>
        
        
        &lt;p&gt;현재 MySQL은 MySQL Enterprise Edition과 MySQL Community Server의 두 가지 버전이 있다. MySQL Enterprise는 상용 버전의 MySQL으로 공식 지원의 제공과 관리 도구를 포함되어 있다. 이에 반해 MySQL Community Server는 무료 데이터베이스이다. 여기에서는 MySQL Community Server를 Docker에서 설치 방법에 대해 설명한다.&lt;/p&gt;
&lt;h2 id=&#34;docker-버전-확인&#34;&gt;Docker 버전 확인&lt;/h2&gt;
&lt;p&gt;당연한 말이겠지만 먼저 도커가 설치가 되어 있는지 확인을 해야 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker --version
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행하면 아래와 같이 버전이 확인이 도커가 잘 설치된 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; % docker --version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Docker version 20.10.8, build 3967b7d
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mysql-docker-이미지-다운로드&#34;&gt;MySQL Docker 이미지 다운로드&lt;/h2&gt;
&lt;p&gt;아래 명령어를 실행하여 Elasticsearch Docker 이미지를 다운로드 받는다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull mysql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행하면 아래와 출력될 것이다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker pull mysql
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Using default tag: latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;latest: Pulling from library/mysql
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;07aded7c29c6: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f68b8cbd22de: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;30c1754a28c4: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;1b7cb4d6fe05: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;79a41dc56b9a: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;00a75e3842fb: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b36a6919c217: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;635b0b84d686: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;6d24c7242d02: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;5be6c5edf16f: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cb35eac1242c: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a573d4e1c407: Pull &lt;span style=&#34;color:#204a87&#34;&gt;complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Digest: sha256:4fcf5df6c46c80db19675a5c067e737c1bc8b0e78e94e816a778ae2c6577213d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status: Downloaded newer image &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; mysql:latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker.io/library/mysql:latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;위와 같이 버전을 입력하지 않고 실행하게 되면 최신 버전의 MySQL Docker 이미지를 다운받게 된다. 특정 version을 설치하기 원한다면 아래와 같이 버전을 기입하면 된다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker pull mysql:&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;{&lt;/span&gt;version&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mysql-docker-컨테이너-실행&#34;&gt;MySQL Docker 컨테이너 실행&lt;/h2&gt;
&lt;p&gt;아래 명령어를 실행하여 컨테이너의 실행을 한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run --name mysql -e &lt;span style=&#34;color:#000&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1234&lt;/span&gt; -d -p 3306:3306 mysql:latest
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;여기서 도커 컨테이너명은 &lt;code&gt;--name&lt;/code&gt; 옵션으로 &lt;code&gt;mysql&lt;/code&gt; 이라고 지정하였다. 다른 이름으로 해도 상관 없다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker run --name mysql -e &lt;span style=&#34;color:#000&#34;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;1234&lt;/span&gt; -d -p 3306:3306 mysql:latest
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;79c4333a40db5621a9cb7051fac2a8702c09d0f2706223cf65a5c448b08cb061
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mysql-docker-컨테이너-실행-확인&#34;&gt;MySQL Docker 컨테이너 실행 확인&lt;/h2&gt;
&lt;p&gt;아래 명령어를 실행하여 컨테이너의 실행을 확인한다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker ps
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;실행되면 MySQL가 아래와 같이 실행되고 있는 것을 확인 할 수 있다.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker ps
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                                                  NAMES
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;79c4333a40db   mysql:latest   &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#34;docker-entrypoint.s...&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;40&lt;/span&gt; seconds ago   Up &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;39&lt;/span&gt; seconds   0.0.0.0:3306-&amp;gt;3306/tcp, :::3306-&amp;gt;3306/tcp, 33060/tcp   mysql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;mysql-docker-컨테이너-시작중지재시작&#34;&gt;MySQL Docker 컨테이너 시작/중지/재시작&lt;/h2&gt;
&lt;p&gt;MySQL Docker 컨테이너 중지&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker stop mysql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MySQL Docker 컨테이너 시작&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ docker start mysql
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;MySQL Docker 컨테이너 재시작&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ docker restart mysql
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;mysql-docker-컨테이너-접속&#34;&gt;MySQL Docker 컨테이너 접속&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker &lt;span style=&#34;color:#204a87&#34;&gt;exec&lt;/span&gt; -it mysql bash
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker &lt;span style=&#34;color:#204a87&#34;&gt;exec&lt;/span&gt; -it mysql bash
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@79c4333a40db:/# mysql -u root -p
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Enter password:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Welcome to the MySQL monitor.  Commands end with &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt; or &lt;span style=&#34;color:#4e9a06&#34;&gt;\g&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Your MySQL connection id is &lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Server version: 8.0.26 MySQL Community Server - GPL
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Copyright &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;c&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt; 2000, 2021, Oracle and/or its affiliates.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Oracle is a registered trademark of Oracle Corporation and/or its
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;affiliates. Other names may be trademarks of their respective
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;owners.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Type &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;help;&amp;#39;&lt;/span&gt; or &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;\h&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#204a87;font-weight:bold&#34;&gt;for&lt;/span&gt; help. Type &lt;span style=&#34;color:#4e9a06&#34;&gt;&amp;#39;\c&amp;#39;&lt;/span&gt; to clear the current input statement.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql&amp;gt; show databases&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+--------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; Database           &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+--------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; information_schema &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; mysql              &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; performance_schema &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt; sys                &lt;span style=&#34;color:#000;font-weight:bold&#34;&gt;|&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;+--------------------+
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#0000cf;font-weight:bold&#34;&gt;4&lt;/span&gt; rows in &lt;span style=&#34;color:#204a87&#34;&gt;set&lt;/span&gt; &lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;(&lt;/span&gt;0.01 sec&lt;span style=&#34;color:#ce5c00;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql&amp;gt; ^C
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mysql&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
      </description>
      
      <category>MySQL</category>
      
      <category>Database</category>
      
      <category>RDBMS</category>
      
      <category>Docker</category>
      
    </item>
    
    <item>
      <title>Database Index (인덱스)</title>
      <link>https://www.devkuma.com/docs/rdbms/index/</link>
      <pubDate>Sun, 19 Dec 2021 01:05:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/rdbms/index/</guid>
      <description>
        
        
        &lt;h2 id=&#34;인덱스index란&#34;&gt;인덱스(index)란?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;데이블에 대한 동작 속도를 높여주는 자료 구조를 말한다.&lt;/li&gt;
&lt;li&gt;인텍스는 테이블 내에 1개의 컬럼, 혹은 여러 컬럼을 이용하여 생성될 수 있다.&lt;/li&gt;
&lt;li&gt;빠른 검색 동작뿐 아니라 레코드 접근과 관련 효율적인 순서 매김 동작에 대한 기초를 제공한다.&lt;/li&gt;
&lt;li&gt;인덱스란 추가적인 쓰기 작업과 저장 공간을 활용하여 데이터베이스 테이블의 검색 속도를 향상시키기 위한 자료 구조이다.&lt;/li&gt;
&lt;li&gt;만약 우리가 책에서 원하는 내용을 찾는다고 하면, 책의 모든 페이지를 찾아 보는 것은 오랜 시간이 걸린다. 그렇게 때문에 책의 저자들은 책의 맨 앞 또는 맨 뒤에 색인을 추가하는데, 데이터베이스의 index는 책의 색인과 같다.&lt;/li&gt;
&lt;li&gt;데이터베이스에서도 테이블의 모든 데이터를 검색하면 시간이 오래 걸리기 때문에 데이터와 데이터의 위치를 포함한 자료구조를 생성하여 빠르게 조회할 수 있도록 돕고 있다.&lt;/li&gt;
&lt;li&gt;만약 index를 적용하지 않은 컬럼을 조회하면, 전체를 탐색하는 Full Scan이 수행된다. Full Scan은 전체를 비교하여 탐색하기 때문에 속도가 떨어진다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;데이터베이스에서-자료를-갬색하는-2가지-방법&#34;&gt;데이터베이스에서 자료를 갬색하는 2가지 방법&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;FTS(Full Table Scan)
&lt;ul&gt;
&lt;li&gt;테이블을 처음부터 끝까지 검색하는 방법이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Index Scan
&lt;ul&gt;
&lt;li&gt;인데그를 검색하여 해당 자료의 테이블을 액세스하는 방법이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;인덱스의-자료구조&#34;&gt;인덱스의 자료구조&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;해시 테이블&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;컬럼의 값으로 생성된 해시를 기반으로 인덱스를 구현한다.&lt;/li&gt;
&lt;li&gt;시간복잡도 O(1)이라 검색이 매우 빠르다.&lt;/li&gt;
&lt;li&gt;부등호(&amp;lt;, &amp;gt;)와 같은 연속적인 데이터를 위한 순차 검색이 불가능하다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;B+Tree&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;자식 노드가 2개 이상인 B-Tree를 개선시킨 자료구조이다.&lt;/li&gt;
&lt;li&gt;BTree의 리프노드들을 LinekdList로 연결하여 순차 검색을 용이하게 하였다.&lt;/li&gt;
&lt;li&gt;해시 테이블보다 나쁜 O(𝑙𝑜𝑔2𝑛)의 시간 복잡도를 갖지만 해시테이블보다 흔하게 사용된다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>RDBMS</category>
      
      <category>Transaction</category>
      
    </item>
    
    <item>
      <title>Database Transaction (트랜잭션)</title>
      <link>https://www.devkuma.com/docs/rdbms/transaction/</link>
      <pubDate>Sun, 19 Dec 2021 01:05:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/rdbms/transaction/</guid>
      <description>
        
        
        &lt;h2 id=&#34;database-transaction트랜잭션이란&#34;&gt;Database Transaction(트랜잭션)이란?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;데이터베이스의 상태를 변화시키기 위해 수행하는 논리적인 작업의 단위이다.&lt;/li&gt;
&lt;li&gt;데이터베이스의 데이터를 조작하는 작업 단위(Unit of work)이다.&lt;/li&gt;
&lt;li&gt;트랜잭션에는 여러가지의 연산이 수행될 수 있다.&lt;/li&gt;
&lt;li&gt;트랜재션은 수행 중에 한 작업이라도 실패를 하면 전부 롤백이 이루어지고, 모두 성공하면 commit을 수행한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;transaction-acid란&#34;&gt;Transaction ACID란?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;원자성(Atomicity)
&lt;ul&gt;
&lt;li&gt;하나의 트랜잭션이 작업이 그중에 일부분만 실행되거나 중단되지 않는 것을 보장해주는 것을 말한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;일관성(Consistency)
&lt;ul&gt;
&lt;li&gt;트랜잭션이 작업이 성공적으로 완료가 되더라도 작업 이전과 같이 같은 상태를 유지하는 것을 말한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;격리성(Isolation)
&lt;ul&gt;
&lt;li&gt;Trasaction 작업이 수행되고 있을 때 다른 작업이 끼어들지 못하도록 보장해주는 것을 말한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;지속성(Durability)
&lt;ul&gt;
&lt;li&gt;성공적으로 수행된 트랜잭션이 대해서는 영구히(Persistent) 반영되어야 함을 말한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;transaction을-사용시-주의할-점&#34;&gt;Transaction을 사용시 주의할 점&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;트랜잭션의 범위는 최소화한다.
&lt;ul&gt;
&lt;li&gt;트랜잭션의 범위를 최소화 하는 것이 중요하다.&lt;/li&gt;
&lt;li&gt;데이터베이스의 커넥션의 수는 한정적이기 때문에 커넥션을 보유하는 시간을 최소화해야할 필요가 있다.&lt;/li&gt;
&lt;li&gt;그렇지 않으면, 다른 서비스들은 해당 커넥션 사용을 위해 대기해야 할 상황이 발생한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;transaction-isolation-level의-종류-및-특징은-무엇인가&#34;&gt;Transaction isolation level의 종류 및 특징은 무엇인가?&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;READ UNCOMMITTED
&lt;ul&gt;
&lt;li&gt;SELECT 쿼리 실행시에 다른 트랜잭션에서 COMMIT 되지 않은 데이터를 읽어올 수 있다.&lt;/li&gt;
&lt;li&gt;COMMIT 되지 않은 데이터를 읽는 현상을 Dirty read라고 말한다.&lt;/li&gt;
&lt;li&gt;INSERT만 진행되고 ROLLBACK 될 수 있는, 즉 COMMIT이 되지 않은 데이터를 읽을 수 있어 유의해야 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;READ COMMITTED
&lt;ul&gt;
&lt;li&gt;COMMITTED에서는 COMMIT이 완료된 데이터만 SELECT시에 보이는 수준을 보장하는 Level이며, 대부분 DBMS에서 Read Committed를 기본으로 설정한다.&lt;/li&gt;
&lt;li&gt;Read Committed에서는 Read Uncommitted에서 발생하는 Dirty read가 발생하지 않도록 보장해 준다.&lt;/li&gt;
&lt;li&gt;트랜잭션에서 COMMIT을 수행하지 않더라도 DB에 이미 값이 반영이 되어있는 상태인데 COMMIT 이전의 데이터를 보장 받기 위해서는 COMMIT 되지 않은 쿼리를 복구하는 과정이 필요하게 된다. 즉, 이 시점에서는 Consistent Read를 수행해야 함을 의미한다.&lt;/li&gt;
&lt;li&gt;Read Committed의 문제는 하나의 트랜잭션 안에서 SELECT를 수행 할 때마다 데이터가 동일하다는 보장을 해주지 않는다. 그 이유는 다른 트랜젝션에서 해당 데이터를 COMMIT 했을 경우에는 COMMIT된 데이터를 반환해 주는게 Read Committed의 특징이기 때문이다.&lt;/li&gt;
&lt;li&gt;위와 같은 이유로 Read Committed를 Non-repeatable Read라고도 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;REPEATABLE READ
&lt;ul&gt;
&lt;li&gt;Read Committed와는 다르게 Repeatable Read는 한 트랜잭션 안에서 반복해서 SELECT를 수행하더라도 읽어 들이는 값이 변하지 않음을 보장한다.&lt;/li&gt;
&lt;li&gt;Repeatable Read 트랙잭션은 처음 SELECT를 수행한 시간을 기록한 뒤 그 이후에는 모든 SELECT마다 해당 시점을 기분으로 Consistent Read를 수행하여 준다.&lt;/li&gt;
&lt;li&gt;그러므로 트랜잭션 도중 다른 트랜잭션이 COMMIT되더라도 새로이 COMMIT된 데이터는 보이지 않게 된다.&lt;/li&gt;
&lt;li&gt;그 이유는 첫 SELECT 시에 생성된 SNAPSHOT을 읽기 때문이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;SERIALIZABLE
&lt;ul&gt;
&lt;li&gt;Serializable은 모든 작업을 하나의 트랜잭션에서 처리하는 것과 같은 가장 높은 고립수준을 제공한다.&lt;/li&gt;
&lt;li&gt;Read Committed, Repeatable Read 두개의 공통적인 이슈는 Phantom Read가 발생한다는 점이다.
&lt;ul&gt;
&lt;li&gt;Phantom Read란?
&lt;ul&gt;
&lt;li&gt;하나의 트랜잭션에서 UPDATE 명령이 유실되거나 덮어써질수 있는 즉, UPDATE후 COMMIT하고 다시 조회를 했을때 예상과는 다른 값이 보이거나 데이터가 유실된 경우를 Phantom Read라고 한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;그와 다르게 SERIALIZABLE에서는 SELECT 쿼리가 전부 SELECT &amp;hellip; FOR SHARE로 자동으로 변경되어 Repeatable Read에서 막을 수 없는 몇 가지 상황을 방지할 수 있게됩니다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;commit과-rollback&#34;&gt;Commit과 Rollback&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Commit
&lt;ul&gt;
&lt;li&gt;하나의 트랜잭션이 끝났을 때, 완료된 것을 트랙잭션 관리자에게 알려준다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Rollback
&lt;ul&gt;
&lt;li&gt;하나의 트랜잭션 처리가 비정상적으로 종료되어 DB의 일괄성을 깨트렸을 때, 모든 연산을 취소시키는 것을 말한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>RDBMS</category>
      
      <category>Transaction</category>
      
    </item>
    
    <item>
      <title>Database Normalization (정규화)</title>
      <link>https://www.devkuma.com/docs/rdbms/normalization/</link>
      <pubDate>Sun, 19 Dec 2021 01:05:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/rdbms/normalization/</guid>
      <description>
        
        
        &lt;h2 id=&#34;db-정규화&#34;&gt;DB 정규화&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;자료 손실이나 불필요한 정보의 도입 없이 데이터 일관성, 데이터 중복을 최소화하고 최대의 데이터 안정성 확보를 위한 안정적 자료 구조로 변환하기 위해서 하나의 테이블을 둘 이상을 분리하는 작업이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;db-정규화의-목적&#34;&gt;DB 정규화의 목적&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;데이터 무결성 유지
&lt;ul&gt;
&lt;li&gt;자료 저장에 필요한 저장 공간을 최소화하고 자료의 삽입, 갱신 및 삭제에 따른 이상 현상을 제거한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;자료 구조의 안정화성 최대화를 위해서 이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;정규화-과정&#34;&gt;정규화 과정&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;제1정규화
&lt;ul&gt;
&lt;li&gt;모든 속성 값이 원자 값을 갖도록 분해한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;제2정규화
&lt;ul&gt;
&lt;li&gt;제1정규형을 만족하고, 기본키가 아닌 속성이 기본키에 완전 함수 종속이도록 분해한다.
&lt;ul&gt;
&lt;li&gt;여기서 완전 함수 종속이란 기본키의 부분집합이 다른 값을 결정하지 않는 것을 의미한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;재3정규화
&lt;ul&gt;
&lt;li&gt;제2정규형을 만족하고, 기본키가 아닌 속성이 기본키에 직접 종속(비이행적 종속)하도록 분해한다.
&lt;ul&gt;
&lt;li&gt;여기서 이행적 종속이란 A-&amp;gt;B-&amp;gt;C가 성립하는 것으로, 이를 A,B와 B,C로 분해하는 것이 제3정규형이다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;BCNF 정규화
&lt;ul&gt;
&lt;li&gt;제3정규형을 만족하고, 함수 종속성 X-&amp;gt;Y가 성립할 때 모든 결정자 X가 후보키가 되도록 분해한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>RDBMS</category>
      
    </item>
    
    <item>
      <title>Database Tuning (튜닝)</title>
      <link>https://www.devkuma.com/docs/rdbms/tuning/</link>
      <pubDate>Sun, 19 Dec 2021 01:05:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/rdbms/tuning/</guid>
      <description>
        
        
        &lt;h2 id=&#34;db-optimizer옵티마이저&#34;&gt;DB Optimizer(옵티마이저)&lt;/h2&gt;
&lt;p&gt;SQL를 가장 빠르고 효율적으로 수행할 최적의 처리 경로를 생성해주는 DBMS 내부의 핵심엔진이다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;종류
&lt;ul&gt;
&lt;li&gt;규칙 기반 옵티마이저, 비용 기반 옵티마이저&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;과정
&lt;ul&gt;
&lt;li&gt;사용자가 던진 쿼리 수행을 위해, 후보군이 될 만한 실행 계획을 찾는다.&lt;/li&gt;
&lt;li&gt;오브젝트 통계 및 시스템 통계 정보를 통해 각 실행 계획의 예상 비용으 산정한다.&lt;/li&gt;
&lt;li&gt;갈 실행 계획을 비교해서 최저 비용을 갖는 하나를 선택한다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;힌트hint&#34;&gt;힌트(Hint)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;힌트란 SQL을 튜닝하기 위한 지시구문이다.&lt;/li&gt;
&lt;li&gt;옵티마이저가 최적의 계획으로 SQL문을 처리하지 못하는 경우에 개발자 직접 최적의 실행 계획을 제공하는 것이다.&lt;/li&gt;
&lt;li&gt;힌트는 SELECT 다음에 작성할 수 있으며, INDEX, PARALLEL 등 다양한 힌트절이 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;데이터베이스-튜닝과-방법&#34;&gt;데이터베이스 튜닝과 방법&lt;/h2&gt;
&lt;p&gt;-DB 튜닝은 데이터베이스 구조나 데이터베이스 자체, 운영체제 등을 조정하여 데이터베이스 시스템의 성능을 향상시키는 작업을 의미한다.&lt;/p&gt;
&lt;p&gt;-튜닝은 DB 설계 튜닝 &amp;gt; DBMS 튜닝 &amp;gt; SQL 튜닝의 단계로 진행할 수 있다.&lt;/p&gt;
&lt;h3 id=&#34;1단계--db-설계-튜닝모델링-관점&#34;&gt;1단계 : DB 설계 튜닝(모델링 관점)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;튜닝 방법
&lt;ul&gt;
&lt;li&gt;데이터베이스 설계 단계에서 성능을 고려하여 설계&lt;/li&gt;
&lt;li&gt;데이터 모델링, 인덱스 설계&lt;/li&gt;
&lt;li&gt;데이터 파일, 테이블 스페이스 설계&lt;/li&gt;
&lt;li&gt;데이터베이스 용량 산정&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;튜닝 사례
&lt;ul&gt;
&lt;li&gt;반정규화 분사 파이배치&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2단계--dbms-튜닝환경-관점&#34;&gt;2단계 : DBMS 튜닝(환경 관점)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;튜닝 방법
&lt;ul&gt;
&lt;li&gt;성능을 고려하여 메모리나 블록 크기 지정&lt;/li&gt;
&lt;li&gt;CPU, 메모리 I/O에 관한 관점&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;튜닝 사례
&lt;ul&gt;
&lt;li&gt;Buffer 크기&lt;/li&gt;
&lt;li&gt;Cache 크기&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;3단계--sql-튜닝app-관점&#34;&gt;3단계 : SQL 튜닝(APP 관점)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;튜닝 방법
&lt;ul&gt;
&lt;li&gt;SQL 작성 시 선능 고려&lt;/li&gt;
&lt;li&gt;Join, Indexing, SQL Execution Plan&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;튜닝 사례
&lt;ul&gt;
&lt;li&gt;Hash / Join&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>RDBMS</category>
      
    </item>
    
    <item>
      <title>Database Lock</title>
      <link>https://www.devkuma.com/docs/rdbms/lock/</link>
      <pubDate>Mon, 11 Jul 2022 09:26:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/rdbms/lock/</guid>
      <description>
        
        
        &lt;h2 id=&#34;lock이란&#34;&gt;Lock이란?&lt;/h2&gt;
&lt;p&gt;Lock이란 트랜잭션 차이의 순차성을 보장하기 위한 방법이다.&lt;br&gt;
여기서 트랜잭션이란 독립적으로 처리할 수 있는 최소한의 단위를 의미한다.&lt;br&gt;
Lock은 DBMS마다 구현하는 방식이나 방법이 다르기때문에 DBMS별로 Lock의 개념을 이해하고 있어야 한다.&lt;/p&gt;
&lt;h2 id=&#34;db-락이란&#34;&gt;DB 락이란?&lt;/h2&gt;
&lt;p&gt;DB 락은 여러 개의 트랜젝션들이 하나의 데이터로 동시에 접근하려고 할때 이를 제어해주는 것이다.&lt;/p&gt;
&lt;h2 id=&#34;db-락의-종류&#34;&gt;DB 락의 종류&lt;/h2&gt;
&lt;p&gt;Lock의 종류로는 공유락(Shared Lock), 베타락(Exclusive Lock)이 있으며 이는 각각 Read Lock, Write Lock이라고도 불린다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;공유락(LS, Shared Lock)
&lt;ul&gt;
&lt;li&gt;트랜잭션이 읽기 할 때 사용하는 락, 데이터를 읽을 수 있지만 쓸 수 없다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;베타락(LX, Exclusive Lock)
&lt;ul&gt;
&lt;li&gt;트랜잭션이 읽고 쓰기를 할때 사용하는 락, 데이터를 읽고 쓸 수 있다.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;베타-제어&#34;&gt;베타 제어&lt;/h2&gt;
&lt;h3 id=&#34;낙관적-잠금&#34;&gt;낙관적 잠금&lt;/h3&gt;
&lt;p&gt;여러 사람들은 거의 동시에 자원을 변경하지 않을 것이라고 낙관적인 관점에서 독점 제어.&lt;/p&gt;
&lt;h3 id=&#34;비관적-잠금&#34;&gt;비관적 잠금&lt;/h3&gt;
&lt;p&gt;여러 사람들이 동일한 자원을 자주 변경한다는 가정의 비관적 관점에서 독점 제어.&lt;/p&gt;

      </description>
      
      <category>Database</category>
      
      <category>RDBMS</category>
      
    </item>
    
    <item>
      <title>DBeaver</title>
      <link>https://www.devkuma.com/docs/dbeaver/</link>
      <pubDate>Sun, 25 Sep 2022 09:47:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/dbeaver/</guid>
      <description>
        
        
        &lt;h2 id=&#34;dbeaver란&#34;&gt;DBeaver란?&lt;/h2&gt;
&lt;p&gt;DBeaver는 개발자, 데이터베이스 관리자, 데이터 분석가, 데이터 엔지니어 및 데이터베이스 관련 작업이 필요한 기타 사용자를 위한 로컬 다중 플랫폼 데이터베이스 도구이다.
아파치 라이선스로 배포되는 자유 오픈 소스 소프트웨어이다.&lt;/p&gt;
&lt;h2 id=&#34;공식-사이트&#34;&gt;공식 사이트&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://dbeaver.io/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://dbeaver.io/&lt;i class=&#34;fas fa-external-link-alt&#34;&gt;&lt;/i&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;설치-요구-사항&#34;&gt;설치 요구 사항&lt;/h2&gt;
&lt;p&gt;DBeaver를 설치하기 전에 로컬 개발 컴퓨터가 다음 요구 사항을 충족해야 한다.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Linux 64비트&lt;/li&gt;
&lt;li&gt;macOS&lt;/li&gt;
&lt;li&gt;Windows 64비트 운영 체제.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;brew로-설치&#34;&gt;brew로 설치&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;brew install dbeaver-community
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;단축키&#34;&gt;단축키&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;control&lt;/code&gt; + &lt;code&gt;enter&lt;/code&gt;: 쿼리 실행&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>Database</category>
      
      <category>RDBMS</category>
      
    </item>
    
  </channel>
</rss>
