<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>devkuma – TCP</title>
    <link>https://www.devkuma.com/tags/tcp/</link>
    <image>
      <url>https://www.devkuma.com/tags/tcp/logo/180x180.jpg</url>
      <title>TCP</title>
      <link>https://www.devkuma.com/tags/tcp/</link>
    </image>
    <description>Recent content in TCP on devkuma</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ko-kr</language>
    <managingEditor>redfreek2c@gmail.com (kimkc)</managingEditor>
    <webMaster>redfreek2c@gmail.com (kimkc)</webMaster>
    <copyright>The devkuma</copyright>
    
	  <atom:link href="https://www.devkuma.com/tags/tcp/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>TCP/UDP(소켓 통신)</title>
      <link>https://www.devkuma.com/docs/tcp-udp/</link>
      <pubDate>Fri, 08 Jul 2022 18:59:00 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tcp-udp/</guid>
      <description>
        
        
        &lt;h2 id=&#34;tcptransmission-controll-protocol&#34;&gt;TCP(Transmission Controll Protocol)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;연결형 서비스를 제공한다.&lt;/li&gt;
&lt;li&gt;높은 신뢰성 보장한다.&lt;/li&gt;
&lt;li&gt;연결의 설정(3-way handshaking)&lt;/li&gt;
&lt;li&gt;연결의 해제(4-way handshaking)&lt;/li&gt;
&lt;li&gt;데이터의 흐름 제어, 혼잡 제어
&lt;ul&gt;
&lt;li&gt;흐름제어 : 수신자 버퍼 오버플로우 방지&lt;/li&gt;
&lt;li&gt;혼잡제어 : 네트워크 내 패킷 수가 과도하게 증가하는 현상 방지&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;전이중, 점대점 서비스(양뱡향 송수신 서비스)&lt;/li&gt;
&lt;li&gt;신뢰성이 중요한 파일 교환과 같은 경우에 쓰인다.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;udpuser-datagram-protocol&#34;&gt;UDP(User Datagram Protocol)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;비연결형 서비스를 제공한다.&lt;/li&gt;
&lt;li&gt;신뢰성이 낮다.&lt;/li&gt;
&lt;li&gt;데이터의 전송 순서가 바뀔 수 있다.&lt;/li&gt;
&lt;li&gt;데이터 수신 여부 확인 안함(3-way handshaking과 같은 과정 없다)&lt;/li&gt;
&lt;li&gt;TCP보다 전송속도가 빠르다.&lt;/li&gt;
&lt;li&gt;실시간성이 중요한 스트리밍에 주로 사용된다.&lt;/li&gt;
&lt;li&gt;1:1, 1:N, N:Mㄱ으로 연결이 가능하다.&lt;/li&gt;
&lt;/ul&gt;

      </description>
      
      <category>TCP</category>
      
      <category>UDP</category>
      
      <category>Network</category>
      
    </item>
    
    <item>
      <title>네트워크 TCP/IP란?</title>
      <link>https://www.devkuma.com/docs/tcp-ip/</link>
      <pubDate>Tue, 10 Jan 2023 11:21:21 +0900</pubDate>
      <author>redfreek2c@gmail.com (kimkc)</author>
      <guid>https://www.devkuma.com/docs/tcp-ip/</guid>
      <description>
        
        
        &lt;h2 id=&#34;tcpip란&#34;&gt;TCP/IP란?&lt;/h2&gt;
&lt;p&gt;TCP/IP는 TCP(Transmission Control Protocol)과 IP(Internet Protocol)을 조합한 것으로, 컴퓨터 네트워크 지원을 위한 가장 중요한 기술 요소라고 할 수 있다.&lt;/p&gt;
&lt;p&gt;컴퓨터 네트워크나 인터넷을 동작하고 있는 통신 기술을 하나로 총칭한 것을 &amp;ldquo;TCP/IP&amp;quot;라고 하는 것이 일반적일 것이다. TCP와 IP뿐만 아니라, ICMP나 TCP라든지 HTTP라든지 여러가지 있다. 어쨌든 네트워크를 통해 무언가를 보낼 때 필요한 프로토콜이라고 생각하면 된다.&lt;/p&gt;
&lt;h3 id=&#34;프로토콜이란&#34;&gt;프로토콜이란?&lt;/h3&gt;
&lt;p&gt;여기서 프로토콜이란 &amp;ldquo;통신 규약&amp;quot;을 말한다. 데이터는 다양한 요소가 함께 전송된다.&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://www.devkuma.com/docs/network/network-protocol.png&#34; alt=&#34;프로토콜&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;데이터 A : 시작되는 데이터&lt;/li&gt;
&lt;li&gt;데이터 B : 그 다음 데이터&lt;/li&gt;
&lt;li&gt;데이터 C : 또, 그 다음 데이터&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;이와 같은 방식으로 데이터가 보내지는 순서를 결정하지 않으면, 도대체 무엇이 보내져 왔는지 알 수 없게 된다.&lt;/p&gt;
&lt;p&gt;예를 들면, &amp;ldquo;받는 사람&amp;rdquo;, &amp;ldquo;어디에서 왔는지(자신의 주소)&amp;rdquo;, &amp;ldquo;데이터 내용&amp;quot;이라는 데이터가 차례로 보내지고 있다는 것을 알고 있으면, 수신한 측도 &amp;ldquo;받는 사람&amp;rdquo;, &amp;ldquo;어디에서 왔는지(자신의 주소)&amp;rdquo;, &amp;ldquo;데이터 내용&amp;quot;이라고 알면 데이터를 판별할 수 있게 되는 것이다.&lt;/p&gt;
&lt;p&gt;그래서 프로토콜은 꼭, 필요한 것이다.&lt;/p&gt;
&lt;p&gt;어쨌든 TCP/IP라고 하면, 네트워크 망의 통신 규약이라고 생각하면 된다.&lt;/p&gt;
&lt;h2 id=&#34;어떤-상호-작용으로-데이터가-전송되나&#34;&gt;어떤 상호 작용으로 데이터가 전송되나?&lt;/h2&gt;
&lt;p&gt;예를 들어, 인터넷에서 사이트를 본다고 하자. 다음과 같은 요청이 네트워크를 통해 보내진다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;브라우저가 요청 메시지를 생성한다.&lt;/li&gt;
&lt;li&gt;OS의 TCP/IP 처리 소프트웨어가 전송 계층이라고 하는 곳에 데이터 전달한다.&lt;/li&gt;
&lt;li&gt;전송 계층의 TCP라는 프로토콜로 TCP 헤더가 붙는다(데이터의 선두에 그런 데이터가 붙는다.)&lt;/li&gt;
&lt;li&gt;이어서, 네트워크 계층이라고하는 곳에 데이터가 보내지고, 여기서 IP 헤더(대상 등의 데이터)가 붙는다.&lt;/li&gt;
&lt;li&gt;계속해서 MAC 헤더 등의 헤더 정보가 한층 더 붙어, LAN 어댑터로부터 데이터가 보내진다.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;어렵다. 조금 난해이지만, 데이터의 머리에 수시로 다양한 것을 붙이고 나서, 송신한다고 생각하면 된다.&lt;/p&gt;

      </description>
      
      <category>TCP</category>
      
      <category>IP</category>
      
      <category>Network</category>
      
    </item>
    
  </channel>
</rss>
